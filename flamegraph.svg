<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1750" onload="init(evt)" viewBox="0 0 1200 1750" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1750" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1733.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1733.00"> </text><svg id="frames" x="10" width="1180" total_samples="8318"><g><title>[[heap]] (1 samples, 0.01%)</title><rect x="0.0000%" y="1669" width="0.0120%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1679.50"></text></g><g><title>__sched_yield (1 samples, 0.01%)</title><rect x="0.0000%" y="1653" width="0.0120%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0000%" y="1637" width="0.0120%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1647.50"></text></g><g><title>[anon] (10 samples, 0.12%)</title><rect x="0.0120%" y="1669" width="0.1202%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="10"/><text x="0.2620%" y="1679.50"></text></g><g><title>syscall (10 samples, 0.12%)</title><rect x="0.0120%" y="1653" width="0.1202%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="10"/><text x="0.2620%" y="1663.50"></text></g><g><title>[unknown] (10 samples, 0.12%)</title><rect x="0.0120%" y="1637" width="0.1202%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="10"/><text x="0.2620%" y="1647.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.02%)</title><rect x="0.1563%" y="1637" width="0.0240%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="2"/><text x="0.4063%" y="1647.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.02%)</title><rect x="0.1563%" y="1621" width="0.0240%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="2"/><text x="0.4063%" y="1631.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1683%" y="1605" width="0.0120%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="1"/><text x="0.4183%" y="1615.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1683%" y="1589" width="0.0120%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="1"/><text x="0.4183%" y="1599.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1683%" y="1573" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="1"/><text x="0.4183%" y="1583.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1683%" y="1557" width="0.0120%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="1"/><text x="0.4183%" y="1567.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.05%)</title><rect x="0.1443%" y="1653" width="0.0481%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="4"/><text x="0.3943%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1803%" y="1637" width="0.0120%" height="15" fill="rgb(206,188,39)" fg:x="15" fg:w="1"/><text x="0.4303%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1803%" y="1621" width="0.0120%" height="15" fill="rgb(217,207,13)" fg:x="15" fg:w="1"/><text x="0.4303%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1803%" y="1605" width="0.0120%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="1"/><text x="0.4303%" y="1615.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.08%)</title><rect x="0.1322%" y="1669" width="0.0842%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="7"/><text x="0.3822%" y="1679.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.1924%" y="1653" width="0.0240%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="2"/><text x="0.4424%" y="1663.50"></text></g><g><title>&lt;T as polars_core::chunked_array::ops::compare_inner::TotalOrdInner&gt;::cmp_element_unchecked (2 samples, 0.02%)</title><rect x="42.2578%" y="1637" width="0.0240%" height="15" fill="rgb(221,200,47)" fg:x="3515" fg:w="2"/><text x="42.5078%" y="1647.50"></text></g><g><title>&lt;polars_core::chunked_array::ops::compare_inner::NonNull&lt;&amp;T&gt; as polars_core::chunked_array::ops::compare_inner::GetInner&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="42.2578%" y="1621" width="0.0240%" height="15" fill="rgb(226,26,5)" fg:x="3515" fg:w="2"/><text x="42.5078%" y="1631.50"></text></g><g><title>&lt;polars_arrow::array::binary::BinaryArray&lt;i64&gt; as polars_arrow::array::static_array::StaticArray&gt;::value_unchecked (2 samples, 0.02%)</title><rect x="42.2578%" y="1605" width="0.0240%" height="15" fill="rgb(249,33,26)" fg:x="3515" fg:w="2"/><text x="42.5078%" y="1615.50"></text></g><g><title>polars_arrow::array::binary::BinaryArray&lt;O&gt;::value_unchecked (2 samples, 0.02%)</title><rect x="42.2578%" y="1589" width="0.0240%" height="15" fill="rgb(235,183,28)" fg:x="3515" fg:w="2"/><text x="42.5078%" y="1599.50"></text></g><g><title>polars_arrow::offset::OffsetsBuffer&lt;O&gt;::start_end_unchecked (2 samples, 0.02%)</title><rect x="42.2578%" y="1573" width="0.0240%" height="15" fill="rgb(221,5,38)" fg:x="3515" fg:w="2"/><text x="42.5078%" y="1583.50"></text></g><g><title>&lt;rayon_core::latch::SpinLatch as rayon_core::latch::Latch&gt;::set (4 samples, 0.05%)</title><rect x="42.2818%" y="1637" width="0.0481%" height="15" fill="rgb(247,18,42)" fg:x="3517" fg:w="4"/><text x="42.5318%" y="1647.50"></text></g><g><title>rayon_core::latch::CoreLatch::set (2 samples, 0.02%)</title><rect x="42.3058%" y="1621" width="0.0240%" height="15" fill="rgb(241,131,45)" fg:x="3519" fg:w="2"/><text x="42.5558%" y="1631.50"></text></g><g><title>[libc.so.6] (133 samples, 1.60%)</title><rect x="42.3299%" y="1637" width="1.5989%" height="15" fill="rgb(249,31,29)" fg:x="3521" fg:w="133"/><text x="42.5799%" y="1647.50"></text></g><g><title>[unknown] (87 samples, 1.05%)</title><rect x="43.9288%" y="1637" width="1.0459%" height="15" fill="rgb(225,111,53)" fg:x="3654" fg:w="87"/><text x="44.1788%" y="1647.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="44.9387%" y="1621" width="0.0361%" height="15" fill="rgb(238,160,17)" fg:x="3738" fg:w="3"/><text x="45.1887%" y="1631.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="44.9507%" y="1605" width="0.0240%" height="15" fill="rgb(214,148,48)" fg:x="3739" fg:w="2"/><text x="45.2007%" y="1615.50"></text></g><g><title>__ctype_init (8 samples, 0.10%)</title><rect x="44.9748%" y="1637" width="0.0962%" height="15" fill="rgb(232,36,49)" fg:x="3741" fg:w="8"/><text x="45.2248%" y="1647.50"></text></g><g><title>__cxa_thread_atexit_impl (2 samples, 0.02%)</title><rect x="45.0709%" y="1637" width="0.0240%" height="15" fill="rgb(209,103,24)" fg:x="3749" fg:w="2"/><text x="45.3209%" y="1647.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.01%)</title><rect x="45.0830%" y="1621" width="0.0120%" height="15" fill="rgb(229,88,8)" fg:x="3750" fg:w="1"/><text x="45.3330%" y="1631.50"></text></g><g><title>__sched_yield (176 samples, 2.12%)</title><rect x="45.0950%" y="1637" width="2.1159%" height="15" fill="rgb(213,181,19)" fg:x="3751" fg:w="176"/><text x="45.3450%" y="1647.50">_..</text></g><g><title>[unknown] (169 samples, 2.03%)</title><rect x="45.1791%" y="1621" width="2.0317%" height="15" fill="rgb(254,191,54)" fg:x="3758" fg:w="169"/><text x="45.4291%" y="1631.50">[..</text></g><g><title>[unknown] (74 samples, 0.89%)</title><rect x="46.3212%" y="1605" width="0.8896%" height="15" fill="rgb(241,83,37)" fg:x="3853" fg:w="74"/><text x="46.5712%" y="1615.50"></text></g><g><title>[unknown] (27 samples, 0.32%)</title><rect x="46.8863%" y="1589" width="0.3246%" height="15" fill="rgb(233,36,39)" fg:x="3900" fg:w="27"/><text x="47.1363%" y="1599.50"></text></g><g><title>[unknown] (13 samples, 0.16%)</title><rect x="47.0546%" y="1573" width="0.1563%" height="15" fill="rgb(226,3,54)" fg:x="3914" fg:w="13"/><text x="47.3046%" y="1583.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="47.1147%" y="1557" width="0.0962%" height="15" fill="rgb(245,192,40)" fg:x="3919" fg:w="8"/><text x="47.3647%" y="1567.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="47.1628%" y="1541" width="0.0481%" height="15" fill="rgb(238,167,29)" fg:x="3923" fg:w="4"/><text x="47.4128%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="47.1988%" y="1525" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="3926" fg:w="1"/><text x="47.4488%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="47.1988%" y="1509" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="3926" fg:w="1"/><text x="47.4488%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="47.1988%" y="1493" width="0.0120%" height="15" fill="rgb(208,69,12)" fg:x="3926" fg:w="1"/><text x="47.4488%" y="1503.50"></text></g><g><title>__sysconf (2 samples, 0.02%)</title><rect x="47.2109%" y="1637" width="0.0240%" height="15" fill="rgb(235,93,37)" fg:x="3927" fg:w="2"/><text x="47.4609%" y="1647.50"></text></g><g><title>__getpagesize (2 samples, 0.02%)</title><rect x="47.2109%" y="1621" width="0.0240%" height="15" fill="rgb(213,116,39)" fg:x="3927" fg:w="2"/><text x="47.4609%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.05%)</title><rect x="47.2349%" y="1637" width="0.0481%" height="15" fill="rgb(222,207,29)" fg:x="3929" fg:w="4"/><text x="47.4849%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="47.2349%" y="1621" width="0.0481%" height="15" fill="rgb(206,96,30)" fg:x="3929" fg:w="4"/><text x="47.4849%" y="1631.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="47.2469%" y="1605" width="0.0361%" height="15" fill="rgb(218,138,4)" fg:x="3930" fg:w="3"/><text x="47.4969%" y="1615.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="47.2469%" y="1589" width="0.0361%" height="15" fill="rgb(250,191,14)" fg:x="3930" fg:w="3"/><text x="47.4969%" y="1599.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="47.2469%" y="1573" width="0.0361%" height="15" fill="rgb(239,60,40)" fg:x="3930" fg:w="3"/><text x="47.4969%" y="1583.50"></text></g><g><title>cfree (40 samples, 0.48%)</title><rect x="47.2830%" y="1637" width="0.4809%" height="15" fill="rgb(206,27,48)" fg:x="3933" fg:w="40"/><text x="47.5330%" y="1647.50"></text></g><g><title>[libc.so.6] (27 samples, 0.32%)</title><rect x="47.4393%" y="1621" width="0.3246%" height="15" fill="rgb(225,35,8)" fg:x="3946" fg:w="27"/><text x="47.6893%" y="1631.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="47.7278%" y="1605" width="0.0361%" height="15" fill="rgb(250,213,24)" fg:x="3970" fg:w="3"/><text x="47.9778%" y="1615.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="47.7398%" y="1589" width="0.0240%" height="15" fill="rgb(247,123,22)" fg:x="3971" fg:w="2"/><text x="47.9898%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.02%)</title><rect x="47.7639%" y="1637" width="0.0240%" height="15" fill="rgb(231,138,38)" fg:x="3973" fg:w="2"/><text x="48.0139%" y="1647.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="47.7639%" y="1621" width="0.0240%" height="15" fill="rgb(231,145,46)" fg:x="3973" fg:w="2"/><text x="48.0139%" y="1631.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="47.7639%" y="1605" width="0.0240%" height="15" fill="rgb(251,118,11)" fg:x="3973" fg:w="2"/><text x="48.0139%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="47.7759%" y="1589" width="0.0120%" height="15" fill="rgb(217,147,25)" fg:x="3974" fg:w="1"/><text x="48.0259%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="47.7759%" y="1573" width="0.0120%" height="15" fill="rgb(247,81,37)" fg:x="3974" fg:w="1"/><text x="48.0259%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::array::utf8::Utf8Array&lt;i64&gt;&gt; (8 samples, 0.10%)</title><rect x="47.7879%" y="1637" width="0.0962%" height="15" fill="rgb(209,12,38)" fg:x="3975" fg:w="8"/><text x="48.0379%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::offset::OffsetsBuffer&lt;i64&gt;&gt; (8 samples, 0.10%)</title><rect x="47.7879%" y="1621" width="0.0962%" height="15" fill="rgb(227,1,9)" fg:x="3975" fg:w="8"/><text x="48.0379%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::buffer::immutable::Buffer&lt;i64&gt;&gt; (8 samples, 0.10%)</title><rect x="47.7879%" y="1605" width="0.0962%" height="15" fill="rgb(248,47,43)" fg:x="3975" fg:w="8"/><text x="48.0379%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_arrow::buffer::Bytes&lt;i64&gt;&gt;&gt; (8 samples, 0.10%)</title><rect x="47.7879%" y="1589" width="0.0962%" height="15" fill="rgb(221,10,30)" fg:x="3975" fg:w="8"/><text x="48.0379%" y="1599.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="47.7879%" y="1573" width="0.0962%" height="15" fill="rgb(210,229,1)" fg:x="3975" fg:w="8"/><text x="48.0379%" y="1583.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="47.8240%" y="1557" width="0.0601%" height="15" fill="rgb(222,148,37)" fg:x="3978" fg:w="5"/><text x="48.0740%" y="1567.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="47.8480%" y="1541" width="0.0361%" height="15" fill="rgb(234,67,33)" fg:x="3980" fg:w="3"/><text x="48.0980%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::chunked_array::ChunkedArray&lt;polars_core::datatypes::BinaryType&gt;&gt; (4 samples, 0.05%)</title><rect x="47.8841%" y="1637" width="0.0481%" height="15" fill="rgb(247,98,35)" fg:x="3983" fg:w="4"/><text x="48.1341%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_core::datatypes::field::Field&gt;&gt; (4 samples, 0.05%)</title><rect x="47.8841%" y="1621" width="0.0481%" height="15" fill="rgb(247,138,52)" fg:x="3983" fg:w="4"/><text x="48.1341%" y="1631.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="47.8841%" y="1605" width="0.0481%" height="15" fill="rgb(213,79,30)" fg:x="3983" fg:w="4"/><text x="48.1341%" y="1615.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="47.9202%" y="1589" width="0.0120%" height="15" fill="rgb(246,177,23)" fg:x="3986" fg:w="1"/><text x="48.1702%" y="1599.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="47.9202%" y="1573" width="0.0120%" height="15" fill="rgb(230,62,27)" fg:x="3986" fg:w="1"/><text x="48.1702%" y="1583.50"></text></g><g><title>malloc (91 samples, 1.09%)</title><rect x="47.9322%" y="1637" width="1.0940%" height="15" fill="rgb(216,154,8)" fg:x="3987" fg:w="91"/><text x="48.1822%" y="1647.50"></text></g><g><title>[libc.so.6] (44 samples, 0.53%)</title><rect x="48.4972%" y="1621" width="0.5290%" height="15" fill="rgb(244,35,45)" fg:x="4034" fg:w="44"/><text x="48.7472%" y="1631.50"></text></g><g><title>polars_arrow::array::physical_binary::values_iter (2 samples, 0.02%)</title><rect x="49.0262%" y="1637" width="0.0240%" height="15" fill="rgb(251,115,12)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="49.0262%" y="1621" width="0.0240%" height="15" fill="rgb(240,54,50)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="49.0262%" y="1605" width="0.0240%" height="15" fill="rgb(233,84,52)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="49.0262%" y="1589" width="0.0240%" height="15" fill="rgb(207,117,47)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1599.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="49.0262%" y="1573" width="0.0240%" height="15" fill="rgb(249,43,39)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1583.50"></text></g><g><title>polars_core::chunked_array::ops::gather::gather_idx_array_unchecked::_{{closure}} (2 samples, 0.02%)</title><rect x="49.0262%" y="1557" width="0.0240%" height="15" fill="rgb(209,38,44)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1567.50"></text></g><g><title>&lt;polars_arrow::array::utf8::Utf8Array&lt;i64&gt; as polars_arrow::array::static_array::StaticArray&gt;::value_unchecked (2 samples, 0.02%)</title><rect x="49.0262%" y="1541" width="0.0240%" height="15" fill="rgb(236,212,23)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1551.50"></text></g><g><title>polars_arrow::array::utf8::Utf8Array&lt;O&gt;::value_unchecked (2 samples, 0.02%)</title><rect x="49.0262%" y="1525" width="0.0240%" height="15" fill="rgb(242,79,21)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1535.50"></text></g><g><title>polars_arrow::offset::OffsetsBuffer&lt;O&gt;::start_end_unchecked (2 samples, 0.02%)</title><rect x="49.0262%" y="1509" width="0.0240%" height="15" fill="rgb(211,96,35)" fg:x="4078" fg:w="2"/><text x="49.2762%" y="1519.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunk_iter_like (1 samples, 0.01%)</title><rect x="49.0503%" y="1637" width="0.0120%" height="15" fill="rgb(253,215,40)" fg:x="4080" fg:w="1"/><text x="49.3003%" y="1647.50"></text></g><g><title>polars_core::chunked_array::ChunkedArray&lt;T&gt;::name (1 samples, 0.01%)</title><rect x="49.0503%" y="1621" width="0.0120%" height="15" fill="rgb(211,81,21)" fg:x="4080" fg:w="1"/><text x="49.3003%" y="1631.50"></text></g><g><title>&lt;smartstring::SmartString&lt;Mode&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="49.0503%" y="1605" width="0.0120%" height="15" fill="rgb(208,190,38)" fg:x="4080" fg:w="1"/><text x="49.3003%" y="1615.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunks_and_metadata (3 samples, 0.04%)</title><rect x="49.0623%" y="1637" width="0.0361%" height="15" fill="rgb(235,213,38)" fg:x="4081" fg:w="3"/><text x="49.3123%" y="1647.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunks_and_metadata (6 samples, 0.07%)</title><rect x="49.1344%" y="1621" width="0.0721%" height="15" fill="rgb(237,122,38)" fg:x="4087" fg:w="6"/><text x="49.3844%" y="1631.50"></text></g><g><title>polars_core::chunked_array::ops::chunkops::_&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::slice::_{{closure}} (12 samples, 0.14%)</title><rect x="49.0983%" y="1637" width="0.1443%" height="15" fill="rgb(244,218,35)" fg:x="4084" fg:w="12"/><text x="49.3483%" y="1647.50"></text></g><g><title>polars_core::chunked_array::ops::chunkops::slice (3 samples, 0.04%)</title><rect x="49.2065%" y="1621" width="0.0361%" height="15" fill="rgb(240,68,47)" fg:x="4093" fg:w="3"/><text x="49.4565%" y="1631.50"></text></g><g><title>&lt;polars_arrow::array::primitive::PrimitiveArray&lt;T&gt; as polars_arrow::array::Array&gt;::len (1 samples, 0.01%)</title><rect x="49.2306%" y="1605" width="0.0120%" height="15" fill="rgb(210,16,53)" fg:x="4095" fg:w="1"/><text x="49.4806%" y="1615.50"></text></g><g><title>polars_core::series::implementations::floats::&lt;impl polars_core::series::series_trait::private::PrivateSeries for polars_core::series::implementations::SeriesWrap&lt;polars_core::chunked_array::ChunkedArray&lt;polars_core::datatypes::Float64Type&gt;&gt;&gt;::_dtype (2 samples, 0.02%)</title><rect x="49.2426%" y="1637" width="0.0240%" height="15" fill="rgb(235,124,12)" fg:x="4096" fg:w="2"/><text x="49.4926%" y="1647.50"></text></g><g><title>pthread_attr_getguardsize (1 samples, 0.01%)</title><rect x="49.2667%" y="1637" width="0.0120%" height="15" fill="rgb(224,169,11)" fg:x="4098" fg:w="1"/><text x="49.5167%" y="1647.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="49.2787%" y="1621" width="0.0721%" height="15" fill="rgb(250,166,2)" fg:x="4099" fg:w="6"/><text x="49.5287%" y="1631.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="49.2787%" y="1605" width="0.0721%" height="15" fill="rgb(242,216,29)" fg:x="4099" fg:w="6"/><text x="49.5287%" y="1615.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="49.3147%" y="1589" width="0.0361%" height="15" fill="rgb(230,116,27)" fg:x="4102" fg:w="3"/><text x="49.5647%" y="1599.50"></text></g><g><title>pthread_getattr_np (7 samples, 0.08%)</title><rect x="49.2787%" y="1637" width="0.0842%" height="15" fill="rgb(228,99,48)" fg:x="4099" fg:w="7"/><text x="49.5287%" y="1647.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="49.3508%" y="1621" width="0.0120%" height="15" fill="rgb(253,11,6)" fg:x="4105" fg:w="1"/><text x="49.6008%" y="1631.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="49.8678%" y="1381" width="0.0240%" height="15" fill="rgb(247,143,39)" fg:x="4148" fg:w="2"/><text x="50.1178%" y="1391.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="49.8918%" y="1381" width="0.0240%" height="15" fill="rgb(236,97,10)" fg:x="4150" fg:w="2"/><text x="50.1418%" y="1391.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="49.9038%" y="1365" width="0.0120%" height="15" fill="rgb(233,208,19)" fg:x="4151" fg:w="1"/><text x="50.1538%" y="1375.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::get_mut_unchecked (2 samples, 0.02%)</title><rect x="49.9158%" y="1269" width="0.0240%" height="15" fill="rgb(216,164,2)" fg:x="4152" fg:w="2"/><text x="50.1658%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (8 samples, 0.10%)</title><rect x="49.9158%" y="1381" width="0.0962%" height="15" fill="rgb(220,129,5)" fg:x="4152" fg:w="8"/><text x="50.1658%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (8 samples, 0.10%)</title><rect x="49.9158%" y="1365" width="0.0962%" height="15" fill="rgb(242,17,10)" fg:x="4152" fg:w="8"/><text x="50.1658%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="49.9158%" y="1349" width="0.0962%" height="15" fill="rgb(242,107,0)" fg:x="4152" fg:w="8"/><text x="50.1658%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (8 samples, 0.10%)</title><rect x="49.9158%" y="1333" width="0.0962%" height="15" fill="rgb(251,28,31)" fg:x="4152" fg:w="8"/><text x="50.1658%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (8 samples, 0.10%)</title><rect x="49.9158%" y="1317" width="0.0962%" height="15" fill="rgb(233,223,10)" fg:x="4152" fg:w="8"/><text x="50.1658%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (8 samples, 0.10%)</title><rect x="49.9158%" y="1301" width="0.0962%" height="15" fill="rgb(215,21,27)" fg:x="4152" fg:w="8"/><text x="50.1658%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="49.9158%" y="1285" width="0.0962%" height="15" fill="rgb(232,23,21)" fg:x="4152" fg:w="8"/><text x="50.1658%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (6 samples, 0.07%)</title><rect x="49.9399%" y="1269" width="0.0721%" height="15" fill="rgb(244,5,23)" fg:x="4154" fg:w="6"/><text x="50.1899%" y="1279.50"></text></g><g><title>malloc (11 samples, 0.13%)</title><rect x="50.0120%" y="1381" width="0.1322%" height="15" fill="rgb(226,81,46)" fg:x="4160" fg:w="11"/><text x="50.2620%" y="1391.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="50.0842%" y="1365" width="0.0601%" height="15" fill="rgb(247,70,30)" fg:x="4166" fg:w="5"/><text x="50.3342%" y="1375.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunks_and_metadata (2 samples, 0.02%)</title><rect x="50.1443%" y="1381" width="0.0240%" height="15" fill="rgb(212,68,19)" fg:x="4171" fg:w="2"/><text x="50.3943%" y="1391.50"></text></g><g><title>polars_core::chunked_array::ops::chunkops::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::compute_len (1 samples, 0.01%)</title><rect x="50.1563%" y="1365" width="0.0120%" height="15" fill="rgb(240,187,13)" fg:x="4172" fg:w="1"/><text x="50.4063%" y="1375.50"></text></g><g><title>polars_core::chunked_array::ops::chunkops::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::compute_len::inner (1 samples, 0.01%)</title><rect x="50.1563%" y="1349" width="0.0120%" height="15" fill="rgb(223,113,26)" fg:x="4172" fg:w="1"/><text x="50.4063%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.78%)</title><rect x="49.3989%" y="1461" width="0.7814%" height="15" fill="rgb(206,192,2)" fg:x="4109" fg:w="65"/><text x="49.6489%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.78%)</title><rect x="49.3989%" y="1445" width="0.7814%" height="15" fill="rgb(241,108,4)" fg:x="4109" fg:w="65"/><text x="49.6489%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (65 samples, 0.78%)</title><rect x="49.3989%" y="1429" width="0.7814%" height="15" fill="rgb(247,173,49)" fg:x="4109" fg:w="65"/><text x="49.6489%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (65 samples, 0.78%)</title><rect x="49.3989%" y="1413" width="0.7814%" height="15" fill="rgb(224,114,35)" fg:x="4109" fg:w="65"/><text x="49.6489%" y="1423.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (65 samples, 0.78%)</title><rect x="49.3989%" y="1397" width="0.7814%" height="15" fill="rgb(245,159,27)" fg:x="4109" fg:w="65"/><text x="49.6489%" y="1407.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="50.1683%" y="1381" width="0.0120%" height="15" fill="rgb(245,172,44)" fg:x="4173" fg:w="1"/><text x="50.4183%" y="1391.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="50.1683%" y="1365" width="0.0120%" height="15" fill="rgb(236,23,11)" fg:x="4173" fg:w="1"/><text x="50.4183%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (66 samples, 0.79%)</title><rect x="49.3989%" y="1493" width="0.7935%" height="15" fill="rgb(205,117,38)" fg:x="4109" fg:w="66"/><text x="49.6489%" y="1503.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (66 samples, 0.79%)</title><rect x="49.3989%" y="1477" width="0.7935%" height="15" fill="rgb(237,72,25)" fg:x="4109" fg:w="66"/><text x="49.6489%" y="1487.50"></text></g><g><title>&lt;rayon::iter::collect::consumer::CollectResult&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1 samples, 0.01%)</title><rect x="50.1803%" y="1461" width="0.0120%" height="15" fill="rgb(244,70,9)" fg:x="4174" fg:w="1"/><text x="50.4303%" y="1471.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="50.1803%" y="1445" width="0.0120%" height="15" fill="rgb(217,125,39)" fg:x="4174" fg:w="1"/><text x="50.4303%" y="1455.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="50.1803%" y="1429" width="0.0120%" height="15" fill="rgb(235,36,10)" fg:x="4174" fg:w="1"/><text x="50.4303%" y="1439.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (1 samples, 0.01%)</title><rect x="50.2284%" y="1445" width="0.0120%" height="15" fill="rgb(251,123,47)" fg:x="4178" fg:w="1"/><text x="50.4784%" y="1455.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="50.2284%" y="1429" width="0.0120%" height="15" fill="rgb(221,13,13)" fg:x="4178" fg:w="1"/><text x="50.4784%" y="1439.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="50.2284%" y="1413" width="0.0120%" height="15" fill="rgb(238,131,9)" fg:x="4178" fg:w="1"/><text x="50.4784%" y="1423.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.01%)</title><rect x="50.2284%" y="1397" width="0.0120%" height="15" fill="rgb(211,50,8)" fg:x="4178" fg:w="1"/><text x="50.4784%" y="1407.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="50.5290%" y="1429" width="0.0240%" height="15" fill="rgb(245,182,24)" fg:x="4203" fg:w="2"/><text x="50.7790%" y="1439.50"></text></g><g><title>__sched_yield (3 samples, 0.04%)</title><rect x="50.5530%" y="1429" width="0.0361%" height="15" fill="rgb(242,14,37)" fg:x="4205" fg:w="3"/><text x="50.8030%" y="1439.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="50.5530%" y="1413" width="0.0361%" height="15" fill="rgb(246,228,12)" fg:x="4205" fg:w="3"/><text x="50.8030%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="50.5771%" y="1397" width="0.0120%" height="15" fill="rgb(213,55,15)" fg:x="4207" fg:w="1"/><text x="50.8271%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.06%)</title><rect x="50.5891%" y="1285" width="0.0601%" height="15" fill="rgb(209,9,3)" fg:x="4208" fg:w="5"/><text x="50.8391%" y="1295.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.06%)</title><rect x="50.5891%" y="1269" width="0.0601%" height="15" fill="rgb(230,59,30)" fg:x="4208" fg:w="5"/><text x="50.8391%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="50.5891%" y="1253" width="0.0601%" height="15" fill="rgb(209,121,21)" fg:x="4208" fg:w="5"/><text x="50.8391%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="50.5891%" y="1237" width="0.0601%" height="15" fill="rgb(220,109,13)" fg:x="4208" fg:w="5"/><text x="50.8391%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.06%)</title><rect x="50.5891%" y="1221" width="0.0601%" height="15" fill="rgb(232,18,1)" fg:x="4208" fg:w="5"/><text x="50.8391%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.06%)</title><rect x="50.5891%" y="1205" width="0.0601%" height="15" fill="rgb(215,41,42)" fg:x="4208" fg:w="5"/><text x="50.8391%" y="1215.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (5 samples, 0.06%)</title><rect x="50.5891%" y="1189" width="0.0601%" height="15" fill="rgb(224,123,36)" fg:x="4208" fg:w="5"/><text x="50.8391%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (2 samples, 0.02%)</title><rect x="50.6252%" y="1173" width="0.0240%" height="15" fill="rgb(240,125,3)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (2 samples, 0.02%)</title><rect x="50.6252%" y="1157" width="0.0240%" height="15" fill="rgb(205,98,50)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="50.6252%" y="1141" width="0.0240%" height="15" fill="rgb(205,185,37)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (2 samples, 0.02%)</title><rect x="50.6252%" y="1125" width="0.0240%" height="15" fill="rgb(238,207,15)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (2 samples, 0.02%)</title><rect x="50.6252%" y="1109" width="0.0240%" height="15" fill="rgb(213,199,42)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (2 samples, 0.02%)</title><rect x="50.6252%" y="1093" width="0.0240%" height="15" fill="rgb(235,201,11)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="50.6252%" y="1077" width="0.0240%" height="15" fill="rgb(207,46,11)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (2 samples, 0.02%)</title><rect x="50.6252%" y="1061" width="0.0240%" height="15" fill="rgb(241,35,35)" fg:x="4211" fg:w="2"/><text x="50.8752%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (35 samples, 0.42%)</title><rect x="50.2404%" y="1445" width="0.4208%" height="15" fill="rgb(243,32,47)" fg:x="4179" fg:w="35"/><text x="50.4904%" y="1455.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.07%)</title><rect x="50.5891%" y="1429" width="0.0721%" height="15" fill="rgb(247,202,23)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.07%)</title><rect x="50.5891%" y="1413" width="0.0721%" height="15" fill="rgb(219,102,11)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.07%)</title><rect x="50.5891%" y="1397" width="0.0721%" height="15" fill="rgb(243,110,44)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1407.50"></text></g><g><title>std::panicking::try (6 samples, 0.07%)</title><rect x="50.5891%" y="1381" width="0.0721%" height="15" fill="rgb(222,74,54)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.07%)</title><rect x="50.5891%" y="1365" width="0.0721%" height="15" fill="rgb(216,99,12)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.07%)</title><rect x="50.5891%" y="1349" width="0.0721%" height="15" fill="rgb(226,22,26)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1359.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (6 samples, 0.07%)</title><rect x="50.5891%" y="1333" width="0.0721%" height="15" fill="rgb(217,163,10)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (6 samples, 0.07%)</title><rect x="50.5891%" y="1317" width="0.0721%" height="15" fill="rgb(213,25,53)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (6 samples, 0.07%)</title><rect x="50.5891%" y="1301" width="0.0721%" height="15" fill="rgb(252,105,26)" fg:x="4208" fg:w="6"/><text x="50.8391%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.01%)</title><rect x="50.6492%" y="1285" width="0.0120%" height="15" fill="rgb(220,39,43)" fg:x="4213" fg:w="1"/><text x="50.8992%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.01%)</title><rect x="50.6492%" y="1269" width="0.0120%" height="15" fill="rgb(229,68,48)" fg:x="4213" fg:w="1"/><text x="50.8992%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.01%)</title><rect x="50.6492%" y="1253" width="0.0120%" height="15" fill="rgb(252,8,32)" fg:x="4213" fg:w="1"/><text x="50.8992%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.01%)</title><rect x="50.6492%" y="1237" width="0.0120%" height="15" fill="rgb(223,20,43)" fg:x="4213" fg:w="1"/><text x="50.8992%" y="1247.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="51.0099%" y="1221" width="0.0240%" height="15" fill="rgb(229,81,49)" fg:x="4243" fg:w="2"/><text x="51.2599%" y="1231.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="51.0339%" y="1221" width="0.0120%" height="15" fill="rgb(236,28,36)" fg:x="4245" fg:w="1"/><text x="51.2839%" y="1231.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="51.0459%" y="1109" width="0.0120%" height="15" fill="rgb(249,185,26)" fg:x="4246" fg:w="1"/><text x="51.2959%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="51.0459%" y="1093" width="0.0120%" height="15" fill="rgb(249,174,33)" fg:x="4246" fg:w="1"/><text x="51.2959%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.0459%" y="1077" width="0.0120%" height="15" fill="rgb(233,201,37)" fg:x="4246" fg:w="1"/><text x="51.2959%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (7 samples, 0.08%)</title><rect x="51.0459%" y="1221" width="0.0842%" height="15" fill="rgb(221,78,26)" fg:x="4246" fg:w="7"/><text x="51.2959%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (7 samples, 0.08%)</title><rect x="51.0459%" y="1205" width="0.0842%" height="15" fill="rgb(250,127,30)" fg:x="4246" fg:w="7"/><text x="51.2959%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.08%)</title><rect x="51.0459%" y="1189" width="0.0842%" height="15" fill="rgb(230,49,44)" fg:x="4246" fg:w="7"/><text x="51.2959%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (7 samples, 0.08%)</title><rect x="51.0459%" y="1173" width="0.0842%" height="15" fill="rgb(229,67,23)" fg:x="4246" fg:w="7"/><text x="51.2959%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (7 samples, 0.08%)</title><rect x="51.0459%" y="1157" width="0.0842%" height="15" fill="rgb(249,83,47)" fg:x="4246" fg:w="7"/><text x="51.2959%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (7 samples, 0.08%)</title><rect x="51.0459%" y="1141" width="0.0842%" height="15" fill="rgb(215,43,3)" fg:x="4246" fg:w="7"/><text x="51.2959%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.08%)</title><rect x="51.0459%" y="1125" width="0.0842%" height="15" fill="rgb(238,154,13)" fg:x="4246" fg:w="7"/><text x="51.2959%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (6 samples, 0.07%)</title><rect x="51.0579%" y="1109" width="0.0721%" height="15" fill="rgb(219,56,2)" fg:x="4247" fg:w="6"/><text x="51.3079%" y="1119.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="51.0940%" y="1093" width="0.0361%" height="15" fill="rgb(233,0,4)" fg:x="4250" fg:w="3"/><text x="51.3440%" y="1103.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="51.1060%" y="1077" width="0.0240%" height="15" fill="rgb(235,30,7)" fg:x="4251" fg:w="2"/><text x="51.3560%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (52 samples, 0.63%)</title><rect x="50.6612%" y="1333" width="0.6252%" height="15" fill="rgb(250,79,13)" fg:x="4214" fg:w="52"/><text x="50.9112%" y="1343.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (52 samples, 0.63%)</title><rect x="50.6612%" y="1317" width="0.6252%" height="15" fill="rgb(211,146,34)" fg:x="4214" fg:w="52"/><text x="50.9112%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.63%)</title><rect x="50.6612%" y="1301" width="0.6252%" height="15" fill="rgb(228,22,38)" fg:x="4214" fg:w="52"/><text x="50.9112%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (52 samples, 0.63%)</title><rect x="50.6612%" y="1285" width="0.6252%" height="15" fill="rgb(235,168,5)" fg:x="4214" fg:w="52"/><text x="50.9112%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (52 samples, 0.63%)</title><rect x="50.6612%" y="1269" width="0.6252%" height="15" fill="rgb(221,155,16)" fg:x="4214" fg:w="52"/><text x="50.9112%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (52 samples, 0.63%)</title><rect x="50.6612%" y="1253" width="0.6252%" height="15" fill="rgb(215,215,53)" fg:x="4214" fg:w="52"/><text x="50.9112%" y="1263.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (52 samples, 0.63%)</title><rect x="50.6612%" y="1237" width="0.6252%" height="15" fill="rgb(223,4,10)" fg:x="4214" fg:w="52"/><text x="50.9112%" y="1247.50"></text></g><g><title>malloc (13 samples, 0.16%)</title><rect x="51.1301%" y="1221" width="0.1563%" height="15" fill="rgb(234,103,6)" fg:x="4253" fg:w="13"/><text x="51.3801%" y="1231.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="51.2263%" y="1205" width="0.0601%" height="15" fill="rgb(227,97,0)" fg:x="4261" fg:w="5"/><text x="51.4763%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.01%)</title><rect x="51.2864%" y="1285" width="0.0120%" height="15" fill="rgb(234,150,53)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="51.2864%" y="1269" width="0.0120%" height="15" fill="rgb(228,201,54)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.01%)</title><rect x="51.2864%" y="1253" width="0.0120%" height="15" fill="rgb(222,22,37)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1263.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="51.2864%" y="1237" width="0.0120%" height="15" fill="rgb(237,53,32)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="51.2864%" y="1221" width="0.0120%" height="15" fill="rgb(233,25,53)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="51.2864%" y="1205" width="0.0120%" height="15" fill="rgb(210,40,34)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="51.2864%" y="1189" width="0.0120%" height="15" fill="rgb(241,220,44)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="51.2864%" y="1173" width="0.0120%" height="15" fill="rgb(235,28,35)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1183.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (1 samples, 0.01%)</title><rect x="51.2864%" y="1157" width="0.0120%" height="15" fill="rgb(210,56,17)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (1 samples, 0.01%)</title><rect x="51.2864%" y="1141" width="0.0120%" height="15" fill="rgb(224,130,29)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (1 samples, 0.01%)</title><rect x="51.2864%" y="1125" width="0.0120%" height="15" fill="rgb(235,212,8)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.2864%" y="1109" width="0.0120%" height="15" fill="rgb(223,33,50)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (1 samples, 0.01%)</title><rect x="51.2864%" y="1093" width="0.0120%" height="15" fill="rgb(219,149,13)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (1 samples, 0.01%)</title><rect x="51.2864%" y="1077" width="0.0120%" height="15" fill="rgb(250,156,29)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (1 samples, 0.01%)</title><rect x="51.2864%" y="1061" width="0.0120%" height="15" fill="rgb(216,193,19)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.2864%" y="1045" width="0.0120%" height="15" fill="rgb(216,135,14)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (1 samples, 0.01%)</title><rect x="51.2864%" y="1029" width="0.0120%" height="15" fill="rgb(241,47,5)" fg:x="4266" fg:w="1"/><text x="51.5364%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="51.5629%" y="1237" width="0.0240%" height="15" fill="rgb(233,42,35)" fg:x="4289" fg:w="2"/><text x="51.8129%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (29 samples, 0.35%)</title><rect x="51.2984%" y="1285" width="0.3486%" height="15" fill="rgb(231,13,6)" fg:x="4267" fg:w="29"/><text x="51.5484%" y="1295.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (29 samples, 0.35%)</title><rect x="51.2984%" y="1269" width="0.3486%" height="15" fill="rgb(207,181,40)" fg:x="4267" fg:w="29"/><text x="51.5484%" y="1279.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (29 samples, 0.35%)</title><rect x="51.2984%" y="1253" width="0.3486%" height="15" fill="rgb(254,173,49)" fg:x="4267" fg:w="29"/><text x="51.5484%" y="1263.50"></text></g><g><title>syscall (5 samples, 0.06%)</title><rect x="51.5869%" y="1237" width="0.0601%" height="15" fill="rgb(221,1,38)" fg:x="4291" fg:w="5"/><text x="51.8369%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="51.6110%" y="1221" width="0.0361%" height="15" fill="rgb(206,124,46)" fg:x="4293" fg:w="3"/><text x="51.8610%" y="1231.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="51.6110%" y="1205" width="0.0361%" height="15" fill="rgb(249,21,11)" fg:x="4293" fg:w="3"/><text x="51.8610%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="51.6230%" y="1189" width="0.0240%" height="15" fill="rgb(222,201,40)" fg:x="4294" fg:w="2"/><text x="51.8730%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.6350%" y="1173" width="0.0120%" height="15" fill="rgb(235,61,29)" fg:x="4295" fg:w="1"/><text x="51.8850%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.6350%" y="1157" width="0.0120%" height="15" fill="rgb(219,207,3)" fg:x="4295" fg:w="1"/><text x="51.8850%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="51.6350%" y="1141" width="0.0120%" height="15" fill="rgb(222,56,46)" fg:x="4295" fg:w="1"/><text x="51.8850%" y="1151.50"></text></g><g><title>__sched_yield (1 samples, 0.01%)</title><rect x="51.7673%" y="1269" width="0.0120%" height="15" fill="rgb(239,76,54)" fg:x="4306" fg:w="1"/><text x="52.0173%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2 samples, 0.02%)</title><rect x="51.7793%" y="1125" width="0.0240%" height="15" fill="rgb(231,124,27)" fg:x="4307" fg:w="2"/><text x="52.0293%" y="1135.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.02%)</title><rect x="51.7793%" y="1109" width="0.0240%" height="15" fill="rgb(249,195,6)" fg:x="4307" fg:w="2"/><text x="52.0293%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="51.7793%" y="1093" width="0.0240%" height="15" fill="rgb(237,174,47)" fg:x="4307" fg:w="2"/><text x="52.0293%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="51.7793%" y="1077" width="0.0240%" height="15" fill="rgb(206,201,31)" fg:x="4307" fg:w="2"/><text x="52.0293%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="51.7793%" y="1061" width="0.0240%" height="15" fill="rgb(231,57,52)" fg:x="4307" fg:w="2"/><text x="52.0293%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="51.7793%" y="1045" width="0.0240%" height="15" fill="rgb(248,177,22)" fg:x="4307" fg:w="2"/><text x="52.0293%" y="1055.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (2 samples, 0.02%)</title><rect x="51.7793%" y="1029" width="0.0240%" height="15" fill="rgb(215,211,37)" fg:x="4307" fg:w="2"/><text x="52.0293%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="51.7913%" y="1013" width="0.0120%" height="15" fill="rgb(241,128,51)" fg:x="4308" fg:w="1"/><text x="52.0413%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.01%)</title><rect x="51.8033%" y="1077" width="0.0120%" height="15" fill="rgb(227,165,31)" fg:x="4309" fg:w="1"/><text x="52.0533%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (15 samples, 0.18%)</title><rect x="51.6470%" y="1285" width="0.1803%" height="15" fill="rgb(228,167,24)" fg:x="4296" fg:w="15"/><text x="51.8970%" y="1295.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.05%)</title><rect x="51.7793%" y="1269" width="0.0481%" height="15" fill="rgb(228,143,12)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1279.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.05%)</title><rect x="51.7793%" y="1253" width="0.0481%" height="15" fill="rgb(249,149,8)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.05%)</title><rect x="51.7793%" y="1237" width="0.0481%" height="15" fill="rgb(243,35,44)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1247.50"></text></g><g><title>std::panicking::try (4 samples, 0.05%)</title><rect x="51.7793%" y="1221" width="0.0481%" height="15" fill="rgb(246,89,9)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.05%)</title><rect x="51.7793%" y="1205" width="0.0481%" height="15" fill="rgb(233,213,13)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.05%)</title><rect x="51.7793%" y="1189" width="0.0481%" height="15" fill="rgb(233,141,41)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1199.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (4 samples, 0.05%)</title><rect x="51.7793%" y="1173" width="0.0481%" height="15" fill="rgb(239,167,4)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (4 samples, 0.05%)</title><rect x="51.7793%" y="1157" width="0.0481%" height="15" fill="rgb(209,217,16)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 0.05%)</title><rect x="51.7793%" y="1141" width="0.0481%" height="15" fill="rgb(219,88,35)" fg:x="4307" fg:w="4"/><text x="52.0293%" y="1151.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 0.02%)</title><rect x="51.8033%" y="1125" width="0.0240%" height="15" fill="rgb(220,193,23)" fg:x="4309" fg:w="2"/><text x="52.0533%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.02%)</title><rect x="51.8033%" y="1109" width="0.0240%" height="15" fill="rgb(230,90,52)" fg:x="4309" fg:w="2"/><text x="52.0533%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (2 samples, 0.02%)</title><rect x="51.8033%" y="1093" width="0.0240%" height="15" fill="rgb(252,106,19)" fg:x="4309" fg:w="2"/><text x="52.0533%" y="1103.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.01%)</title><rect x="51.8153%" y="1077" width="0.0120%" height="15" fill="rgb(206,74,20)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="51.8153%" y="1061" width="0.0120%" height="15" fill="rgb(230,138,44)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="1071.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="51.8153%" y="1045" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="51.8153%" y="1029" width="0.0120%" height="15" fill="rgb(242,16,51)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="1039.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="51.8153%" y="1013" width="0.0120%" height="15" fill="rgb(248,9,4)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.01%)</title><rect x="51.8153%" y="997" width="0.0120%" height="15" fill="rgb(210,31,22)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="51.8153%" y="981" width="0.0120%" height="15" fill="rgb(239,54,39)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="991.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.01%)</title><rect x="51.8153%" y="965" width="0.0120%" height="15" fill="rgb(230,99,41)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="975.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="51.8153%" y="949" width="0.0120%" height="15" fill="rgb(253,106,12)" fg:x="4310" fg:w="1"/><text x="52.0653%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="51.9716%" y="1061" width="0.0120%" height="15" fill="rgb(213,46,41)" fg:x="4323" fg:w="1"/><text x="52.2216%" y="1071.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="51.9836%" y="1061" width="0.0120%" height="15" fill="rgb(215,133,35)" fg:x="4324" fg:w="1"/><text x="52.2336%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (4 samples, 0.05%)</title><rect x="51.9957%" y="1061" width="0.0481%" height="15" fill="rgb(213,28,5)" fg:x="4325" fg:w="4"/><text x="52.2457%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (4 samples, 0.05%)</title><rect x="51.9957%" y="1045" width="0.0481%" height="15" fill="rgb(215,77,49)" fg:x="4325" fg:w="4"/><text x="52.2457%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="51.9957%" y="1029" width="0.0481%" height="15" fill="rgb(248,100,22)" fg:x="4325" fg:w="4"/><text x="52.2457%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (4 samples, 0.05%)</title><rect x="51.9957%" y="1013" width="0.0481%" height="15" fill="rgb(208,67,9)" fg:x="4325" fg:w="4"/><text x="52.2457%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (4 samples, 0.05%)</title><rect x="51.9957%" y="997" width="0.0481%" height="15" fill="rgb(219,133,21)" fg:x="4325" fg:w="4"/><text x="52.2457%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (4 samples, 0.05%)</title><rect x="51.9957%" y="981" width="0.0481%" height="15" fill="rgb(246,46,29)" fg:x="4325" fg:w="4"/><text x="52.2457%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="51.9957%" y="965" width="0.0481%" height="15" fill="rgb(246,185,52)" fg:x="4325" fg:w="4"/><text x="52.2457%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (3 samples, 0.04%)</title><rect x="52.0077%" y="949" width="0.0361%" height="15" fill="rgb(252,136,11)" fg:x="4326" fg:w="3"/><text x="52.2577%" y="959.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="52.0197%" y="933" width="0.0240%" height="15" fill="rgb(219,138,53)" fg:x="4327" fg:w="2"/><text x="52.2697%" y="943.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="52.0197%" y="917" width="0.0240%" height="15" fill="rgb(211,51,23)" fg:x="4327" fg:w="2"/><text x="52.2697%" y="927.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.25%)</title><rect x="51.8394%" y="1173" width="0.2525%" height="15" fill="rgb(247,221,28)" fg:x="4312" fg:w="21"/><text x="52.0894%" y="1183.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.25%)</title><rect x="51.8394%" y="1157" width="0.2525%" height="15" fill="rgb(251,222,45)" fg:x="4312" fg:w="21"/><text x="52.0894%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.25%)</title><rect x="51.8394%" y="1141" width="0.2525%" height="15" fill="rgb(217,162,53)" fg:x="4312" fg:w="21"/><text x="52.0894%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.25%)</title><rect x="51.8394%" y="1125" width="0.2525%" height="15" fill="rgb(229,93,14)" fg:x="4312" fg:w="21"/><text x="52.0894%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.25%)</title><rect x="51.8394%" y="1109" width="0.2525%" height="15" fill="rgb(209,67,49)" fg:x="4312" fg:w="21"/><text x="52.0894%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (21 samples, 0.25%)</title><rect x="51.8394%" y="1093" width="0.2525%" height="15" fill="rgb(213,87,29)" fg:x="4312" fg:w="21"/><text x="52.0894%" y="1103.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (21 samples, 0.25%)</title><rect x="51.8394%" y="1077" width="0.2525%" height="15" fill="rgb(205,151,52)" fg:x="4312" fg:w="21"/><text x="52.0894%" y="1087.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="52.0438%" y="1061" width="0.0481%" height="15" fill="rgb(253,215,39)" fg:x="4329" fg:w="4"/><text x="52.2938%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.01%)</title><rect x="52.0918%" y="1125" width="0.0120%" height="15" fill="rgb(221,220,41)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="52.0918%" y="1109" width="0.0120%" height="15" fill="rgb(218,133,21)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.01%)</title><rect x="52.0918%" y="1093" width="0.0120%" height="15" fill="rgb(221,193,43)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1103.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="52.0918%" y="1077" width="0.0120%" height="15" fill="rgb(240,128,52)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="52.0918%" y="1061" width="0.0120%" height="15" fill="rgb(253,114,12)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="52.0918%" y="1045" width="0.0120%" height="15" fill="rgb(215,223,47)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="52.0918%" y="1029" width="0.0120%" height="15" fill="rgb(248,225,23)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="52.0918%" y="1013" width="0.0120%" height="15" fill="rgb(250,108,0)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1023.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (1 samples, 0.01%)</title><rect x="52.0918%" y="997" width="0.0120%" height="15" fill="rgb(228,208,7)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="52.0918%" y="981" width="0.0120%" height="15" fill="rgb(244,45,10)" fg:x="4333" fg:w="1"/><text x="52.3418%" y="991.50"></text></g><g><title>crossbeam_deque::deque::Worker&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="52.1039%" y="1109" width="0.0120%" height="15" fill="rgb(207,125,25)" fg:x="4334" fg:w="1"/><text x="52.3539%" y="1119.50"></text></g><g><title>crossbeam_deque::deque::Buffer&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="52.1039%" y="1093" width="0.0120%" height="15" fill="rgb(210,195,18)" fg:x="4334" fg:w="1"/><text x="52.3539%" y="1103.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.01%)</title><rect x="52.1039%" y="1077" width="0.0120%" height="15" fill="rgb(249,80,12)" fg:x="4334" fg:w="1"/><text x="52.3539%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (5 samples, 0.06%)</title><rect x="52.1039%" y="1125" width="0.0601%" height="15" fill="rgb(221,65,9)" fg:x="4334" fg:w="5"/><text x="52.3539%" y="1135.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (4 samples, 0.05%)</title><rect x="52.1159%" y="1109" width="0.0481%" height="15" fill="rgb(235,49,36)" fg:x="4335" fg:w="4"/><text x="52.3659%" y="1119.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (4 samples, 0.05%)</title><rect x="52.1159%" y="1093" width="0.0481%" height="15" fill="rgb(225,32,20)" fg:x="4335" fg:w="4"/><text x="52.3659%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="52.1399%" y="1077" width="0.0240%" height="15" fill="rgb(215,141,46)" fg:x="4337" fg:w="2"/><text x="52.3899%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.05%)</title><rect x="52.1640%" y="1125" width="0.0481%" height="15" fill="rgb(250,160,47)" fg:x="4339" fg:w="4"/><text x="52.4140%" y="1135.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (1 samples, 0.01%)</title><rect x="52.2000%" y="1109" width="0.0120%" height="15" fill="rgb(216,222,40)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.01%)</title><rect x="52.2000%" y="1093" width="0.0120%" height="15" fill="rgb(234,217,39)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="52.2000%" y="1077" width="0.0120%" height="15" fill="rgb(207,178,40)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="52.2000%" y="1061" width="0.0120%" height="15" fill="rgb(221,136,13)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="52.2000%" y="1045" width="0.0120%" height="15" fill="rgb(249,199,10)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1055.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="52.2000%" y="1029" width="0.0120%" height="15" fill="rgb(249,222,13)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1039.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (1 samples, 0.01%)</title><rect x="52.2000%" y="1013" width="0.0120%" height="15" fill="rgb(244,185,38)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.01%)</title><rect x="52.2000%" y="997" width="0.0120%" height="15" fill="rgb(236,202,9)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="52.2000%" y="981" width="0.0120%" height="15" fill="rgb(250,229,37)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="991.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.01%)</title><rect x="52.2000%" y="965" width="0.0120%" height="15" fill="rgb(206,174,23)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.01%)</title><rect x="52.2000%" y="949" width="0.0120%" height="15" fill="rgb(211,33,43)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="959.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.01%)</title><rect x="52.2000%" y="933" width="0.0120%" height="15" fill="rgb(245,58,50)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="943.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.01%)</title><rect x="52.2000%" y="917" width="0.0120%" height="15" fill="rgb(244,68,36)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="927.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="52.2000%" y="901" width="0.0120%" height="15" fill="rgb(232,229,15)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="911.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="52.2000%" y="885" width="0.0120%" height="15" fill="rgb(254,30,23)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="895.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="52.2000%" y="869" width="0.0120%" height="15" fill="rgb(235,160,14)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="52.2000%" y="853" width="0.0120%" height="15" fill="rgb(212,155,44)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="863.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.01%)</title><rect x="52.2000%" y="837" width="0.0120%" height="15" fill="rgb(226,2,50)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="52.2000%" y="821" width="0.0120%" height="15" fill="rgb(234,177,6)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.01%)</title><rect x="52.2000%" y="805" width="0.0120%" height="15" fill="rgb(217,24,9)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="52.2000%" y="789" width="0.0120%" height="15" fill="rgb(220,13,46)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="52.2000%" y="773" width="0.0120%" height="15" fill="rgb(239,221,27)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="52.2000%" y="757" width="0.0120%" height="15" fill="rgb(222,198,25)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="52.2000%" y="741" width="0.0120%" height="15" fill="rgb(211,99,13)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="52.2000%" y="725" width="0.0120%" height="15" fill="rgb(232,111,31)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="735.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (1 samples, 0.01%)</title><rect x="52.2000%" y="709" width="0.0120%" height="15" fill="rgb(245,82,37)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (1 samples, 0.01%)</title><rect x="52.2000%" y="693" width="0.0120%" height="15" fill="rgb(227,149,46)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2000%" y="677" width="0.0120%" height="15" fill="rgb(218,36,50)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.2000%" y="661" width="0.0120%" height="15" fill="rgb(226,80,48)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (1 samples, 0.01%)</title><rect x="52.2000%" y="645" width="0.0120%" height="15" fill="rgb(238,224,15)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (1 samples, 0.01%)</title><rect x="52.2000%" y="629" width="0.0120%" height="15" fill="rgb(241,136,10)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2000%" y="613" width="0.0120%" height="15" fill="rgb(208,32,45)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.2000%" y="597" width="0.0120%" height="15" fill="rgb(207,135,9)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (1 samples, 0.01%)</title><rect x="52.2000%" y="581" width="0.0120%" height="15" fill="rgb(206,86,44)" fg:x="4342" fg:w="1"/><text x="52.4500%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (1 samples, 0.01%)</title><rect x="52.3443%" y="901" width="0.0120%" height="15" fill="rgb(245,177,15)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (1 samples, 0.01%)</title><rect x="52.3443%" y="885" width="0.0120%" height="15" fill="rgb(206,64,50)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.3443%" y="869" width="0.0120%" height="15" fill="rgb(234,36,40)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (1 samples, 0.01%)</title><rect x="52.3443%" y="853" width="0.0120%" height="15" fill="rgb(213,64,8)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (1 samples, 0.01%)</title><rect x="52.3443%" y="837" width="0.0120%" height="15" fill="rgb(210,75,36)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (1 samples, 0.01%)</title><rect x="52.3443%" y="821" width="0.0120%" height="15" fill="rgb(229,88,21)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.3443%" y="805" width="0.0120%" height="15" fill="rgb(252,204,47)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (1 samples, 0.01%)</title><rect x="52.3443%" y="789" width="0.0120%" height="15" fill="rgb(208,77,27)" fg:x="4354" fg:w="1"/><text x="52.5943%" y="799.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (255 samples, 3.07%)</title><rect x="49.3628%" y="1525" width="3.0656%" height="15" fill="rgb(221,76,26)" fg:x="4106" fg:w="255"/><text x="49.6128%" y="1535.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (255 samples, 3.07%)</title><rect x="49.3628%" y="1509" width="3.0656%" height="15" fill="rgb(225,139,18)" fg:x="4106" fg:w="255"/><text x="49.6128%" y="1519.50">ray..</text></g><g><title>rayon_core::join::join_context (186 samples, 2.24%)</title><rect x="50.1924%" y="1493" width="2.2361%" height="15" fill="rgb(230,137,11)" fg:x="4175" fg:w="186"/><text x="50.4424%" y="1503.50">r..</text></g><g><title>rayon_core::registry::in_worker (185 samples, 2.22%)</title><rect x="50.2044%" y="1477" width="2.2241%" height="15" fill="rgb(212,28,1)" fg:x="4176" fg:w="185"/><text x="50.4544%" y="1487.50">r..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (185 samples, 2.22%)</title><rect x="50.2044%" y="1461" width="2.2241%" height="15" fill="rgb(248,164,17)" fg:x="4176" fg:w="185"/><text x="50.4544%" y="1471.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (147 samples, 1.77%)</title><rect x="50.6612%" y="1445" width="1.7673%" height="15" fill="rgb(222,171,42)" fg:x="4214" fg:w="147"/><text x="50.9112%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (147 samples, 1.77%)</title><rect x="50.6612%" y="1429" width="1.7673%" height="15" fill="rgb(243,84,45)" fg:x="4214" fg:w="147"/><text x="50.9112%" y="1439.50"></text></g><g><title>std::panicking::try (147 samples, 1.77%)</title><rect x="50.6612%" y="1413" width="1.7673%" height="15" fill="rgb(252,49,23)" fg:x="4214" fg:w="147"/><text x="50.9112%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (147 samples, 1.77%)</title><rect x="50.6612%" y="1397" width="1.7673%" height="15" fill="rgb(215,19,7)" fg:x="4214" fg:w="147"/><text x="50.9112%" y="1407.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (147 samples, 1.77%)</title><rect x="50.6612%" y="1381" width="1.7673%" height="15" fill="rgb(238,81,41)" fg:x="4214" fg:w="147"/><text x="50.9112%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (147 samples, 1.77%)</title><rect x="50.6612%" y="1365" width="1.7673%" height="15" fill="rgb(210,199,37)" fg:x="4214" fg:w="147"/><text x="50.9112%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (147 samples, 1.77%)</title><rect x="50.6612%" y="1349" width="1.7673%" height="15" fill="rgb(244,192,49)" fg:x="4214" fg:w="147"/><text x="50.9112%" y="1359.50"></text></g><g><title>rayon_core::join::join_context (95 samples, 1.14%)</title><rect x="51.2864%" y="1333" width="1.1421%" height="15" fill="rgb(226,211,11)" fg:x="4266" fg:w="95"/><text x="51.5364%" y="1343.50"></text></g><g><title>rayon_core::registry::in_worker (95 samples, 1.14%)</title><rect x="51.2864%" y="1317" width="1.1421%" height="15" fill="rgb(236,162,54)" fg:x="4266" fg:w="95"/><text x="51.5364%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (95 samples, 1.14%)</title><rect x="51.2864%" y="1301" width="1.1421%" height="15" fill="rgb(220,229,9)" fg:x="4266" fg:w="95"/><text x="51.5364%" y="1311.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (50 samples, 0.60%)</title><rect x="51.8274%" y="1285" width="0.6011%" height="15" fill="rgb(250,87,22)" fg:x="4311" fg:w="50"/><text x="52.0774%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.60%)</title><rect x="51.8274%" y="1269" width="0.6011%" height="15" fill="rgb(239,43,17)" fg:x="4311" fg:w="50"/><text x="52.0774%" y="1279.50"></text></g><g><title>std::panicking::try (50 samples, 0.60%)</title><rect x="51.8274%" y="1253" width="0.6011%" height="15" fill="rgb(231,177,25)" fg:x="4311" fg:w="50"/><text x="52.0774%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.60%)</title><rect x="51.8274%" y="1237" width="0.6011%" height="15" fill="rgb(219,179,1)" fg:x="4311" fg:w="50"/><text x="52.0774%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.60%)</title><rect x="51.8274%" y="1221" width="0.6011%" height="15" fill="rgb(238,219,53)" fg:x="4311" fg:w="50"/><text x="52.0774%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (50 samples, 0.60%)</title><rect x="51.8274%" y="1205" width="0.6011%" height="15" fill="rgb(232,167,36)" fg:x="4311" fg:w="50"/><text x="52.0774%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (50 samples, 0.60%)</title><rect x="51.8274%" y="1189" width="0.6011%" height="15" fill="rgb(244,19,51)" fg:x="4311" fg:w="50"/><text x="52.0774%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (28 samples, 0.34%)</title><rect x="52.0918%" y="1173" width="0.3366%" height="15" fill="rgb(224,6,22)" fg:x="4333" fg:w="28"/><text x="52.3418%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (28 samples, 0.34%)</title><rect x="52.0918%" y="1157" width="0.3366%" height="15" fill="rgb(224,145,5)" fg:x="4333" fg:w="28"/><text x="52.3418%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (28 samples, 0.34%)</title><rect x="52.0918%" y="1141" width="0.3366%" height="15" fill="rgb(234,130,49)" fg:x="4333" fg:w="28"/><text x="52.3418%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.22%)</title><rect x="52.2121%" y="1125" width="0.2164%" height="15" fill="rgb(254,6,2)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.22%)</title><rect x="52.2121%" y="1109" width="0.2164%" height="15" fill="rgb(208,96,46)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1119.50"></text></g><g><title>std::panicking::try (18 samples, 0.22%)</title><rect x="52.2121%" y="1093" width="0.2164%" height="15" fill="rgb(239,3,39)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.22%)</title><rect x="52.2121%" y="1077" width="0.2164%" height="15" fill="rgb(233,210,1)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.22%)</title><rect x="52.2121%" y="1061" width="0.2164%" height="15" fill="rgb(244,137,37)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (18 samples, 0.22%)</title><rect x="52.2121%" y="1045" width="0.2164%" height="15" fill="rgb(240,136,2)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (18 samples, 0.22%)</title><rect x="52.2121%" y="1029" width="0.2164%" height="15" fill="rgb(239,18,37)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (18 samples, 0.22%)</title><rect x="52.2121%" y="1013" width="0.2164%" height="15" fill="rgb(218,185,22)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1023.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (18 samples, 0.22%)</title><rect x="52.2121%" y="997" width="0.2164%" height="15" fill="rgb(225,218,4)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.22%)</title><rect x="52.2121%" y="981" width="0.2164%" height="15" fill="rgb(230,182,32)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.22%)</title><rect x="52.2121%" y="965" width="0.2164%" height="15" fill="rgb(242,56,43)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18 samples, 0.22%)</title><rect x="52.2121%" y="949" width="0.2164%" height="15" fill="rgb(233,99,24)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (18 samples, 0.22%)</title><rect x="52.2121%" y="933" width="0.2164%" height="15" fill="rgb(234,209,42)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="943.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (18 samples, 0.22%)</title><rect x="52.2121%" y="917" width="0.2164%" height="15" fill="rgb(227,7,12)" fg:x="4343" fg:w="18"/><text x="52.4621%" y="927.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="52.3563%" y="901" width="0.0721%" height="15" fill="rgb(245,203,43)" fg:x="4355" fg:w="6"/><text x="52.6063%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="52.3924%" y="885" width="0.0361%" height="15" fill="rgb(238,205,33)" fg:x="4358" fg:w="3"/><text x="52.6424%" y="895.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (1 samples, 0.01%)</title><rect x="52.4405%" y="1317" width="0.0120%" height="15" fill="rgb(231,56,7)" fg:x="4362" fg:w="1"/><text x="52.6905%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (1 samples, 0.01%)</title><rect x="52.4405%" y="1301" width="0.0120%" height="15" fill="rgb(244,186,29)" fg:x="4362" fg:w="1"/><text x="52.6905%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.01%)</title><rect x="52.4525%" y="1269" width="0.0120%" height="15" fill="rgb(234,111,31)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1279.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.01%)</title><rect x="52.4525%" y="1253" width="0.0120%" height="15" fill="rgb(241,149,10)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="52.4525%" y="1237" width="0.0120%" height="15" fill="rgb(249,206,44)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1247.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (1 samples, 0.01%)</title><rect x="52.4525%" y="1221" width="0.0120%" height="15" fill="rgb(251,153,30)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1231.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (1 samples, 0.01%)</title><rect x="52.4525%" y="1205" width="0.0120%" height="15" fill="rgb(239,152,38)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1215.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.01%)</title><rect x="52.4525%" y="1189" width="0.0120%" height="15" fill="rgb(249,139,47)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1199.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.01%)</title><rect x="52.4525%" y="1173" width="0.0120%" height="15" fill="rgb(244,64,35)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1183.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="52.4525%" y="1157" width="0.0120%" height="15" fill="rgb(216,46,15)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1167.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="52.4525%" y="1141" width="0.0120%" height="15" fill="rgb(250,74,19)" fg:x="4363" fg:w="1"/><text x="52.7025%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (7 samples, 0.08%)</title><rect x="52.4645%" y="1269" width="0.0842%" height="15" fill="rgb(249,42,33)" fg:x="4364" fg:w="7"/><text x="52.7145%" y="1279.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="52.5367%" y="1253" width="0.0120%" height="15" fill="rgb(242,149,17)" fg:x="4370" fg:w="1"/><text x="52.7867%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.5367%" y="1237" width="0.0120%" height="15" fill="rgb(244,29,21)" fg:x="4370" fg:w="1"/><text x="52.7867%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.07%)</title><rect x="52.5607%" y="1109" width="0.0721%" height="15" fill="rgb(220,130,37)" fg:x="4372" fg:w="6"/><text x="52.8107%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="52.6208%" y="1093" width="0.0120%" height="15" fill="rgb(211,67,2)" fg:x="4377" fg:w="1"/><text x="52.8708%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (5 samples, 0.06%)</title><rect x="52.6328%" y="949" width="0.0601%" height="15" fill="rgb(235,68,52)" fg:x="4378" fg:w="5"/><text x="52.8828%" y="959.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (5 samples, 0.06%)</title><rect x="52.6328%" y="933" width="0.0601%" height="15" fill="rgb(246,142,3)" fg:x="4378" fg:w="5"/><text x="52.8828%" y="943.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (5 samples, 0.06%)</title><rect x="52.6328%" y="917" width="0.0601%" height="15" fill="rgb(241,25,7)" fg:x="4378" fg:w="5"/><text x="52.8828%" y="927.50"></text></g><g><title>__sched_yield (1 samples, 0.01%)</title><rect x="52.7170%" y="933" width="0.0120%" height="15" fill="rgb(242,119,39)" fg:x="4385" fg:w="1"/><text x="52.9670%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="52.7170%" y="917" width="0.0120%" height="15" fill="rgb(241,98,45)" fg:x="4385" fg:w="1"/><text x="52.9670%" y="927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.05%)</title><rect x="52.6930%" y="949" width="0.0481%" height="15" fill="rgb(254,28,30)" fg:x="4383" fg:w="4"/><text x="52.9430%" y="959.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (1 samples, 0.01%)</title><rect x="52.7290%" y="933" width="0.0120%" height="15" fill="rgb(241,142,54)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="943.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.01%)</title><rect x="52.7290%" y="917" width="0.0120%" height="15" fill="rgb(222,85,15)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="927.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="52.7290%" y="901" width="0.0120%" height="15" fill="rgb(210,85,47)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="911.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="52.7290%" y="885" width="0.0120%" height="15" fill="rgb(224,206,25)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="895.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="52.7290%" y="869" width="0.0120%" height="15" fill="rgb(243,201,19)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="879.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="52.7290%" y="853" width="0.0120%" height="15" fill="rgb(236,59,4)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="863.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (1 samples, 0.01%)</title><rect x="52.7290%" y="837" width="0.0120%" height="15" fill="rgb(254,179,45)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="847.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.01%)</title><rect x="52.7290%" y="821" width="0.0120%" height="15" fill="rgb(226,14,10)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="831.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="52.7290%" y="805" width="0.0120%" height="15" fill="rgb(244,27,41)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="815.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.01%)</title><rect x="52.7290%" y="789" width="0.0120%" height="15" fill="rgb(235,35,32)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.01%)</title><rect x="52.7290%" y="773" width="0.0120%" height="15" fill="rgb(218,68,31)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="783.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.01%)</title><rect x="52.7290%" y="757" width="0.0120%" height="15" fill="rgb(207,120,37)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="767.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.01%)</title><rect x="52.7290%" y="741" width="0.0120%" height="15" fill="rgb(227,98,0)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="751.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="52.7290%" y="725" width="0.0120%" height="15" fill="rgb(207,7,3)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="735.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="52.7290%" y="709" width="0.0120%" height="15" fill="rgb(206,98,19)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="719.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="52.7290%" y="693" width="0.0120%" height="15" fill="rgb(217,5,26)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="52.7290%" y="677" width="0.0120%" height="15" fill="rgb(235,190,38)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.01%)</title><rect x="52.7290%" y="661" width="0.0120%" height="15" fill="rgb(247,86,24)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="52.7290%" y="645" width="0.0120%" height="15" fill="rgb(205,101,16)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.01%)</title><rect x="52.7290%" y="629" width="0.0120%" height="15" fill="rgb(246,168,33)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="52.7290%" y="613" width="0.0120%" height="15" fill="rgb(231,114,1)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="52.7290%" y="597" width="0.0120%" height="15" fill="rgb(207,184,53)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="52.7290%" y="581" width="0.0120%" height="15" fill="rgb(224,95,51)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="52.7290%" y="565" width="0.0120%" height="15" fill="rgb(212,188,45)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="52.7290%" y="549" width="0.0120%" height="15" fill="rgb(223,154,38)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="559.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (1 samples, 0.01%)</title><rect x="52.7290%" y="533" width="0.0120%" height="15" fill="rgb(251,22,52)" fg:x="4386" fg:w="1"/><text x="52.9790%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::push (24 samples, 0.29%)</title><rect x="52.7531%" y="789" width="0.2885%" height="15" fill="rgb(229,209,22)" fg:x="4388" fg:w="24"/><text x="53.0031%" y="799.50"></text></g><g><title>rayon_core::sleep::Sleep::new_internal_jobs (24 samples, 0.29%)</title><rect x="52.7531%" y="773" width="0.2885%" height="15" fill="rgb(234,138,34)" fg:x="4388" fg:w="24"/><text x="53.0031%" y="783.50"></text></g><g><title>rayon_core::sleep::Sleep::new_jobs (24 samples, 0.29%)</title><rect x="52.7531%" y="757" width="0.2885%" height="15" fill="rgb(212,95,11)" fg:x="4388" fg:w="24"/><text x="53.0031%" y="767.50"></text></g><g><title>syscall (5 samples, 0.06%)</title><rect x="52.9815%" y="741" width="0.0601%" height="15" fill="rgb(240,179,47)" fg:x="4407" fg:w="5"/><text x="53.2315%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="52.9935%" y="725" width="0.0481%" height="15" fill="rgb(240,163,11)" fg:x="4408" fg:w="4"/><text x="53.2435%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="53.0176%" y="709" width="0.0240%" height="15" fill="rgb(236,37,12)" fg:x="4410" fg:w="2"/><text x="53.2676%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="53.0176%" y="693" width="0.0240%" height="15" fill="rgb(232,164,16)" fg:x="4410" fg:w="2"/><text x="53.2676%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.0296%" y="677" width="0.0120%" height="15" fill="rgb(244,205,15)" fg:x="4411" fg:w="1"/><text x="53.2796%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.0296%" y="661" width="0.0120%" height="15" fill="rgb(223,117,47)" fg:x="4411" fg:w="1"/><text x="53.2796%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.0296%" y="645" width="0.0120%" height="15" fill="rgb(244,107,35)" fg:x="4411" fg:w="1"/><text x="53.2796%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.0897%" y="773" width="0.0120%" height="15" fill="rgb(205,140,8)" fg:x="4416" fg:w="1"/><text x="53.3397%" y="783.50"></text></g><g><title>__sched_yield (1 samples, 0.01%)</title><rect x="53.1017%" y="773" width="0.0120%" height="15" fill="rgb(228,84,46)" fg:x="4417" fg:w="1"/><text x="53.3517%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1017%" y="757" width="0.0120%" height="15" fill="rgb(254,188,9)" fg:x="4417" fg:w="1"/><text x="53.3517%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1017%" y="741" width="0.0120%" height="15" fill="rgb(206,112,54)" fg:x="4417" fg:w="1"/><text x="53.3517%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1017%" y="725" width="0.0120%" height="15" fill="rgb(216,84,49)" fg:x="4417" fg:w="1"/><text x="53.3517%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1017%" y="709" width="0.0120%" height="15" fill="rgb(214,194,35)" fg:x="4417" fg:w="1"/><text x="53.3517%" y="719.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (7 samples, 0.08%)</title><rect x="53.0416%" y="789" width="0.0842%" height="15" fill="rgb(249,28,3)" fg:x="4412" fg:w="7"/><text x="53.2916%" y="799.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (1 samples, 0.01%)</title><rect x="53.1137%" y="773" width="0.0120%" height="15" fill="rgb(222,56,52)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="783.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.01%)</title><rect x="53.1137%" y="757" width="0.0120%" height="15" fill="rgb(245,217,50)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="767.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="53.1137%" y="741" width="0.0120%" height="15" fill="rgb(213,201,24)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="751.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="53.1137%" y="725" width="0.0120%" height="15" fill="rgb(248,116,28)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="53.1137%" y="709" width="0.0120%" height="15" fill="rgb(219,72,43)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="53.1137%" y="693" width="0.0120%" height="15" fill="rgb(209,138,14)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="703.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (1 samples, 0.01%)</title><rect x="53.1137%" y="677" width="0.0120%" height="15" fill="rgb(222,18,33)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="687.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.01%)</title><rect x="53.1137%" y="661" width="0.0120%" height="15" fill="rgb(213,199,7)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.01%)</title><rect x="53.1137%" y="645" width="0.0120%" height="15" fill="rgb(250,110,10)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="655.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.01%)</title><rect x="53.1137%" y="629" width="0.0120%" height="15" fill="rgb(248,123,6)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="639.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.01%)</title><rect x="53.1137%" y="613" width="0.0120%" height="15" fill="rgb(206,91,31)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.1137%" y="597" width="0.0120%" height="15" fill="rgb(211,154,13)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="53.1137%" y="581" width="0.0120%" height="15" fill="rgb(225,148,7)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="53.1137%" y="565" width="0.0120%" height="15" fill="rgb(220,160,43)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="53.1137%" y="549" width="0.0120%" height="15" fill="rgb(213,52,39)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="559.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (1 samples, 0.01%)</title><rect x="53.1137%" y="533" width="0.0120%" height="15" fill="rgb(243,137,7)" fg:x="4418" fg:w="1"/><text x="53.3637%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="53.2099%" y="517" width="0.0120%" height="15" fill="rgb(230,79,13)" fg:x="4426" fg:w="1"/><text x="53.4599%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="53.2099%" y="501" width="0.0120%" height="15" fill="rgb(247,105,23)" fg:x="4426" fg:w="1"/><text x="53.4599%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="53.2099%" y="485" width="0.0120%" height="15" fill="rgb(223,179,41)" fg:x="4426" fg:w="1"/><text x="53.4599%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="53.2099%" y="469" width="0.0120%" height="15" fill="rgb(218,9,34)" fg:x="4426" fg:w="1"/><text x="53.4599%" y="479.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="53.2099%" y="453" width="0.0120%" height="15" fill="rgb(222,106,8)" fg:x="4426" fg:w="1"/><text x="53.4599%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="53.2099%" y="437" width="0.0120%" height="15" fill="rgb(211,220,0)" fg:x="4426" fg:w="1"/><text x="53.4599%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="53.2219%" y="453" width="0.0120%" height="15" fill="rgb(229,52,16)" fg:x="4427" fg:w="1"/><text x="53.4719%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="53.2219%" y="437" width="0.0120%" height="15" fill="rgb(212,155,18)" fg:x="4427" fg:w="1"/><text x="53.4719%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="53.2219%" y="421" width="0.0120%" height="15" fill="rgb(242,21,14)" fg:x="4427" fg:w="1"/><text x="53.4719%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.04%)</title><rect x="53.2099%" y="565" width="0.0361%" height="15" fill="rgb(222,19,48)" fg:x="4426" fg:w="3"/><text x="53.4599%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="53.2099%" y="549" width="0.0361%" height="15" fill="rgb(232,45,27)" fg:x="4426" fg:w="3"/><text x="53.4599%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.04%)</title><rect x="53.2099%" y="533" width="0.0361%" height="15" fill="rgb(249,103,42)" fg:x="4426" fg:w="3"/><text x="53.4599%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="53.2219%" y="517" width="0.0240%" height="15" fill="rgb(246,81,33)" fg:x="4427" fg:w="2"/><text x="53.4719%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="53.2219%" y="501" width="0.0240%" height="15" fill="rgb(252,33,42)" fg:x="4427" fg:w="2"/><text x="53.4719%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="53.2219%" y="485" width="0.0240%" height="15" fill="rgb(209,212,41)" fg:x="4427" fg:w="2"/><text x="53.4719%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.02%)</title><rect x="53.2219%" y="469" width="0.0240%" height="15" fill="rgb(207,154,6)" fg:x="4427" fg:w="2"/><text x="53.4719%" y="479.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="53.2340%" y="453" width="0.0120%" height="15" fill="rgb(223,64,47)" fg:x="4428" fg:w="1"/><text x="53.4840%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="53.2460%" y="565" width="0.0120%" height="15" fill="rgb(211,161,38)" fg:x="4429" fg:w="1"/><text x="53.4960%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="53.2460%" y="549" width="0.0120%" height="15" fill="rgb(219,138,40)" fg:x="4429" fg:w="1"/><text x="53.4960%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="53.2460%" y="533" width="0.0120%" height="15" fill="rgb(241,228,46)" fg:x="4429" fg:w="1"/><text x="53.4960%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="53.2580%" y="565" width="0.0120%" height="15" fill="rgb(223,209,38)" fg:x="4430" fg:w="1"/><text x="53.5080%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="53.3061%" y="485" width="0.0120%" height="15" fill="rgb(236,164,45)" fg:x="4434" fg:w="1"/><text x="53.5561%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="53.3061%" y="469" width="0.0120%" height="15" fill="rgb(231,15,5)" fg:x="4434" fg:w="1"/><text x="53.5561%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="53.3061%" y="453" width="0.0120%" height="15" fill="rgb(252,35,15)" fg:x="4434" fg:w="1"/><text x="53.5561%" y="463.50"></text></g><g><title>&lt;polars_core::series::iterator::SeriesIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="53.2700%" y="565" width="0.0601%" height="15" fill="rgb(248,181,18)" fg:x="4431" fg:w="5"/><text x="53.5200%" y="575.50"></text></g><g><title>polars_core::chunked_array::ops::any_value::arr_to_any_value (5 samples, 0.06%)</title><rect x="53.2700%" y="549" width="0.0601%" height="15" fill="rgb(233,39,42)" fg:x="4431" fg:w="5"/><text x="53.5200%" y="559.50"></text></g><g><title>polars_arrow::array::utf8::Utf8Array&lt;O&gt;::value_unchecked (2 samples, 0.02%)</title><rect x="53.3061%" y="533" width="0.0240%" height="15" fill="rgb(238,110,33)" fg:x="4434" fg:w="2"/><text x="53.5561%" y="543.50"></text></g><g><title>&lt;polars_arrow::buffer::immutable::Buffer&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="53.3061%" y="517" width="0.0240%" height="15" fill="rgb(233,195,10)" fg:x="4434" fg:w="2"/><text x="53.5561%" y="527.50"></text></g><g><title>polars_arrow::buffer::immutable::Buffer&lt;T&gt;::as_slice (2 samples, 0.02%)</title><rect x="53.3061%" y="501" width="0.0240%" height="15" fill="rgb(254,105,3)" fg:x="4434" fg:w="2"/><text x="53.5561%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="53.3181%" y="485" width="0.0120%" height="15" fill="rgb(221,225,9)" fg:x="4435" fg:w="1"/><text x="53.5681%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="53.3181%" y="469" width="0.0120%" height="15" fill="rgb(224,227,45)" fg:x="4435" fg:w="1"/><text x="53.5681%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="53.3181%" y="453" width="0.0120%" height="15" fill="rgb(229,198,43)" fg:x="4435" fg:w="1"/><text x="53.5681%" y="463.50"></text></g><g><title>core::fmt::Arguments::new_v1_formatted (1 samples, 0.01%)</title><rect x="53.3301%" y="565" width="0.0120%" height="15" fill="rgb(206,209,35)" fg:x="4436" fg:w="1"/><text x="53.5801%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;polars_core::series::iterator::SeriesIter&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="53.3421%" y="565" width="0.0120%" height="15" fill="rgb(245,195,53)" fg:x="4437" fg:w="1"/><text x="53.5921%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="53.3421%" y="549" width="0.0120%" height="15" fill="rgb(240,92,26)" fg:x="4437" fg:w="1"/><text x="53.5921%" y="559.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.01%)</title><rect x="53.3421%" y="533" width="0.0120%" height="15" fill="rgb(207,40,23)" fg:x="4437" fg:w="1"/><text x="53.5921%" y="543.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="53.3542%" y="565" width="0.0361%" height="15" fill="rgb(223,111,35)" fg:x="4438" fg:w="3"/><text x="53.6042%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="53.3782%" y="549" width="0.0120%" height="15" fill="rgb(229,147,28)" fg:x="4440" fg:w="1"/><text x="53.6282%" y="559.50"></text></g><g><title>memchr::memchr::memchr2 (4 samples, 0.05%)</title><rect x="53.3902%" y="565" width="0.0481%" height="15" fill="rgb(211,29,28)" fg:x="4441" fg:w="4"/><text x="53.6402%" y="575.50"></text></g><g><title>memchr::arch::generic::memchr::search_slice_with_raw (4 samples, 0.05%)</title><rect x="53.3902%" y="549" width="0.0481%" height="15" fill="rgb(228,72,33)" fg:x="4441" fg:w="4"/><text x="53.6402%" y="559.50"></text></g><g><title>memchr::memchr::memchr2::_{{closure}} (4 samples, 0.05%)</title><rect x="53.3902%" y="533" width="0.0481%" height="15" fill="rgb(205,214,31)" fg:x="4441" fg:w="4"/><text x="53.6402%" y="543.50"></text></g><g><title>memchr::memchr::memchr2_raw (4 samples, 0.05%)</title><rect x="53.3902%" y="517" width="0.0481%" height="15" fill="rgb(224,111,15)" fg:x="4441" fg:w="4"/><text x="53.6402%" y="527.50"></text></g><g><title>memchr::arch::x86_64::memchr::memchr2_raw (4 samples, 0.05%)</title><rect x="53.3902%" y="501" width="0.0481%" height="15" fill="rgb(253,21,26)" fg:x="4441" fg:w="4"/><text x="53.6402%" y="511.50"></text></g><g><title>memchr::memchr::memchr (4 samples, 0.05%)</title><rect x="53.4383%" y="565" width="0.0481%" height="15" fill="rgb(245,139,43)" fg:x="4445" fg:w="4"/><text x="53.6883%" y="575.50"></text></g><g><title>memchr::arch::generic::memchr::search_slice_with_raw (4 samples, 0.05%)</title><rect x="53.4383%" y="549" width="0.0481%" height="15" fill="rgb(252,170,7)" fg:x="4445" fg:w="4"/><text x="53.6883%" y="559.50"></text></g><g><title>memchr::memchr::memchr::_{{closure}} (4 samples, 0.05%)</title><rect x="53.4383%" y="533" width="0.0481%" height="15" fill="rgb(231,118,14)" fg:x="4445" fg:w="4"/><text x="53.6883%" y="543.50"></text></g><g><title>memchr::memchr::memchr_raw (4 samples, 0.05%)</title><rect x="53.4383%" y="517" width="0.0481%" height="15" fill="rgb(238,83,0)" fg:x="4445" fg:w="4"/><text x="53.6883%" y="527.50"></text></g><g><title>memchr::arch::x86_64::memchr::memchr_raw (4 samples, 0.05%)</title><rect x="53.4383%" y="501" width="0.0481%" height="15" fill="rgb(221,39,39)" fg:x="4445" fg:w="4"/><text x="53.6883%" y="511.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="53.7148%" y="549" width="0.0361%" height="15" fill="rgb(222,119,46)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (3 samples, 0.04%)</title><rect x="53.7148%" y="533" width="0.0361%" height="15" fill="rgb(222,165,49)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="53.7148%" y="517" width="0.0361%" height="15" fill="rgb(219,113,52)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="53.7148%" y="501" width="0.0361%" height="15" fill="rgb(214,7,15)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="53.7148%" y="485" width="0.0361%" height="15" fill="rgb(235,32,4)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="53.7148%" y="469" width="0.0361%" height="15" fill="rgb(238,90,54)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="53.7148%" y="453" width="0.0361%" height="15" fill="rgb(213,208,19)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="53.7148%" y="437" width="0.0361%" height="15" fill="rgb(233,156,4)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="53.7148%" y="421" width="0.0361%" height="15" fill="rgb(207,194,5)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="53.7148%" y="405" width="0.0361%" height="15" fill="rgb(206,111,30)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="53.7148%" y="389" width="0.0361%" height="15" fill="rgb(243,70,54)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="399.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="53.7148%" y="373" width="0.0361%" height="15" fill="rgb(242,28,8)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="383.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="53.7148%" y="357" width="0.0361%" height="15" fill="rgb(219,106,18)" fg:x="4468" fg:w="3"/><text x="53.9648%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="53.7269%" y="341" width="0.0240%" height="15" fill="rgb(244,222,10)" fg:x="4469" fg:w="2"/><text x="53.9769%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="53.7389%" y="325" width="0.0120%" height="15" fill="rgb(236,179,52)" fg:x="4470" fg:w="1"/><text x="53.9889%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="53.7389%" y="309" width="0.0120%" height="15" fill="rgb(213,23,39)" fg:x="4470" fg:w="1"/><text x="53.9889%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.06%)</title><rect x="53.7870%" y="421" width="0.0601%" height="15" fill="rgb(238,48,10)" fg:x="4474" fg:w="5"/><text x="54.0370%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.06%)</title><rect x="53.7870%" y="405" width="0.0601%" height="15" fill="rgb(251,196,23)" fg:x="4474" fg:w="5"/><text x="54.0370%" y="415.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.06%)</title><rect x="53.7870%" y="389" width="0.0601%" height="15" fill="rgb(250,152,24)" fg:x="4474" fg:w="5"/><text x="54.0370%" y="399.50"></text></g><g><title>realloc (5 samples, 0.06%)</title><rect x="53.7870%" y="373" width="0.0601%" height="15" fill="rgb(209,150,17)" fg:x="4474" fg:w="5"/><text x="54.0370%" y="383.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="53.8110%" y="357" width="0.0361%" height="15" fill="rgb(234,202,34)" fg:x="4476" fg:w="3"/><text x="54.0610%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="53.8110%" y="341" width="0.0361%" height="15" fill="rgb(253,148,53)" fg:x="4476" fg:w="3"/><text x="54.0610%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="53.8351%" y="325" width="0.0120%" height="15" fill="rgb(218,129,16)" fg:x="4478" fg:w="1"/><text x="54.0851%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="53.7509%" y="485" width="0.1082%" height="15" fill="rgb(216,85,19)" fg:x="4471" fg:w="9"/><text x="54.0009%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.08%)</title><rect x="53.7749%" y="469" width="0.0842%" height="15" fill="rgb(235,228,7)" fg:x="4473" fg:w="7"/><text x="54.0249%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.08%)</title><rect x="53.7749%" y="453" width="0.0842%" height="15" fill="rgb(245,175,0)" fg:x="4473" fg:w="7"/><text x="54.0249%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.08%)</title><rect x="53.7749%" y="437" width="0.0842%" height="15" fill="rgb(208,168,36)" fg:x="4473" fg:w="7"/><text x="54.0249%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="53.8471%" y="421" width="0.0120%" height="15" fill="rgb(246,171,24)" fg:x="4479" fg:w="1"/><text x="54.0971%" y="431.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (375 samples, 4.51%)</title><rect x="49.3628%" y="1637" width="4.5083%" height="15" fill="rgb(215,142,24)" fg:x="4106" fg:w="375"/><text x="49.6128%" y="1647.50">rayon..</text></g><g><title>rayon_core::unwind::halt_unwinding (375 samples, 4.51%)</title><rect x="49.3628%" y="1621" width="4.5083%" height="15" fill="rgb(250,187,7)" fg:x="4106" fg:w="375"/><text x="49.6128%" y="1631.50">rayon..</text></g><g><title>std::panic::catch_unwind (375 samples, 4.51%)</title><rect x="49.3628%" y="1605" width="4.5083%" height="15" fill="rgb(228,66,33)" fg:x="4106" fg:w="375"/><text x="49.6128%" y="1615.50">std::..</text></g><g><title>std::panicking::try (375 samples, 4.51%)</title><rect x="49.3628%" y="1589" width="4.5083%" height="15" fill="rgb(234,215,21)" fg:x="4106" fg:w="375"/><text x="49.6128%" y="1599.50">std::..</text></g><g><title>std::panicking::try::do_call (375 samples, 4.51%)</title><rect x="49.3628%" y="1573" width="4.5083%" height="15" fill="rgb(222,191,20)" fg:x="4106" fg:w="375"/><text x="49.6128%" y="1583.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (375 samples, 4.51%)</title><rect x="49.3628%" y="1557" width="4.5083%" height="15" fill="rgb(245,79,54)" fg:x="4106" fg:w="375"/><text x="49.6128%" y="1567.50">&lt;core..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (375 samples, 4.51%)</title><rect x="49.3628%" y="1541" width="4.5083%" height="15" fill="rgb(240,10,37)" fg:x="4106" fg:w="375"/><text x="49.6128%" y="1551.50">rayon..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (120 samples, 1.44%)</title><rect x="52.4285%" y="1525" width="1.4427%" height="15" fill="rgb(214,192,32)" fg:x="4361" fg:w="120"/><text x="52.6785%" y="1535.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::_{{closure}} (120 samples, 1.44%)</title><rect x="52.4285%" y="1509" width="1.4427%" height="15" fill="rgb(209,36,54)" fg:x="4361" fg:w="120"/><text x="52.6785%" y="1519.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (120 samples, 1.44%)</title><rect x="52.4285%" y="1493" width="1.4427%" height="15" fill="rgb(220,10,11)" fg:x="4361" fg:w="120"/><text x="52.6785%" y="1503.50"></text></g><g><title>rayon::iter::collect::special_extend (119 samples, 1.43%)</title><rect x="52.4405%" y="1477" width="1.4306%" height="15" fill="rgb(221,106,17)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1487.50"></text></g><g><title>rayon::iter::collect::special_extend::_{{closure}} (119 samples, 1.43%)</title><rect x="52.4405%" y="1461" width="1.4306%" height="15" fill="rgb(251,142,44)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1471.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (119 samples, 1.43%)</title><rect x="52.4405%" y="1445" width="1.4306%" height="15" fill="rgb(238,13,15)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1455.50"></text></g><g><title>&lt;rayon::range::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (119 samples, 1.43%)</title><rect x="52.4405%" y="1429" width="1.4306%" height="15" fill="rgb(208,107,27)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1439.50"></text></g><g><title>rayon::range::&lt;impl rayon::range::private::RangeInteger for usize&gt;::drive_unindexed (119 samples, 1.43%)</title><rect x="52.4405%" y="1413" width="1.4306%" height="15" fill="rgb(205,136,37)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge (119 samples, 1.43%)</title><rect x="52.4405%" y="1397" width="1.4306%" height="15" fill="rgb(250,205,27)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1407.50"></text></g><g><title>&lt;rayon::range::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (119 samples, 1.43%)</title><rect x="52.4405%" y="1381" width="1.4306%" height="15" fill="rgb(210,80,43)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1391.50"></text></g><g><title>rayon::range::&lt;impl rayon::range::private::IndexedRangeInteger for usize&gt;::with_producer (119 samples, 1.43%)</title><rect x="52.4405%" y="1365" width="1.4306%" height="15" fill="rgb(247,160,36)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1375.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (119 samples, 1.43%)</title><rect x="52.4405%" y="1349" width="1.4306%" height="15" fill="rgb(234,13,49)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (119 samples, 1.43%)</title><rect x="52.4405%" y="1333" width="1.4306%" height="15" fill="rgb(234,122,0)" fg:x="4362" fg:w="119"/><text x="52.6905%" y="1343.50"></text></g><g><title>rayon_core::join::join_context (118 samples, 1.42%)</title><rect x="52.4525%" y="1317" width="1.4186%" height="15" fill="rgb(207,146,38)" fg:x="4363" fg:w="118"/><text x="52.7025%" y="1327.50"></text></g><g><title>rayon_core::registry::in_worker (118 samples, 1.42%)</title><rect x="52.4525%" y="1301" width="1.4186%" height="15" fill="rgb(207,177,25)" fg:x="4363" fg:w="118"/><text x="52.7025%" y="1311.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (118 samples, 1.42%)</title><rect x="52.4525%" y="1285" width="1.4186%" height="15" fill="rgb(211,178,42)" fg:x="4363" fg:w="118"/><text x="52.7025%" y="1295.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (110 samples, 1.32%)</title><rect x="52.5487%" y="1269" width="1.3224%" height="15" fill="rgb(230,69,54)" fg:x="4371" fg:w="110"/><text x="52.7987%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (110 samples, 1.32%)</title><rect x="52.5487%" y="1253" width="1.3224%" height="15" fill="rgb(214,135,41)" fg:x="4371" fg:w="110"/><text x="52.7987%" y="1263.50"></text></g><g><title>std::panicking::try (110 samples, 1.32%)</title><rect x="52.5487%" y="1237" width="1.3224%" height="15" fill="rgb(237,67,25)" fg:x="4371" fg:w="110"/><text x="52.7987%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (110 samples, 1.32%)</title><rect x="52.5487%" y="1221" width="1.3224%" height="15" fill="rgb(222,189,50)" fg:x="4371" fg:w="110"/><text x="52.7987%" y="1231.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (110 samples, 1.32%)</title><rect x="52.5487%" y="1205" width="1.3224%" height="15" fill="rgb(245,148,34)" fg:x="4371" fg:w="110"/><text x="52.7987%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (110 samples, 1.32%)</title><rect x="52.5487%" y="1189" width="1.3224%" height="15" fill="rgb(222,29,6)" fg:x="4371" fg:w="110"/><text x="52.7987%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (110 samples, 1.32%)</title><rect x="52.5487%" y="1173" width="1.3224%" height="15" fill="rgb(221,189,43)" fg:x="4371" fg:w="110"/><text x="52.7987%" y="1183.50"></text></g><g><title>rayon_core::join::join_context (109 samples, 1.31%)</title><rect x="52.5607%" y="1157" width="1.3104%" height="15" fill="rgb(207,36,27)" fg:x="4372" fg:w="109"/><text x="52.8107%" y="1167.50"></text></g><g><title>rayon_core::registry::in_worker (109 samples, 1.31%)</title><rect x="52.5607%" y="1141" width="1.3104%" height="15" fill="rgb(217,90,24)" fg:x="4372" fg:w="109"/><text x="52.8107%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (109 samples, 1.31%)</title><rect x="52.5607%" y="1125" width="1.3104%" height="15" fill="rgb(224,66,35)" fg:x="4372" fg:w="109"/><text x="52.8107%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (103 samples, 1.24%)</title><rect x="52.6328%" y="1109" width="1.2383%" height="15" fill="rgb(221,13,50)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (103 samples, 1.24%)</title><rect x="52.6328%" y="1093" width="1.2383%" height="15" fill="rgb(236,68,49)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1103.50"></text></g><g><title>std::panicking::try (103 samples, 1.24%)</title><rect x="52.6328%" y="1077" width="1.2383%" height="15" fill="rgb(229,146,28)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (103 samples, 1.24%)</title><rect x="52.6328%" y="1061" width="1.2383%" height="15" fill="rgb(225,31,38)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1071.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (103 samples, 1.24%)</title><rect x="52.6328%" y="1045" width="1.2383%" height="15" fill="rgb(250,208,3)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (103 samples, 1.24%)</title><rect x="52.6328%" y="1029" width="1.2383%" height="15" fill="rgb(246,54,23)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (103 samples, 1.24%)</title><rect x="52.6328%" y="1013" width="1.2383%" height="15" fill="rgb(243,76,11)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (103 samples, 1.24%)</title><rect x="52.6328%" y="997" width="1.2383%" height="15" fill="rgb(245,21,50)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (103 samples, 1.24%)</title><rect x="52.6328%" y="981" width="1.2383%" height="15" fill="rgb(228,9,43)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="991.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (103 samples, 1.24%)</title><rect x="52.6328%" y="965" width="1.2383%" height="15" fill="rgb(208,100,47)" fg:x="4378" fg:w="103"/><text x="52.8828%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (94 samples, 1.13%)</title><rect x="52.7410%" y="949" width="1.1301%" height="15" fill="rgb(232,26,8)" fg:x="4387" fg:w="94"/><text x="52.9910%" y="959.50"></text></g><g><title>std::panic::catch_unwind (94 samples, 1.13%)</title><rect x="52.7410%" y="933" width="1.1301%" height="15" fill="rgb(216,166,38)" fg:x="4387" fg:w="94"/><text x="52.9910%" y="943.50"></text></g><g><title>std::panicking::try (94 samples, 1.13%)</title><rect x="52.7410%" y="917" width="1.1301%" height="15" fill="rgb(251,202,51)" fg:x="4387" fg:w="94"/><text x="52.9910%" y="927.50"></text></g><g><title>std::panicking::try::do_call (94 samples, 1.13%)</title><rect x="52.7410%" y="901" width="1.1301%" height="15" fill="rgb(254,216,34)" fg:x="4387" fg:w="94"/><text x="52.9910%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (94 samples, 1.13%)</title><rect x="52.7410%" y="885" width="1.1301%" height="15" fill="rgb(251,32,27)" fg:x="4387" fg:w="94"/><text x="52.9910%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (94 samples, 1.13%)</title><rect x="52.7410%" y="869" width="1.1301%" height="15" fill="rgb(208,127,28)" fg:x="4387" fg:w="94"/><text x="52.9910%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (94 samples, 1.13%)</title><rect x="52.7410%" y="853" width="1.1301%" height="15" fill="rgb(224,137,22)" fg:x="4387" fg:w="94"/><text x="52.9910%" y="863.50"></text></g><g><title>rayon_core::join::join_context (93 samples, 1.12%)</title><rect x="52.7531%" y="837" width="1.1181%" height="15" fill="rgb(254,70,32)" fg:x="4388" fg:w="93"/><text x="53.0031%" y="847.50"></text></g><g><title>rayon_core::registry::in_worker (93 samples, 1.12%)</title><rect x="52.7531%" y="821" width="1.1181%" height="15" fill="rgb(229,75,37)" fg:x="4388" fg:w="93"/><text x="53.0031%" y="831.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (93 samples, 1.12%)</title><rect x="52.7531%" y="805" width="1.1181%" height="15" fill="rgb(252,64,23)" fg:x="4388" fg:w="93"/><text x="53.0031%" y="815.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (62 samples, 0.75%)</title><rect x="53.1258%" y="789" width="0.7454%" height="15" fill="rgb(232,162,48)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="799.50"></text></g><g><title>std::panic::catch_unwind (62 samples, 0.75%)</title><rect x="53.1258%" y="773" width="0.7454%" height="15" fill="rgb(246,160,12)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="783.50"></text></g><g><title>std::panicking::try (62 samples, 0.75%)</title><rect x="53.1258%" y="757" width="0.7454%" height="15" fill="rgb(247,166,0)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="767.50"></text></g><g><title>std::panicking::try::do_call (62 samples, 0.75%)</title><rect x="53.1258%" y="741" width="0.7454%" height="15" fill="rgb(249,219,21)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.75%)</title><rect x="53.1258%" y="725" width="0.7454%" height="15" fill="rgb(205,209,3)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (62 samples, 0.75%)</title><rect x="53.1258%" y="709" width="0.7454%" height="15" fill="rgb(243,44,1)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (62 samples, 0.75%)</title><rect x="53.1258%" y="693" width="0.7454%" height="15" fill="rgb(206,159,16)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="703.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (62 samples, 0.75%)</title><rect x="53.1258%" y="677" width="0.7454%" height="15" fill="rgb(244,77,30)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="687.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (62 samples, 0.75%)</title><rect x="53.1258%" y="661" width="0.7454%" height="15" fill="rgb(218,69,12)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.75%)</title><rect x="53.1258%" y="645" width="0.7454%" height="15" fill="rgb(212,87,7)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (62 samples, 0.75%)</title><rect x="53.1258%" y="629" width="0.7454%" height="15" fill="rgb(245,114,25)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (62 samples, 0.75%)</title><rect x="53.1258%" y="613" width="0.7454%" height="15" fill="rgb(210,61,42)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (62 samples, 0.75%)</title><rect x="53.1258%" y="597" width="0.7454%" height="15" fill="rgb(211,52,33)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="607.50"></text></g><g><title>polars_io::csv::write_impl::write::_{{closure}} (62 samples, 0.75%)</title><rect x="53.1258%" y="581" width="0.7454%" height="15" fill="rgb(234,58,33)" fg:x="4419" fg:w="62"/><text x="53.3758%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (32 samples, 0.38%)</title><rect x="53.4864%" y="565" width="0.3847%" height="15" fill="rgb(220,115,36)" fg:x="4449" fg:w="32"/><text x="53.7364%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (10 samples, 0.12%)</title><rect x="53.7509%" y="549" width="0.1202%" height="15" fill="rgb(243,153,54)" fg:x="4471" fg:w="10"/><text x="54.0009%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.12%)</title><rect x="53.7509%" y="533" width="0.1202%" height="15" fill="rgb(251,47,18)" fg:x="4471" fg:w="10"/><text x="54.0009%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.12%)</title><rect x="53.7509%" y="517" width="0.1202%" height="15" fill="rgb(242,102,42)" fg:x="4471" fg:w="10"/><text x="54.0009%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.12%)</title><rect x="53.7509%" y="501" width="0.1202%" height="15" fill="rgb(234,31,38)" fg:x="4471" fg:w="10"/><text x="54.0009%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="53.8591%" y="485" width="0.0120%" height="15" fill="rgb(221,117,51)" fg:x="4480" fg:w="1"/><text x="54.1091%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="53.8591%" y="469" width="0.0120%" height="15" fill="rgb(212,20,18)" fg:x="4480" fg:w="1"/><text x="54.1091%" y="479.50"></text></g><g><title>realloc (32 samples, 0.38%)</title><rect x="53.8711%" y="1637" width="0.3847%" height="15" fill="rgb(245,133,36)" fg:x="4481" fg:w="32"/><text x="54.1211%" y="1647.50"></text></g><g><title>[libc.so.6] (25 samples, 0.30%)</title><rect x="53.9553%" y="1621" width="0.3006%" height="15" fill="rgb(212,6,19)" fg:x="4488" fg:w="25"/><text x="54.2053%" y="1631.50"></text></g><g><title>[libc.so.6] (22 samples, 0.26%)</title><rect x="53.9913%" y="1605" width="0.2645%" height="15" fill="rgb(218,1,36)" fg:x="4491" fg:w="22"/><text x="54.2413%" y="1615.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="54.2318%" y="1589" width="0.0240%" height="15" fill="rgb(246,84,54)" fg:x="4511" fg:w="2"/><text x="54.4818%" y="1599.50"></text></g><g><title>[libc.so.6] (4,538 samples, 54.56%)</title><rect x="0.2164%" y="1669" width="54.5564%" height="15" fill="rgb(242,110,6)" fg:x="18" fg:w="4538"/><text x="0.4664%" y="1679.50">[libc.so.6]</text></g><g><title>[libc.so.6] (4,538 samples, 54.56%)</title><rect x="0.2164%" y="1653" width="54.5564%" height="15" fill="rgb(214,47,5)" fg:x="18" fg:w="4538"/><text x="0.4664%" y="1663.50">[libc.so.6]</text></g><g><title>syscall (43 samples, 0.52%)</title><rect x="54.2558%" y="1637" width="0.5170%" height="15" fill="rgb(218,159,25)" fg:x="4513" fg:w="43"/><text x="54.5058%" y="1647.50"></text></g><g><title>[unknown] (30 samples, 0.36%)</title><rect x="54.4121%" y="1621" width="0.3607%" height="15" fill="rgb(215,211,28)" fg:x="4526" fg:w="30"/><text x="54.6621%" y="1631.50"></text></g><g><title>[unknown] (19 samples, 0.23%)</title><rect x="54.5444%" y="1605" width="0.2284%" height="15" fill="rgb(238,59,32)" fg:x="4537" fg:w="19"/><text x="54.7944%" y="1615.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="54.6405%" y="1589" width="0.1322%" height="15" fill="rgb(226,82,3)" fg:x="4545" fg:w="11"/><text x="54.8905%" y="1599.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="54.7006%" y="1573" width="0.0721%" height="15" fill="rgb(240,164,32)" fg:x="4550" fg:w="6"/><text x="54.9506%" y="1583.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="54.7247%" y="1557" width="0.0481%" height="15" fill="rgb(232,46,7)" fg:x="4552" fg:w="4"/><text x="54.9747%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.0974%" y="1461" width="0.0120%" height="15" fill="rgb(229,129,53)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.0974%" y="1445" width="0.0120%" height="15" fill="rgb(234,188,29)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1429" width="0.0120%" height="15" fill="rgb(246,141,4)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1413" width="0.0120%" height="15" fill="rgb(229,23,39)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1397" width="0.0120%" height="15" fill="rgb(206,12,3)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1381" width="0.0120%" height="15" fill="rgb(252,226,20)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.0974%" y="1365" width="0.0120%" height="15" fill="rgb(216,123,35)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.0974%" y="1349" width="0.0120%" height="15" fill="rgb(212,68,40)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1359.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.0974%" y="1333" width="0.0120%" height="15" fill="rgb(254,125,32)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.0974%" y="1317" width="0.0120%" height="15" fill="rgb(253,97,22)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="1301" width="0.0120%" height="15" fill="rgb(241,101,14)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="1285" width="0.0120%" height="15" fill="rgb(238,103,29)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.0974%" y="1269" width="0.0120%" height="15" fill="rgb(233,195,47)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.0974%" y="1253" width="0.0120%" height="15" fill="rgb(246,218,30)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1237" width="0.0120%" height="15" fill="rgb(219,145,47)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1221" width="0.0120%" height="15" fill="rgb(243,12,26)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1205" width="0.0120%" height="15" fill="rgb(214,87,16)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1189" width="0.0120%" height="15" fill="rgb(208,99,42)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.0974%" y="1173" width="0.0120%" height="15" fill="rgb(253,99,2)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.0974%" y="1157" width="0.0120%" height="15" fill="rgb(220,168,23)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1167.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.0974%" y="1141" width="0.0120%" height="15" fill="rgb(242,38,24)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.0974%" y="1125" width="0.0120%" height="15" fill="rgb(225,182,9)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="1109" width="0.0120%" height="15" fill="rgb(243,178,37)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="1093" width="0.0120%" height="15" fill="rgb(232,139,19)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1077" width="0.0120%" height="15" fill="rgb(225,201,24)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1061" width="0.0120%" height="15" fill="rgb(221,47,46)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1045" width="0.0120%" height="15" fill="rgb(249,23,13)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="1029" width="0.0120%" height="15" fill="rgb(219,9,5)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.0974%" y="1013" width="0.0120%" height="15" fill="rgb(254,171,16)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.0974%" y="997" width="0.0120%" height="15" fill="rgb(230,171,20)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="1007.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.0974%" y="981" width="0.0120%" height="15" fill="rgb(210,71,41)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.0974%" y="965" width="0.0120%" height="15" fill="rgb(206,173,20)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="949" width="0.0120%" height="15" fill="rgb(233,88,34)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="933" width="0.0120%" height="15" fill="rgb(223,209,46)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.0974%" y="917" width="0.0120%" height="15" fill="rgb(250,43,18)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.0974%" y="901" width="0.0120%" height="15" fill="rgb(208,13,10)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="885" width="0.0120%" height="15" fill="rgb(212,200,36)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="869" width="0.0120%" height="15" fill="rgb(225,90,30)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="853" width="0.0120%" height="15" fill="rgb(236,182,39)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="837" width="0.0120%" height="15" fill="rgb(212,144,35)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.0974%" y="821" width="0.0120%" height="15" fill="rgb(228,63,44)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.0974%" y="805" width="0.0120%" height="15" fill="rgb(228,109,6)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="815.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.0974%" y="789" width="0.0120%" height="15" fill="rgb(238,117,24)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.0974%" y="773" width="0.0120%" height="15" fill="rgb(242,26,26)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="757" width="0.0120%" height="15" fill="rgb(221,92,48)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="741" width="0.0120%" height="15" fill="rgb(209,209,32)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.0974%" y="725" width="0.0120%" height="15" fill="rgb(221,70,22)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.0974%" y="709" width="0.0120%" height="15" fill="rgb(248,145,5)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="693" width="0.0120%" height="15" fill="rgb(226,116,26)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="677" width="0.0120%" height="15" fill="rgb(244,5,17)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="661" width="0.0120%" height="15" fill="rgb(252,159,33)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="645" width="0.0120%" height="15" fill="rgb(206,71,0)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.0974%" y="629" width="0.0120%" height="15" fill="rgb(233,118,54)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.0974%" y="613" width="0.0120%" height="15" fill="rgb(234,83,48)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="623.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.0974%" y="597" width="0.0120%" height="15" fill="rgb(228,3,54)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.0974%" y="581" width="0.0120%" height="15" fill="rgb(226,155,13)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="565" width="0.0120%" height="15" fill="rgb(241,28,37)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.0974%" y="549" width="0.0120%" height="15" fill="rgb(233,93,10)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.0974%" y="533" width="0.0120%" height="15" fill="rgb(225,113,19)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.0974%" y="517" width="0.0120%" height="15" fill="rgb(241,2,18)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="501" width="0.0120%" height="15" fill="rgb(228,207,21)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="485" width="0.0120%" height="15" fill="rgb(213,211,35)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="469" width="0.0120%" height="15" fill="rgb(209,83,10)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0974%" y="453" width="0.0120%" height="15" fill="rgb(209,164,1)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.0974%" y="437" width="0.0120%" height="15" fill="rgb(213,184,43)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.0974%" y="421" width="0.0120%" height="15" fill="rgb(231,61,34)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="431.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.0974%" y="405" width="0.0120%" height="15" fill="rgb(235,75,3)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="55.0974%" y="389" width="0.0120%" height="15" fill="rgb(220,106,47)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="55.0974%" y="373" width="0.0120%" height="15" fill="rgb(210,196,33)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="383.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.0974%" y="357" width="0.0120%" height="15" fill="rgb(229,154,42)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="55.0974%" y="341" width="0.0120%" height="15" fill="rgb(228,114,26)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="351.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.0974%" y="325" width="0.0120%" height="15" fill="rgb(208,144,1)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="335.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.0974%" y="309" width="0.0120%" height="15" fill="rgb(239,112,37)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.0974%" y="293" width="0.0120%" height="15" fill="rgb(210,96,50)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="55.0974%" y="277" width="0.0120%" height="15" fill="rgb(222,178,2)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="55.0974%" y="261" width="0.0120%" height="15" fill="rgb(226,74,18)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="271.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="55.0974%" y="245" width="0.0120%" height="15" fill="rgb(225,67,54)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="255.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.0974%" y="229" width="0.0120%" height="15" fill="rgb(251,92,32)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.0974%" y="213" width="0.0120%" height="15" fill="rgb(228,149,22)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="55.0974%" y="197" width="0.0120%" height="15" fill="rgb(243,54,13)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="55.0974%" y="181" width="0.0120%" height="15" fill="rgb(243,180,28)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="55.0974%" y="165" width="0.0120%" height="15" fill="rgb(208,167,24)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="175.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="55.0974%" y="149" width="0.0120%" height="15" fill="rgb(245,73,45)" fg:x="4583" fg:w="1"/><text x="55.3474%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="55.0974%" y="1653" width="0.0240%" height="15" fill="rgb(237,203,48)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="55.0974%" y="1637" width="0.0240%" height="15" fill="rgb(211,197,16)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="55.0974%" y="1621" width="0.0240%" height="15" fill="rgb(243,99,51)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.0974%" y="1605" width="0.0240%" height="15" fill="rgb(215,123,29)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.0974%" y="1589" width="0.0240%" height="15" fill="rgb(239,186,37)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="55.0974%" y="1573" width="0.0240%" height="15" fill="rgb(252,136,39)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="55.0974%" y="1557" width="0.0240%" height="15" fill="rgb(223,213,32)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1567.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="55.0974%" y="1541" width="0.0240%" height="15" fill="rgb(233,115,5)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1551.50"></text></g><g><title>smithereens::main::_{{closure}} (2 samples, 0.02%)</title><rect x="55.0974%" y="1525" width="0.0240%" height="15" fill="rgb(207,226,44)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="55.0974%" y="1509" width="0.0240%" height="15" fill="rgb(208,126,0)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.0974%" y="1493" width="0.0240%" height="15" fill="rgb(244,66,21)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.0974%" y="1477" width="0.0240%" height="15" fill="rgb(222,97,12)" fg:x="4583" fg:w="2"/><text x="55.3474%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1461" width="0.0120%" height="15" fill="rgb(219,213,19)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1445" width="0.0120%" height="15" fill="rgb(252,169,30)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1429" width="0.0120%" height="15" fill="rgb(206,32,51)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1413" width="0.0120%" height="15" fill="rgb(250,172,42)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1094%" y="1397" width="0.0120%" height="15" fill="rgb(209,34,43)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1094%" y="1381" width="0.0120%" height="15" fill="rgb(223,11,35)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1391.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1094%" y="1365" width="0.0120%" height="15" fill="rgb(251,219,26)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1094%" y="1349" width="0.0120%" height="15" fill="rgb(231,119,3)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="1333" width="0.0120%" height="15" fill="rgb(216,97,11)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="1317" width="0.0120%" height="15" fill="rgb(223,59,9)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1094%" y="1301" width="0.0120%" height="15" fill="rgb(233,93,31)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1094%" y="1285" width="0.0120%" height="15" fill="rgb(239,81,33)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1269" width="0.0120%" height="15" fill="rgb(213,120,34)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1253" width="0.0120%" height="15" fill="rgb(243,49,53)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1237" width="0.0120%" height="15" fill="rgb(247,216,33)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1221" width="0.0120%" height="15" fill="rgb(226,26,14)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1094%" y="1205" width="0.0120%" height="15" fill="rgb(215,49,53)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1094%" y="1189" width="0.0120%" height="15" fill="rgb(245,162,40)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1199.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1094%" y="1173" width="0.0120%" height="15" fill="rgb(229,68,17)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1094%" y="1157" width="0.0120%" height="15" fill="rgb(213,182,10)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="1141" width="0.0120%" height="15" fill="rgb(245,125,30)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="1125" width="0.0120%" height="15" fill="rgb(232,202,2)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1094%" y="1109" width="0.0120%" height="15" fill="rgb(237,140,51)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1094%" y="1093" width="0.0120%" height="15" fill="rgb(236,157,25)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1077" width="0.0120%" height="15" fill="rgb(219,209,0)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1061" width="0.0120%" height="15" fill="rgb(240,116,54)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1045" width="0.0120%" height="15" fill="rgb(216,10,36)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="1029" width="0.0120%" height="15" fill="rgb(222,72,44)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1094%" y="1013" width="0.0120%" height="15" fill="rgb(232,159,9)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1094%" y="997" width="0.0120%" height="15" fill="rgb(210,39,32)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="1007.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1094%" y="981" width="0.0120%" height="15" fill="rgb(216,194,45)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1094%" y="965" width="0.0120%" height="15" fill="rgb(218,18,35)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="949" width="0.0120%" height="15" fill="rgb(207,83,51)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="933" width="0.0120%" height="15" fill="rgb(225,63,43)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1094%" y="917" width="0.0120%" height="15" fill="rgb(207,57,36)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1094%" y="901" width="0.0120%" height="15" fill="rgb(216,99,33)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="885" width="0.0120%" height="15" fill="rgb(225,42,16)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="869" width="0.0120%" height="15" fill="rgb(220,201,45)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="853" width="0.0120%" height="15" fill="rgb(225,33,4)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="837" width="0.0120%" height="15" fill="rgb(224,33,50)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1094%" y="821" width="0.0120%" height="15" fill="rgb(246,198,51)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1094%" y="805" width="0.0120%" height="15" fill="rgb(205,22,4)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="815.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1094%" y="789" width="0.0120%" height="15" fill="rgb(206,3,8)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1094%" y="773" width="0.0120%" height="15" fill="rgb(251,23,15)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="757" width="0.0120%" height="15" fill="rgb(252,88,28)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="741" width="0.0120%" height="15" fill="rgb(212,127,14)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1094%" y="725" width="0.0120%" height="15" fill="rgb(247,145,37)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1094%" y="709" width="0.0120%" height="15" fill="rgb(209,117,53)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="693" width="0.0120%" height="15" fill="rgb(212,90,42)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="677" width="0.0120%" height="15" fill="rgb(218,164,37)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="661" width="0.0120%" height="15" fill="rgb(246,65,34)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="645" width="0.0120%" height="15" fill="rgb(231,100,33)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1094%" y="629" width="0.0120%" height="15" fill="rgb(228,126,14)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1094%" y="613" width="0.0120%" height="15" fill="rgb(215,173,21)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="623.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1094%" y="597" width="0.0120%" height="15" fill="rgb(210,6,40)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1094%" y="581" width="0.0120%" height="15" fill="rgb(212,48,18)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="565" width="0.0120%" height="15" fill="rgb(230,214,11)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1094%" y="549" width="0.0120%" height="15" fill="rgb(254,105,39)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1094%" y="533" width="0.0120%" height="15" fill="rgb(245,158,5)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1094%" y="517" width="0.0120%" height="15" fill="rgb(249,208,11)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="501" width="0.0120%" height="15" fill="rgb(210,39,28)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="485" width="0.0120%" height="15" fill="rgb(211,56,53)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="469" width="0.0120%" height="15" fill="rgb(226,201,30)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1094%" y="453" width="0.0120%" height="15" fill="rgb(239,101,34)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1094%" y="437" width="0.0120%" height="15" fill="rgb(226,209,5)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1094%" y="421" width="0.0120%" height="15" fill="rgb(250,105,47)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="431.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1094%" y="405" width="0.0120%" height="15" fill="rgb(230,72,3)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="55.1094%" y="389" width="0.0120%" height="15" fill="rgb(232,218,39)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="55.1094%" y="373" width="0.0120%" height="15" fill="rgb(248,166,6)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="383.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1094%" y="357" width="0.0120%" height="15" fill="rgb(247,89,20)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="55.1094%" y="341" width="0.0120%" height="15" fill="rgb(248,130,54)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="351.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1094%" y="325" width="0.0120%" height="15" fill="rgb(234,196,4)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="335.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1094%" y="309" width="0.0120%" height="15" fill="rgb(250,143,31)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1094%" y="293" width="0.0120%" height="15" fill="rgb(211,110,34)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="55.1094%" y="277" width="0.0120%" height="15" fill="rgb(215,124,48)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="55.1094%" y="261" width="0.0120%" height="15" fill="rgb(216,46,13)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="271.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="55.1094%" y="245" width="0.0120%" height="15" fill="rgb(205,184,25)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="255.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1094%" y="229" width="0.0120%" height="15" fill="rgb(228,1,10)" fg:x="4584" fg:w="1"/><text x="55.3594%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="55.1214%" y="1653" width="0.0120%" height="15" fill="rgb(213,116,27)" fg:x="4585" fg:w="1"/><text x="55.3714%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.1214%" y="1637" width="0.0120%" height="15" fill="rgb(241,95,50)" fg:x="4585" fg:w="1"/><text x="55.3714%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.1214%" y="1621" width="0.0120%" height="15" fill="rgb(238,48,32)" fg:x="4585" fg:w="1"/><text x="55.3714%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1334%" y="1141" width="0.0120%" height="15" fill="rgb(235,113,49)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1334%" y="1125" width="0.0120%" height="15" fill="rgb(205,127,43)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="1109" width="0.0120%" height="15" fill="rgb(250,162,2)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="1093" width="0.0120%" height="15" fill="rgb(220,13,41)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="1077" width="0.0120%" height="15" fill="rgb(249,221,25)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="1061" width="0.0120%" height="15" fill="rgb(215,208,19)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1334%" y="1045" width="0.0120%" height="15" fill="rgb(236,175,2)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1334%" y="1029" width="0.0120%" height="15" fill="rgb(241,52,2)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1039.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1334%" y="1013" width="0.0120%" height="15" fill="rgb(248,140,14)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1334%" y="997" width="0.0120%" height="15" fill="rgb(253,22,42)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1334%" y="981" width="0.0120%" height="15" fill="rgb(234,61,47)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1334%" y="965" width="0.0120%" height="15" fill="rgb(208,226,15)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="949" width="0.0120%" height="15" fill="rgb(217,221,4)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="933" width="0.0120%" height="15" fill="rgb(212,174,34)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="917" width="0.0120%" height="15" fill="rgb(253,83,4)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="901" width="0.0120%" height="15" fill="rgb(250,195,49)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1334%" y="885" width="0.0120%" height="15" fill="rgb(241,192,25)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1334%" y="869" width="0.0120%" height="15" fill="rgb(208,124,10)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="879.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1334%" y="853" width="0.0120%" height="15" fill="rgb(222,33,0)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1334%" y="837" width="0.0120%" height="15" fill="rgb(234,209,28)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1334%" y="821" width="0.0120%" height="15" fill="rgb(224,11,23)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1334%" y="805" width="0.0120%" height="15" fill="rgb(232,99,1)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1334%" y="789" width="0.0120%" height="15" fill="rgb(237,95,45)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1334%" y="773" width="0.0120%" height="15" fill="rgb(208,109,11)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="757" width="0.0120%" height="15" fill="rgb(216,190,48)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="741" width="0.0120%" height="15" fill="rgb(251,171,36)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="725" width="0.0120%" height="15" fill="rgb(230,62,22)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="709" width="0.0120%" height="15" fill="rgb(225,114,35)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1334%" y="693" width="0.0120%" height="15" fill="rgb(215,118,42)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1334%" y="677" width="0.0120%" height="15" fill="rgb(243,119,21)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="687.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1334%" y="661" width="0.0120%" height="15" fill="rgb(252,177,53)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1334%" y="645" width="0.0120%" height="15" fill="rgb(237,209,29)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1334%" y="629" width="0.0120%" height="15" fill="rgb(212,65,23)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1334%" y="613" width="0.0120%" height="15" fill="rgb(230,222,46)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1334%" y="597" width="0.0120%" height="15" fill="rgb(215,135,32)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1334%" y="581" width="0.0120%" height="15" fill="rgb(246,101,22)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="565" width="0.0120%" height="15" fill="rgb(206,107,13)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="549" width="0.0120%" height="15" fill="rgb(250,100,44)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="533" width="0.0120%" height="15" fill="rgb(231,147,38)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1334%" y="517" width="0.0120%" height="15" fill="rgb(229,8,40)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1334%" y="501" width="0.0120%" height="15" fill="rgb(221,135,30)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1334%" y="485" width="0.0120%" height="15" fill="rgb(249,193,18)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="495.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1334%" y="469" width="0.0120%" height="15" fill="rgb(209,133,39)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="55.1334%" y="453" width="0.0120%" height="15" fill="rgb(232,100,14)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="463.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="55.1334%" y="437" width="0.0120%" height="15" fill="rgb(224,185,1)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="55.1334%" y="421" width="0.0120%" height="15" fill="rgb(223,139,8)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="55.1334%" y="405" width="0.0120%" height="15" fill="rgb(232,213,38)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="55.1334%" y="389" width="0.0120%" height="15" fill="rgb(207,94,22)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="55.1334%" y="373" width="0.0120%" height="15" fill="rgb(219,183,54)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="55.1334%" y="357" width="0.0120%" height="15" fill="rgb(216,185,54)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1334%" y="341" width="0.0120%" height="15" fill="rgb(254,217,39)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="351.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1334%" y="325" width="0.0120%" height="15" fill="rgb(240,178,23)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="55.1334%" y="309" width="0.0120%" height="15" fill="rgb(218,11,47)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="55.1334%" y="293" width="0.0120%" height="15" fill="rgb(218,51,51)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="55.1334%" y="277" width="0.0120%" height="15" fill="rgb(238,126,27)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="287.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="55.1334%" y="261" width="0.0120%" height="15" fill="rgb(249,202,22)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="271.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="55.1334%" y="245" width="0.0120%" height="15" fill="rgb(254,195,49)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="55.1334%" y="229" width="0.0120%" height="15" fill="rgb(208,123,14)" fg:x="4586" fg:w="1"/><text x="55.3834%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="55.1334%" y="1493" width="0.0240%" height="15" fill="rgb(224,200,8)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="55.1334%" y="1477" width="0.0240%" height="15" fill="rgb(217,61,36)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1461" width="0.0240%" height="15" fill="rgb(206,35,45)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1445" width="0.0240%" height="15" fill="rgb(217,65,33)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1429" width="0.0240%" height="15" fill="rgb(222,158,48)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1413" width="0.0240%" height="15" fill="rgb(254,2,54)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="55.1334%" y="1397" width="0.0240%" height="15" fill="rgb(250,143,38)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="55.1334%" y="1381" width="0.0240%" height="15" fill="rgb(248,25,0)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1391.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="55.1334%" y="1365" width="0.0240%" height="15" fill="rgb(206,152,27)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="55.1334%" y="1349" width="0.0240%" height="15" fill="rgb(240,77,30)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1334%" y="1333" width="0.0240%" height="15" fill="rgb(231,5,3)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1334%" y="1317" width="0.0240%" height="15" fill="rgb(207,226,32)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1301" width="0.0240%" height="15" fill="rgb(222,207,47)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1285" width="0.0240%" height="15" fill="rgb(229,115,45)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1269" width="0.0240%" height="15" fill="rgb(224,191,6)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1334%" y="1253" width="0.0240%" height="15" fill="rgb(230,227,24)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="55.1334%" y="1237" width="0.0240%" height="15" fill="rgb(228,80,19)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="55.1334%" y="1221" width="0.0240%" height="15" fill="rgb(247,229,0)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1231.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="55.1334%" y="1205" width="0.0240%" height="15" fill="rgb(237,194,15)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="55.1334%" y="1189" width="0.0240%" height="15" fill="rgb(219,203,20)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1334%" y="1173" width="0.0240%" height="15" fill="rgb(234,128,8)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1334%" y="1157" width="0.0240%" height="15" fill="rgb(248,202,8)" fg:x="4586" fg:w="2"/><text x="55.3834%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="1141" width="0.0120%" height="15" fill="rgb(206,104,37)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="1125" width="0.0120%" height="15" fill="rgb(223,8,27)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="1109" width="0.0120%" height="15" fill="rgb(216,217,28)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="1093" width="0.0120%" height="15" fill="rgb(249,199,1)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1455%" y="1077" width="0.0120%" height="15" fill="rgb(240,85,17)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1455%" y="1061" width="0.0120%" height="15" fill="rgb(206,108,45)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1071.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1455%" y="1045" width="0.0120%" height="15" fill="rgb(245,210,41)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1455%" y="1029" width="0.0120%" height="15" fill="rgb(206,13,37)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1455%" y="1013" width="0.0120%" height="15" fill="rgb(250,61,18)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1455%" y="997" width="0.0120%" height="15" fill="rgb(235,172,48)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1455%" y="981" width="0.0120%" height="15" fill="rgb(249,201,17)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1455%" y="965" width="0.0120%" height="15" fill="rgb(219,208,6)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="949" width="0.0120%" height="15" fill="rgb(248,31,23)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="933" width="0.0120%" height="15" fill="rgb(245,15,42)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="917" width="0.0120%" height="15" fill="rgb(222,217,39)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="901" width="0.0120%" height="15" fill="rgb(210,219,27)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1455%" y="885" width="0.0120%" height="15" fill="rgb(252,166,36)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1455%" y="869" width="0.0120%" height="15" fill="rgb(245,132,34)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="879.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1455%" y="853" width="0.0120%" height="15" fill="rgb(236,54,3)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1455%" y="837" width="0.0120%" height="15" fill="rgb(241,173,43)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1455%" y="821" width="0.0120%" height="15" fill="rgb(215,190,9)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1455%" y="805" width="0.0120%" height="15" fill="rgb(242,101,16)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1455%" y="789" width="0.0120%" height="15" fill="rgb(223,190,21)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1455%" y="773" width="0.0120%" height="15" fill="rgb(215,228,25)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="757" width="0.0120%" height="15" fill="rgb(225,36,22)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="741" width="0.0120%" height="15" fill="rgb(251,106,46)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="725" width="0.0120%" height="15" fill="rgb(208,90,1)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="709" width="0.0120%" height="15" fill="rgb(243,10,4)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1455%" y="693" width="0.0120%" height="15" fill="rgb(212,137,27)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1455%" y="677" width="0.0120%" height="15" fill="rgb(231,220,49)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="687.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1455%" y="661" width="0.0120%" height="15" fill="rgb(237,96,20)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1455%" y="645" width="0.0120%" height="15" fill="rgb(239,229,30)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1455%" y="629" width="0.0120%" height="15" fill="rgb(219,65,33)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1455%" y="613" width="0.0120%" height="15" fill="rgb(243,134,7)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1455%" y="597" width="0.0120%" height="15" fill="rgb(216,177,54)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1455%" y="581" width="0.0120%" height="15" fill="rgb(211,160,20)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="565" width="0.0120%" height="15" fill="rgb(239,85,39)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="549" width="0.0120%" height="15" fill="rgb(232,125,22)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="533" width="0.0120%" height="15" fill="rgb(244,57,34)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1455%" y="517" width="0.0120%" height="15" fill="rgb(214,203,32)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1455%" y="501" width="0.0120%" height="15" fill="rgb(207,58,43)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1455%" y="485" width="0.0120%" height="15" fill="rgb(215,193,15)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="495.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1455%" y="469" width="0.0120%" height="15" fill="rgb(232,15,44)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="479.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="55.1455%" y="453" width="0.0120%" height="15" fill="rgb(212,3,48)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="463.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="55.1455%" y="437" width="0.0120%" height="15" fill="rgb(218,128,7)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="55.1455%" y="421" width="0.0120%" height="15" fill="rgb(226,216,39)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1455%" y="405" width="0.0120%" height="15" fill="rgb(243,47,51)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1455%" y="389" width="0.0120%" height="15" fill="rgb(241,183,40)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1455%" y="373" width="0.0120%" height="15" fill="rgb(231,217,32)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="55.1455%" y="357" width="0.0120%" height="15" fill="rgb(229,61,38)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="341" width="0.0120%" height="15" fill="rgb(225,210,5)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="351.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="325" width="0.0120%" height="15" fill="rgb(231,79,45)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="309" width="0.0120%" height="15" fill="rgb(224,100,7)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="293" width="0.0120%" height="15" fill="rgb(241,198,18)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="303.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="55.1455%" y="277" width="0.0120%" height="15" fill="rgb(252,97,53)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="287.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="261" width="0.0120%" height="15" fill="rgb(220,88,7)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="271.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="245" width="0.0120%" height="15" fill="rgb(213,176,14)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="255.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="229" width="0.0120%" height="15" fill="rgb(246,73,7)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="55.1455%" y="213" width="0.0120%" height="15" fill="rgb(245,64,36)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="223.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="55.1455%" y="197" width="0.0120%" height="15" fill="rgb(245,80,10)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="55.1455%" y="181" width="0.0120%" height="15" fill="rgb(232,107,50)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="55.1455%" y="165" width="0.0120%" height="15" fill="rgb(253,3,0)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="55.1455%" y="149" width="0.0120%" height="15" fill="rgb(212,99,53)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="55.1455%" y="133" width="0.0120%" height="15" fill="rgb(249,111,54)" fg:x="4587" fg:w="1"/><text x="55.3955%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="55.1334%" y="1653" width="0.0361%" height="15" fill="rgb(249,55,30)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1334%" y="1637" width="0.0361%" height="15" fill="rgb(237,47,42)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1334%" y="1621" width="0.0361%" height="15" fill="rgb(211,20,18)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="55.1334%" y="1605" width="0.0361%" height="15" fill="rgb(231,203,46)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="55.1334%" y="1589" width="0.0361%" height="15" fill="rgb(237,142,3)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="55.1334%" y="1573" width="0.0361%" height="15" fill="rgb(241,107,1)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1583.50"></text></g><g><title>smithereens::main::_{{closure}} (3 samples, 0.04%)</title><rect x="55.1334%" y="1557" width="0.0361%" height="15" fill="rgb(229,83,13)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="55.1334%" y="1541" width="0.0361%" height="15" fill="rgb(241,91,40)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1334%" y="1525" width="0.0361%" height="15" fill="rgb(225,3,45)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1334%" y="1509" width="0.0361%" height="15" fill="rgb(244,223,14)" fg:x="4586" fg:w="3"/><text x="55.3834%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1493" width="0.0120%" height="15" fill="rgb(224,124,37)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1477" width="0.0120%" height="15" fill="rgb(251,171,30)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1461" width="0.0120%" height="15" fill="rgb(236,46,54)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1445" width="0.0120%" height="15" fill="rgb(245,213,5)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1575%" y="1429" width="0.0120%" height="15" fill="rgb(230,144,27)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1575%" y="1413" width="0.0120%" height="15" fill="rgb(220,86,6)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1423.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="1397" width="0.0120%" height="15" fill="rgb(240,20,13)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1407.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1575%" y="1381" width="0.0120%" height="15" fill="rgb(217,89,34)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="1365" width="0.0120%" height="15" fill="rgb(229,13,5)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="1349" width="0.0120%" height="15" fill="rgb(244,67,35)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1575%" y="1333" width="0.0120%" height="15" fill="rgb(221,40,2)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1575%" y="1317" width="0.0120%" height="15" fill="rgb(237,157,21)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1301" width="0.0120%" height="15" fill="rgb(222,94,11)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1285" width="0.0120%" height="15" fill="rgb(249,113,6)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1269" width="0.0120%" height="15" fill="rgb(238,137,36)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1253" width="0.0120%" height="15" fill="rgb(210,102,26)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1575%" y="1237" width="0.0120%" height="15" fill="rgb(218,30,30)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1575%" y="1221" width="0.0120%" height="15" fill="rgb(214,67,26)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1231.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="1205" width="0.0120%" height="15" fill="rgb(251,9,53)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1575%" y="1189" width="0.0120%" height="15" fill="rgb(228,204,25)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="1173" width="0.0120%" height="15" fill="rgb(207,153,8)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="1157" width="0.0120%" height="15" fill="rgb(242,9,16)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1141" width="0.0120%" height="15" fill="rgb(217,211,10)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1125" width="0.0120%" height="15" fill="rgb(219,228,52)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1109" width="0.0120%" height="15" fill="rgb(231,92,29)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="1093" width="0.0120%" height="15" fill="rgb(232,8,23)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1575%" y="1077" width="0.0120%" height="15" fill="rgb(216,211,34)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1575%" y="1061" width="0.0120%" height="15" fill="rgb(236,151,0)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1071.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="1045" width="0.0120%" height="15" fill="rgb(209,168,3)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1575%" y="1029" width="0.0120%" height="15" fill="rgb(208,129,28)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="1013" width="0.0120%" height="15" fill="rgb(229,78,22)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="997" width="0.0120%" height="15" fill="rgb(228,187,13)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1575%" y="981" width="0.0120%" height="15" fill="rgb(240,119,24)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1575%" y="965" width="0.0120%" height="15" fill="rgb(209,194,42)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="949" width="0.0120%" height="15" fill="rgb(247,200,46)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="933" width="0.0120%" height="15" fill="rgb(218,76,16)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="917" width="0.0120%" height="15" fill="rgb(225,21,48)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="901" width="0.0120%" height="15" fill="rgb(239,223,50)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1575%" y="885" width="0.0120%" height="15" fill="rgb(244,45,21)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1575%" y="869" width="0.0120%" height="15" fill="rgb(232,33,43)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="879.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="853" width="0.0120%" height="15" fill="rgb(209,8,3)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1575%" y="837" width="0.0120%" height="15" fill="rgb(214,25,53)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="821" width="0.0120%" height="15" fill="rgb(254,186,54)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="805" width="0.0120%" height="15" fill="rgb(208,174,49)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="789" width="0.0120%" height="15" fill="rgb(233,191,51)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="773" width="0.0120%" height="15" fill="rgb(222,134,10)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="757" width="0.0120%" height="15" fill="rgb(230,226,20)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="741" width="0.0120%" height="15" fill="rgb(251,111,25)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1575%" y="725" width="0.0120%" height="15" fill="rgb(224,40,46)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1575%" y="709" width="0.0120%" height="15" fill="rgb(236,108,47)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="719.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="693" width="0.0120%" height="15" fill="rgb(234,93,0)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1575%" y="677" width="0.0120%" height="15" fill="rgb(224,213,32)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="661" width="0.0120%" height="15" fill="rgb(251,11,48)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1575%" y="645" width="0.0120%" height="15" fill="rgb(236,173,5)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1575%" y="629" width="0.0120%" height="15" fill="rgb(230,95,12)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1575%" y="613" width="0.0120%" height="15" fill="rgb(232,209,1)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="597" width="0.0120%" height="15" fill="rgb(232,6,1)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="581" width="0.0120%" height="15" fill="rgb(210,224,50)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="565" width="0.0120%" height="15" fill="rgb(228,127,35)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="549" width="0.0120%" height="15" fill="rgb(245,102,45)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1575%" y="533" width="0.0120%" height="15" fill="rgb(214,1,49)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1575%" y="517" width="0.0120%" height="15" fill="rgb(226,163,40)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="527.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="501" width="0.0120%" height="15" fill="rgb(239,212,28)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="55.1575%" y="485" width="0.0120%" height="15" fill="rgb(220,20,13)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="55.1575%" y="469" width="0.0120%" height="15" fill="rgb(210,164,35)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="55.1575%" y="453" width="0.0120%" height="15" fill="rgb(248,109,41)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="55.1575%" y="437" width="0.0120%" height="15" fill="rgb(238,23,50)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="55.1575%" y="421" width="0.0120%" height="15" fill="rgb(211,48,49)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="55.1575%" y="405" width="0.0120%" height="15" fill="rgb(223,36,21)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="55.1575%" y="389" width="0.0120%" height="15" fill="rgb(207,123,46)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="373" width="0.0120%" height="15" fill="rgb(240,218,32)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="383.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1575%" y="357" width="0.0120%" height="15" fill="rgb(252,5,43)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="55.1575%" y="341" width="0.0120%" height="15" fill="rgb(252,84,19)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="55.1575%" y="325" width="0.0120%" height="15" fill="rgb(243,152,39)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="55.1575%" y="309" width="0.0120%" height="15" fill="rgb(234,160,15)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="55.1575%" y="293" width="0.0120%" height="15" fill="rgb(237,34,20)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="55.1575%" y="277" width="0.0120%" height="15" fill="rgb(229,97,13)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="55.1575%" y="261" width="0.0120%" height="15" fill="rgb(234,71,50)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="271.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1575%" y="245" width="0.0120%" height="15" fill="rgb(253,155,4)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="255.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1575%" y="229" width="0.0120%" height="15" fill="rgb(222,185,37)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1575%" y="213" width="0.0120%" height="15" fill="rgb(251,177,13)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="55.1575%" y="197" width="0.0120%" height="15" fill="rgb(250,179,40)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="55.1575%" y="181" width="0.0120%" height="15" fill="rgb(242,44,2)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="55.1575%" y="165" width="0.0120%" height="15" fill="rgb(216,177,13)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1575%" y="149" width="0.0120%" height="15" fill="rgb(216,106,43)" fg:x="4588" fg:w="1"/><text x="55.4075%" y="159.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1695%" y="213" width="0.0120%" height="15" fill="rgb(216,183,2)" fg:x="4589" fg:w="1"/><text x="55.4195%" y="223.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1695%" y="197" width="0.0120%" height="15" fill="rgb(249,75,3)" fg:x="4589" fg:w="1"/><text x="55.4195%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="55.1695%" y="181" width="0.0120%" height="15" fill="rgb(219,67,39)" fg:x="4589" fg:w="1"/><text x="55.4195%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="55.1695%" y="1125" width="0.0240%" height="15" fill="rgb(253,228,2)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="55.1695%" y="1109" width="0.0240%" height="15" fill="rgb(235,138,27)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="1093" width="0.0240%" height="15" fill="rgb(236,97,51)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="1077" width="0.0240%" height="15" fill="rgb(240,80,30)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="1061" width="0.0240%" height="15" fill="rgb(230,178,19)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="1045" width="0.0240%" height="15" fill="rgb(210,190,27)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="55.1695%" y="1029" width="0.0240%" height="15" fill="rgb(222,107,31)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="55.1695%" y="1013" width="0.0240%" height="15" fill="rgb(216,127,34)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1023.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="55.1695%" y="997" width="0.0240%" height="15" fill="rgb(234,116,52)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="55.1695%" y="981" width="0.0240%" height="15" fill="rgb(222,124,15)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1695%" y="965" width="0.0240%" height="15" fill="rgb(231,179,28)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1695%" y="949" width="0.0240%" height="15" fill="rgb(226,93,45)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="933" width="0.0240%" height="15" fill="rgb(215,8,51)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="917" width="0.0240%" height="15" fill="rgb(223,106,5)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="901" width="0.0240%" height="15" fill="rgb(250,191,5)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="885" width="0.0240%" height="15" fill="rgb(242,132,44)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="55.1695%" y="869" width="0.0240%" height="15" fill="rgb(251,152,29)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="55.1695%" y="853" width="0.0240%" height="15" fill="rgb(218,179,5)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="863.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="55.1695%" y="837" width="0.0240%" height="15" fill="rgb(227,67,19)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="55.1695%" y="821" width="0.0240%" height="15" fill="rgb(233,119,31)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1695%" y="805" width="0.0240%" height="15" fill="rgb(241,120,22)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1695%" y="789" width="0.0240%" height="15" fill="rgb(224,102,30)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="55.1695%" y="773" width="0.0240%" height="15" fill="rgb(210,164,37)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="55.1695%" y="757" width="0.0240%" height="15" fill="rgb(226,191,16)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="741" width="0.0240%" height="15" fill="rgb(214,40,45)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="725" width="0.0240%" height="15" fill="rgb(244,29,26)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="709" width="0.0240%" height="15" fill="rgb(216,16,5)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="693" width="0.0240%" height="15" fill="rgb(249,76,35)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="55.1695%" y="677" width="0.0240%" height="15" fill="rgb(207,11,44)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="55.1695%" y="661" width="0.0240%" height="15" fill="rgb(228,190,49)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="671.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="55.1695%" y="645" width="0.0240%" height="15" fill="rgb(214,173,12)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="55.1695%" y="629" width="0.0240%" height="15" fill="rgb(218,26,35)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1695%" y="613" width="0.0240%" height="15" fill="rgb(220,200,19)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="55.1695%" y="597" width="0.0240%" height="15" fill="rgb(239,95,49)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="55.1695%" y="581" width="0.0240%" height="15" fill="rgb(235,85,53)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="55.1695%" y="565" width="0.0240%" height="15" fill="rgb(233,133,31)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="549" width="0.0240%" height="15" fill="rgb(218,25,20)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="533" width="0.0240%" height="15" fill="rgb(252,210,38)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="517" width="0.0240%" height="15" fill="rgb(242,134,21)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.1695%" y="501" width="0.0240%" height="15" fill="rgb(213,28,48)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="55.1695%" y="485" width="0.0240%" height="15" fill="rgb(250,196,2)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="55.1695%" y="469" width="0.0240%" height="15" fill="rgb(227,5,17)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="479.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="55.1695%" y="453" width="0.0240%" height="15" fill="rgb(221,226,24)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="55.1695%" y="437" width="0.0240%" height="15" fill="rgb(211,5,48)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="55.1695%" y="421" width="0.0240%" height="15" fill="rgb(219,150,6)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="431.50"></text></g><g><title>smithereens::fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="55.1695%" y="405" width="0.0240%" height="15" fill="rgb(251,46,16)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="415.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="55.1695%" y="389" width="0.0240%" height="15" fill="rgb(220,204,40)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="399.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.1695%" y="373" width="0.0240%" height="15" fill="rgb(211,85,2)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="383.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.1695%" y="357" width="0.0240%" height="15" fill="rgb(229,17,7)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.1695%" y="341" width="0.0240%" height="15" fill="rgb(239,72,28)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="55.1695%" y="325" width="0.0240%" height="15" fill="rgb(230,47,54)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="55.1695%" y="309" width="0.0240%" height="15" fill="rgb(214,50,8)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="319.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="55.1695%" y="293" width="0.0240%" height="15" fill="rgb(216,198,43)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="303.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.1695%" y="277" width="0.0240%" height="15" fill="rgb(234,20,35)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="55.1695%" y="261" width="0.0240%" height="15" fill="rgb(254,45,19)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="55.1695%" y="245" width="0.0240%" height="15" fill="rgb(219,14,44)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="55.1695%" y="229" width="0.0240%" height="15" fill="rgb(217,220,26)" fg:x="4589" fg:w="2"/><text x="55.4195%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="55.1815%" y="213" width="0.0120%" height="15" fill="rgb(213,158,28)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="55.1815%" y="197" width="0.0120%" height="15" fill="rgb(252,51,52)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="55.1815%" y="181" width="0.0120%" height="15" fill="rgb(246,89,16)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="55.1815%" y="165" width="0.0120%" height="15" fill="rgb(216,158,49)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="55.1815%" y="149" width="0.0120%" height="15" fill="rgb(236,107,19)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="55.1815%" y="133" width="0.0120%" height="15" fill="rgb(228,185,30)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="143.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="55.1815%" y="117" width="0.0120%" height="15" fill="rgb(246,134,8)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="55.1815%" y="101" width="0.0120%" height="15" fill="rgb(214,143,50)" fg:x="4590" fg:w="1"/><text x="55.4315%" y="111.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.04%)</title><rect x="55.1695%" y="1653" width="0.0361%" height="15" fill="rgb(228,75,8)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="55.1695%" y="1637" width="0.0361%" height="15" fill="rgb(207,175,4)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1621" width="0.0361%" height="15" fill="rgb(205,108,24)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1605" width="0.0361%" height="15" fill="rgb(244,120,49)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="55.1695%" y="1589" width="0.0361%" height="15" fill="rgb(223,47,38)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="55.1695%" y="1573" width="0.0361%" height="15" fill="rgb(229,179,11)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="55.1695%" y="1557" width="0.0361%" height="15" fill="rgb(231,122,1)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1567.50"></text></g><g><title>smithereens::main::_{{closure}} (3 samples, 0.04%)</title><rect x="55.1695%" y="1541" width="0.0361%" height="15" fill="rgb(245,119,9)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="55.1695%" y="1525" width="0.0361%" height="15" fill="rgb(241,163,25)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1509" width="0.0361%" height="15" fill="rgb(217,214,3)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1493" width="0.0361%" height="15" fill="rgb(240,86,28)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="55.1695%" y="1477" width="0.0361%" height="15" fill="rgb(215,47,9)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="55.1695%" y="1461" width="0.0361%" height="15" fill="rgb(252,25,45)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1445" width="0.0361%" height="15" fill="rgb(251,164,9)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1429" width="0.0361%" height="15" fill="rgb(233,194,0)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1413" width="0.0361%" height="15" fill="rgb(249,111,24)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1397" width="0.0361%" height="15" fill="rgb(250,223,3)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="55.1695%" y="1381" width="0.0361%" height="15" fill="rgb(236,178,37)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.04%)</title><rect x="55.1695%" y="1365" width="0.0361%" height="15" fill="rgb(241,158,50)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1375.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="55.1695%" y="1349" width="0.0361%" height="15" fill="rgb(213,121,41)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="55.1695%" y="1333" width="0.0361%" height="15" fill="rgb(240,92,3)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1317" width="0.0361%" height="15" fill="rgb(205,123,3)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1301" width="0.0361%" height="15" fill="rgb(205,97,47)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1285" width="0.0361%" height="15" fill="rgb(247,152,14)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1269" width="0.0361%" height="15" fill="rgb(248,195,53)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1253" width="0.0361%" height="15" fill="rgb(226,201,16)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="55.1695%" y="1237" width="0.0361%" height="15" fill="rgb(205,98,0)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="55.1695%" y="1221" width="0.0361%" height="15" fill="rgb(214,191,48)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.04%)</title><rect x="55.1695%" y="1205" width="0.0361%" height="15" fill="rgb(237,112,39)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1215.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="55.1695%" y="1189" width="0.0361%" height="15" fill="rgb(247,203,27)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="55.1695%" y="1173" width="0.0361%" height="15" fill="rgb(235,124,28)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1157" width="0.0361%" height="15" fill="rgb(208,207,46)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="55.1695%" y="1141" width="0.0361%" height="15" fill="rgb(234,176,4)" fg:x="4589" fg:w="3"/><text x="55.4195%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="1125" width="0.0120%" height="15" fill="rgb(230,133,28)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="1109" width="0.0120%" height="15" fill="rgb(211,137,40)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="1093" width="0.0120%" height="15" fill="rgb(254,35,13)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="1077" width="0.0120%" height="15" fill="rgb(225,49,51)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1936%" y="1061" width="0.0120%" height="15" fill="rgb(251,10,15)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1936%" y="1045" width="0.0120%" height="15" fill="rgb(228,207,15)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1055.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1936%" y="1029" width="0.0120%" height="15" fill="rgb(241,99,19)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1936%" y="1013" width="0.0120%" height="15" fill="rgb(207,104,49)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1936%" y="997" width="0.0120%" height="15" fill="rgb(234,99,18)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1936%" y="981" width="0.0120%" height="15" fill="rgb(213,191,49)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1936%" y="965" width="0.0120%" height="15" fill="rgb(210,226,19)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1936%" y="949" width="0.0120%" height="15" fill="rgb(229,97,18)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="933" width="0.0120%" height="15" fill="rgb(211,167,15)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="917" width="0.0120%" height="15" fill="rgb(210,169,34)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="901" width="0.0120%" height="15" fill="rgb(241,121,31)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="885" width="0.0120%" height="15" fill="rgb(232,40,11)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1936%" y="869" width="0.0120%" height="15" fill="rgb(205,86,26)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1936%" y="853" width="0.0120%" height="15" fill="rgb(231,126,28)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="863.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1936%" y="837" width="0.0120%" height="15" fill="rgb(219,221,18)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1936%" y="821" width="0.0120%" height="15" fill="rgb(211,40,0)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1936%" y="805" width="0.0120%" height="15" fill="rgb(239,85,43)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1936%" y="789" width="0.0120%" height="15" fill="rgb(231,55,21)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="55.1936%" y="773" width="0.0120%" height="15" fill="rgb(225,184,43)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="55.1936%" y="757" width="0.0120%" height="15" fill="rgb(251,158,41)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="741" width="0.0120%" height="15" fill="rgb(234,159,37)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="725" width="0.0120%" height="15" fill="rgb(216,204,22)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="709" width="0.0120%" height="15" fill="rgb(214,17,3)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="693" width="0.0120%" height="15" fill="rgb(212,111,17)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1936%" y="677" width="0.0120%" height="15" fill="rgb(221,157,24)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1936%" y="661" width="0.0120%" height="15" fill="rgb(252,16,13)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="671.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1936%" y="645" width="0.0120%" height="15" fill="rgb(221,62,2)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.1936%" y="629" width="0.0120%" height="15" fill="rgb(247,87,22)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1936%" y="613" width="0.0120%" height="15" fill="rgb(215,73,9)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.1936%" y="597" width="0.0120%" height="15" fill="rgb(207,175,33)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="581" width="0.0120%" height="15" fill="rgb(243,129,54)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="565" width="0.0120%" height="15" fill="rgb(227,119,45)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="549" width="0.0120%" height="15" fill="rgb(205,109,36)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.1936%" y="533" width="0.0120%" height="15" fill="rgb(205,6,39)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.1936%" y="517" width="0.0120%" height="15" fill="rgb(221,32,16)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="55.1936%" y="501" width="0.0120%" height="15" fill="rgb(228,144,50)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="511.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1936%" y="485" width="0.0120%" height="15" fill="rgb(229,201,53)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="55.1936%" y="469" width="0.0120%" height="15" fill="rgb(249,153,27)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="55.1936%" y="453" width="0.0120%" height="15" fill="rgb(227,106,25)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="463.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="55.1936%" y="437" width="0.0120%" height="15" fill="rgb(230,65,29)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="55.1936%" y="421" width="0.0120%" height="15" fill="rgb(221,57,46)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1936%" y="405" width="0.0120%" height="15" fill="rgb(229,161,17)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="415.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1936%" y="389" width="0.0120%" height="15" fill="rgb(222,213,11)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1936%" y="373" width="0.0120%" height="15" fill="rgb(235,35,13)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="55.1936%" y="357" width="0.0120%" height="15" fill="rgb(233,158,34)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="55.1936%" y="341" width="0.0120%" height="15" fill="rgb(215,151,48)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="351.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="55.1936%" y="325" width="0.0120%" height="15" fill="rgb(229,84,14)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="335.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="55.1936%" y="309" width="0.0120%" height="15" fill="rgb(229,68,14)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="55.1936%" y="293" width="0.0120%" height="15" fill="rgb(243,106,26)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="55.1936%" y="277" width="0.0120%" height="15" fill="rgb(206,45,38)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="55.1936%" y="261" width="0.0120%" height="15" fill="rgb(226,6,15)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="55.1936%" y="245" width="0.0120%" height="15" fill="rgb(232,22,54)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="55.1936%" y="229" width="0.0120%" height="15" fill="rgb(229,222,32)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="55.1936%" y="213" width="0.0120%" height="15" fill="rgb(228,62,29)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="55.1936%" y="197" width="0.0120%" height="15" fill="rgb(251,103,34)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="55.1936%" y="181" width="0.0120%" height="15" fill="rgb(233,12,30)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="55.1936%" y="165" width="0.0120%" height="15" fill="rgb(238,52,0)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="175.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="55.1936%" y="149" width="0.0120%" height="15" fill="rgb(223,98,5)" fg:x="4591" fg:w="1"/><text x="55.4436%" y="159.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="55.2056%" y="1653" width="0.0120%" height="15" fill="rgb(228,75,37)" fg:x="4592" fg:w="1"/><text x="55.4556%" y="1663.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="55.2056%" y="1637" width="0.0120%" height="15" fill="rgb(205,115,49)" fg:x="4592" fg:w="1"/><text x="55.4556%" y="1647.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.2056%" y="1621" width="0.0120%" height="15" fill="rgb(250,154,43)" fg:x="4592" fg:w="1"/><text x="55.4556%" y="1631.50"></text></g><g><title>[unknown] (38 samples, 0.46%)</title><rect x="54.7728%" y="1669" width="0.4568%" height="15" fill="rgb(226,43,29)" fg:x="4556" fg:w="38"/><text x="55.0228%" y="1679.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="55.2176%" y="1653" width="0.0120%" height="15" fill="rgb(249,228,39)" fg:x="4593" fg:w="1"/><text x="55.4676%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="55.2176%" y="1637" width="0.0120%" height="15" fill="rgb(216,79,43)" fg:x="4593" fg:w="1"/><text x="55.4676%" y="1647.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.2416%" y="1541" width="0.0120%" height="15" fill="rgb(228,95,12)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1551.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.2416%" y="1525" width="0.0120%" height="15" fill="rgb(249,221,15)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1535.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.01%)</title><rect x="55.2416%" y="1509" width="0.0120%" height="15" fill="rgb(233,34,13)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1519.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.01%)</title><rect x="55.2416%" y="1493" width="0.0120%" height="15" fill="rgb(214,103,39)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="55.2416%" y="1477" width="0.0120%" height="15" fill="rgb(251,126,39)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1487.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="55.2416%" y="1461" width="0.0120%" height="15" fill="rgb(214,216,36)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1471.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="55.2416%" y="1445" width="0.0120%" height="15" fill="rgb(220,221,8)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1455.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="55.2416%" y="1429" width="0.0120%" height="15" fill="rgb(240,216,3)" fg:x="4595" fg:w="1"/><text x="55.4916%" y="1439.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="56.1553%" y="1509" width="0.0240%" height="15" fill="rgb(232,218,17)" fg:x="4671" fg:w="2"/><text x="56.4053%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_reserve (1 samples, 0.01%)</title><rect x="56.1673%" y="1493" width="0.0120%" height="15" fill="rgb(229,163,45)" fg:x="4672" fg:w="1"/><text x="56.4173%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="56.1673%" y="1477" width="0.0120%" height="15" fill="rgb(231,110,42)" fg:x="4672" fg:w="1"/><text x="56.4173%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="56.1673%" y="1461" width="0.0120%" height="15" fill="rgb(208,170,48)" fg:x="4672" fg:w="1"/><text x="56.4173%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="56.1673%" y="1445" width="0.0120%" height="15" fill="rgb(239,116,25)" fg:x="4672" fg:w="1"/><text x="56.4173%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.01%)</title><rect x="56.1673%" y="1429" width="0.0120%" height="15" fill="rgb(219,200,50)" fg:x="4672" fg:w="1"/><text x="56.4173%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="56.3717%" y="1429" width="0.0120%" height="15" fill="rgb(245,200,0)" fg:x="4689" fg:w="1"/><text x="56.6217%" y="1439.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.02%)</title><rect x="56.3837%" y="1381" width="0.0240%" height="15" fill="rgb(245,119,33)" fg:x="4690" fg:w="2"/><text x="56.6337%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.10%)</title><rect x="56.4078%" y="1381" width="0.0962%" height="15" fill="rgb(231,125,12)" fg:x="4692" fg:w="8"/><text x="56.6578%" y="1391.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="56.4559%" y="1365" width="0.0481%" height="15" fill="rgb(216,96,41)" fg:x="4696" fg:w="4"/><text x="56.7059%" y="1375.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="56.4679%" y="1349" width="0.0361%" height="15" fill="rgb(248,43,45)" fg:x="4697" fg:w="3"/><text x="56.7179%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.13%)</title><rect x="56.3837%" y="1429" width="0.1322%" height="15" fill="rgb(217,222,7)" fg:x="4690" fg:w="11"/><text x="56.6337%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.13%)</title><rect x="56.3837%" y="1413" width="0.1322%" height="15" fill="rgb(233,28,6)" fg:x="4690" fg:w="11"/><text x="56.6337%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.13%)</title><rect x="56.3837%" y="1397" width="0.1322%" height="15" fill="rgb(231,218,15)" fg:x="4690" fg:w="11"/><text x="56.6337%" y="1407.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="56.5040%" y="1381" width="0.0120%" height="15" fill="rgb(226,171,48)" fg:x="4700" fg:w="1"/><text x="56.7540%" y="1391.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="56.5040%" y="1365" width="0.0120%" height="15" fill="rgb(235,201,9)" fg:x="4700" fg:w="1"/><text x="56.7540%" y="1375.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="56.5040%" y="1349" width="0.0120%" height="15" fill="rgb(217,80,15)" fg:x="4700" fg:w="1"/><text x="56.7540%" y="1359.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="56.5160%" y="1429" width="0.0240%" height="15" fill="rgb(219,152,8)" fg:x="4701" fg:w="2"/><text x="56.7660%" y="1439.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="56.5160%" y="1413" width="0.0240%" height="15" fill="rgb(243,107,38)" fg:x="4701" fg:w="2"/><text x="56.7660%" y="1423.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.18%)</title><rect x="56.3717%" y="1493" width="0.1803%" height="15" fill="rgb(231,17,5)" fg:x="4689" fg:w="15"/><text x="56.6217%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.18%)</title><rect x="56.3717%" y="1477" width="0.1803%" height="15" fill="rgb(209,25,54)" fg:x="4689" fg:w="15"/><text x="56.6217%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.18%)</title><rect x="56.3717%" y="1461" width="0.1803%" height="15" fill="rgb(219,0,2)" fg:x="4689" fg:w="15"/><text x="56.6217%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.18%)</title><rect x="56.3717%" y="1445" width="0.1803%" height="15" fill="rgb(246,9,5)" fg:x="4689" fg:w="15"/><text x="56.6217%" y="1455.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="56.5400%" y="1429" width="0.0120%" height="15" fill="rgb(226,159,4)" fg:x="4703" fg:w="1"/><text x="56.7900%" y="1439.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as arrayvec::arrayvec_impl::ArrayVecImpl&gt;::set_len (1 samples, 0.01%)</title><rect x="56.5521%" y="1429" width="0.0120%" height="15" fill="rgb(219,175,34)" fg:x="4704" fg:w="1"/><text x="56.8021%" y="1439.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::push (2 samples, 0.02%)</title><rect x="56.5521%" y="1493" width="0.0240%" height="15" fill="rgb(236,10,46)" fg:x="4704" fg:w="2"/><text x="56.8021%" y="1503.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push (2 samples, 0.02%)</title><rect x="56.5521%" y="1477" width="0.0240%" height="15" fill="rgb(240,211,16)" fg:x="4704" fg:w="2"/><text x="56.8021%" y="1487.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (2 samples, 0.02%)</title><rect x="56.5521%" y="1461" width="0.0240%" height="15" fill="rgb(205,3,43)" fg:x="4704" fg:w="2"/><text x="56.8021%" y="1471.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (2 samples, 0.02%)</title><rect x="56.5521%" y="1445" width="0.0240%" height="15" fill="rgb(245,7,22)" fg:x="4704" fg:w="2"/><text x="56.8021%" y="1455.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="56.5641%" y="1429" width="0.0120%" height="15" fill="rgb(239,132,32)" fg:x="4705" fg:w="1"/><text x="56.8141%" y="1439.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (34 samples, 0.41%)</title><rect x="56.1794%" y="1509" width="0.4088%" height="15" fill="rgb(228,202,34)" fg:x="4673" fg:w="34"/><text x="56.4294%" y="1519.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="56.5761%" y="1493" width="0.0120%" height="15" fill="rgb(254,200,22)" fg:x="4706" fg:w="1"/><text x="56.8261%" y="1503.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="56.5761%" y="1477" width="0.0120%" height="15" fill="rgb(219,10,39)" fg:x="4706" fg:w="1"/><text x="56.8261%" y="1487.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="56.5761%" y="1461" width="0.0120%" height="15" fill="rgb(226,210,39)" fg:x="4706" fg:w="1"/><text x="56.8261%" y="1471.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="56.5881%" y="1493" width="0.0240%" height="15" fill="rgb(208,219,16)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1503.50"></text></g><g><title>polars_arrow::array::utf8::mutable_values::&lt;impl core::convert::From&lt;polars_arrow::array::utf8::mutable_values::MutableUtf8ValuesArray&lt;O&gt;&gt; for polars_arrow::array::utf8::Utf8Array&lt;O&gt;&gt;::from (2 samples, 0.02%)</title><rect x="56.5881%" y="1477" width="0.0240%" height="15" fill="rgb(216,158,51)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1487.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="56.5881%" y="1461" width="0.0240%" height="15" fill="rgb(233,14,44)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1471.50"></text></g><g><title>&lt;polars_arrow::buffer::immutable::Buffer&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (2 samples, 0.02%)</title><rect x="56.5881%" y="1445" width="0.0240%" height="15" fill="rgb(237,97,39)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1455.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="56.5881%" y="1429" width="0.0240%" height="15" fill="rgb(218,198,43)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1439.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="56.5881%" y="1413" width="0.0240%" height="15" fill="rgb(231,104,20)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1423.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="56.5881%" y="1397" width="0.0240%" height="15" fill="rgb(254,36,13)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="56.5881%" y="1381" width="0.0240%" height="15" fill="rgb(248,14,50)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="56.5881%" y="1365" width="0.0240%" height="15" fill="rgb(217,107,29)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="56.5881%" y="1349" width="0.0240%" height="15" fill="rgb(251,169,33)" fg:x="4707" fg:w="2"/><text x="56.8381%" y="1359.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="56.6001%" y="1333" width="0.0120%" height="15" fill="rgb(217,108,32)" fg:x="4708" fg:w="1"/><text x="56.8501%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.01%)</title><rect x="56.6122%" y="1493" width="0.0120%" height="15" fill="rgb(219,66,42)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1503.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.01%)</title><rect x="56.6122%" y="1477" width="0.0120%" height="15" fill="rgb(206,180,7)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="56.6122%" y="1461" width="0.0120%" height="15" fill="rgb(208,226,31)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="56.6122%" y="1445" width="0.0120%" height="15" fill="rgb(218,26,49)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="56.6122%" y="1429" width="0.0120%" height="15" fill="rgb(233,197,48)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="56.6122%" y="1413" width="0.0120%" height="15" fill="rgb(252,181,51)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="56.6122%" y="1397" width="0.0120%" height="15" fill="rgb(253,90,19)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="56.6122%" y="1381" width="0.0120%" height="15" fill="rgb(215,171,30)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="56.6122%" y="1365" width="0.0120%" height="15" fill="rgb(214,222,9)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="56.6122%" y="1349" width="0.0120%" height="15" fill="rgb(223,3,22)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="56.6122%" y="1333" width="0.0120%" height="15" fill="rgb(225,196,46)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="56.6122%" y="1317" width="0.0120%" height="15" fill="rgb(209,110,37)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="56.6122%" y="1301" width="0.0120%" height="15" fill="rgb(249,89,12)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1311.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="56.6122%" y="1285" width="0.0120%" height="15" fill="rgb(226,27,33)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="56.6122%" y="1269" width="0.0120%" height="15" fill="rgb(213,82,22)" fg:x="4709" fg:w="1"/><text x="56.8622%" y="1279.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.05%)</title><rect x="56.5881%" y="1509" width="0.0481%" height="15" fill="rgb(248,140,0)" fg:x="4707" fg:w="4"/><text x="56.8381%" y="1519.50"></text></g><g><title>&lt;polars_arrow::buffer::immutable::Buffer&lt;T&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="56.6242%" y="1493" width="0.0120%" height="15" fill="rgb(228,106,3)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1503.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="56.6242%" y="1477" width="0.0120%" height="15" fill="rgb(209,23,37)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="56.6242%" y="1461" width="0.0120%" height="15" fill="rgb(241,93,50)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="56.6242%" y="1445" width="0.0120%" height="15" fill="rgb(253,46,43)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="56.6242%" y="1429" width="0.0120%" height="15" fill="rgb(226,206,43)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="56.6242%" y="1413" width="0.0120%" height="15" fill="rgb(217,54,7)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="56.6242%" y="1397" width="0.0120%" height="15" fill="rgb(223,5,52)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1407.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="56.6242%" y="1381" width="0.0120%" height="15" fill="rgb(206,52,46)" fg:x="4710" fg:w="1"/><text x="56.8742%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="56.6362%" y="1509" width="0.0120%" height="15" fill="rgb(253,136,11)" fg:x="4711" fg:w="1"/><text x="56.8862%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="56.6362%" y="1493" width="0.0120%" height="15" fill="rgb(208,106,33)" fg:x="4711" fg:w="1"/><text x="56.8862%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="56.6362%" y="1477" width="0.0120%" height="15" fill="rgb(206,54,4)" fg:x="4711" fg:w="1"/><text x="56.8862%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="56.6362%" y="1461" width="0.0120%" height="15" fill="rgb(213,3,15)" fg:x="4711" fg:w="1"/><text x="56.8862%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="56.6362%" y="1445" width="0.0120%" height="15" fill="rgb(252,211,39)" fg:x="4711" fg:w="1"/><text x="56.8862%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="56.6482%" y="1509" width="0.0120%" height="15" fill="rgb(223,6,36)" fg:x="4712" fg:w="1"/><text x="56.8982%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="56.6603%" y="1509" width="0.0120%" height="15" fill="rgb(252,169,45)" fg:x="4713" fg:w="1"/><text x="56.9103%" y="1519.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="56.6603%" y="1493" width="0.0120%" height="15" fill="rgb(212,48,26)" fg:x="4713" fg:w="1"/><text x="56.9103%" y="1503.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="56.6603%" y="1477" width="0.0120%" height="15" fill="rgb(251,102,48)" fg:x="4713" fg:w="1"/><text x="56.9103%" y="1487.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="56.6723%" y="1509" width="0.0240%" height="15" fill="rgb(243,208,16)" fg:x="4714" fg:w="2"/><text x="56.9223%" y="1519.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="56.6723%" y="1493" width="0.0240%" height="15" fill="rgb(219,96,24)" fg:x="4714" fg:w="2"/><text x="56.9223%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.01%)</title><rect x="56.6963%" y="1509" width="0.0120%" height="15" fill="rgb(219,33,29)" fg:x="4716" fg:w="1"/><text x="56.9463%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="56.6963%" y="1493" width="0.0120%" height="15" fill="rgb(223,176,5)" fg:x="4716" fg:w="1"/><text x="56.9463%" y="1503.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="56.6963%" y="1477" width="0.0120%" height="15" fill="rgb(228,140,14)" fg:x="4716" fg:w="1"/><text x="56.9463%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="56.6963%" y="1461" width="0.0120%" height="15" fill="rgb(217,179,31)" fg:x="4716" fg:w="1"/><text x="56.9463%" y="1471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="56.6963%" y="1445" width="0.0120%" height="15" fill="rgb(230,9,30)" fg:x="4716" fg:w="1"/><text x="56.9463%" y="1455.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="56.6963%" y="1429" width="0.0120%" height="15" fill="rgb(230,136,20)" fg:x="4716" fg:w="1"/><text x="56.9463%" y="1439.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1 samples, 0.01%)</title><rect x="56.6963%" y="1413" width="0.0120%" height="15" fill="rgb(215,210,22)" fg:x="4716" fg:w="1"/><text x="56.9463%" y="1423.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;K,ahash::random_state::RandomState&gt; as polars_utils::aliases::InitHashMaps&gt;::with_capacity (1 samples, 0.01%)</title><rect x="56.7083%" y="1509" width="0.0120%" height="15" fill="rgb(218,43,5)" fg:x="4717" fg:w="1"/><text x="56.9583%" y="1519.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_capacity_and_hasher (1 samples, 0.01%)</title><rect x="56.7083%" y="1493" width="0.0120%" height="15" fill="rgb(216,11,5)" fg:x="4717" fg:w="1"/><text x="56.9583%" y="1503.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="56.7204%" y="1509" width="0.0120%" height="15" fill="rgb(209,82,29)" fg:x="4718" fg:w="1"/><text x="56.9704%" y="1519.50"></text></g><g><title>&lt;smithereens::Peptidoglycan as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="56.7324%" y="1509" width="0.0120%" height="15" fill="rgb(244,115,12)" fg:x="4719" fg:w="1"/><text x="56.9824%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="56.7444%" y="1509" width="0.0120%" height="15" fill="rgb(222,82,18)" fg:x="4720" fg:w="1"/><text x="56.9944%" y="1519.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="56.7444%" y="1493" width="0.0120%" height="15" fill="rgb(249,227,8)" fg:x="4720" fg:w="1"/><text x="56.9944%" y="1503.50"></text></g><g><title>cfree (9 samples, 0.11%)</title><rect x="56.7564%" y="1413" width="0.1082%" height="15" fill="rgb(253,141,45)" fg:x="4721" fg:w="9"/><text x="57.0064%" y="1423.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="56.7805%" y="1397" width="0.0842%" height="15" fill="rgb(234,184,4)" fg:x="4723" fg:w="7"/><text x="57.0305%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="56.8646%" y="1381" width="0.0240%" height="15" fill="rgb(218,194,23)" fg:x="4730" fg:w="2"/><text x="57.1146%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="56.8646%" y="1365" width="0.0240%" height="15" fill="rgb(235,66,41)" fg:x="4730" fg:w="2"/><text x="57.1146%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="56.8646%" y="1349" width="0.0240%" height="15" fill="rgb(245,217,1)" fg:x="4730" fg:w="2"/><text x="57.1146%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="56.8646%" y="1333" width="0.0240%" height="15" fill="rgb(229,91,1)" fg:x="4730" fg:w="2"/><text x="57.1146%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="56.8646%" y="1317" width="0.0240%" height="15" fill="rgb(207,101,30)" fg:x="4730" fg:w="2"/><text x="57.1146%" y="1327.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="56.8767%" y="1301" width="0.0120%" height="15" fill="rgb(223,82,49)" fg:x="4731" fg:w="1"/><text x="57.1267%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.13%)</title><rect x="56.9007%" y="1253" width="0.1322%" height="15" fill="rgb(218,167,17)" fg:x="4733" fg:w="11"/><text x="57.1507%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.13%)</title><rect x="56.9007%" y="1237" width="0.1322%" height="15" fill="rgb(208,103,14)" fg:x="4733" fg:w="11"/><text x="57.1507%" y="1247.50"></text></g><g><title>cfree (11 samples, 0.13%)</title><rect x="56.9007%" y="1221" width="0.1322%" height="15" fill="rgb(238,20,8)" fg:x="4733" fg:w="11"/><text x="57.1507%" y="1231.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="56.9247%" y="1205" width="0.1082%" height="15" fill="rgb(218,80,54)" fg:x="4735" fg:w="9"/><text x="57.1747%" y="1215.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="57.0089%" y="1189" width="0.0240%" height="15" fill="rgb(240,144,17)" fg:x="4742" fg:w="2"/><text x="57.2589%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="57.0209%" y="1173" width="0.0120%" height="15" fill="rgb(245,27,50)" fg:x="4743" fg:w="1"/><text x="57.2709%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.16%)</title><rect x="56.8887%" y="1365" width="0.1563%" height="15" fill="rgb(251,51,7)" fg:x="4732" fg:w="13"/><text x="57.1387%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (12 samples, 0.14%)</title><rect x="56.9007%" y="1349" width="0.1443%" height="15" fill="rgb(245,217,29)" fg:x="4733" fg:w="12"/><text x="57.1507%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (12 samples, 0.14%)</title><rect x="56.9007%" y="1333" width="0.1443%" height="15" fill="rgb(221,176,29)" fg:x="4733" fg:w="12"/><text x="57.1507%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (12 samples, 0.14%)</title><rect x="56.9007%" y="1317" width="0.1443%" height="15" fill="rgb(212,180,24)" fg:x="4733" fg:w="12"/><text x="57.1507%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (12 samples, 0.14%)</title><rect x="56.9007%" y="1301" width="0.1443%" height="15" fill="rgb(254,24,2)" fg:x="4733" fg:w="12"/><text x="57.1507%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (12 samples, 0.14%)</title><rect x="56.9007%" y="1285" width="0.1443%" height="15" fill="rgb(230,100,2)" fg:x="4733" fg:w="12"/><text x="57.1507%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.14%)</title><rect x="56.9007%" y="1269" width="0.1443%" height="15" fill="rgb(219,142,25)" fg:x="4733" fg:w="12"/><text x="57.1507%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="57.0329%" y="1253" width="0.0120%" height="15" fill="rgb(240,73,43)" fg:x="4744" fg:w="1"/><text x="57.2829%" y="1263.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="57.0329%" y="1237" width="0.0120%" height="15" fill="rgb(214,114,15)" fg:x="4744" fg:w="1"/><text x="57.2829%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (25 samples, 0.30%)</title><rect x="56.8646%" y="1413" width="0.3006%" height="15" fill="rgb(207,130,4)" fg:x="4730" fg:w="25"/><text x="57.1146%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (25 samples, 0.30%)</title><rect x="56.8646%" y="1397" width="0.3006%" height="15" fill="rgb(221,25,40)" fg:x="4730" fg:w="25"/><text x="57.1146%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (23 samples, 0.28%)</title><rect x="56.8887%" y="1381" width="0.2765%" height="15" fill="rgb(241,184,7)" fg:x="4732" fg:w="23"/><text x="57.1387%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (10 samples, 0.12%)</title><rect x="57.0450%" y="1365" width="0.1202%" height="15" fill="rgb(235,159,4)" fg:x="4745" fg:w="10"/><text x="57.2950%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.12%)</title><rect x="57.0450%" y="1349" width="0.1202%" height="15" fill="rgb(214,87,48)" fg:x="4745" fg:w="10"/><text x="57.2950%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.12%)</title><rect x="57.0450%" y="1333" width="0.1202%" height="15" fill="rgb(246,198,24)" fg:x="4745" fg:w="10"/><text x="57.2950%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.12%)</title><rect x="57.0450%" y="1317" width="0.1202%" height="15" fill="rgb(209,66,40)" fg:x="4745" fg:w="10"/><text x="57.2950%" y="1327.50"></text></g><g><title>cfree (9 samples, 0.11%)</title><rect x="57.0570%" y="1301" width="0.1082%" height="15" fill="rgb(233,147,39)" fg:x="4746" fg:w="9"/><text x="57.3070%" y="1311.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="57.0690%" y="1285" width="0.0962%" height="15" fill="rgb(231,145,52)" fg:x="4747" fg:w="8"/><text x="57.3190%" y="1295.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="57.1051%" y="1269" width="0.0601%" height="15" fill="rgb(206,20,26)" fg:x="4750" fg:w="5"/><text x="57.3551%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="57.1532%" y="1253" width="0.0120%" height="15" fill="rgb(238,220,4)" fg:x="4754" fg:w="1"/><text x="57.4032%" y="1263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="57.1892%" y="1333" width="0.0240%" height="15" fill="rgb(252,195,42)" fg:x="4757" fg:w="2"/><text x="57.4392%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.05%)</title><rect x="57.1892%" y="1349" width="0.0481%" height="15" fill="rgb(209,10,6)" fg:x="4757" fg:w="4"/><text x="57.4392%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="57.2133%" y="1333" width="0.0240%" height="15" fill="rgb(229,3,52)" fg:x="4759" fg:w="2"/><text x="57.4633%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.07%)</title><rect x="57.1892%" y="1397" width="0.0721%" height="15" fill="rgb(253,49,37)" fg:x="4757" fg:w="6"/><text x="57.4392%" y="1407.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.07%)</title><rect x="57.1892%" y="1381" width="0.0721%" height="15" fill="rgb(240,103,49)" fg:x="4757" fg:w="6"/><text x="57.4392%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.07%)</title><rect x="57.1892%" y="1365" width="0.0721%" height="15" fill="rgb(250,182,30)" fg:x="4757" fg:w="6"/><text x="57.4392%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="57.2373%" y="1349" width="0.0240%" height="15" fill="rgb(248,8,30)" fg:x="4761" fg:w="2"/><text x="57.4873%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="57.3215%" y="1381" width="0.0120%" height="15" fill="rgb(237,120,30)" fg:x="4768" fg:w="1"/><text x="57.5715%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="57.3215%" y="1365" width="0.0120%" height="15" fill="rgb(221,146,34)" fg:x="4768" fg:w="1"/><text x="57.5715%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="57.3215%" y="1349" width="0.0120%" height="15" fill="rgb(242,55,13)" fg:x="4768" fg:w="1"/><text x="57.5715%" y="1359.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.11%)</title><rect x="57.3335%" y="1381" width="0.1082%" height="15" fill="rgb(242,112,31)" fg:x="4769" fg:w="9"/><text x="57.5835%" y="1391.50"></text></g><g><title>core::ptr::read (8 samples, 0.10%)</title><rect x="57.3455%" y="1365" width="0.0962%" height="15" fill="rgb(249,192,27)" fg:x="4770" fg:w="8"/><text x="57.5955%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="57.5980%" y="1189" width="0.0120%" height="15" fill="rgb(208,204,44)" fg:x="4791" fg:w="1"/><text x="57.8480%" y="1199.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="57.6100%" y="1189" width="0.0120%" height="15" fill="rgb(208,93,54)" fg:x="4792" fg:w="1"/><text x="57.8600%" y="1199.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="57.6100%" y="1173" width="0.0120%" height="15" fill="rgb(242,1,31)" fg:x="4792" fg:w="1"/><text x="57.8600%" y="1183.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="57.6100%" y="1157" width="0.0120%" height="15" fill="rgb(241,83,25)" fg:x="4792" fg:w="1"/><text x="57.8600%" y="1167.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (20 samples, 0.24%)</title><rect x="57.4417%" y="1285" width="0.2404%" height="15" fill="rgb(205,169,50)" fg:x="4778" fg:w="20"/><text x="57.6917%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (16 samples, 0.19%)</title><rect x="57.4898%" y="1269" width="0.1924%" height="15" fill="rgb(239,186,37)" fg:x="4782" fg:w="16"/><text x="57.7398%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_u32 (15 samples, 0.18%)</title><rect x="57.5018%" y="1253" width="0.1803%" height="15" fill="rgb(205,221,10)" fg:x="4783" fg:w="15"/><text x="57.7518%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="57.5499%" y="1237" width="0.1322%" height="15" fill="rgb(218,196,15)" fg:x="4787" fg:w="11"/><text x="57.7999%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="57.5499%" y="1221" width="0.1322%" height="15" fill="rgb(218,196,35)" fg:x="4787" fg:w="11"/><text x="57.7999%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="57.5499%" y="1205" width="0.1322%" height="15" fill="rgb(233,63,24)" fg:x="4787" fg:w="11"/><text x="57.7999%" y="1215.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="57.6220%" y="1189" width="0.0601%" height="15" fill="rgb(225,8,4)" fg:x="4793" fg:w="5"/><text x="57.8720%" y="1199.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="57.7422%" y="1205" width="0.0120%" height="15" fill="rgb(234,105,35)" fg:x="4803" fg:w="1"/><text x="57.9922%" y="1215.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="57.7422%" y="1189" width="0.0120%" height="15" fill="rgb(236,21,32)" fg:x="4803" fg:w="1"/><text x="57.9922%" y="1199.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="57.7422%" y="1173" width="0.0120%" height="15" fill="rgb(228,109,6)" fg:x="4803" fg:w="1"/><text x="57.9922%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.07%)</title><rect x="57.7543%" y="1205" width="0.0721%" height="15" fill="rgb(229,215,31)" fg:x="4804" fg:w="6"/><text x="58.0043%" y="1215.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="57.8024%" y="1189" width="0.0240%" height="15" fill="rgb(221,52,54)" fg:x="4808" fg:w="2"/><text x="58.0524%" y="1199.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (37 samples, 0.44%)</title><rect x="57.4417%" y="1301" width="0.4448%" height="15" fill="rgb(252,129,43)" fg:x="4778" fg:w="37"/><text x="57.6917%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.20%)</title><rect x="57.6821%" y="1285" width="0.2044%" height="15" fill="rgb(248,183,27)" fg:x="4798" fg:w="17"/><text x="57.9321%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.20%)</title><rect x="57.6821%" y="1269" width="0.2044%" height="15" fill="rgb(250,0,22)" fg:x="4798" fg:w="17"/><text x="57.9321%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (17 samples, 0.20%)</title><rect x="57.6821%" y="1253" width="0.2044%" height="15" fill="rgb(213,166,10)" fg:x="4798" fg:w="17"/><text x="57.9321%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (17 samples, 0.20%)</title><rect x="57.6821%" y="1237" width="0.2044%" height="15" fill="rgb(207,163,36)" fg:x="4798" fg:w="17"/><text x="57.9321%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (17 samples, 0.20%)</title><rect x="57.6821%" y="1221" width="0.2044%" height="15" fill="rgb(208,122,22)" fg:x="4798" fg:w="17"/><text x="57.9321%" y="1231.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="57.8264%" y="1205" width="0.0601%" height="15" fill="rgb(207,104,49)" fg:x="4810" fg:w="5"/><text x="58.0764%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="57.8745%" y="1189" width="0.0120%" height="15" fill="rgb(248,211,50)" fg:x="4814" fg:w="1"/><text x="58.1245%" y="1199.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="57.8985%" y="1205" width="0.0240%" height="15" fill="rgb(217,13,45)" fg:x="4816" fg:w="2"/><text x="58.1485%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.04%)</title><rect x="57.8985%" y="1221" width="0.0361%" height="15" fill="rgb(211,216,49)" fg:x="4816" fg:w="3"/><text x="58.1485%" y="1231.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="57.9226%" y="1205" width="0.0120%" height="15" fill="rgb(221,58,53)" fg:x="4818" fg:w="1"/><text x="58.1726%" y="1215.50"></text></g><g><title>core::hash::Hash::hash_slice (46 samples, 0.55%)</title><rect x="57.4417%" y="1333" width="0.5530%" height="15" fill="rgb(220,112,41)" fg:x="4778" fg:w="46"/><text x="57.6917%" y="1343.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (46 samples, 0.55%)</title><rect x="57.4417%" y="1317" width="0.5530%" height="15" fill="rgb(236,38,28)" fg:x="4778" fg:w="46"/><text x="57.6917%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (9 samples, 0.11%)</title><rect x="57.8865%" y="1301" width="0.1082%" height="15" fill="rgb(227,195,22)" fg:x="4815" fg:w="9"/><text x="58.1365%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_isize (9 samples, 0.11%)</title><rect x="57.8865%" y="1285" width="0.1082%" height="15" fill="rgb(214,55,33)" fg:x="4815" fg:w="9"/><text x="58.1365%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_usize (9 samples, 0.11%)</title><rect x="57.8865%" y="1269" width="0.1082%" height="15" fill="rgb(248,80,13)" fg:x="4815" fg:w="9"/><text x="58.1365%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="57.8865%" y="1253" width="0.1082%" height="15" fill="rgb(238,52,6)" fg:x="4815" fg:w="9"/><text x="58.1365%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="57.8865%" y="1237" width="0.1082%" height="15" fill="rgb(224,198,47)" fg:x="4815" fg:w="9"/><text x="58.1365%" y="1247.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="57.9346%" y="1221" width="0.0601%" height="15" fill="rgb(233,171,20)" fg:x="4819" fg:w="5"/><text x="58.1846%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="57.9827%" y="1205" width="0.0120%" height="15" fill="rgb(241,30,25)" fg:x="4823" fg:w="1"/><text x="58.2327%" y="1215.50"></text></g><g><title>core::cmp::min (2 samples, 0.02%)</title><rect x="58.0668%" y="1269" width="0.0240%" height="15" fill="rgb(207,171,38)" fg:x="4830" fg:w="2"/><text x="58.3168%" y="1279.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.02%)</title><rect x="58.0668%" y="1253" width="0.0240%" height="15" fill="rgb(234,70,1)" fg:x="4830" fg:w="2"/><text x="58.3168%" y="1263.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.02%)</title><rect x="58.0668%" y="1237" width="0.0240%" height="15" fill="rgb(232,178,18)" fg:x="4830" fg:w="2"/><text x="58.3168%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (59 samples, 0.71%)</title><rect x="57.4417%" y="1365" width="0.7093%" height="15" fill="rgb(241,78,40)" fg:x="4778" fg:w="59"/><text x="57.6917%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (59 samples, 0.71%)</title><rect x="57.4417%" y="1349" width="0.7093%" height="15" fill="rgb(222,35,25)" fg:x="4778" fg:w="59"/><text x="57.6917%" y="1359.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (13 samples, 0.16%)</title><rect x="57.9947%" y="1333" width="0.1563%" height="15" fill="rgb(207,92,16)" fg:x="4824" fg:w="13"/><text x="58.2447%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.16%)</title><rect x="57.9947%" y="1317" width="0.1563%" height="15" fill="rgb(216,59,51)" fg:x="4824" fg:w="13"/><text x="58.2447%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.16%)</title><rect x="57.9947%" y="1301" width="0.1563%" height="15" fill="rgb(213,80,28)" fg:x="4824" fg:w="13"/><text x="58.2447%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.16%)</title><rect x="57.9947%" y="1285" width="0.1563%" height="15" fill="rgb(220,93,7)" fg:x="4824" fg:w="13"/><text x="58.2447%" y="1295.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="58.0909%" y="1269" width="0.0601%" height="15" fill="rgb(225,24,44)" fg:x="4832" fg:w="5"/><text x="58.3409%" y="1279.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.04%)</title><rect x="58.4275%" y="1237" width="0.0361%" height="15" fill="rgb(243,74,40)" fg:x="4860" fg:w="3"/><text x="58.6775%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.06%)</title><rect x="58.4155%" y="1253" width="0.0601%" height="15" fill="rgb(228,39,7)" fg:x="4859" fg:w="5"/><text x="58.6655%" y="1263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="58.4636%" y="1237" width="0.0120%" height="15" fill="rgb(227,79,8)" fg:x="4863" fg:w="1"/><text x="58.7136%" y="1247.50"></text></g><g><title>core::cmp::min (3 samples, 0.04%)</title><rect x="58.4756%" y="1253" width="0.0361%" height="15" fill="rgb(236,58,11)" fg:x="4864" fg:w="3"/><text x="58.7256%" y="1263.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.04%)</title><rect x="58.4756%" y="1237" width="0.0361%" height="15" fill="rgb(249,63,35)" fg:x="4864" fg:w="3"/><text x="58.7256%" y="1247.50"></text></g><g><title>core::cmp::min_by (3 samples, 0.04%)</title><rect x="58.4756%" y="1221" width="0.0361%" height="15" fill="rgb(252,114,16)" fg:x="4864" fg:w="3"/><text x="58.7256%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (43 samples, 0.52%)</title><rect x="58.1871%" y="1301" width="0.5170%" height="15" fill="rgb(254,151,24)" fg:x="4840" fg:w="43"/><text x="58.4371%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (42 samples, 0.50%)</title><rect x="58.1991%" y="1285" width="0.5049%" height="15" fill="rgb(253,54,39)" fg:x="4841" fg:w="42"/><text x="58.4491%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (42 samples, 0.50%)</title><rect x="58.1991%" y="1269" width="0.5049%" height="15" fill="rgb(243,25,45)" fg:x="4841" fg:w="42"/><text x="58.4491%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 0.19%)</title><rect x="58.5117%" y="1253" width="0.1924%" height="15" fill="rgb(234,134,9)" fg:x="4867" fg:w="16"/><text x="58.7617%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="58.6800%" y="1237" width="0.0240%" height="15" fill="rgb(227,166,31)" fg:x="4881" fg:w="2"/><text x="58.9300%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (45 samples, 0.54%)</title><rect x="58.1750%" y="1333" width="0.5410%" height="15" fill="rgb(245,143,41)" fg:x="4839" fg:w="45"/><text x="58.4250%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_u32 (45 samples, 0.54%)</title><rect x="58.1750%" y="1317" width="0.5410%" height="15" fill="rgb(238,181,32)" fg:x="4839" fg:w="45"/><text x="58.4250%" y="1327.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="58.7040%" y="1301" width="0.0120%" height="15" fill="rgb(224,113,18)" fg:x="4883" fg:w="1"/><text x="58.9540%" y="1311.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (54 samples, 0.65%)</title><rect x="58.1510%" y="1349" width="0.6492%" height="15" fill="rgb(240,229,28)" fg:x="4837" fg:w="54"/><text x="58.4010%" y="1359.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (7 samples, 0.08%)</title><rect x="58.7160%" y="1333" width="0.0842%" height="15" fill="rgb(250,185,3)" fg:x="4884" fg:w="7"/><text x="58.9660%" y="1343.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (4 samples, 0.05%)</title><rect x="58.7521%" y="1317" width="0.0481%" height="15" fill="rgb(212,59,25)" fg:x="4887" fg:w="4"/><text x="59.0021%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="58.8483%" y="1269" width="0.0120%" height="15" fill="rgb(221,87,20)" fg:x="4895" fg:w="1"/><text x="59.0983%" y="1279.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="58.8603%" y="1269" width="0.0120%" height="15" fill="rgb(213,74,28)" fg:x="4896" fg:w="1"/><text x="59.1103%" y="1279.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="58.8603%" y="1253" width="0.0120%" height="15" fill="rgb(224,132,34)" fg:x="4896" fg:w="1"/><text x="59.1103%" y="1263.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="58.8603%" y="1237" width="0.0120%" height="15" fill="rgb(222,101,24)" fg:x="4896" fg:w="1"/><text x="59.1103%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_u8 (9 samples, 0.11%)</title><rect x="58.8723%" y="1269" width="0.1082%" height="15" fill="rgb(254,142,4)" fg:x="4897" fg:w="9"/><text x="59.1223%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.04%)</title><rect x="58.9445%" y="1253" width="0.0361%" height="15" fill="rgb(230,229,49)" fg:x="4903" fg:w="3"/><text x="59.1945%" y="1263.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (77 samples, 0.93%)</title><rect x="58.1510%" y="1365" width="0.9257%" height="15" fill="rgb(238,70,47)" fg:x="4837" fg:w="77"/><text x="58.4010%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (23 samples, 0.28%)</title><rect x="58.8002%" y="1349" width="0.2765%" height="15" fill="rgb(231,160,17)" fg:x="4891" fg:w="23"/><text x="59.0502%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (23 samples, 0.28%)</title><rect x="58.8002%" y="1333" width="0.2765%" height="15" fill="rgb(218,68,53)" fg:x="4891" fg:w="23"/><text x="59.0502%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (23 samples, 0.28%)</title><rect x="58.8002%" y="1317" width="0.2765%" height="15" fill="rgb(236,111,10)" fg:x="4891" fg:w="23"/><text x="59.0502%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (23 samples, 0.28%)</title><rect x="58.8002%" y="1301" width="0.2765%" height="15" fill="rgb(224,34,41)" fg:x="4891" fg:w="23"/><text x="59.0502%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (23 samples, 0.28%)</title><rect x="58.8002%" y="1285" width="0.2765%" height="15" fill="rgb(241,118,19)" fg:x="4891" fg:w="23"/><text x="59.0502%" y="1295.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.10%)</title><rect x="58.9805%" y="1269" width="0.0962%" height="15" fill="rgb(238,129,25)" fg:x="4906" fg:w="8"/><text x="59.2305%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="59.0527%" y="1253" width="0.0240%" height="15" fill="rgb(238,22,31)" fg:x="4912" fg:w="2"/><text x="59.3027%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="59.1007%" y="1301" width="0.0120%" height="15" fill="rgb(222,174,48)" fg:x="4916" fg:w="1"/><text x="59.3507%" y="1311.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (140 samples, 1.68%)</title><rect x="57.4417%" y="1381" width="1.6831%" height="15" fill="rgb(206,152,40)" fg:x="4778" fg:w="140"/><text x="57.6917%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.05%)</title><rect x="59.0767%" y="1365" width="0.0481%" height="15" fill="rgb(218,99,54)" fg:x="4914" fg:w="4"/><text x="59.3267%" y="1375.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.05%)</title><rect x="59.0767%" y="1349" width="0.0481%" height="15" fill="rgb(220,174,26)" fg:x="4914" fg:w="4"/><text x="59.3267%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="59.0767%" y="1333" width="0.0481%" height="15" fill="rgb(245,116,9)" fg:x="4914" fg:w="4"/><text x="59.3267%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="59.0767%" y="1317" width="0.0481%" height="15" fill="rgb(209,72,35)" fg:x="4914" fg:w="4"/><text x="59.3267%" y="1327.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="59.1128%" y="1301" width="0.0120%" height="15" fill="rgb(226,126,21)" fg:x="4917" fg:w="1"/><text x="59.3628%" y="1311.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (1 samples, 0.01%)</title><rect x="59.1368%" y="1333" width="0.0120%" height="15" fill="rgb(227,192,1)" fg:x="4919" fg:w="1"/><text x="59.3868%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="59.1368%" y="1317" width="0.0120%" height="15" fill="rgb(237,180,29)" fg:x="4919" fg:w="1"/><text x="59.3868%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.07%)</title><rect x="59.1488%" y="1333" width="0.0721%" height="15" fill="rgb(230,197,35)" fg:x="4920" fg:w="6"/><text x="59.3988%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="59.2210%" y="1333" width="0.0120%" height="15" fill="rgb(246,193,31)" fg:x="4926" fg:w="1"/><text x="59.4710%" y="1343.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.2210%" y="1317" width="0.0120%" height="15" fill="rgb(241,36,4)" fg:x="4926" fg:w="1"/><text x="59.4710%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="59.2210%" y="1301" width="0.0120%" height="15" fill="rgb(241,130,17)" fg:x="4926" fg:w="1"/><text x="59.4710%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (14 samples, 0.17%)</title><rect x="59.1248%" y="1381" width="0.1683%" height="15" fill="rgb(206,137,32)" fg:x="4918" fg:w="14"/><text x="59.3748%" y="1391.50"></text></g><g><title>alloc::slice::stable_sort (14 samples, 0.17%)</title><rect x="59.1248%" y="1365" width="0.1683%" height="15" fill="rgb(237,228,51)" fg:x="4918" fg:w="14"/><text x="59.3748%" y="1375.50"></text></g><g><title>core::slice::sort::insert_tail (14 samples, 0.17%)</title><rect x="59.1248%" y="1349" width="0.1683%" height="15" fill="rgb(243,6,42)" fg:x="4918" fg:w="14"/><text x="59.3748%" y="1359.50"></text></g><g><title>core::ptr::read (5 samples, 0.06%)</title><rect x="59.2330%" y="1333" width="0.0601%" height="15" fill="rgb(251,74,28)" fg:x="4927" fg:w="5"/><text x="59.4830%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="59.3171%" y="1173" width="0.0240%" height="15" fill="rgb(218,20,49)" fg:x="4934" fg:w="2"/><text x="59.5671%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="59.3171%" y="1157" width="0.0240%" height="15" fill="rgb(238,28,14)" fg:x="4934" fg:w="2"/><text x="59.5671%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="59.3171%" y="1141" width="0.0240%" height="15" fill="rgb(229,40,46)" fg:x="4934" fg:w="2"/><text x="59.5671%" y="1151.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="59.3171%" y="1125" width="0.0240%" height="15" fill="rgb(244,195,20)" fg:x="4934" fg:w="2"/><text x="59.5671%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="59.3171%" y="1221" width="0.0361%" height="15" fill="rgb(253,56,35)" fg:x="4934" fg:w="3"/><text x="59.5671%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="59.3171%" y="1205" width="0.0361%" height="15" fill="rgb(210,149,44)" fg:x="4934" fg:w="3"/><text x="59.5671%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="59.3171%" y="1189" width="0.0361%" height="15" fill="rgb(240,135,12)" fg:x="4934" fg:w="3"/><text x="59.5671%" y="1199.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="59.3412%" y="1173" width="0.0120%" height="15" fill="rgb(251,24,50)" fg:x="4936" fg:w="1"/><text x="59.5912%" y="1183.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="59.3412%" y="1157" width="0.0120%" height="15" fill="rgb(243,200,47)" fg:x="4936" fg:w="1"/><text x="59.5912%" y="1167.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="59.3171%" y="1317" width="0.0481%" height="15" fill="rgb(224,166,26)" fg:x="4934" fg:w="4"/><text x="59.5671%" y="1327.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="59.3171%" y="1301" width="0.0481%" height="15" fill="rgb(233,0,47)" fg:x="4934" fg:w="4"/><text x="59.5671%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="59.3171%" y="1285" width="0.0481%" height="15" fill="rgb(253,80,5)" fg:x="4934" fg:w="4"/><text x="59.5671%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="59.3171%" y="1269" width="0.0481%" height="15" fill="rgb(214,133,25)" fg:x="4934" fg:w="4"/><text x="59.5671%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="59.3171%" y="1253" width="0.0481%" height="15" fill="rgb(209,27,14)" fg:x="4934" fg:w="4"/><text x="59.5671%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="59.3171%" y="1237" width="0.0481%" height="15" fill="rgb(219,102,51)" fg:x="4934" fg:w="4"/><text x="59.5671%" y="1247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="59.3532%" y="1221" width="0.0120%" height="15" fill="rgb(237,18,16)" fg:x="4937" fg:w="1"/><text x="59.6032%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="59.3652%" y="1317" width="0.0361%" height="15" fill="rgb(241,85,17)" fg:x="4938" fg:w="3"/><text x="59.6152%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="59.3652%" y="1301" width="0.0361%" height="15" fill="rgb(236,90,42)" fg:x="4938" fg:w="3"/><text x="59.6152%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="59.3652%" y="1285" width="0.0361%" height="15" fill="rgb(249,57,21)" fg:x="4938" fg:w="3"/><text x="59.6152%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="59.3652%" y="1269" width="0.0361%" height="15" fill="rgb(243,12,36)" fg:x="4938" fg:w="3"/><text x="59.6152%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="59.3652%" y="1253" width="0.0361%" height="15" fill="rgb(253,128,47)" fg:x="4938" fg:w="3"/><text x="59.6152%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="59.3652%" y="1237" width="0.0361%" height="15" fill="rgb(207,33,20)" fg:x="4938" fg:w="3"/><text x="59.6152%" y="1247.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="59.3652%" y="1221" width="0.0361%" height="15" fill="rgb(233,215,35)" fg:x="4938" fg:w="3"/><text x="59.6152%" y="1231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="59.3893%" y="1205" width="0.0120%" height="15" fill="rgb(249,188,52)" fg:x="4940" fg:w="1"/><text x="59.6393%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="59.3893%" y="1189" width="0.0120%" height="15" fill="rgb(225,12,32)" fg:x="4940" fg:w="1"/><text x="59.6393%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.13%)</title><rect x="59.2931%" y="1381" width="0.1322%" height="15" fill="rgb(247,98,14)" fg:x="4932" fg:w="11"/><text x="59.5431%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.13%)</title><rect x="59.2931%" y="1365" width="0.1322%" height="15" fill="rgb(247,219,48)" fg:x="4932" fg:w="11"/><text x="59.5431%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.13%)</title><rect x="59.2931%" y="1349" width="0.1322%" height="15" fill="rgb(253,60,48)" fg:x="4932" fg:w="11"/><text x="59.5431%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.13%)</title><rect x="59.2931%" y="1333" width="0.1322%" height="15" fill="rgb(245,15,52)" fg:x="4932" fg:w="11"/><text x="59.5431%" y="1343.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="59.4013%" y="1317" width="0.0240%" height="15" fill="rgb(220,133,28)" fg:x="4941" fg:w="2"/><text x="59.6513%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="59.4253%" y="1349" width="0.0120%" height="15" fill="rgb(217,180,4)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1359.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.4253%" y="1333" width="0.0120%" height="15" fill="rgb(251,24,1)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="59.4253%" y="1317" width="0.0120%" height="15" fill="rgb(212,185,49)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.4253%" y="1301" width="0.0120%" height="15" fill="rgb(215,175,22)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="59.4253%" y="1285" width="0.0120%" height="15" fill="rgb(250,205,14)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="59.4253%" y="1269" width="0.0120%" height="15" fill="rgb(225,211,22)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1279.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="59.4253%" y="1253" width="0.0120%" height="15" fill="rgb(251,179,42)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1263.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="59.4253%" y="1237" width="0.0120%" height="15" fill="rgb(208,216,51)" fg:x="4943" fg:w="1"/><text x="59.6753%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="59.4253%" y="1381" width="0.0240%" height="15" fill="rgb(235,36,11)" fg:x="4943" fg:w="2"/><text x="59.6753%" y="1391.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="59.4253%" y="1365" width="0.0240%" height="15" fill="rgb(213,189,28)" fg:x="4943" fg:w="2"/><text x="59.6753%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="59.4374%" y="1349" width="0.0120%" height="15" fill="rgb(227,203,42)" fg:x="4944" fg:w="1"/><text x="59.6874%" y="1359.50"></text></g><g><title>hashbrown::map::make_hash (192 samples, 2.31%)</title><rect x="57.1652%" y="1413" width="2.3082%" height="15" fill="rgb(244,72,36)" fg:x="4755" fg:w="192"/><text x="57.4152%" y="1423.50">h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (184 samples, 2.21%)</title><rect x="57.2614%" y="1397" width="2.2121%" height="15" fill="rgb(213,53,17)" fg:x="4763" fg:w="184"/><text x="57.5114%" y="1407.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="59.4494%" y="1381" width="0.0240%" height="15" fill="rgb(207,167,3)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="59.4494%" y="1365" width="0.0240%" height="15" fill="rgb(216,98,30)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="59.4494%" y="1349" width="0.0240%" height="15" fill="rgb(236,123,15)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="59.4494%" y="1333" width="0.0240%" height="15" fill="rgb(248,81,50)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="59.4494%" y="1317" width="0.0240%" height="15" fill="rgb(214,120,4)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="59.4494%" y="1301" width="0.0240%" height="15" fill="rgb(208,179,34)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1311.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="59.4494%" y="1285" width="0.0240%" height="15" fill="rgb(227,140,7)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1295.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="59.4494%" y="1269" width="0.0240%" height="15" fill="rgb(214,22,6)" fg:x="4945" fg:w="2"/><text x="59.6994%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="59.4614%" y="1253" width="0.0120%" height="15" fill="rgb(207,137,27)" fg:x="4946" fg:w="1"/><text x="59.7114%" y="1263.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="59.5456%" y="1285" width="0.0240%" height="15" fill="rgb(210,8,46)" fg:x="4953" fg:w="2"/><text x="59.7956%" y="1295.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="59.5456%" y="1269" width="0.0240%" height="15" fill="rgb(240,16,54)" fg:x="4953" fg:w="2"/><text x="59.7956%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="59.6057%" y="1269" width="0.0120%" height="15" fill="rgb(211,209,29)" fg:x="4958" fg:w="1"/><text x="59.8557%" y="1279.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="59.6057%" y="1253" width="0.0120%" height="15" fill="rgb(226,228,24)" fg:x="4958" fg:w="1"/><text x="59.8557%" y="1263.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="59.6057%" y="1237" width="0.0120%" height="15" fill="rgb(222,84,9)" fg:x="4958" fg:w="1"/><text x="59.8557%" y="1247.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="59.6057%" y="1221" width="0.0120%" height="15" fill="rgb(234,203,30)" fg:x="4958" fg:w="1"/><text x="59.8557%" y="1231.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (2 samples, 0.02%)</title><rect x="59.6177%" y="1269" width="0.0240%" height="15" fill="rgb(238,109,14)" fg:x="4959" fg:w="2"/><text x="59.8677%" y="1279.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.02%)</title><rect x="59.6177%" y="1253" width="0.0240%" height="15" fill="rgb(233,206,34)" fg:x="4959" fg:w="2"/><text x="59.8677%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.05%)</title><rect x="59.6417%" y="1269" width="0.0481%" height="15" fill="rgb(220,167,47)" fg:x="4961" fg:w="4"/><text x="59.8917%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="59.6898%" y="1269" width="0.0240%" height="15" fill="rgb(238,105,10)" fg:x="4965" fg:w="2"/><text x="59.9398%" y="1279.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="59.6898%" y="1253" width="0.0240%" height="15" fill="rgb(213,227,17)" fg:x="4965" fg:w="2"/><text x="59.9398%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="59.6898%" y="1237" width="0.0240%" height="15" fill="rgb(217,132,38)" fg:x="4965" fg:w="2"/><text x="59.9398%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (23 samples, 0.28%)</title><rect x="59.4734%" y="1317" width="0.2765%" height="15" fill="rgb(242,146,4)" fg:x="4947" fg:w="23"/><text x="59.7234%" y="1327.50"></text></g><g><title>alloc::slice::stable_sort (23 samples, 0.28%)</title><rect x="59.4734%" y="1301" width="0.2765%" height="15" fill="rgb(212,61,9)" fg:x="4947" fg:w="23"/><text x="59.7234%" y="1311.50"></text></g><g><title>core::slice::sort::insert_tail (15 samples, 0.18%)</title><rect x="59.5696%" y="1285" width="0.1803%" height="15" fill="rgb(247,126,22)" fg:x="4955" fg:w="15"/><text x="59.8196%" y="1295.50"></text></g><g><title>core::ptr::read (3 samples, 0.04%)</title><rect x="59.7139%" y="1269" width="0.0361%" height="15" fill="rgb(220,196,2)" fg:x="4967" fg:w="3"/><text x="59.9639%" y="1279.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="59.7499%" y="1253" width="0.0240%" height="15" fill="rgb(208,46,4)" fg:x="4970" fg:w="2"/><text x="59.9999%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="59.8101%" y="1237" width="0.0120%" height="15" fill="rgb(252,104,46)" fg:x="4975" fg:w="1"/><text x="60.0601%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="59.8101%" y="1221" width="0.0120%" height="15" fill="rgb(237,152,48)" fg:x="4975" fg:w="1"/><text x="60.0601%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="59.8822%" y="1141" width="0.0120%" height="15" fill="rgb(221,59,37)" fg:x="4981" fg:w="1"/><text x="60.1322%" y="1151.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="59.8942%" y="1141" width="0.0120%" height="15" fill="rgb(209,202,51)" fg:x="4982" fg:w="1"/><text x="60.1442%" y="1151.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (5 samples, 0.06%)</title><rect x="59.8581%" y="1157" width="0.0601%" height="15" fill="rgb(228,81,30)" fg:x="4979" fg:w="5"/><text x="60.1081%" y="1167.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (1 samples, 0.01%)</title><rect x="59.9062%" y="1141" width="0.0120%" height="15" fill="rgb(227,42,39)" fg:x="4983" fg:w="1"/><text x="60.1562%" y="1151.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (17 samples, 0.20%)</title><rect x="59.8581%" y="1173" width="0.2044%" height="15" fill="rgb(221,26,2)" fg:x="4979" fg:w="17"/><text x="60.1081%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.14%)</title><rect x="59.9182%" y="1157" width="0.1443%" height="15" fill="rgb(254,61,31)" fg:x="4984" fg:w="12"/><text x="60.1682%" y="1167.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (11 samples, 0.13%)</title><rect x="59.9303%" y="1141" width="0.1322%" height="15" fill="rgb(222,173,38)" fg:x="4985" fg:w="11"/><text x="60.1803%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.13%)</title><rect x="59.9303%" y="1125" width="0.1322%" height="15" fill="rgb(218,50,12)" fg:x="4985" fg:w="11"/><text x="60.1803%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.13%)</title><rect x="59.9303%" y="1109" width="0.1322%" height="15" fill="rgb(223,88,40)" fg:x="4985" fg:w="11"/><text x="60.1803%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.13%)</title><rect x="59.9303%" y="1093" width="0.1322%" height="15" fill="rgb(237,54,19)" fg:x="4985" fg:w="11"/><text x="60.1803%" y="1103.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="59.9543%" y="1077" width="0.1082%" height="15" fill="rgb(251,129,25)" fg:x="4987" fg:w="9"/><text x="60.2043%" y="1087.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="60.1226%" y="997" width="0.0120%" height="15" fill="rgb(238,97,19)" fg:x="5001" fg:w="1"/><text x="60.3726%" y="1007.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="60.0866%" y="1013" width="0.0721%" height="15" fill="rgb(240,169,18)" fg:x="4998" fg:w="6"/><text x="60.3366%" y="1023.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (2 samples, 0.02%)</title><rect x="60.1346%" y="997" width="0.0240%" height="15" fill="rgb(230,187,49)" fg:x="5002" fg:w="2"/><text x="60.3846%" y="1007.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (36 samples, 0.43%)</title><rect x="59.7499%" y="1317" width="0.4328%" height="15" fill="rgb(209,44,26)" fg:x="4970" fg:w="36"/><text x="59.9999%" y="1327.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (36 samples, 0.43%)</title><rect x="59.7499%" y="1301" width="0.4328%" height="15" fill="rgb(244,0,6)" fg:x="4970" fg:w="36"/><text x="59.9999%" y="1311.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (36 samples, 0.43%)</title><rect x="59.7499%" y="1285" width="0.4328%" height="15" fill="rgb(248,18,21)" fg:x="4970" fg:w="36"/><text x="59.9999%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (36 samples, 0.43%)</title><rect x="59.7499%" y="1269" width="0.4328%" height="15" fill="rgb(245,180,19)" fg:x="4970" fg:w="36"/><text x="59.9999%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.41%)</title><rect x="59.7740%" y="1253" width="0.4088%" height="15" fill="rgb(252,118,36)" fg:x="4972" fg:w="34"/><text x="60.0240%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (30 samples, 0.36%)</title><rect x="59.8221%" y="1237" width="0.3607%" height="15" fill="rgb(210,224,19)" fg:x="4976" fg:w="30"/><text x="60.0721%" y="1247.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (30 samples, 0.36%)</title><rect x="59.8221%" y="1221" width="0.3607%" height="15" fill="rgb(218,30,24)" fg:x="4976" fg:w="30"/><text x="60.0721%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (30 samples, 0.36%)</title><rect x="59.8221%" y="1205" width="0.3607%" height="15" fill="rgb(219,75,50)" fg:x="4976" fg:w="30"/><text x="60.0721%" y="1215.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (30 samples, 0.36%)</title><rect x="59.8221%" y="1189" width="0.3607%" height="15" fill="rgb(234,72,50)" fg:x="4976" fg:w="30"/><text x="60.0721%" y="1199.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (10 samples, 0.12%)</title><rect x="60.0625%" y="1173" width="0.1202%" height="15" fill="rgb(219,100,48)" fg:x="4996" fg:w="10"/><text x="60.3125%" y="1183.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.12%)</title><rect x="60.0625%" y="1157" width="0.1202%" height="15" fill="rgb(253,5,41)" fg:x="4996" fg:w="10"/><text x="60.3125%" y="1167.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.12%)</title><rect x="60.0625%" y="1141" width="0.1202%" height="15" fill="rgb(247,181,11)" fg:x="4996" fg:w="10"/><text x="60.3125%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 0.10%)</title><rect x="60.0866%" y="1125" width="0.0962%" height="15" fill="rgb(222,223,25)" fg:x="4998" fg:w="8"/><text x="60.3366%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.10%)</title><rect x="60.0866%" y="1109" width="0.0962%" height="15" fill="rgb(214,198,28)" fg:x="4998" fg:w="8"/><text x="60.3366%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (8 samples, 0.10%)</title><rect x="60.0866%" y="1093" width="0.0962%" height="15" fill="rgb(230,46,43)" fg:x="4998" fg:w="8"/><text x="60.3366%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (8 samples, 0.10%)</title><rect x="60.0866%" y="1077" width="0.0962%" height="15" fill="rgb(233,65,53)" fg:x="4998" fg:w="8"/><text x="60.3366%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.10%)</title><rect x="60.0866%" y="1061" width="0.0962%" height="15" fill="rgb(221,121,27)" fg:x="4998" fg:w="8"/><text x="60.3366%" y="1071.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (8 samples, 0.10%)</title><rect x="60.0866%" y="1045" width="0.0962%" height="15" fill="rgb(247,70,47)" fg:x="4998" fg:w="8"/><text x="60.3366%" y="1055.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (8 samples, 0.10%)</title><rect x="60.0866%" y="1029" width="0.0962%" height="15" fill="rgb(228,85,35)" fg:x="4998" fg:w="8"/><text x="60.3366%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="60.1587%" y="1013" width="0.0240%" height="15" fill="rgb(209,50,18)" fg:x="5004" fg:w="2"/><text x="60.4087%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="60.1587%" y="997" width="0.0240%" height="15" fill="rgb(250,19,35)" fg:x="5004" fg:w="2"/><text x="60.4087%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="60.1587%" y="981" width="0.0240%" height="15" fill="rgb(253,107,29)" fg:x="5004" fg:w="2"/><text x="60.4087%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="60.1587%" y="965" width="0.0240%" height="15" fill="rgb(252,179,29)" fg:x="5004" fg:w="2"/><text x="60.4087%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="60.1587%" y="949" width="0.0240%" height="15" fill="rgb(238,194,6)" fg:x="5004" fg:w="2"/><text x="60.4087%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="60.1587%" y="933" width="0.0240%" height="15" fill="rgb(238,164,29)" fg:x="5004" fg:w="2"/><text x="60.4087%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="60.2549%" y="1093" width="0.0120%" height="15" fill="rgb(224,25,9)" fg:x="5012" fg:w="1"/><text x="60.5049%" y="1103.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="60.2669%" y="1093" width="0.0120%" height="15" fill="rgb(244,153,23)" fg:x="5013" fg:w="1"/><text x="60.5169%" y="1103.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="60.2669%" y="1077" width="0.0120%" height="15" fill="rgb(212,203,14)" fg:x="5013" fg:w="1"/><text x="60.5169%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="60.2789%" y="1093" width="0.0721%" height="15" fill="rgb(220,164,20)" fg:x="5014" fg:w="6"/><text x="60.5289%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="60.2789%" y="1077" width="0.0721%" height="15" fill="rgb(222,203,48)" fg:x="5014" fg:w="6"/><text x="60.5289%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="60.2789%" y="1061" width="0.0721%" height="15" fill="rgb(215,159,22)" fg:x="5014" fg:w="6"/><text x="60.5289%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="60.2909%" y="1045" width="0.0601%" height="15" fill="rgb(216,183,47)" fg:x="5015" fg:w="5"/><text x="60.5409%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="60.2909%" y="1029" width="0.0601%" height="15" fill="rgb(229,195,25)" fg:x="5015" fg:w="5"/><text x="60.5409%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="60.2909%" y="1013" width="0.0601%" height="15" fill="rgb(224,132,51)" fg:x="5015" fg:w="5"/><text x="60.5409%" y="1023.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="60.3030%" y="997" width="0.0481%" height="15" fill="rgb(240,63,7)" fg:x="5016" fg:w="4"/><text x="60.5530%" y="1007.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (11 samples, 0.13%)</title><rect x="60.2549%" y="1189" width="0.1322%" height="15" fill="rgb(249,182,41)" fg:x="5012" fg:w="11"/><text x="60.5049%" y="1199.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="60.2549%" y="1173" width="0.1322%" height="15" fill="rgb(243,47,26)" fg:x="5012" fg:w="11"/><text x="60.5049%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="60.2549%" y="1157" width="0.1322%" height="15" fill="rgb(233,48,2)" fg:x="5012" fg:w="11"/><text x="60.5049%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.13%)</title><rect x="60.2549%" y="1141" width="0.1322%" height="15" fill="rgb(244,165,34)" fg:x="5012" fg:w="11"/><text x="60.5049%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.13%)</title><rect x="60.2549%" y="1125" width="0.1322%" height="15" fill="rgb(207,89,7)" fg:x="5012" fg:w="11"/><text x="60.5049%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.13%)</title><rect x="60.2549%" y="1109" width="0.1322%" height="15" fill="rgb(244,117,36)" fg:x="5012" fg:w="11"/><text x="60.5049%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="60.3510%" y="1093" width="0.0361%" height="15" fill="rgb(226,144,34)" fg:x="5020" fg:w="3"/><text x="60.6010%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.16%)</title><rect x="60.2428%" y="1269" width="0.1563%" height="15" fill="rgb(213,23,19)" fg:x="5011" fg:w="13"/><text x="60.4928%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (13 samples, 0.16%)</title><rect x="60.2428%" y="1253" width="0.1563%" height="15" fill="rgb(217,75,12)" fg:x="5011" fg:w="13"/><text x="60.4928%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.16%)</title><rect x="60.2428%" y="1237" width="0.1563%" height="15" fill="rgb(224,159,17)" fg:x="5011" fg:w="13"/><text x="60.4928%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.14%)</title><rect x="60.2549%" y="1221" width="0.1443%" height="15" fill="rgb(217,118,1)" fg:x="5012" fg:w="12"/><text x="60.5049%" y="1231.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12 samples, 0.14%)</title><rect x="60.2549%" y="1205" width="0.1443%" height="15" fill="rgb(232,180,48)" fg:x="5012" fg:w="12"/><text x="60.5049%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="60.3871%" y="1189" width="0.0120%" height="15" fill="rgb(230,27,33)" fg:x="5023" fg:w="1"/><text x="60.6371%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="60.3871%" y="1173" width="0.0120%" height="15" fill="rgb(205,31,21)" fg:x="5023" fg:w="1"/><text x="60.6371%" y="1183.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.01%)</title><rect x="60.3871%" y="1157" width="0.0120%" height="15" fill="rgb(253,59,4)" fg:x="5023" fg:w="1"/><text x="60.6371%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.25%)</title><rect x="60.1827%" y="1317" width="0.2525%" height="15" fill="rgb(224,201,9)" fg:x="5006" fg:w="21"/><text x="60.4327%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.25%)</title><rect x="60.1827%" y="1301" width="0.2525%" height="15" fill="rgb(229,206,30)" fg:x="5006" fg:w="21"/><text x="60.4327%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (20 samples, 0.24%)</title><rect x="60.1948%" y="1285" width="0.2404%" height="15" fill="rgb(212,67,47)" fg:x="5007" fg:w="20"/><text x="60.4448%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.04%)</title><rect x="60.3991%" y="1269" width="0.0361%" height="15" fill="rgb(211,96,50)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="60.3991%" y="1253" width="0.0361%" height="15" fill="rgb(252,114,18)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="60.3991%" y="1237" width="0.0361%" height="15" fill="rgb(223,58,37)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="60.3991%" y="1221" width="0.0361%" height="15" fill="rgb(237,70,4)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="60.3991%" y="1205" width="0.0361%" height="15" fill="rgb(244,85,46)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="60.3991%" y="1189" width="0.0361%" height="15" fill="rgb(223,39,52)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="60.3991%" y="1173" width="0.0361%" height="15" fill="rgb(218,200,14)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1183.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="60.3991%" y="1157" width="0.0361%" height="15" fill="rgb(208,171,16)" fg:x="5024" fg:w="3"/><text x="60.6491%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.10%)</title><rect x="60.4472%" y="1205" width="0.0962%" height="15" fill="rgb(234,200,18)" fg:x="5028" fg:w="8"/><text x="60.6972%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.10%)</title><rect x="60.4472%" y="1189" width="0.0962%" height="15" fill="rgb(228,45,11)" fg:x="5028" fg:w="8"/><text x="60.6972%" y="1199.50"></text></g><g><title>cfree (8 samples, 0.10%)</title><rect x="60.4472%" y="1173" width="0.0962%" height="15" fill="rgb(237,182,11)" fg:x="5028" fg:w="8"/><text x="60.6972%" y="1183.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="60.4953%" y="1157" width="0.0481%" height="15" fill="rgb(241,175,49)" fg:x="5032" fg:w="4"/><text x="60.7453%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.14%)</title><rect x="60.4352%" y="1301" width="0.1443%" height="15" fill="rgb(247,38,35)" fg:x="5027" fg:w="12"/><text x="60.6852%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (12 samples, 0.14%)</title><rect x="60.4352%" y="1285" width="0.1443%" height="15" fill="rgb(228,39,49)" fg:x="5027" fg:w="12"/><text x="60.6852%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (11 samples, 0.13%)</title><rect x="60.4472%" y="1269" width="0.1322%" height="15" fill="rgb(226,101,26)" fg:x="5028" fg:w="11"/><text x="60.6972%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (11 samples, 0.13%)</title><rect x="60.4472%" y="1253" width="0.1322%" height="15" fill="rgb(206,141,19)" fg:x="5028" fg:w="11"/><text x="60.6972%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (11 samples, 0.13%)</title><rect x="60.4472%" y="1237" width="0.1322%" height="15" fill="rgb(211,200,13)" fg:x="5028" fg:w="11"/><text x="60.6972%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.13%)</title><rect x="60.4472%" y="1221" width="0.1322%" height="15" fill="rgb(241,121,6)" fg:x="5028" fg:w="11"/><text x="60.6972%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.04%)</title><rect x="60.5434%" y="1205" width="0.0361%" height="15" fill="rgb(234,221,29)" fg:x="5036" fg:w="3"/><text x="60.7934%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.08%)</title><rect x="60.5795%" y="1269" width="0.0842%" height="15" fill="rgb(229,136,5)" fg:x="5039" fg:w="7"/><text x="60.8295%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.08%)</title><rect x="60.5795%" y="1253" width="0.0842%" height="15" fill="rgb(238,36,11)" fg:x="5039" fg:w="7"/><text x="60.8295%" y="1263.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="60.6035%" y="1237" width="0.0601%" height="15" fill="rgb(251,55,41)" fg:x="5041" fg:w="5"/><text x="60.8535%" y="1247.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="60.6276%" y="1221" width="0.0361%" height="15" fill="rgb(242,34,40)" fg:x="5043" fg:w="3"/><text x="60.8776%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (20 samples, 0.24%)</title><rect x="60.4352%" y="1317" width="0.2404%" height="15" fill="rgb(215,42,17)" fg:x="5027" fg:w="20"/><text x="60.6852%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (8 samples, 0.10%)</title><rect x="60.5795%" y="1301" width="0.0962%" height="15" fill="rgb(207,44,46)" fg:x="5039" fg:w="8"/><text x="60.8295%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="60.5795%" y="1285" width="0.0962%" height="15" fill="rgb(211,206,28)" fg:x="5039" fg:w="8"/><text x="60.8295%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="60.6636%" y="1269" width="0.0120%" height="15" fill="rgb(237,167,16)" fg:x="5046" fg:w="1"/><text x="60.9136%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (101 samples, 1.21%)</title><rect x="59.4734%" y="1381" width="1.2142%" height="15" fill="rgb(233,66,6)" fg:x="4947" fg:w="101"/><text x="59.7234%" y="1391.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (101 samples, 1.21%)</title><rect x="59.4734%" y="1365" width="1.2142%" height="15" fill="rgb(246,123,29)" fg:x="4947" fg:w="101"/><text x="59.7234%" y="1375.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (101 samples, 1.21%)</title><rect x="59.4734%" y="1349" width="1.2142%" height="15" fill="rgb(209,62,40)" fg:x="4947" fg:w="101"/><text x="59.7234%" y="1359.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (101 samples, 1.21%)</title><rect x="59.4734%" y="1333" width="1.2142%" height="15" fill="rgb(218,4,25)" fg:x="4947" fg:w="101"/><text x="59.7234%" y="1343.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="60.6756%" y="1317" width="0.0120%" height="15" fill="rgb(253,91,49)" fg:x="5047" fg:w="1"/><text x="60.9256%" y="1327.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="60.6756%" y="1301" width="0.0120%" height="15" fill="rgb(228,155,29)" fg:x="5047" fg:w="1"/><text x="60.9256%" y="1311.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="60.6756%" y="1285" width="0.0120%" height="15" fill="rgb(243,57,37)" fg:x="5047" fg:w="1"/><text x="60.9256%" y="1295.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (328 samples, 3.94%)</title><rect x="56.7564%" y="1461" width="3.9433%" height="15" fill="rgb(244,167,17)" fg:x="4721" fg:w="328"/><text x="57.0064%" y="1471.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (328 samples, 3.94%)</title><rect x="56.7564%" y="1445" width="3.9433%" height="15" fill="rgb(207,181,38)" fg:x="4721" fg:w="328"/><text x="57.0064%" y="1455.50">core..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (328 samples, 3.94%)</title><rect x="56.7564%" y="1429" width="3.9433%" height="15" fill="rgb(211,8,23)" fg:x="4721" fg:w="328"/><text x="57.0064%" y="1439.50">&lt;has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (102 samples, 1.23%)</title><rect x="59.4734%" y="1413" width="1.2263%" height="15" fill="rgb(235,11,44)" fg:x="4947" fg:w="102"/><text x="59.7234%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (102 samples, 1.23%)</title><rect x="59.4734%" y="1397" width="1.2263%" height="15" fill="rgb(248,18,52)" fg:x="4947" fg:w="102"/><text x="59.7234%" y="1407.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="60.6877%" y="1381" width="0.0120%" height="15" fill="rgb(208,4,7)" fg:x="5048" fg:w="1"/><text x="60.9377%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="60.6877%" y="1365" width="0.0120%" height="15" fill="rgb(240,17,39)" fg:x="5048" fg:w="1"/><text x="60.9377%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="60.6877%" y="1349" width="0.0120%" height="15" fill="rgb(207,170,3)" fg:x="5048" fg:w="1"/><text x="60.9377%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (339 samples, 4.08%)</title><rect x="56.7564%" y="1477" width="4.0755%" height="15" fill="rgb(236,100,52)" fg:x="4721" fg:w="339"/><text x="57.0064%" y="1487.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;smithereens::Fragment&gt;&gt; (11 samples, 0.13%)</title><rect x="60.6997%" y="1461" width="0.1322%" height="15" fill="rgb(246,78,51)" fg:x="5049" fg:w="11"/><text x="60.9497%" y="1471.50"></text></g><g><title>cfree (11 samples, 0.13%)</title><rect x="60.6997%" y="1445" width="0.1322%" height="15" fill="rgb(211,17,15)" fg:x="5049" fg:w="11"/><text x="60.9497%" y="1455.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="60.6997%" y="1429" width="0.1322%" height="15" fill="rgb(209,59,46)" fg:x="5049" fg:w="11"/><text x="60.9497%" y="1439.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="60.6997%" y="1413" width="0.1322%" height="15" fill="rgb(210,92,25)" fg:x="5049" fg:w="11"/><text x="60.9497%" y="1423.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="60.6997%" y="1397" width="0.1322%" height="15" fill="rgb(238,174,52)" fg:x="5049" fg:w="11"/><text x="60.9497%" y="1407.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="60.7838%" y="1381" width="0.0481%" height="15" fill="rgb(230,73,7)" fg:x="5056" fg:w="4"/><text x="61.0338%" y="1391.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="60.8319%" y="1397" width="0.0120%" height="15" fill="rgb(243,124,40)" fg:x="5060" fg:w="1"/><text x="61.0819%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.8319%" y="1381" width="0.0120%" height="15" fill="rgb(244,170,11)" fg:x="5060" fg:w="1"/><text x="61.0819%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.8319%" y="1365" width="0.0120%" height="15" fill="rgb(207,114,54)" fg:x="5060" fg:w="1"/><text x="61.0819%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="60.8560%" y="1141" width="0.0120%" height="15" fill="rgb(205,42,20)" fg:x="5062" fg:w="1"/><text x="61.1060%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="60.8560%" y="1125" width="0.0120%" height="15" fill="rgb(230,30,28)" fg:x="5062" fg:w="1"/><text x="61.1060%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="60.8560%" y="1221" width="0.0240%" height="15" fill="rgb(205,73,54)" fg:x="5062" fg:w="2"/><text x="61.1060%" y="1231.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="60.8560%" y="1205" width="0.0240%" height="15" fill="rgb(254,227,23)" fg:x="5062" fg:w="2"/><text x="61.1060%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="60.8560%" y="1189" width="0.0240%" height="15" fill="rgb(228,202,34)" fg:x="5062" fg:w="2"/><text x="61.1060%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="60.8560%" y="1173" width="0.0240%" height="15" fill="rgb(222,225,37)" fg:x="5062" fg:w="2"/><text x="61.1060%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="60.8560%" y="1157" width="0.0240%" height="15" fill="rgb(221,14,54)" fg:x="5062" fg:w="2"/><text x="61.1060%" y="1167.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="60.8680%" y="1141" width="0.0120%" height="15" fill="rgb(254,102,2)" fg:x="5063" fg:w="1"/><text x="61.1180%" y="1151.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="60.8680%" y="1125" width="0.0120%" height="15" fill="rgb(232,104,17)" fg:x="5063" fg:w="1"/><text x="61.1180%" y="1135.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="60.8680%" y="1109" width="0.0120%" height="15" fill="rgb(250,220,14)" fg:x="5063" fg:w="1"/><text x="61.1180%" y="1119.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="60.8560%" y="1237" width="0.0481%" height="15" fill="rgb(241,158,9)" fg:x="5062" fg:w="4"/><text x="61.1060%" y="1247.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (2 samples, 0.02%)</title><rect x="60.8800%" y="1221" width="0.0240%" height="15" fill="rgb(246,9,43)" fg:x="5064" fg:w="2"/><text x="61.1300%" y="1231.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="60.8920%" y="1205" width="0.0120%" height="15" fill="rgb(206,73,33)" fg:x="5065" fg:w="1"/><text x="61.1420%" y="1215.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="60.8560%" y="1253" width="0.0721%" height="15" fill="rgb(222,79,8)" fg:x="5062" fg:w="6"/><text x="61.1060%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="60.9041%" y="1237" width="0.0240%" height="15" fill="rgb(234,8,54)" fg:x="5066" fg:w="2"/><text x="61.1541%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="60.9041%" y="1221" width="0.0240%" height="15" fill="rgb(209,134,38)" fg:x="5066" fg:w="2"/><text x="61.1541%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="60.9041%" y="1205" width="0.0240%" height="15" fill="rgb(230,127,29)" fg:x="5066" fg:w="2"/><text x="61.1541%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="60.9041%" y="1189" width="0.0240%" height="15" fill="rgb(242,44,41)" fg:x="5066" fg:w="2"/><text x="61.1541%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="60.9041%" y="1173" width="0.0240%" height="15" fill="rgb(222,56,43)" fg:x="5066" fg:w="2"/><text x="61.1541%" y="1183.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="60.9161%" y="1157" width="0.0120%" height="15" fill="rgb(238,39,47)" fg:x="5067" fg:w="1"/><text x="61.1661%" y="1167.50"></text></g><g><title>core::hash::Hash::hash_slice (7 samples, 0.08%)</title><rect x="60.8560%" y="1285" width="0.0842%" height="15" fill="rgb(226,79,43)" fg:x="5062" fg:w="7"/><text x="61.1060%" y="1295.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="60.8560%" y="1269" width="0.0842%" height="15" fill="rgb(242,105,53)" fg:x="5062" fg:w="7"/><text x="61.1060%" y="1279.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="60.9281%" y="1253" width="0.0120%" height="15" fill="rgb(251,132,46)" fg:x="5068" fg:w="1"/><text x="61.1781%" y="1263.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="60.9281%" y="1237" width="0.0120%" height="15" fill="rgb(231,77,14)" fg:x="5068" fg:w="1"/><text x="61.1781%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="60.9281%" y="1221" width="0.0120%" height="15" fill="rgb(240,135,9)" fg:x="5068" fg:w="1"/><text x="61.1781%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="60.9281%" y="1205" width="0.0120%" height="15" fill="rgb(248,109,14)" fg:x="5068" fg:w="1"/><text x="61.1781%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="60.9281%" y="1189" width="0.0120%" height="15" fill="rgb(227,146,52)" fg:x="5068" fg:w="1"/><text x="61.1781%" y="1199.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="60.9281%" y="1173" width="0.0120%" height="15" fill="rgb(232,54,3)" fg:x="5068" fg:w="1"/><text x="61.1781%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="60.8560%" y="1317" width="0.0962%" height="15" fill="rgb(229,201,43)" fg:x="5062" fg:w="8"/><text x="61.1060%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.10%)</title><rect x="60.8560%" y="1301" width="0.0962%" height="15" fill="rgb(252,161,33)" fg:x="5062" fg:w="8"/><text x="61.1060%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="60.9401%" y="1285" width="0.0120%" height="15" fill="rgb(226,146,40)" fg:x="5069" fg:w="1"/><text x="61.1901%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="60.9401%" y="1269" width="0.0120%" height="15" fill="rgb(219,47,25)" fg:x="5069" fg:w="1"/><text x="61.1901%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="60.9401%" y="1253" width="0.0120%" height="15" fill="rgb(250,135,13)" fg:x="5069" fg:w="1"/><text x="61.1901%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="60.9401%" y="1237" width="0.0120%" height="15" fill="rgb(219,229,18)" fg:x="5069" fg:w="1"/><text x="61.1901%" y="1247.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="60.9401%" y="1221" width="0.0120%" height="15" fill="rgb(217,152,27)" fg:x="5069" fg:w="1"/><text x="61.1901%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="60.9522%" y="1285" width="0.0361%" height="15" fill="rgb(225,71,47)" fg:x="5070" fg:w="3"/><text x="61.2022%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="60.9522%" y="1269" width="0.0361%" height="15" fill="rgb(220,139,14)" fg:x="5070" fg:w="3"/><text x="61.2022%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="60.9522%" y="1253" width="0.0361%" height="15" fill="rgb(247,54,32)" fg:x="5070" fg:w="3"/><text x="61.2022%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="60.9522%" y="1237" width="0.0361%" height="15" fill="rgb(252,131,39)" fg:x="5070" fg:w="3"/><text x="61.2022%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="60.9522%" y="1221" width="0.0361%" height="15" fill="rgb(210,108,39)" fg:x="5070" fg:w="3"/><text x="61.2022%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="60.9642%" y="1205" width="0.0240%" height="15" fill="rgb(205,23,29)" fg:x="5071" fg:w="2"/><text x="61.2142%" y="1215.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="60.9762%" y="1189" width="0.0120%" height="15" fill="rgb(246,139,46)" fg:x="5072" fg:w="1"/><text x="61.2262%" y="1199.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="60.9522%" y="1301" width="0.0481%" height="15" fill="rgb(250,81,26)" fg:x="5070" fg:w="4"/><text x="61.2022%" y="1311.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="60.9882%" y="1285" width="0.0120%" height="15" fill="rgb(214,104,7)" fg:x="5073" fg:w="1"/><text x="61.2382%" y="1295.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="60.9882%" y="1269" width="0.0120%" height="15" fill="rgb(233,189,8)" fg:x="5073" fg:w="1"/><text x="61.2382%" y="1279.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (1 samples, 0.01%)</title><rect x="60.9882%" y="1253" width="0.0120%" height="15" fill="rgb(228,141,17)" fg:x="5073" fg:w="1"/><text x="61.2382%" y="1263.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="61.0123%" y="1221" width="0.0120%" height="15" fill="rgb(247,157,1)" fg:x="5075" fg:w="1"/><text x="61.2623%" y="1231.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="61.0123%" y="1205" width="0.0120%" height="15" fill="rgb(249,225,5)" fg:x="5075" fg:w="1"/><text x="61.2623%" y="1215.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="61.0123%" y="1189" width="0.0120%" height="15" fill="rgb(242,55,13)" fg:x="5075" fg:w="1"/><text x="61.2623%" y="1199.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="61.0123%" y="1173" width="0.0120%" height="15" fill="rgb(230,49,50)" fg:x="5075" fg:w="1"/><text x="61.2623%" y="1183.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (15 samples, 0.18%)</title><rect x="60.8560%" y="1333" width="0.1803%" height="15" fill="rgb(241,111,38)" fg:x="5062" fg:w="15"/><text x="61.1060%" y="1343.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="60.9522%" y="1317" width="0.0842%" height="15" fill="rgb(252,155,4)" fg:x="5070" fg:w="7"/><text x="61.2022%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="61.0002%" y="1301" width="0.0361%" height="15" fill="rgb(212,69,32)" fg:x="5074" fg:w="3"/><text x="61.2502%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="61.0002%" y="1285" width="0.0361%" height="15" fill="rgb(243,107,47)" fg:x="5074" fg:w="3"/><text x="61.2502%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="61.0002%" y="1269" width="0.0361%" height="15" fill="rgb(247,130,12)" fg:x="5074" fg:w="3"/><text x="61.2502%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="61.0002%" y="1253" width="0.0361%" height="15" fill="rgb(233,74,16)" fg:x="5074" fg:w="3"/><text x="61.2502%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="61.0002%" y="1237" width="0.0361%" height="15" fill="rgb(208,58,18)" fg:x="5074" fg:w="3"/><text x="61.2502%" y="1247.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="61.0243%" y="1221" width="0.0120%" height="15" fill="rgb(242,225,1)" fg:x="5076" fg:w="1"/><text x="61.2743%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="61.0363%" y="1333" width="0.0120%" height="15" fill="rgb(249,39,40)" fg:x="5077" fg:w="1"/><text x="61.2863%" y="1343.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="61.0363%" y="1317" width="0.0120%" height="15" fill="rgb(207,72,44)" fg:x="5077" fg:w="1"/><text x="61.2863%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="61.0483%" y="1333" width="0.0120%" height="15" fill="rgb(215,193,12)" fg:x="5078" fg:w="1"/><text x="61.2983%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="61.0483%" y="1317" width="0.0120%" height="15" fill="rgb(248,41,39)" fg:x="5078" fg:w="1"/><text x="61.2983%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="61.0483%" y="1301" width="0.0120%" height="15" fill="rgb(253,85,4)" fg:x="5078" fg:w="1"/><text x="61.2983%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="61.0483%" y="1285" width="0.0120%" height="15" fill="rgb(243,70,31)" fg:x="5078" fg:w="1"/><text x="61.2983%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (359 samples, 4.32%)</title><rect x="56.7564%" y="1509" width="4.3159%" height="15" fill="rgb(253,195,26)" fg:x="4721" fg:w="359"/><text x="57.0064%" y="1519.50">&lt;std:..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (359 samples, 4.32%)</title><rect x="56.7564%" y="1493" width="4.3159%" height="15" fill="rgb(243,42,11)" fg:x="4721" fg:w="359"/><text x="57.0064%" y="1503.50">&lt;hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (20 samples, 0.24%)</title><rect x="60.8319%" y="1477" width="0.2404%" height="15" fill="rgb(239,66,17)" fg:x="5060" fg:w="20"/><text x="61.0819%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (20 samples, 0.24%)</title><rect x="60.8319%" y="1461" width="0.2404%" height="15" fill="rgb(217,132,21)" fg:x="5060" fg:w="20"/><text x="61.0819%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.24%)</title><rect x="60.8319%" y="1445" width="0.2404%" height="15" fill="rgb(252,202,21)" fg:x="5060" fg:w="20"/><text x="61.0819%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (20 samples, 0.24%)</title><rect x="60.8319%" y="1429" width="0.2404%" height="15" fill="rgb(233,98,36)" fg:x="5060" fg:w="20"/><text x="61.0819%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (20 samples, 0.24%)</title><rect x="60.8319%" y="1413" width="0.2404%" height="15" fill="rgb(216,153,54)" fg:x="5060" fg:w="20"/><text x="61.0819%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (19 samples, 0.23%)</title><rect x="60.8440%" y="1397" width="0.2284%" height="15" fill="rgb(250,99,7)" fg:x="5061" fg:w="19"/><text x="61.0940%" y="1407.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (19 samples, 0.23%)</title><rect x="60.8440%" y="1381" width="0.2284%" height="15" fill="rgb(207,56,50)" fg:x="5061" fg:w="19"/><text x="61.0940%" y="1391.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.23%)</title><rect x="60.8440%" y="1365" width="0.2284%" height="15" fill="rgb(244,61,34)" fg:x="5061" fg:w="19"/><text x="61.0940%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.23%)</title><rect x="60.8440%" y="1349" width="0.2284%" height="15" fill="rgb(241,50,38)" fg:x="5061" fg:w="19"/><text x="61.0940%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="61.0604%" y="1333" width="0.0120%" height="15" fill="rgb(212,166,30)" fg:x="5079" fg:w="1"/><text x="61.3104%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="61.0604%" y="1317" width="0.0120%" height="15" fill="rgb(249,127,32)" fg:x="5079" fg:w="1"/><text x="61.3104%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="61.0604%" y="1301" width="0.0120%" height="15" fill="rgb(209,103,0)" fg:x="5079" fg:w="1"/><text x="61.3104%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="61.0604%" y="1285" width="0.0120%" height="15" fill="rgb(238,209,51)" fg:x="5079" fg:w="1"/><text x="61.3104%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="61.0604%" y="1269" width="0.0120%" height="15" fill="rgb(237,56,23)" fg:x="5079" fg:w="1"/><text x="61.3104%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="61.0604%" y="1253" width="0.0120%" height="15" fill="rgb(215,153,46)" fg:x="5079" fg:w="1"/><text x="61.3104%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="61.0604%" y="1237" width="0.0120%" height="15" fill="rgb(224,49,31)" fg:x="5079" fg:w="1"/><text x="61.3104%" y="1247.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="61.0724%" y="1509" width="0.0361%" height="15" fill="rgb(250,18,42)" fg:x="5080" fg:w="3"/><text x="61.3224%" y="1519.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="61.1084%" y="1509" width="0.0240%" height="15" fill="rgb(215,176,39)" fg:x="5083" fg:w="2"/><text x="61.3584%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="61.1325%" y="1509" width="0.0120%" height="15" fill="rgb(223,77,29)" fg:x="5085" fg:w="1"/><text x="61.3825%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="61.1325%" y="1493" width="0.0120%" height="15" fill="rgb(234,94,52)" fg:x="5085" fg:w="1"/><text x="61.3825%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="61.1325%" y="1477" width="0.0120%" height="15" fill="rgb(220,154,50)" fg:x="5085" fg:w="1"/><text x="61.3825%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="61.1325%" y="1461" width="0.0120%" height="15" fill="rgb(212,11,10)" fg:x="5085" fg:w="1"/><text x="61.3825%" y="1471.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="61.1325%" y="1445" width="0.0120%" height="15" fill="rgb(205,166,19)" fg:x="5085" fg:w="1"/><text x="61.3825%" y="1455.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="61.1565%" y="1461" width="0.0120%" height="15" fill="rgb(244,198,16)" fg:x="5087" fg:w="1"/><text x="61.4065%" y="1471.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="61.1565%" y="1445" width="0.0120%" height="15" fill="rgb(219,69,12)" fg:x="5087" fg:w="1"/><text x="61.4065%" y="1455.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="61.1565%" y="1429" width="0.0120%" height="15" fill="rgb(245,30,7)" fg:x="5087" fg:w="1"/><text x="61.4065%" y="1439.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.06%)</title><rect x="61.1445%" y="1509" width="0.0601%" height="15" fill="rgb(218,221,48)" fg:x="5086" fg:w="5"/><text x="61.3945%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (5 samples, 0.06%)</title><rect x="61.1445%" y="1493" width="0.0601%" height="15" fill="rgb(216,66,15)" fg:x="5086" fg:w="5"/><text x="61.3945%" y="1503.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (5 samples, 0.06%)</title><rect x="61.1445%" y="1477" width="0.0601%" height="15" fill="rgb(226,122,50)" fg:x="5086" fg:w="5"/><text x="61.3945%" y="1487.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="61.1686%" y="1461" width="0.0361%" height="15" fill="rgb(239,156,16)" fg:x="5088" fg:w="3"/><text x="61.4186%" y="1471.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.1926%" y="1445" width="0.0120%" height="15" fill="rgb(224,27,38)" fg:x="5090" fg:w="1"/><text x="61.4426%" y="1455.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.1926%" y="1429" width="0.0120%" height="15" fill="rgb(224,39,27)" fg:x="5090" fg:w="1"/><text x="61.4426%" y="1439.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (1 samples, 0.01%)</title><rect x="61.2287%" y="1461" width="0.0120%" height="15" fill="rgb(215,92,29)" fg:x="5093" fg:w="1"/><text x="61.4787%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (5 samples, 0.06%)</title><rect x="61.2046%" y="1509" width="0.0601%" height="15" fill="rgb(207,159,16)" fg:x="5091" fg:w="5"/><text x="61.4546%" y="1519.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (5 samples, 0.06%)</title><rect x="61.2046%" y="1493" width="0.0601%" height="15" fill="rgb(238,163,47)" fg:x="5091" fg:w="5"/><text x="61.4546%" y="1503.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.06%)</title><rect x="61.2046%" y="1477" width="0.0601%" height="15" fill="rgb(219,91,49)" fg:x="5091" fg:w="5"/><text x="61.4546%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="61.2407%" y="1461" width="0.0240%" height="15" fill="rgb(227,167,31)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="61.2407%" y="1445" width="0.0240%" height="15" fill="rgb(234,80,54)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="61.2407%" y="1429" width="0.0240%" height="15" fill="rgb(212,114,2)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="61.2407%" y="1413" width="0.0240%" height="15" fill="rgb(234,50,24)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="61.2407%" y="1397" width="0.0240%" height="15" fill="rgb(221,68,8)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="61.2407%" y="1381" width="0.0240%" height="15" fill="rgb(254,180,31)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="61.2407%" y="1365" width="0.0240%" height="15" fill="rgb(247,130,50)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1375.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="61.2407%" y="1349" width="0.0240%" height="15" fill="rgb(211,109,4)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1359.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="61.2407%" y="1333" width="0.0240%" height="15" fill="rgb(238,50,21)" fg:x="5094" fg:w="2"/><text x="61.4907%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="61.2647%" y="1509" width="0.0120%" height="15" fill="rgb(225,57,45)" fg:x="5096" fg:w="1"/><text x="61.5147%" y="1519.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="61.2647%" y="1493" width="0.0120%" height="15" fill="rgb(209,196,50)" fg:x="5096" fg:w="1"/><text x="61.5147%" y="1503.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="61.2647%" y="1477" width="0.0120%" height="15" fill="rgb(242,140,13)" fg:x="5096" fg:w="1"/><text x="61.5147%" y="1487.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="61.2647%" y="1461" width="0.0120%" height="15" fill="rgb(217,111,7)" fg:x="5096" fg:w="1"/><text x="61.5147%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="61.2767%" y="1429" width="0.0120%" height="15" fill="rgb(253,193,51)" fg:x="5097" fg:w="1"/><text x="61.5267%" y="1439.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="61.2888%" y="1381" width="0.0120%" height="15" fill="rgb(252,70,29)" fg:x="5098" fg:w="1"/><text x="61.5388%" y="1391.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="61.2888%" y="1365" width="0.0120%" height="15" fill="rgb(232,127,12)" fg:x="5098" fg:w="1"/><text x="61.5388%" y="1375.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="61.2767%" y="1461" width="0.0481%" height="15" fill="rgb(211,180,21)" fg:x="5097" fg:w="4"/><text x="61.5267%" y="1471.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="61.2767%" y="1445" width="0.0481%" height="15" fill="rgb(229,72,13)" fg:x="5097" fg:w="4"/><text x="61.5267%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="61.2888%" y="1429" width="0.0361%" height="15" fill="rgb(240,211,49)" fg:x="5098" fg:w="3"/><text x="61.5388%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="61.2888%" y="1413" width="0.0361%" height="15" fill="rgb(219,149,40)" fg:x="5098" fg:w="3"/><text x="61.5388%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="61.2888%" y="1397" width="0.0361%" height="15" fill="rgb(210,127,46)" fg:x="5098" fg:w="3"/><text x="61.5388%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="61.3008%" y="1381" width="0.0240%" height="15" fill="rgb(220,106,7)" fg:x="5099" fg:w="2"/><text x="61.5508%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="61.3008%" y="1365" width="0.0240%" height="15" fill="rgb(249,31,22)" fg:x="5099" fg:w="2"/><text x="61.5508%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="61.3008%" y="1349" width="0.0240%" height="15" fill="rgb(253,1,49)" fg:x="5099" fg:w="2"/><text x="61.5508%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="61.3008%" y="1333" width="0.0240%" height="15" fill="rgb(227,144,33)" fg:x="5099" fg:w="2"/><text x="61.5508%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="61.3008%" y="1317" width="0.0240%" height="15" fill="rgb(249,163,44)" fg:x="5099" fg:w="2"/><text x="61.5508%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="61.3008%" y="1301" width="0.0240%" height="15" fill="rgb(234,15,39)" fg:x="5099" fg:w="2"/><text x="61.5508%" y="1311.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="61.3008%" y="1285" width="0.0240%" height="15" fill="rgb(207,66,16)" fg:x="5099" fg:w="2"/><text x="61.5508%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.3128%" y="1269" width="0.0120%" height="15" fill="rgb(233,112,24)" fg:x="5100" fg:w="1"/><text x="61.5628%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="61.3248%" y="1461" width="0.0361%" height="15" fill="rgb(230,90,22)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="61.3248%" y="1445" width="0.0361%" height="15" fill="rgb(229,61,13)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="61.3248%" y="1429" width="0.0361%" height="15" fill="rgb(225,57,24)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="61.3248%" y="1413" width="0.0361%" height="15" fill="rgb(208,169,48)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="61.3248%" y="1397" width="0.0361%" height="15" fill="rgb(244,218,51)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="61.3248%" y="1381" width="0.0361%" height="15" fill="rgb(214,148,10)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1391.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="61.3248%" y="1365" width="0.0361%" height="15" fill="rgb(225,174,27)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1375.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="61.3248%" y="1349" width="0.0361%" height="15" fill="rgb(230,96,26)" fg:x="5101" fg:w="3"/><text x="61.5748%" y="1359.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.3489%" y="1333" width="0.0120%" height="15" fill="rgb(232,10,30)" fg:x="5103" fg:w="1"/><text x="61.5989%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="61.2767%" y="1509" width="0.1082%" height="15" fill="rgb(222,8,50)" fg:x="5097" fg:w="9"/><text x="61.5267%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="61.2767%" y="1493" width="0.1082%" height="15" fill="rgb(213,81,27)" fg:x="5097" fg:w="9"/><text x="61.5267%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="61.2767%" y="1477" width="0.1082%" height="15" fill="rgb(245,50,10)" fg:x="5097" fg:w="9"/><text x="61.5267%" y="1487.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="61.3609%" y="1461" width="0.0240%" height="15" fill="rgb(216,100,18)" fg:x="5104" fg:w="2"/><text x="61.6109%" y="1471.50"></text></g><g><title>alloc::string::String::is_empty (1 samples, 0.01%)</title><rect x="61.3849%" y="1509" width="0.0120%" height="15" fill="rgb(236,147,54)" fg:x="5106" fg:w="1"/><text x="61.6349%" y="1519.50"></text></g><g><title>alloc::string::String::len (1 samples, 0.01%)</title><rect x="61.3849%" y="1493" width="0.0120%" height="15" fill="rgb(205,143,26)" fg:x="5106" fg:w="1"/><text x="61.6349%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="61.3849%" y="1477" width="0.0120%" height="15" fill="rgb(236,26,9)" fg:x="5106" fg:w="1"/><text x="61.6349%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="61.4330%" y="1381" width="0.0361%" height="15" fill="rgb(221,165,53)" fg:x="5110" fg:w="3"/><text x="61.6830%" y="1391.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="61.4330%" y="1365" width="0.0361%" height="15" fill="rgb(214,110,17)" fg:x="5110" fg:w="3"/><text x="61.6830%" y="1375.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="61.4330%" y="1349" width="0.0361%" height="15" fill="rgb(237,197,12)" fg:x="5110" fg:w="3"/><text x="61.6830%" y="1359.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="61.4330%" y="1333" width="0.0361%" height="15" fill="rgb(205,84,17)" fg:x="5110" fg:w="3"/><text x="61.6830%" y="1343.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.4571%" y="1317" width="0.0120%" height="15" fill="rgb(237,18,45)" fg:x="5112" fg:w="1"/><text x="61.7071%" y="1327.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.4571%" y="1301" width="0.0120%" height="15" fill="rgb(221,87,14)" fg:x="5112" fg:w="1"/><text x="61.7071%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.11%)</title><rect x="61.4210%" y="1397" width="0.1082%" height="15" fill="rgb(238,186,15)" fg:x="5109" fg:w="9"/><text x="61.6710%" y="1407.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="61.4691%" y="1381" width="0.0601%" height="15" fill="rgb(208,115,11)" fg:x="5113" fg:w="5"/><text x="61.7191%" y="1391.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="61.5052%" y="1365" width="0.0240%" height="15" fill="rgb(254,175,0)" fg:x="5116" fg:w="2"/><text x="61.7552%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.14%)</title><rect x="61.3970%" y="1445" width="0.1443%" height="15" fill="rgb(227,24,42)" fg:x="5107" fg:w="12"/><text x="61.6470%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.14%)</title><rect x="61.3970%" y="1429" width="0.1443%" height="15" fill="rgb(223,211,37)" fg:x="5107" fg:w="12"/><text x="61.6470%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.12%)</title><rect x="61.4210%" y="1413" width="0.1202%" height="15" fill="rgb(235,49,27)" fg:x="5109" fg:w="10"/><text x="61.6710%" y="1423.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="61.5292%" y="1397" width="0.0120%" height="15" fill="rgb(254,97,51)" fg:x="5118" fg:w="1"/><text x="61.7792%" y="1407.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="61.5292%" y="1381" width="0.0120%" height="15" fill="rgb(249,51,40)" fg:x="5118" fg:w="1"/><text x="61.7792%" y="1391.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.17%)</title><rect x="61.3970%" y="1509" width="0.1683%" height="15" fill="rgb(210,128,45)" fg:x="5107" fg:w="14"/><text x="61.6470%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.17%)</title><rect x="61.3970%" y="1493" width="0.1683%" height="15" fill="rgb(224,137,50)" fg:x="5107" fg:w="14"/><text x="61.6470%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.17%)</title><rect x="61.3970%" y="1477" width="0.1683%" height="15" fill="rgb(242,15,9)" fg:x="5107" fg:w="14"/><text x="61.6470%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.17%)</title><rect x="61.3970%" y="1461" width="0.1683%" height="15" fill="rgb(233,187,41)" fg:x="5107" fg:w="14"/><text x="61.6470%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="61.5412%" y="1445" width="0.0240%" height="15" fill="rgb(227,2,29)" fg:x="5119" fg:w="2"/><text x="61.7912%" y="1455.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="61.5412%" y="1429" width="0.0240%" height="15" fill="rgb(222,70,3)" fg:x="5119" fg:w="2"/><text x="61.7912%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (2 samples, 0.02%)</title><rect x="61.5653%" y="1509" width="0.0240%" height="15" fill="rgb(213,11,42)" fg:x="5121" fg:w="2"/><text x="61.8153%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.02%)</title><rect x="61.5653%" y="1493" width="0.0240%" height="15" fill="rgb(225,150,9)" fg:x="5121" fg:w="2"/><text x="61.8153%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="61.5653%" y="1477" width="0.0240%" height="15" fill="rgb(230,162,45)" fg:x="5121" fg:w="2"/><text x="61.8153%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="61.5893%" y="1477" width="0.0120%" height="15" fill="rgb(222,14,52)" fg:x="5123" fg:w="1"/><text x="61.8393%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="61.5893%" y="1509" width="0.0361%" height="15" fill="rgb(254,198,14)" fg:x="5123" fg:w="3"/><text x="61.8393%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="61.5893%" y="1493" width="0.0361%" height="15" fill="rgb(220,217,30)" fg:x="5123" fg:w="3"/><text x="61.8393%" y="1503.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="61.6013%" y="1477" width="0.0240%" height="15" fill="rgb(215,146,41)" fg:x="5124" fg:w="2"/><text x="61.8513%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="61.6013%" y="1461" width="0.0240%" height="15" fill="rgb(217,27,36)" fg:x="5124" fg:w="2"/><text x="61.8513%" y="1471.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="61.6013%" y="1445" width="0.0240%" height="15" fill="rgb(219,218,39)" fg:x="5124" fg:w="2"/><text x="61.8513%" y="1455.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="61.6013%" y="1429" width="0.0240%" height="15" fill="rgb(219,4,42)" fg:x="5124" fg:w="2"/><text x="61.8513%" y="1439.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="61.6013%" y="1413" width="0.0240%" height="15" fill="rgb(249,119,36)" fg:x="5124" fg:w="2"/><text x="61.8513%" y="1423.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="61.6013%" y="1397" width="0.0240%" height="15" fill="rgb(209,23,33)" fg:x="5124" fg:w="2"/><text x="61.8513%" y="1407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.6134%" y="1381" width="0.0120%" height="15" fill="rgb(211,10,0)" fg:x="5125" fg:w="1"/><text x="61.8634%" y="1391.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.6134%" y="1365" width="0.0120%" height="15" fill="rgb(208,99,37)" fg:x="5125" fg:w="1"/><text x="61.8634%" y="1375.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="61.6254%" y="1509" width="0.0240%" height="15" fill="rgb(213,132,31)" fg:x="5126" fg:w="2"/><text x="61.8754%" y="1519.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.6374%" y="1493" width="0.0120%" height="15" fill="rgb(243,129,40)" fg:x="5127" fg:w="1"/><text x="61.8874%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="61.8538%" y="1317" width="0.0240%" height="15" fill="rgb(210,66,33)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="61.8538%" y="1301" width="0.0240%" height="15" fill="rgb(209,189,4)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="61.8538%" y="1285" width="0.0240%" height="15" fill="rgb(214,107,37)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="61.8538%" y="1269" width="0.0240%" height="15" fill="rgb(245,88,54)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="61.8538%" y="1253" width="0.0240%" height="15" fill="rgb(205,146,20)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="61.8538%" y="1237" width="0.0240%" height="15" fill="rgb(220,161,25)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="61.8538%" y="1221" width="0.0240%" height="15" fill="rgb(215,152,15)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="61.8538%" y="1205" width="0.0240%" height="15" fill="rgb(233,192,44)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="61.8538%" y="1189" width="0.0240%" height="15" fill="rgb(240,170,46)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="61.8538%" y="1173" width="0.0240%" height="15" fill="rgb(207,104,33)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1183.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="61.8538%" y="1157" width="0.0240%" height="15" fill="rgb(219,21,39)" fg:x="5145" fg:w="2"/><text x="62.1038%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="61.8779%" y="1301" width="0.0120%" height="15" fill="rgb(214,133,29)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1311.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="61.8779%" y="1285" width="0.0120%" height="15" fill="rgb(226,93,6)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="61.8779%" y="1269" width="0.0120%" height="15" fill="rgb(252,222,34)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="61.8779%" y="1253" width="0.0120%" height="15" fill="rgb(252,92,48)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="61.8779%" y="1237" width="0.0120%" height="15" fill="rgb(245,223,24)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1247.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="61.8779%" y="1221" width="0.0120%" height="15" fill="rgb(205,176,3)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="61.8779%" y="1205" width="0.0120%" height="15" fill="rgb(235,151,15)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="61.8779%" y="1189" width="0.0120%" height="15" fill="rgb(237,209,11)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="61.8779%" y="1173" width="0.0120%" height="15" fill="rgb(243,227,24)" fg:x="5147" fg:w="1"/><text x="62.1279%" y="1183.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="61.8779%" y="1317" width="0.0240%" height="15" fill="rgb(239,193,16)" fg:x="5147" fg:w="2"/><text x="62.1279%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="61.8899%" y="1301" width="0.0120%" height="15" fill="rgb(231,27,9)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="61.8899%" y="1285" width="0.0120%" height="15" fill="rgb(219,169,10)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="61.8899%" y="1269" width="0.0120%" height="15" fill="rgb(244,229,43)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="61.8899%" y="1253" width="0.0120%" height="15" fill="rgb(254,38,20)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="61.8899%" y="1237" width="0.0120%" height="15" fill="rgb(250,47,30)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="61.8899%" y="1221" width="0.0120%" height="15" fill="rgb(224,124,36)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="61.8899%" y="1205" width="0.0120%" height="15" fill="rgb(246,68,51)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="61.8899%" y="1189" width="0.0120%" height="15" fill="rgb(253,43,49)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="61.8899%" y="1173" width="0.0120%" height="15" fill="rgb(219,54,36)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1183.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="61.8899%" y="1157" width="0.0120%" height="15" fill="rgb(227,133,34)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="61.8899%" y="1141" width="0.0120%" height="15" fill="rgb(247,227,15)" fg:x="5148" fg:w="1"/><text x="62.1399%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="61.9139%" y="1253" width="0.0240%" height="15" fill="rgb(229,96,14)" fg:x="5150" fg:w="2"/><text x="62.1639%" y="1263.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="61.9139%" y="1237" width="0.0240%" height="15" fill="rgb(220,79,17)" fg:x="5150" fg:w="2"/><text x="62.1639%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="61.9139%" y="1221" width="0.0240%" height="15" fill="rgb(205,131,53)" fg:x="5150" fg:w="2"/><text x="62.1639%" y="1231.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="61.9139%" y="1205" width="0.0240%" height="15" fill="rgb(209,50,29)" fg:x="5150" fg:w="2"/><text x="62.1639%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="61.9019%" y="1317" width="0.0601%" height="15" fill="rgb(245,86,46)" fg:x="5149" fg:w="5"/><text x="62.1519%" y="1327.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="61.9019%" y="1301" width="0.0601%" height="15" fill="rgb(235,66,46)" fg:x="5149" fg:w="5"/><text x="62.1519%" y="1311.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="61.9139%" y="1285" width="0.0481%" height="15" fill="rgb(232,148,31)" fg:x="5150" fg:w="4"/><text x="62.1639%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="61.9139%" y="1269" width="0.0481%" height="15" fill="rgb(217,149,8)" fg:x="5150" fg:w="4"/><text x="62.1639%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="61.9380%" y="1253" width="0.0240%" height="15" fill="rgb(209,183,11)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="61.9380%" y="1237" width="0.0240%" height="15" fill="rgb(208,55,20)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1247.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="61.9380%" y="1221" width="0.0240%" height="15" fill="rgb(218,39,14)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="61.9380%" y="1205" width="0.0240%" height="15" fill="rgb(216,169,33)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="61.9380%" y="1189" width="0.0240%" height="15" fill="rgb(233,80,24)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="61.9380%" y="1173" width="0.0240%" height="15" fill="rgb(213,179,31)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1183.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="61.9380%" y="1157" width="0.0240%" height="15" fill="rgb(209,19,5)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1167.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="61.9380%" y="1141" width="0.0240%" height="15" fill="rgb(219,18,35)" fg:x="5152" fg:w="2"/><text x="62.1880%" y="1151.50"></text></g><g><title>cfree (11 samples, 0.13%)</title><rect x="62.0101%" y="1221" width="0.1322%" height="15" fill="rgb(209,169,16)" fg:x="5158" fg:w="11"/><text x="62.2601%" y="1231.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="62.0582%" y="1205" width="0.0842%" height="15" fill="rgb(245,90,51)" fg:x="5162" fg:w="7"/><text x="62.3082%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.14%)</title><rect x="62.1544%" y="1141" width="0.1443%" height="15" fill="rgb(220,99,45)" fg:x="5170" fg:w="12"/><text x="62.4044%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.14%)</title><rect x="62.1544%" y="1125" width="0.1443%" height="15" fill="rgb(249,89,25)" fg:x="5170" fg:w="12"/><text x="62.4044%" y="1135.50"></text></g><g><title>cfree (12 samples, 0.14%)</title><rect x="62.1544%" y="1109" width="0.1443%" height="15" fill="rgb(239,193,0)" fg:x="5170" fg:w="12"/><text x="62.4044%" y="1119.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="62.1904%" y="1093" width="0.1082%" height="15" fill="rgb(231,126,1)" fg:x="5173" fg:w="9"/><text x="62.4404%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (13 samples, 0.16%)</title><rect x="62.1544%" y="1189" width="0.1563%" height="15" fill="rgb(243,166,3)" fg:x="5170" fg:w="13"/><text x="62.4044%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (13 samples, 0.16%)</title><rect x="62.1544%" y="1173" width="0.1563%" height="15" fill="rgb(223,22,34)" fg:x="5170" fg:w="13"/><text x="62.4044%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.16%)</title><rect x="62.1544%" y="1157" width="0.1563%" height="15" fill="rgb(251,52,51)" fg:x="5170" fg:w="13"/><text x="62.4044%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="62.2986%" y="1141" width="0.0120%" height="15" fill="rgb(221,165,28)" fg:x="5182" fg:w="1"/><text x="62.5486%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.23%)</title><rect x="62.3227%" y="1061" width="0.2284%" height="15" fill="rgb(218,121,47)" fg:x="5184" fg:w="19"/><text x="62.5727%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.23%)</title><rect x="62.3227%" y="1045" width="0.2284%" height="15" fill="rgb(209,120,9)" fg:x="5184" fg:w="19"/><text x="62.5727%" y="1055.50"></text></g><g><title>cfree (19 samples, 0.23%)</title><rect x="62.3227%" y="1029" width="0.2284%" height="15" fill="rgb(236,68,12)" fg:x="5184" fg:w="19"/><text x="62.5727%" y="1039.50"></text></g><g><title>[libc.so.6] (14 samples, 0.17%)</title><rect x="62.3828%" y="1013" width="0.1683%" height="15" fill="rgb(225,194,26)" fg:x="5189" fg:w="14"/><text x="62.6328%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="62.5391%" y="997" width="0.0120%" height="15" fill="rgb(231,84,39)" fg:x="5202" fg:w="1"/><text x="62.7891%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="62.5391%" y="981" width="0.0120%" height="15" fill="rgb(210,11,45)" fg:x="5202" fg:w="1"/><text x="62.7891%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.25%)</title><rect x="62.3107%" y="1173" width="0.2525%" height="15" fill="rgb(224,54,52)" fg:x="5183" fg:w="21"/><text x="62.5607%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (21 samples, 0.25%)</title><rect x="62.3107%" y="1157" width="0.2525%" height="15" fill="rgb(238,102,14)" fg:x="5183" fg:w="21"/><text x="62.5607%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (20 samples, 0.24%)</title><rect x="62.3227%" y="1141" width="0.2404%" height="15" fill="rgb(243,160,52)" fg:x="5184" fg:w="20"/><text x="62.5727%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (20 samples, 0.24%)</title><rect x="62.3227%" y="1125" width="0.2404%" height="15" fill="rgb(216,114,19)" fg:x="5184" fg:w="20"/><text x="62.5727%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (20 samples, 0.24%)</title><rect x="62.3227%" y="1109" width="0.2404%" height="15" fill="rgb(244,166,37)" fg:x="5184" fg:w="20"/><text x="62.5727%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (20 samples, 0.24%)</title><rect x="62.3227%" y="1093" width="0.2404%" height="15" fill="rgb(246,29,44)" fg:x="5184" fg:w="20"/><text x="62.5727%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.24%)</title><rect x="62.3227%" y="1077" width="0.2404%" height="15" fill="rgb(215,56,53)" fg:x="5184" fg:w="20"/><text x="62.5727%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="62.5511%" y="1061" width="0.0120%" height="15" fill="rgb(217,60,2)" fg:x="5203" fg:w="1"/><text x="62.8011%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.26%)</title><rect x="62.5631%" y="1141" width="0.2645%" height="15" fill="rgb(207,26,24)" fg:x="5204" fg:w="22"/><text x="62.8131%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.26%)</title><rect x="62.5631%" y="1125" width="0.2645%" height="15" fill="rgb(252,210,15)" fg:x="5204" fg:w="22"/><text x="62.8131%" y="1135.50"></text></g><g><title>cfree (22 samples, 0.26%)</title><rect x="62.5631%" y="1109" width="0.2645%" height="15" fill="rgb(253,209,26)" fg:x="5204" fg:w="22"/><text x="62.8131%" y="1119.50"></text></g><g><title>[libc.so.6] (20 samples, 0.24%)</title><rect x="62.5872%" y="1093" width="0.2404%" height="15" fill="rgb(238,170,14)" fg:x="5206" fg:w="20"/><text x="62.8372%" y="1103.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="62.7194%" y="1077" width="0.1082%" height="15" fill="rgb(216,178,15)" fg:x="5217" fg:w="9"/><text x="62.9694%" y="1087.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="62.7555%" y="1061" width="0.0721%" height="15" fill="rgb(250,197,2)" fg:x="5220" fg:w="6"/><text x="63.0055%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (57 samples, 0.69%)</title><rect x="62.1544%" y="1205" width="0.6853%" height="15" fill="rgb(212,70,42)" fg:x="5170" fg:w="57"/><text x="62.4044%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (44 samples, 0.53%)</title><rect x="62.3107%" y="1189" width="0.5290%" height="15" fill="rgb(227,213,9)" fg:x="5183" fg:w="44"/><text x="62.5607%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (23 samples, 0.28%)</title><rect x="62.5631%" y="1173" width="0.2765%" height="15" fill="rgb(245,99,25)" fg:x="5204" fg:w="23"/><text x="62.8131%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.28%)</title><rect x="62.5631%" y="1157" width="0.2765%" height="15" fill="rgb(250,82,29)" fg:x="5204" fg:w="23"/><text x="62.8131%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="62.8276%" y="1141" width="0.0120%" height="15" fill="rgb(241,226,54)" fg:x="5226" fg:w="1"/><text x="63.0776%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="62.8396%" y="1093" width="0.0240%" height="15" fill="rgb(221,99,41)" fg:x="5227" fg:w="2"/><text x="63.0896%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="62.8396%" y="1077" width="0.0240%" height="15" fill="rgb(213,90,21)" fg:x="5227" fg:w="2"/><text x="63.0896%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (61 samples, 0.73%)</title><rect x="62.1423%" y="1221" width="0.7333%" height="15" fill="rgb(205,208,24)" fg:x="5169" fg:w="61"/><text x="62.3923%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (3 samples, 0.04%)</title><rect x="62.8396%" y="1205" width="0.0361%" height="15" fill="rgb(246,31,12)" fg:x="5227" fg:w="3"/><text x="63.0896%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (3 samples, 0.04%)</title><rect x="62.8396%" y="1189" width="0.0361%" height="15" fill="rgb(213,154,6)" fg:x="5227" fg:w="3"/><text x="63.0896%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (3 samples, 0.04%)</title><rect x="62.8396%" y="1173" width="0.0361%" height="15" fill="rgb(222,163,29)" fg:x="5227" fg:w="3"/><text x="63.0896%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (3 samples, 0.04%)</title><rect x="62.8396%" y="1157" width="0.0361%" height="15" fill="rgb(227,201,8)" fg:x="5227" fg:w="3"/><text x="63.0896%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="62.8396%" y="1141" width="0.0361%" height="15" fill="rgb(233,9,32)" fg:x="5227" fg:w="3"/><text x="63.0896%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.04%)</title><rect x="62.8396%" y="1125" width="0.0361%" height="15" fill="rgb(217,54,24)" fg:x="5227" fg:w="3"/><text x="63.0896%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3 samples, 0.04%)</title><rect x="62.8396%" y="1109" width="0.0361%" height="15" fill="rgb(235,192,0)" fg:x="5227" fg:w="3"/><text x="63.0896%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (1 samples, 0.01%)</title><rect x="62.8637%" y="1093" width="0.0120%" height="15" fill="rgb(235,45,9)" fg:x="5229" fg:w="1"/><text x="63.1137%" y="1103.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="62.8637%" y="1077" width="0.0120%" height="15" fill="rgb(246,42,40)" fg:x="5229" fg:w="1"/><text x="63.1137%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="62.8637%" y="1061" width="0.0120%" height="15" fill="rgb(248,111,24)" fg:x="5229" fg:w="1"/><text x="63.1137%" y="1071.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="62.8637%" y="1045" width="0.0120%" height="15" fill="rgb(249,65,22)" fg:x="5229" fg:w="1"/><text x="63.1137%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="62.8997%" y="1141" width="0.0120%" height="15" fill="rgb(238,111,51)" fg:x="5232" fg:w="1"/><text x="63.1497%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.06%)</title><rect x="62.8757%" y="1205" width="0.0601%" height="15" fill="rgb(250,118,22)" fg:x="5230" fg:w="5"/><text x="63.1257%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.06%)</title><rect x="62.8757%" y="1189" width="0.0601%" height="15" fill="rgb(234,84,26)" fg:x="5230" fg:w="5"/><text x="63.1257%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.06%)</title><rect x="62.8757%" y="1173" width="0.0601%" height="15" fill="rgb(243,172,12)" fg:x="5230" fg:w="5"/><text x="63.1257%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.06%)</title><rect x="62.8757%" y="1157" width="0.0601%" height="15" fill="rgb(236,150,49)" fg:x="5230" fg:w="5"/><text x="63.1257%" y="1167.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="62.9118%" y="1141" width="0.0240%" height="15" fill="rgb(225,197,26)" fg:x="5233" fg:w="2"/><text x="63.1618%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="63.0320%" y="1189" width="0.0120%" height="15" fill="rgb(214,17,42)" fg:x="5243" fg:w="1"/><text x="63.2820%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="63.0320%" y="1173" width="0.0120%" height="15" fill="rgb(224,165,40)" fg:x="5243" fg:w="1"/><text x="63.2820%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="63.0320%" y="1157" width="0.0120%" height="15" fill="rgb(246,100,4)" fg:x="5243" fg:w="1"/><text x="63.2820%" y="1167.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="63.0440%" y="1173" width="0.0120%" height="15" fill="rgb(222,103,0)" fg:x="5244" fg:w="1"/><text x="63.2940%" y="1183.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="63.0440%" y="1189" width="0.1803%" height="15" fill="rgb(227,189,26)" fg:x="5244" fg:w="15"/><text x="63.2940%" y="1199.50"></text></g><g><title>core::ptr::read (14 samples, 0.17%)</title><rect x="63.0560%" y="1173" width="0.1683%" height="15" fill="rgb(214,202,17)" fg:x="5245" fg:w="14"/><text x="63.3060%" y="1183.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="63.4047%" y="981" width="0.0240%" height="15" fill="rgb(229,111,3)" fg:x="5274" fg:w="2"/><text x="63.6547%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.06%)</title><rect x="63.4047%" y="997" width="0.0601%" height="15" fill="rgb(229,172,15)" fg:x="5274" fg:w="5"/><text x="63.6547%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.04%)</title><rect x="63.4287%" y="981" width="0.0361%" height="15" fill="rgb(230,224,35)" fg:x="5276" fg:w="3"/><text x="63.6787%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (24 samples, 0.29%)</title><rect x="63.2364%" y="1077" width="0.2885%" height="15" fill="rgb(251,141,6)" fg:x="5260" fg:w="24"/><text x="63.4864%" y="1087.50"></text></g><g><title>core::hash::Hasher::write_u32 (24 samples, 0.29%)</title><rect x="63.2364%" y="1061" width="0.2885%" height="15" fill="rgb(225,208,6)" fg:x="5260" fg:w="24"/><text x="63.4864%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.28%)</title><rect x="63.2484%" y="1045" width="0.2765%" height="15" fill="rgb(246,181,16)" fg:x="5261" fg:w="23"/><text x="63.4984%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (23 samples, 0.28%)</title><rect x="63.2484%" y="1029" width="0.2765%" height="15" fill="rgb(227,129,36)" fg:x="5261" fg:w="23"/><text x="63.4984%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.28%)</title><rect x="63.2484%" y="1013" width="0.2765%" height="15" fill="rgb(248,117,24)" fg:x="5261" fg:w="23"/><text x="63.4984%" y="1023.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.06%)</title><rect x="63.4648%" y="997" width="0.0601%" height="15" fill="rgb(214,185,35)" fg:x="5279" fg:w="5"/><text x="63.7148%" y="1007.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (33 samples, 0.40%)</title><rect x="63.2243%" y="1093" width="0.3967%" height="15" fill="rgb(236,150,34)" fg:x="5259" fg:w="33"/><text x="63.4743%" y="1103.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (8 samples, 0.10%)</title><rect x="63.5249%" y="1077" width="0.0962%" height="15" fill="rgb(243,228,27)" fg:x="5284" fg:w="8"/><text x="63.7749%" y="1087.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (7 samples, 0.08%)</title><rect x="63.5369%" y="1061" width="0.0842%" height="15" fill="rgb(245,77,44)" fg:x="5285" fg:w="7"/><text x="63.7869%" y="1071.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (1 samples, 0.01%)</title><rect x="63.6090%" y="1045" width="0.0120%" height="15" fill="rgb(235,214,42)" fg:x="5291" fg:w="1"/><text x="63.8590%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="63.6451%" y="1013" width="0.0120%" height="15" fill="rgb(221,74,3)" fg:x="5294" fg:w="1"/><text x="63.8951%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.05%)</title><rect x="63.6571%" y="1013" width="0.0481%" height="15" fill="rgb(206,121,29)" fg:x="5295" fg:w="4"/><text x="63.9071%" y="1023.50"></text></g><g><title>core::cmp::min (2 samples, 0.02%)</title><rect x="63.6812%" y="997" width="0.0240%" height="15" fill="rgb(249,131,53)" fg:x="5297" fg:w="2"/><text x="63.9312%" y="1007.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.02%)</title><rect x="63.6812%" y="981" width="0.0240%" height="15" fill="rgb(236,170,29)" fg:x="5297" fg:w="2"/><text x="63.9312%" y="991.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.02%)</title><rect x="63.6812%" y="965" width="0.0240%" height="15" fill="rgb(247,96,15)" fg:x="5297" fg:w="2"/><text x="63.9312%" y="975.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (42 samples, 0.50%)</title><rect x="63.2243%" y="1109" width="0.5049%" height="15" fill="rgb(211,210,7)" fg:x="5259" fg:w="42"/><text x="63.4743%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.11%)</title><rect x="63.6211%" y="1093" width="0.1082%" height="15" fill="rgb(240,88,50)" fg:x="5292" fg:w="9"/><text x="63.8711%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9 samples, 0.11%)</title><rect x="63.6211%" y="1077" width="0.1082%" height="15" fill="rgb(209,229,26)" fg:x="5292" fg:w="9"/><text x="63.8711%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (9 samples, 0.11%)</title><rect x="63.6211%" y="1061" width="0.1082%" height="15" fill="rgb(210,68,23)" fg:x="5292" fg:w="9"/><text x="63.8711%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (9 samples, 0.11%)</title><rect x="63.6211%" y="1045" width="0.1082%" height="15" fill="rgb(229,180,13)" fg:x="5292" fg:w="9"/><text x="63.8711%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (9 samples, 0.11%)</title><rect x="63.6211%" y="1029" width="0.1082%" height="15" fill="rgb(236,53,44)" fg:x="5292" fg:w="9"/><text x="63.8711%" y="1039.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="63.7052%" y="1013" width="0.0240%" height="15" fill="rgb(244,214,29)" fg:x="5299" fg:w="2"/><text x="63.9552%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="63.7653%" y="1013" width="0.0120%" height="15" fill="rgb(220,75,29)" fg:x="5304" fg:w="1"/><text x="64.0153%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.05%)</title><rect x="63.7533%" y="1029" width="0.0481%" height="15" fill="rgb(214,183,37)" fg:x="5303" fg:w="4"/><text x="64.0033%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="63.7774%" y="1013" width="0.0240%" height="15" fill="rgb(239,117,29)" fg:x="5305" fg:w="2"/><text x="64.0274%" y="1023.50"></text></g><g><title>core::hash::Hash::hash_slice (51 samples, 0.61%)</title><rect x="63.2243%" y="1141" width="0.6131%" height="15" fill="rgb(237,171,35)" fg:x="5259" fg:w="51"/><text x="63.4743%" y="1151.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (51 samples, 0.61%)</title><rect x="63.2243%" y="1125" width="0.6131%" height="15" fill="rgb(229,178,53)" fg:x="5259" fg:w="51"/><text x="63.4743%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (9 samples, 0.11%)</title><rect x="63.7293%" y="1109" width="0.1082%" height="15" fill="rgb(210,102,19)" fg:x="5301" fg:w="9"/><text x="63.9793%" y="1119.50"></text></g><g><title>core::hash::Hasher::write_isize (9 samples, 0.11%)</title><rect x="63.7293%" y="1093" width="0.1082%" height="15" fill="rgb(235,127,22)" fg:x="5301" fg:w="9"/><text x="63.9793%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_usize (9 samples, 0.11%)</title><rect x="63.7293%" y="1077" width="0.1082%" height="15" fill="rgb(244,31,31)" fg:x="5301" fg:w="9"/><text x="63.9793%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="63.7293%" y="1061" width="0.1082%" height="15" fill="rgb(231,43,21)" fg:x="5301" fg:w="9"/><text x="63.9793%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="63.7293%" y="1045" width="0.1082%" height="15" fill="rgb(217,131,35)" fg:x="5301" fg:w="9"/><text x="63.9793%" y="1055.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.04%)</title><rect x="63.8014%" y="1029" width="0.0361%" height="15" fill="rgb(221,149,4)" fg:x="5307" fg:w="3"/><text x="64.0514%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="63.9697%" y="1061" width="0.0240%" height="15" fill="rgb(232,170,28)" fg:x="5321" fg:w="2"/><text x="64.2197%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.05%)</title><rect x="63.9697%" y="1077" width="0.0481%" height="15" fill="rgb(238,56,10)" fg:x="5321" fg:w="4"/><text x="64.2197%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="63.9937%" y="1061" width="0.0240%" height="15" fill="rgb(235,196,14)" fg:x="5323" fg:w="2"/><text x="64.2437%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (72 samples, 0.87%)</title><rect x="63.2243%" y="1173" width="0.8656%" height="15" fill="rgb(216,45,48)" fg:x="5259" fg:w="72"/><text x="63.4743%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (72 samples, 0.87%)</title><rect x="63.2243%" y="1157" width="0.8656%" height="15" fill="rgb(238,213,17)" fg:x="5259" fg:w="72"/><text x="63.4743%" y="1167.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (21 samples, 0.25%)</title><rect x="63.8375%" y="1141" width="0.2525%" height="15" fill="rgb(212,13,2)" fg:x="5310" fg:w="21"/><text x="64.0875%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_usize (21 samples, 0.25%)</title><rect x="63.8375%" y="1125" width="0.2525%" height="15" fill="rgb(240,114,20)" fg:x="5310" fg:w="21"/><text x="64.0875%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.25%)</title><rect x="63.8375%" y="1109" width="0.2525%" height="15" fill="rgb(228,41,40)" fg:x="5310" fg:w="21"/><text x="64.0875%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.25%)</title><rect x="63.8375%" y="1093" width="0.2525%" height="15" fill="rgb(244,132,35)" fg:x="5310" fg:w="21"/><text x="64.0875%" y="1103.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.07%)</title><rect x="64.0178%" y="1077" width="0.0721%" height="15" fill="rgb(253,189,4)" fg:x="5325" fg:w="6"/><text x="64.2678%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.06%)</title><rect x="64.4265%" y="1045" width="0.0601%" height="15" fill="rgb(224,37,19)" fg:x="5359" fg:w="5"/><text x="64.6765%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.12%)</title><rect x="64.3785%" y="1061" width="0.1202%" height="15" fill="rgb(235,223,18)" fg:x="5355" fg:w="10"/><text x="64.6285%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="64.4867%" y="1045" width="0.0120%" height="15" fill="rgb(235,163,25)" fg:x="5364" fg:w="1"/><text x="64.7367%" y="1055.50"></text></g><g><title>core::cmp::min (2 samples, 0.02%)</title><rect x="64.4987%" y="1061" width="0.0240%" height="15" fill="rgb(217,145,28)" fg:x="5365" fg:w="2"/><text x="64.7487%" y="1071.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.02%)</title><rect x="64.4987%" y="1045" width="0.0240%" height="15" fill="rgb(223,223,32)" fg:x="5365" fg:w="2"/><text x="64.7487%" y="1055.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.02%)</title><rect x="64.4987%" y="1029" width="0.0240%" height="15" fill="rgb(227,189,39)" fg:x="5365" fg:w="2"/><text x="64.7487%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (55 samples, 0.66%)</title><rect x="64.1741%" y="1109" width="0.6612%" height="15" fill="rgb(248,10,22)" fg:x="5338" fg:w="55"/><text x="64.4241%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55 samples, 0.66%)</title><rect x="64.1741%" y="1093" width="0.6612%" height="15" fill="rgb(248,46,39)" fg:x="5338" fg:w="55"/><text x="64.4241%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 0.66%)</title><rect x="64.1741%" y="1077" width="0.6612%" height="15" fill="rgb(248,113,48)" fg:x="5338" fg:w="55"/><text x="64.4241%" y="1087.50"></text></g><g><title>core::hash::sip::u8to64_le (26 samples, 0.31%)</title><rect x="64.5227%" y="1061" width="0.3126%" height="15" fill="rgb(245,16,25)" fg:x="5367" fg:w="26"/><text x="64.7727%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.10%)</title><rect x="64.7391%" y="1045" width="0.0962%" height="15" fill="rgb(249,152,16)" fg:x="5385" fg:w="8"/><text x="64.9891%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (61 samples, 0.73%)</title><rect x="64.1260%" y="1141" width="0.7333%" height="15" fill="rgb(250,16,1)" fg:x="5334" fg:w="61"/><text x="64.3760%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_u32 (60 samples, 0.72%)</title><rect x="64.1380%" y="1125" width="0.7213%" height="15" fill="rgb(249,138,3)" fg:x="5335" fg:w="60"/><text x="64.3880%" y="1135.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (2 samples, 0.02%)</title><rect x="64.8353%" y="1109" width="0.0240%" height="15" fill="rgb(227,71,41)" fg:x="5393" fg:w="2"/><text x="65.0853%" y="1119.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="64.8714%" y="1125" width="0.0120%" height="15" fill="rgb(209,184,23)" fg:x="5396" fg:w="1"/><text x="65.1214%" y="1135.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (71 samples, 0.85%)</title><rect x="64.0899%" y="1157" width="0.8536%" height="15" fill="rgb(223,215,31)" fg:x="5331" fg:w="71"/><text x="64.3399%" y="1167.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (7 samples, 0.08%)</title><rect x="64.8593%" y="1141" width="0.0842%" height="15" fill="rgb(210,146,28)" fg:x="5395" fg:w="7"/><text x="65.1093%" y="1151.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (5 samples, 0.06%)</title><rect x="64.8834%" y="1125" width="0.0601%" height="15" fill="rgb(209,183,41)" fg:x="5397" fg:w="5"/><text x="65.1334%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="65.0517%" y="1077" width="0.0120%" height="15" fill="rgb(209,224,45)" fg:x="5411" fg:w="1"/><text x="65.3017%" y="1087.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="65.1960%" y="1061" width="0.0120%" height="15" fill="rgb(224,209,51)" fg:x="5423" fg:w="1"/><text x="65.4460%" y="1071.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="65.1960%" y="1045" width="0.0120%" height="15" fill="rgb(223,17,39)" fg:x="5423" fg:w="1"/><text x="65.4460%" y="1055.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="65.1960%" y="1029" width="0.0120%" height="15" fill="rgb(234,204,37)" fg:x="5423" fg:w="1"/><text x="65.4460%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u8 (18 samples, 0.22%)</title><rect x="65.0637%" y="1077" width="0.2164%" height="15" fill="rgb(236,120,5)" fg:x="5412" fg:w="18"/><text x="65.3137%" y="1087.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.07%)</title><rect x="65.2080%" y="1061" width="0.0721%" height="15" fill="rgb(248,97,27)" fg:x="5424" fg:w="6"/><text x="65.4580%" y="1071.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (102 samples, 1.23%)</title><rect x="64.0899%" y="1173" width="1.2263%" height="15" fill="rgb(240,66,17)" fg:x="5331" fg:w="102"/><text x="64.3399%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.37%)</title><rect x="64.9435%" y="1157" width="0.3727%" height="15" fill="rgb(210,79,3)" fg:x="5402" fg:w="31"/><text x="65.1935%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (31 samples, 0.37%)</title><rect x="64.9435%" y="1141" width="0.3727%" height="15" fill="rgb(214,176,27)" fg:x="5402" fg:w="31"/><text x="65.1935%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (31 samples, 0.37%)</title><rect x="64.9435%" y="1125" width="0.3727%" height="15" fill="rgb(235,185,3)" fg:x="5402" fg:w="31"/><text x="65.1935%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (31 samples, 0.37%)</title><rect x="64.9435%" y="1109" width="0.3727%" height="15" fill="rgb(227,24,12)" fg:x="5402" fg:w="31"/><text x="65.1935%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (31 samples, 0.37%)</title><rect x="64.9435%" y="1093" width="0.3727%" height="15" fill="rgb(252,169,48)" fg:x="5402" fg:w="31"/><text x="65.1935%" y="1103.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.04%)</title><rect x="65.2801%" y="1077" width="0.0361%" height="15" fill="rgb(212,65,1)" fg:x="5430" fg:w="3"/><text x="65.5301%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="65.3042%" y="1061" width="0.0120%" height="15" fill="rgb(242,39,24)" fg:x="5432" fg:w="1"/><text x="65.5542%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="65.3643%" y="1109" width="0.0240%" height="15" fill="rgb(249,32,23)" fg:x="5437" fg:w="2"/><text x="65.6143%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="65.3763%" y="1093" width="0.0120%" height="15" fill="rgb(251,195,23)" fg:x="5438" fg:w="1"/><text x="65.6263%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.14%)</title><rect x="65.3282%" y="1141" width="0.1443%" height="15" fill="rgb(236,174,8)" fg:x="5434" fg:w="12"/><text x="65.5782%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.14%)</title><rect x="65.3282%" y="1125" width="0.1443%" height="15" fill="rgb(220,197,8)" fg:x="5434" fg:w="12"/><text x="65.5782%" y="1135.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.08%)</title><rect x="65.3883%" y="1109" width="0.0842%" height="15" fill="rgb(240,108,37)" fg:x="5439" fg:w="7"/><text x="65.6383%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.05%)</title><rect x="65.4244%" y="1093" width="0.0481%" height="15" fill="rgb(232,176,24)" fg:x="5442" fg:w="4"/><text x="65.6744%" y="1103.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (189 samples, 2.27%)</title><rect x="63.2243%" y="1189" width="2.2722%" height="15" fill="rgb(243,35,29)" fg:x="5259" fg:w="189"/><text x="63.4743%" y="1199.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (15 samples, 0.18%)</title><rect x="65.3162%" y="1173" width="0.1803%" height="15" fill="rgb(210,37,18)" fg:x="5433" fg:w="15"/><text x="65.5662%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_usize (14 samples, 0.17%)</title><rect x="65.3282%" y="1157" width="0.1683%" height="15" fill="rgb(224,184,40)" fg:x="5434" fg:w="14"/><text x="65.5782%" y="1167.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (2 samples, 0.02%)</title><rect x="65.4725%" y="1141" width="0.0240%" height="15" fill="rgb(236,39,29)" fg:x="5446" fg:w="2"/><text x="65.7225%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="65.6047%" y="1141" width="0.0361%" height="15" fill="rgb(232,48,39)" fg:x="5457" fg:w="3"/><text x="65.8547%" y="1151.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (3 samples, 0.04%)</title><rect x="65.6047%" y="1125" width="0.0361%" height="15" fill="rgb(236,34,42)" fg:x="5457" fg:w="3"/><text x="65.8547%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (3 samples, 0.04%)</title><rect x="65.6047%" y="1109" width="0.0361%" height="15" fill="rgb(243,106,37)" fg:x="5457" fg:w="3"/><text x="65.8547%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.04%)</title><rect x="65.6047%" y="1093" width="0.0361%" height="15" fill="rgb(218,96,6)" fg:x="5457" fg:w="3"/><text x="65.8547%" y="1103.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (2 samples, 0.02%)</title><rect x="65.6408%" y="1141" width="0.0240%" height="15" fill="rgb(235,130,12)" fg:x="5460" fg:w="2"/><text x="65.8908%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.02%)</title><rect x="65.6408%" y="1125" width="0.0240%" height="15" fill="rgb(231,95,0)" fg:x="5460" fg:w="2"/><text x="65.8908%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="65.6648%" y="1141" width="0.0601%" height="15" fill="rgb(228,12,23)" fg:x="5462" fg:w="5"/><text x="65.9148%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="65.7249%" y="1141" width="0.0120%" height="15" fill="rgb(216,12,1)" fg:x="5467" fg:w="1"/><text x="65.9749%" y="1151.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="65.7249%" y="1125" width="0.0120%" height="15" fill="rgb(219,59,3)" fg:x="5467" fg:w="1"/><text x="65.9749%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="65.7249%" y="1109" width="0.0120%" height="15" fill="rgb(215,208,46)" fg:x="5467" fg:w="1"/><text x="65.9749%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (30 samples, 0.36%)</title><rect x="65.4965%" y="1189" width="0.3607%" height="15" fill="rgb(254,224,29)" fg:x="5448" fg:w="30"/><text x="65.7465%" y="1199.50"></text></g><g><title>alloc::slice::stable_sort (30 samples, 0.36%)</title><rect x="65.4965%" y="1173" width="0.3607%" height="15" fill="rgb(232,14,29)" fg:x="5448" fg:w="30"/><text x="65.7465%" y="1183.50"></text></g><g><title>core::slice::sort::insert_tail (25 samples, 0.30%)</title><rect x="65.5566%" y="1157" width="0.3006%" height="15" fill="rgb(208,45,52)" fg:x="5453" fg:w="25"/><text x="65.8066%" y="1167.50"></text></g><g><title>core::ptr::read (10 samples, 0.12%)</title><rect x="65.7370%" y="1141" width="0.1202%" height="15" fill="rgb(234,191,28)" fg:x="5468" fg:w="10"/><text x="65.9870%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.8692%" y="1125" width="0.0120%" height="15" fill="rgb(244,67,43)" fg:x="5479" fg:w="1"/><text x="66.1192%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.8692%" y="1109" width="0.0120%" height="15" fill="rgb(236,189,24)" fg:x="5479" fg:w="1"/><text x="66.1192%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.8692%" y="1093" width="0.0120%" height="15" fill="rgb(239,214,33)" fg:x="5479" fg:w="1"/><text x="66.1192%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="65.8812%" y="1077" width="0.0120%" height="15" fill="rgb(226,176,41)" fg:x="5480" fg:w="1"/><text x="66.1312%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.8932%" y="1029" width="0.0120%" height="15" fill="rgb(248,47,8)" fg:x="5481" fg:w="1"/><text x="66.1432%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.8932%" y="1013" width="0.0120%" height="15" fill="rgb(218,81,44)" fg:x="5481" fg:w="1"/><text x="66.1432%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.8932%" y="997" width="0.0120%" height="15" fill="rgb(213,98,6)" fg:x="5481" fg:w="1"/><text x="66.1432%" y="1007.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="65.8932%" y="981" width="0.0120%" height="15" fill="rgb(222,85,22)" fg:x="5481" fg:w="1"/><text x="66.1432%" y="991.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="65.9053%" y="1029" width="0.0120%" height="15" fill="rgb(239,46,39)" fg:x="5482" fg:w="1"/><text x="66.1553%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="65.9053%" y="1013" width="0.0120%" height="15" fill="rgb(237,12,29)" fg:x="5482" fg:w="1"/><text x="66.1553%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="65.9173%" y="1029" width="0.0361%" height="15" fill="rgb(214,77,8)" fg:x="5483" fg:w="3"/><text x="66.1673%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="65.9173%" y="1013" width="0.0361%" height="15" fill="rgb(217,168,37)" fg:x="5483" fg:w="3"/><text x="66.1673%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="65.9173%" y="997" width="0.0361%" height="15" fill="rgb(221,217,23)" fg:x="5483" fg:w="3"/><text x="66.1673%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="65.9293%" y="981" width="0.0240%" height="15" fill="rgb(243,229,36)" fg:x="5484" fg:w="2"/><text x="66.1793%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="65.9293%" y="965" width="0.0240%" height="15" fill="rgb(251,163,40)" fg:x="5484" fg:w="2"/><text x="66.1793%" y="975.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="65.9293%" y="949" width="0.0240%" height="15" fill="rgb(237,222,12)" fg:x="5484" fg:w="2"/><text x="66.1793%" y="959.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="65.9293%" y="933" width="0.0240%" height="15" fill="rgb(248,132,6)" fg:x="5484" fg:w="2"/><text x="66.1793%" y="943.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="65.8812%" y="1125" width="0.1322%" height="15" fill="rgb(227,167,50)" fg:x="5480" fg:w="11"/><text x="66.1312%" y="1135.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="65.8812%" y="1109" width="0.1322%" height="15" fill="rgb(242,84,37)" fg:x="5480" fg:w="11"/><text x="66.1312%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="65.8812%" y="1093" width="0.1322%" height="15" fill="rgb(212,4,50)" fg:x="5480" fg:w="11"/><text x="66.1312%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.12%)</title><rect x="65.8932%" y="1077" width="0.1202%" height="15" fill="rgb(230,228,32)" fg:x="5481" fg:w="10"/><text x="66.1432%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.12%)</title><rect x="65.8932%" y="1061" width="0.1202%" height="15" fill="rgb(248,217,23)" fg:x="5481" fg:w="10"/><text x="66.1432%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.12%)</title><rect x="65.8932%" y="1045" width="0.1202%" height="15" fill="rgb(238,197,32)" fg:x="5481" fg:w="10"/><text x="66.1432%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.06%)</title><rect x="65.9534%" y="1029" width="0.0601%" height="15" fill="rgb(236,106,1)" fg:x="5486" fg:w="5"/><text x="66.2034%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="66.0135%" y="1125" width="0.0721%" height="15" fill="rgb(219,228,13)" fg:x="5491" fg:w="6"/><text x="66.2635%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="66.0135%" y="1109" width="0.0721%" height="15" fill="rgb(238,30,35)" fg:x="5491" fg:w="6"/><text x="66.2635%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="66.0135%" y="1093" width="0.0721%" height="15" fill="rgb(236,70,23)" fg:x="5491" fg:w="6"/><text x="66.2635%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="66.0255%" y="1077" width="0.0601%" height="15" fill="rgb(249,104,48)" fg:x="5492" fg:w="5"/><text x="66.2755%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="66.0255%" y="1061" width="0.0601%" height="15" fill="rgb(254,117,50)" fg:x="5492" fg:w="5"/><text x="66.2755%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="66.0255%" y="1045" width="0.0601%" height="15" fill="rgb(223,152,4)" fg:x="5492" fg:w="5"/><text x="66.2755%" y="1055.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="66.0495%" y="1029" width="0.0361%" height="15" fill="rgb(245,6,2)" fg:x="5494" fg:w="3"/><text x="66.2995%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (23 samples, 0.28%)</title><rect x="65.8572%" y="1189" width="0.2765%" height="15" fill="rgb(249,150,24)" fg:x="5478" fg:w="23"/><text x="66.1072%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23 samples, 0.28%)</title><rect x="65.8572%" y="1173" width="0.2765%" height="15" fill="rgb(228,185,42)" fg:x="5478" fg:w="23"/><text x="66.1072%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (23 samples, 0.28%)</title><rect x="65.8572%" y="1157" width="0.2765%" height="15" fill="rgb(226,39,33)" fg:x="5478" fg:w="23"/><text x="66.1072%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.28%)</title><rect x="65.8572%" y="1141" width="0.2765%" height="15" fill="rgb(221,166,19)" fg:x="5478" fg:w="23"/><text x="66.1072%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.05%)</title><rect x="66.0856%" y="1125" width="0.0481%" height="15" fill="rgb(209,109,2)" fg:x="5497" fg:w="4"/><text x="66.3356%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.05%)</title><rect x="66.1337%" y="1157" width="0.0481%" height="15" fill="rgb(252,216,26)" fg:x="5501" fg:w="4"/><text x="66.3837%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="66.1337%" y="1141" width="0.0481%" height="15" fill="rgb(227,173,36)" fg:x="5501" fg:w="4"/><text x="66.3837%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (4 samples, 0.05%)</title><rect x="66.1337%" y="1125" width="0.0481%" height="15" fill="rgb(209,90,7)" fg:x="5501" fg:w="4"/><text x="66.3837%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="66.1337%" y="1109" width="0.0481%" height="15" fill="rgb(250,194,11)" fg:x="5501" fg:w="4"/><text x="66.3837%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="66.1337%" y="1093" width="0.0481%" height="15" fill="rgb(220,72,50)" fg:x="5501" fg:w="4"/><text x="66.3837%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="66.1337%" y="1077" width="0.0481%" height="15" fill="rgb(222,106,48)" fg:x="5501" fg:w="4"/><text x="66.3837%" y="1087.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="66.1337%" y="1061" width="0.0481%" height="15" fill="rgb(216,220,45)" fg:x="5501" fg:w="4"/><text x="66.3837%" y="1071.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="66.1457%" y="1045" width="0.0361%" height="15" fill="rgb(234,112,18)" fg:x="5502" fg:w="3"/><text x="66.3957%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="66.1337%" y="1189" width="0.0601%" height="15" fill="rgb(206,179,9)" fg:x="5501" fg:w="5"/><text x="66.3837%" y="1199.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="66.1337%" y="1173" width="0.0601%" height="15" fill="rgb(215,115,40)" fg:x="5501" fg:w="5"/><text x="66.3837%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="66.1818%" y="1157" width="0.0120%" height="15" fill="rgb(222,69,34)" fg:x="5505" fg:w="1"/><text x="66.4318%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.06%)</title><rect x="66.1938%" y="1109" width="0.0601%" height="15" fill="rgb(209,161,10)" fg:x="5506" fg:w="5"/><text x="66.4438%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.06%)</title><rect x="66.1938%" y="1093" width="0.0601%" height="15" fill="rgb(217,6,38)" fg:x="5506" fg:w="5"/><text x="66.4438%" y="1103.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="66.1938%" y="1077" width="0.0601%" height="15" fill="rgb(229,229,48)" fg:x="5506" fg:w="5"/><text x="66.4438%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="66.2419%" y="1061" width="0.0120%" height="15" fill="rgb(225,21,28)" fg:x="5510" fg:w="1"/><text x="66.4919%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (282 samples, 3.39%)</title><rect x="62.8757%" y="1221" width="3.3902%" height="15" fill="rgb(206,33,13)" fg:x="5230" fg:w="282"/><text x="63.1257%" y="1231.50">has..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (277 samples, 3.33%)</title><rect x="62.9358%" y="1205" width="3.3301%" height="15" fill="rgb(242,178,17)" fg:x="5235" fg:w="277"/><text x="63.1858%" y="1215.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (6 samples, 0.07%)</title><rect x="66.1938%" y="1189" width="0.0721%" height="15" fill="rgb(220,162,5)" fg:x="5506" fg:w="6"/><text x="66.4438%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (6 samples, 0.07%)</title><rect x="66.1938%" y="1173" width="0.0721%" height="15" fill="rgb(210,33,43)" fg:x="5506" fg:w="6"/><text x="66.4438%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (6 samples, 0.07%)</title><rect x="66.1938%" y="1157" width="0.0721%" height="15" fill="rgb(216,116,54)" fg:x="5506" fg:w="6"/><text x="66.4438%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (6 samples, 0.07%)</title><rect x="66.1938%" y="1141" width="0.0721%" height="15" fill="rgb(249,92,24)" fg:x="5506" fg:w="6"/><text x="66.4438%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="66.1938%" y="1125" width="0.0721%" height="15" fill="rgb(231,189,14)" fg:x="5506" fg:w="6"/><text x="66.4438%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="66.2539%" y="1109" width="0.0120%" height="15" fill="rgb(230,8,41)" fg:x="5511" fg:w="1"/><text x="66.5039%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="66.2659%" y="1189" width="0.0120%" height="15" fill="rgb(249,7,27)" fg:x="5512" fg:w="1"/><text x="66.5159%" y="1199.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="66.2659%" y="1173" width="0.0120%" height="15" fill="rgb(232,86,5)" fg:x="5512" fg:w="1"/><text x="66.5159%" y="1183.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="66.3260%" y="1093" width="0.0240%" height="15" fill="rgb(224,175,18)" fg:x="5517" fg:w="2"/><text x="66.5760%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="66.3260%" y="1077" width="0.0240%" height="15" fill="rgb(220,129,12)" fg:x="5517" fg:w="2"/><text x="66.5760%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="66.3862%" y="1077" width="0.0120%" height="15" fill="rgb(210,19,36)" fg:x="5522" fg:w="1"/><text x="66.6362%" y="1087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="66.3862%" y="1061" width="0.0120%" height="15" fill="rgb(219,96,14)" fg:x="5522" fg:w="1"/><text x="66.6362%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="66.3862%" y="1045" width="0.0120%" height="15" fill="rgb(249,106,1)" fg:x="5522" fg:w="1"/><text x="66.6362%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="66.3862%" y="1029" width="0.0120%" height="15" fill="rgb(249,155,20)" fg:x="5522" fg:w="1"/><text x="66.6362%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.07%)</title><rect x="66.3982%" y="1077" width="0.0721%" height="15" fill="rgb(244,168,9)" fg:x="5523" fg:w="6"/><text x="66.6482%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;smithereens::Residue&gt;&gt; (3 samples, 0.04%)</title><rect x="66.4703%" y="1077" width="0.0361%" height="15" fill="rgb(216,23,50)" fg:x="5529" fg:w="3"/><text x="66.7203%" y="1087.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="66.4703%" y="1061" width="0.0361%" height="15" fill="rgb(224,219,20)" fg:x="5529" fg:w="3"/><text x="66.7203%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="66.4703%" y="1045" width="0.0361%" height="15" fill="rgb(222,156,15)" fg:x="5529" fg:w="3"/><text x="66.7203%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="66.5064%" y="1077" width="0.0120%" height="15" fill="rgb(231,97,17)" fg:x="5532" fg:w="1"/><text x="66.7564%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (24 samples, 0.29%)</title><rect x="66.2900%" y="1125" width="0.2885%" height="15" fill="rgb(218,70,48)" fg:x="5514" fg:w="24"/><text x="66.5400%" y="1135.50"></text></g><g><title>alloc::slice::stable_sort (24 samples, 0.29%)</title><rect x="66.2900%" y="1109" width="0.2885%" height="15" fill="rgb(212,196,52)" fg:x="5514" fg:w="24"/><text x="66.5400%" y="1119.50"></text></g><g><title>core::slice::sort::insert_tail (19 samples, 0.23%)</title><rect x="66.3501%" y="1093" width="0.2284%" height="15" fill="rgb(243,203,18)" fg:x="5519" fg:w="19"/><text x="66.6001%" y="1103.50"></text></g><g><title>core::ptr::read (5 samples, 0.06%)</title><rect x="66.5184%" y="1077" width="0.0601%" height="15" fill="rgb(252,125,41)" fg:x="5533" fg:w="5"/><text x="66.7684%" y="1087.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="66.5785%" y="1061" width="0.0120%" height="15" fill="rgb(223,180,33)" fg:x="5538" fg:w="1"/><text x="66.8285%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="66.7107%" y="949" width="0.0120%" height="15" fill="rgb(254,159,46)" fg:x="5549" fg:w="1"/><text x="66.9607%" y="959.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="66.7228%" y="949" width="0.0120%" height="15" fill="rgb(254,38,10)" fg:x="5550" fg:w="1"/><text x="66.9728%" y="959.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (10 samples, 0.12%)</title><rect x="66.6266%" y="965" width="0.1202%" height="15" fill="rgb(208,217,32)" fg:x="5542" fg:w="10"/><text x="66.8766%" y="975.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (1 samples, 0.01%)</title><rect x="66.7348%" y="949" width="0.0120%" height="15" fill="rgb(221,120,13)" fg:x="5551" fg:w="1"/><text x="66.9848%" y="959.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (26 samples, 0.31%)</title><rect x="66.6266%" y="981" width="0.3126%" height="15" fill="rgb(246,54,52)" fg:x="5542" fg:w="26"/><text x="66.8766%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.19%)</title><rect x="66.7468%" y="965" width="0.1924%" height="15" fill="rgb(242,34,25)" fg:x="5552" fg:w="16"/><text x="66.9968%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (14 samples, 0.17%)</title><rect x="66.7709%" y="949" width="0.1683%" height="15" fill="rgb(247,209,9)" fg:x="5554" fg:w="14"/><text x="67.0209%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.17%)</title><rect x="66.7709%" y="933" width="0.1683%" height="15" fill="rgb(228,71,26)" fg:x="5554" fg:w="14"/><text x="67.0209%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (14 samples, 0.17%)</title><rect x="66.7709%" y="917" width="0.1683%" height="15" fill="rgb(222,145,49)" fg:x="5554" fg:w="14"/><text x="67.0209%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (14 samples, 0.17%)</title><rect x="66.7709%" y="901" width="0.1683%" height="15" fill="rgb(218,121,17)" fg:x="5554" fg:w="14"/><text x="67.0209%" y="911.50"></text></g><g><title>[libc.so.6] (14 samples, 0.17%)</title><rect x="66.7709%" y="885" width="0.1683%" height="15" fill="rgb(244,50,7)" fg:x="5554" fg:w="14"/><text x="67.0209%" y="895.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="66.9512%" y="821" width="0.0361%" height="15" fill="rgb(246,229,37)" fg:x="5569" fg:w="3"/><text x="67.2012%" y="831.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (1 samples, 0.01%)</title><rect x="66.9752%" y="805" width="0.0120%" height="15" fill="rgb(225,18,5)" fg:x="5571" fg:w="1"/><text x="67.2252%" y="815.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (39 samples, 0.47%)</title><rect x="66.5785%" y="1125" width="0.4689%" height="15" fill="rgb(213,204,8)" fg:x="5538" fg:w="39"/><text x="66.8285%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (39 samples, 0.47%)</title><rect x="66.5785%" y="1109" width="0.4689%" height="15" fill="rgb(238,103,6)" fg:x="5538" fg:w="39"/><text x="66.8285%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (39 samples, 0.47%)</title><rect x="66.5785%" y="1093" width="0.4689%" height="15" fill="rgb(222,25,35)" fg:x="5538" fg:w="39"/><text x="66.8285%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (39 samples, 0.47%)</title><rect x="66.5785%" y="1077" width="0.4689%" height="15" fill="rgb(213,203,35)" fg:x="5538" fg:w="39"/><text x="66.8285%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 0.46%)</title><rect x="66.5905%" y="1061" width="0.4568%" height="15" fill="rgb(221,79,53)" fg:x="5539" fg:w="38"/><text x="66.8405%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (37 samples, 0.44%)</title><rect x="66.6025%" y="1045" width="0.4448%" height="15" fill="rgb(243,200,35)" fg:x="5540" fg:w="37"/><text x="66.8525%" y="1055.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (37 samples, 0.44%)</title><rect x="66.6025%" y="1029" width="0.4448%" height="15" fill="rgb(248,60,25)" fg:x="5540" fg:w="37"/><text x="66.8525%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.44%)</title><rect x="66.6025%" y="1013" width="0.4448%" height="15" fill="rgb(227,53,46)" fg:x="5540" fg:w="37"/><text x="66.8525%" y="1023.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (37 samples, 0.44%)</title><rect x="66.6025%" y="997" width="0.4448%" height="15" fill="rgb(216,120,32)" fg:x="5540" fg:w="37"/><text x="66.8525%" y="1007.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (9 samples, 0.11%)</title><rect x="66.9392%" y="981" width="0.1082%" height="15" fill="rgb(220,134,1)" fg:x="5568" fg:w="9"/><text x="67.1892%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.11%)</title><rect x="66.9392%" y="965" width="0.1082%" height="15" fill="rgb(237,168,5)" fg:x="5568" fg:w="9"/><text x="67.1892%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.11%)</title><rect x="66.9392%" y="949" width="0.1082%" height="15" fill="rgb(231,100,33)" fg:x="5568" fg:w="9"/><text x="67.1892%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (8 samples, 0.10%)</title><rect x="66.9512%" y="933" width="0.0962%" height="15" fill="rgb(236,177,47)" fg:x="5569" fg:w="8"/><text x="67.2012%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.10%)</title><rect x="66.9512%" y="917" width="0.0962%" height="15" fill="rgb(235,7,49)" fg:x="5569" fg:w="8"/><text x="67.2012%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (8 samples, 0.10%)</title><rect x="66.9512%" y="901" width="0.0962%" height="15" fill="rgb(232,119,22)" fg:x="5569" fg:w="8"/><text x="67.2012%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (8 samples, 0.10%)</title><rect x="66.9512%" y="885" width="0.0962%" height="15" fill="rgb(254,73,53)" fg:x="5569" fg:w="8"/><text x="67.2012%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.10%)</title><rect x="66.9512%" y="869" width="0.0962%" height="15" fill="rgb(251,35,20)" fg:x="5569" fg:w="8"/><text x="67.2012%" y="879.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (8 samples, 0.10%)</title><rect x="66.9512%" y="853" width="0.0962%" height="15" fill="rgb(241,119,20)" fg:x="5569" fg:w="8"/><text x="67.2012%" y="863.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (8 samples, 0.10%)</title><rect x="66.9512%" y="837" width="0.0962%" height="15" fill="rgb(207,102,14)" fg:x="5569" fg:w="8"/><text x="67.2012%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.06%)</title><rect x="66.9873%" y="821" width="0.0601%" height="15" fill="rgb(248,201,50)" fg:x="5572" fg:w="5"/><text x="67.2373%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.06%)</title><rect x="66.9873%" y="805" width="0.0601%" height="15" fill="rgb(222,185,44)" fg:x="5572" fg:w="5"/><text x="67.2373%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.06%)</title><rect x="66.9873%" y="789" width="0.0601%" height="15" fill="rgb(218,107,18)" fg:x="5572" fg:w="5"/><text x="67.2373%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.06%)</title><rect x="66.9873%" y="773" width="0.0601%" height="15" fill="rgb(237,177,39)" fg:x="5572" fg:w="5"/><text x="67.2373%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.06%)</title><rect x="66.9873%" y="757" width="0.0601%" height="15" fill="rgb(246,69,6)" fg:x="5572" fg:w="5"/><text x="67.2373%" y="767.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="66.9873%" y="741" width="0.0601%" height="15" fill="rgb(234,208,37)" fg:x="5572" fg:w="5"/><text x="67.2373%" y="751.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="67.2037%" y="1013" width="0.0120%" height="15" fill="rgb(225,4,6)" fg:x="5590" fg:w="1"/><text x="67.4537%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="67.2157%" y="901" width="0.0120%" height="15" fill="rgb(233,45,0)" fg:x="5591" fg:w="1"/><text x="67.4657%" y="911.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="67.2277%" y="901" width="0.0240%" height="15" fill="rgb(226,136,5)" fg:x="5592" fg:w="2"/><text x="67.4777%" y="911.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="67.2277%" y="885" width="0.0240%" height="15" fill="rgb(211,91,47)" fg:x="5592" fg:w="2"/><text x="67.4777%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.12%)</title><rect x="67.2638%" y="853" width="0.1202%" height="15" fill="rgb(242,88,51)" fg:x="5595" fg:w="10"/><text x="67.5138%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.12%)</title><rect x="67.2638%" y="837" width="0.1202%" height="15" fill="rgb(230,91,28)" fg:x="5595" fg:w="10"/><text x="67.5138%" y="847.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.12%)</title><rect x="67.2638%" y="821" width="0.1202%" height="15" fill="rgb(254,186,29)" fg:x="5595" fg:w="10"/><text x="67.5138%" y="831.50"></text></g><g><title>malloc (10 samples, 0.12%)</title><rect x="67.2638%" y="805" width="0.1202%" height="15" fill="rgb(238,6,4)" fg:x="5595" fg:w="10"/><text x="67.5138%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="67.2517%" y="901" width="0.1443%" height="15" fill="rgb(221,151,16)" fg:x="5594" fg:w="12"/><text x="67.5017%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="67.2517%" y="885" width="0.1443%" height="15" fill="rgb(251,143,52)" fg:x="5594" fg:w="12"/><text x="67.5017%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.14%)</title><rect x="67.2517%" y="869" width="0.1443%" height="15" fill="rgb(206,90,15)" fg:x="5594" fg:w="12"/><text x="67.5017%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="67.3840%" y="853" width="0.0120%" height="15" fill="rgb(218,35,8)" fg:x="5605" fg:w="1"/><text x="67.6340%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="67.3840%" y="837" width="0.0120%" height="15" fill="rgb(239,215,6)" fg:x="5605" fg:w="1"/><text x="67.6340%" y="847.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (19 samples, 0.23%)</title><rect x="67.2157%" y="997" width="0.2284%" height="15" fill="rgb(245,116,39)" fg:x="5591" fg:w="19"/><text x="67.4657%" y="1007.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (19 samples, 0.23%)</title><rect x="67.2157%" y="981" width="0.2284%" height="15" fill="rgb(242,65,28)" fg:x="5591" fg:w="19"/><text x="67.4657%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.23%)</title><rect x="67.2157%" y="965" width="0.2284%" height="15" fill="rgb(252,132,53)" fg:x="5591" fg:w="19"/><text x="67.4657%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.23%)</title><rect x="67.2157%" y="949" width="0.2284%" height="15" fill="rgb(224,159,50)" fg:x="5591" fg:w="19"/><text x="67.4657%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.23%)</title><rect x="67.2157%" y="933" width="0.2284%" height="15" fill="rgb(224,93,4)" fg:x="5591" fg:w="19"/><text x="67.4657%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.23%)</title><rect x="67.2157%" y="917" width="0.2284%" height="15" fill="rgb(208,81,34)" fg:x="5591" fg:w="19"/><text x="67.4657%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.05%)</title><rect x="67.3960%" y="901" width="0.0481%" height="15" fill="rgb(233,92,54)" fg:x="5606" fg:w="4"/><text x="67.6460%" y="911.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.01%)</title><rect x="67.4441%" y="965" width="0.0120%" height="15" fill="rgb(237,21,14)" fg:x="5610" fg:w="1"/><text x="67.6941%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.26%)</title><rect x="67.2037%" y="1029" width="0.2645%" height="15" fill="rgb(249,128,51)" fg:x="5590" fg:w="22"/><text x="67.4537%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (21 samples, 0.25%)</title><rect x="67.2157%" y="1013" width="0.2525%" height="15" fill="rgb(223,129,24)" fg:x="5591" fg:w="21"/><text x="67.4657%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.02%)</title><rect x="67.4441%" y="997" width="0.0240%" height="15" fill="rgb(231,168,25)" fg:x="5610" fg:w="2"/><text x="67.6941%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (2 samples, 0.02%)</title><rect x="67.4441%" y="981" width="0.0240%" height="15" fill="rgb(224,39,20)" fg:x="5610" fg:w="2"/><text x="67.6941%" y="991.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="67.4561%" y="965" width="0.0120%" height="15" fill="rgb(225,152,53)" fg:x="5611" fg:w="1"/><text x="67.7061%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.35%)</title><rect x="67.1435%" y="1077" width="0.3486%" height="15" fill="rgb(252,17,24)" fg:x="5585" fg:w="29"/><text x="67.3935%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (29 samples, 0.35%)</title><rect x="67.1435%" y="1061" width="0.3486%" height="15" fill="rgb(250,114,30)" fg:x="5585" fg:w="29"/><text x="67.3935%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (29 samples, 0.35%)</title><rect x="67.1435%" y="1045" width="0.3486%" height="15" fill="rgb(229,5,4)" fg:x="5585" fg:w="29"/><text x="67.3935%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_fold (2 samples, 0.02%)</title><rect x="67.4681%" y="1029" width="0.0240%" height="15" fill="rgb(225,176,49)" fg:x="5612" fg:w="2"/><text x="67.7181%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (47 samples, 0.57%)</title><rect x="67.0474%" y="1125" width="0.5650%" height="15" fill="rgb(224,221,49)" fg:x="5577" fg:w="47"/><text x="67.2974%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (47 samples, 0.57%)</title><rect x="67.0474%" y="1109" width="0.5650%" height="15" fill="rgb(253,169,27)" fg:x="5577" fg:w="47"/><text x="67.2974%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (46 samples, 0.55%)</title><rect x="67.0594%" y="1093" width="0.5530%" height="15" fill="rgb(211,206,16)" fg:x="5578" fg:w="46"/><text x="67.3094%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.12%)</title><rect x="67.4922%" y="1077" width="0.1202%" height="15" fill="rgb(244,87,35)" fg:x="5614" fg:w="10"/><text x="67.7422%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.12%)</title><rect x="67.4922%" y="1061" width="0.1202%" height="15" fill="rgb(246,28,10)" fg:x="5614" fg:w="10"/><text x="67.7422%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.12%)</title><rect x="67.4922%" y="1045" width="0.1202%" height="15" fill="rgb(229,12,44)" fg:x="5614" fg:w="10"/><text x="67.7422%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.12%)</title><rect x="67.4922%" y="1029" width="0.1202%" height="15" fill="rgb(210,145,37)" fg:x="5614" fg:w="10"/><text x="67.7422%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.11%)</title><rect x="67.5042%" y="1013" width="0.1082%" height="15" fill="rgb(227,112,52)" fg:x="5615" fg:w="9"/><text x="67.7542%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.11%)</title><rect x="67.5042%" y="997" width="0.1082%" height="15" fill="rgb(238,155,34)" fg:x="5615" fg:w="9"/><text x="67.7542%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.11%)</title><rect x="67.5042%" y="981" width="0.1082%" height="15" fill="rgb(239,226,36)" fg:x="5615" fg:w="9"/><text x="67.7542%" y="991.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="67.5403%" y="965" width="0.0721%" height="15" fill="rgb(230,16,23)" fg:x="5618" fg:w="6"/><text x="67.7903%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.14%)</title><rect x="67.6124%" y="1013" width="0.1443%" height="15" fill="rgb(236,171,36)" fg:x="5624" fg:w="12"/><text x="67.8624%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.14%)</title><rect x="67.6124%" y="997" width="0.1443%" height="15" fill="rgb(221,22,14)" fg:x="5624" fg:w="12"/><text x="67.8624%" y="1007.50"></text></g><g><title>cfree (12 samples, 0.14%)</title><rect x="67.6124%" y="981" width="0.1443%" height="15" fill="rgb(242,43,11)" fg:x="5624" fg:w="12"/><text x="67.8624%" y="991.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="67.6725%" y="965" width="0.0842%" height="15" fill="rgb(232,69,23)" fg:x="5629" fg:w="7"/><text x="67.9225%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.17%)</title><rect x="67.6124%" y="1109" width="0.1683%" height="15" fill="rgb(216,180,54)" fg:x="5624" fg:w="14"/><text x="67.8624%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (14 samples, 0.17%)</title><rect x="67.6124%" y="1093" width="0.1683%" height="15" fill="rgb(216,5,24)" fg:x="5624" fg:w="14"/><text x="67.8624%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (14 samples, 0.17%)</title><rect x="67.6124%" y="1077" width="0.1683%" height="15" fill="rgb(225,89,9)" fg:x="5624" fg:w="14"/><text x="67.8624%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (14 samples, 0.17%)</title><rect x="67.6124%" y="1061" width="0.1683%" height="15" fill="rgb(243,75,33)" fg:x="5624" fg:w="14"/><text x="67.8624%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (14 samples, 0.17%)</title><rect x="67.6124%" y="1045" width="0.1683%" height="15" fill="rgb(247,141,45)" fg:x="5624" fg:w="14"/><text x="67.8624%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.17%)</title><rect x="67.6124%" y="1029" width="0.1683%" height="15" fill="rgb(232,177,36)" fg:x="5624" fg:w="14"/><text x="67.8624%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="67.7567%" y="1013" width="0.0240%" height="15" fill="rgb(219,125,36)" fg:x="5636" fg:w="2"/><text x="68.0067%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="67.7687%" y="997" width="0.0120%" height="15" fill="rgb(227,94,9)" fg:x="5637" fg:w="1"/><text x="68.0187%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.20%)</title><rect x="67.7807%" y="1077" width="0.2044%" height="15" fill="rgb(240,34,52)" fg:x="5638" fg:w="17"/><text x="68.0307%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.20%)</title><rect x="67.7807%" y="1061" width="0.2044%" height="15" fill="rgb(216,45,12)" fg:x="5638" fg:w="17"/><text x="68.0307%" y="1071.50"></text></g><g><title>cfree (16 samples, 0.19%)</title><rect x="67.7927%" y="1045" width="0.1924%" height="15" fill="rgb(246,21,19)" fg:x="5639" fg:w="16"/><text x="68.0427%" y="1055.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="67.9009%" y="1029" width="0.0842%" height="15" fill="rgb(213,98,42)" fg:x="5648" fg:w="7"/><text x="68.1509%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (34 samples, 0.41%)</title><rect x="67.6124%" y="1125" width="0.4088%" height="15" fill="rgb(250,136,47)" fg:x="5624" fg:w="34"/><text x="67.8624%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (20 samples, 0.24%)</title><rect x="67.7807%" y="1109" width="0.2404%" height="15" fill="rgb(251,124,27)" fg:x="5638" fg:w="20"/><text x="68.0307%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.24%)</title><rect x="67.7807%" y="1093" width="0.2404%" height="15" fill="rgb(229,180,14)" fg:x="5638" fg:w="20"/><text x="68.0307%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.04%)</title><rect x="67.9851%" y="1077" width="0.0361%" height="15" fill="rgb(245,216,25)" fg:x="5655" fg:w="3"/><text x="68.2351%" y="1087.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (146 samples, 1.76%)</title><rect x="66.2780%" y="1173" width="1.7552%" height="15" fill="rgb(251,43,5)" fg:x="5513" fg:w="146"/><text x="66.5280%" y="1183.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (146 samples, 1.76%)</title><rect x="66.2780%" y="1157" width="1.7552%" height="15" fill="rgb(250,128,24)" fg:x="5513" fg:w="146"/><text x="66.5280%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (146 samples, 1.76%)</title><rect x="66.2780%" y="1141" width="1.7552%" height="15" fill="rgb(217,117,27)" fg:x="5513" fg:w="146"/><text x="66.5280%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="68.0212%" y="1125" width="0.0120%" height="15" fill="rgb(245,147,4)" fg:x="5658" fg:w="1"/><text x="68.2712%" y="1135.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="68.0212%" y="1109" width="0.0120%" height="15" fill="rgb(242,201,35)" fg:x="5658" fg:w="1"/><text x="68.2712%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="68.0212%" y="1093" width="0.0120%" height="15" fill="rgb(218,181,1)" fg:x="5658" fg:w="1"/><text x="68.2712%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (147 samples, 1.77%)</title><rect x="66.2780%" y="1189" width="1.7673%" height="15" fill="rgb(222,6,29)" fg:x="5513" fg:w="147"/><text x="66.5280%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.01%)</title><rect x="68.0332%" y="1173" width="0.0120%" height="15" fill="rgb(208,186,3)" fg:x="5659" fg:w="1"/><text x="68.2832%" y="1183.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="68.0332%" y="1157" width="0.0120%" height="15" fill="rgb(216,36,26)" fg:x="5659" fg:w="1"/><text x="68.2832%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="68.0332%" y="1141" width="0.0120%" height="15" fill="rgb(248,201,23)" fg:x="5659" fg:w="1"/><text x="68.2832%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="68.0332%" y="1125" width="0.0120%" height="15" fill="rgb(251,170,31)" fg:x="5659" fg:w="1"/><text x="68.2832%" y="1135.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="68.0452%" y="1189" width="0.0120%" height="15" fill="rgb(207,110,25)" fg:x="5660" fg:w="1"/><text x="68.2952%" y="1199.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (506 samples, 6.08%)</title><rect x="61.9861%" y="1269" width="6.0832%" height="15" fill="rgb(250,54,15)" fg:x="5156" fg:w="506"/><text x="62.2361%" y="1279.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (506 samples, 6.08%)</title><rect x="61.9861%" y="1253" width="6.0832%" height="15" fill="rgb(227,68,33)" fg:x="5156" fg:w="506"/><text x="62.2361%" y="1263.50">core::it..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (506 samples, 6.08%)</title><rect x="61.9861%" y="1237" width="6.0832%" height="15" fill="rgb(238,34,41)" fg:x="5156" fg:w="506"/><text x="62.2361%" y="1247.50">&lt;hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (150 samples, 1.80%)</title><rect x="66.2659%" y="1221" width="1.8033%" height="15" fill="rgb(220,11,15)" fg:x="5512" fg:w="150"/><text x="66.5159%" y="1231.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (150 samples, 1.80%)</title><rect x="66.2659%" y="1205" width="1.8033%" height="15" fill="rgb(246,111,35)" fg:x="5512" fg:w="150"/><text x="66.5159%" y="1215.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="68.0572%" y="1189" width="0.0120%" height="15" fill="rgb(209,88,53)" fg:x="5661" fg:w="1"/><text x="68.3072%" y="1199.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="68.0572%" y="1173" width="0.0120%" height="15" fill="rgb(231,185,47)" fg:x="5661" fg:w="1"/><text x="68.3072%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="68.0572%" y="1157" width="0.0120%" height="15" fill="rgb(233,154,1)" fg:x="5661" fg:w="1"/><text x="68.3072%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (515 samples, 6.19%)</title><rect x="61.9620%" y="1285" width="6.1914%" height="15" fill="rgb(225,15,46)" fg:x="5154" fg:w="515"/><text x="62.2120%" y="1295.50">core::it..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;smithereens::Fragment&gt;&gt; (7 samples, 0.08%)</title><rect x="68.0692%" y="1269" width="0.0842%" height="15" fill="rgb(211,135,41)" fg:x="5662" fg:w="7"/><text x="68.3192%" y="1279.50"></text></g><g><title>cfree (7 samples, 0.08%)</title><rect x="68.0692%" y="1253" width="0.0842%" height="15" fill="rgb(208,54,0)" fg:x="5662" fg:w="7"/><text x="68.3192%" y="1263.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="68.0692%" y="1237" width="0.0842%" height="15" fill="rgb(244,136,14)" fg:x="5662" fg:w="7"/><text x="68.3192%" y="1247.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="68.0692%" y="1221" width="0.0842%" height="15" fill="rgb(241,56,14)" fg:x="5662" fg:w="7"/><text x="68.3192%" y="1231.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="68.0692%" y="1205" width="0.0842%" height="15" fill="rgb(205,80,24)" fg:x="5662" fg:w="7"/><text x="68.3192%" y="1215.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="68.1053%" y="1189" width="0.0481%" height="15" fill="rgb(220,57,4)" fg:x="5665" fg:w="4"/><text x="68.3553%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="68.1654%" y="1109" width="0.0120%" height="15" fill="rgb(226,193,50)" fg:x="5670" fg:w="1"/><text x="68.4154%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="68.1654%" y="1093" width="0.0120%" height="15" fill="rgb(231,168,22)" fg:x="5670" fg:w="1"/><text x="68.4154%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="68.1654%" y="1157" width="0.0240%" height="15" fill="rgb(254,215,14)" fg:x="5670" fg:w="2"/><text x="68.4154%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="68.1654%" y="1141" width="0.0240%" height="15" fill="rgb(211,115,16)" fg:x="5670" fg:w="2"/><text x="68.4154%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="68.1654%" y="1125" width="0.0240%" height="15" fill="rgb(236,210,16)" fg:x="5670" fg:w="2"/><text x="68.4154%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="68.1774%" y="1109" width="0.0120%" height="15" fill="rgb(221,94,12)" fg:x="5671" fg:w="1"/><text x="68.4274%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="68.1774%" y="1093" width="0.0120%" height="15" fill="rgb(235,218,49)" fg:x="5671" fg:w="1"/><text x="68.4274%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="68.1895%" y="1109" width="0.0120%" height="15" fill="rgb(217,114,14)" fg:x="5672" fg:w="1"/><text x="68.4395%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="68.1895%" y="1093" width="0.0120%" height="15" fill="rgb(216,145,22)" fg:x="5672" fg:w="1"/><text x="68.4395%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="68.1895%" y="1077" width="0.0120%" height="15" fill="rgb(217,112,39)" fg:x="5672" fg:w="1"/><text x="68.4395%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="68.2496%" y="949" width="0.0120%" height="15" fill="rgb(225,85,32)" fg:x="5677" fg:w="1"/><text x="68.4996%" y="959.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="68.2135%" y="1045" width="0.0601%" height="15" fill="rgb(245,209,47)" fg:x="5674" fg:w="5"/><text x="68.4635%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (5 samples, 0.06%)</title><rect x="68.2135%" y="1029" width="0.0601%" height="15" fill="rgb(218,220,15)" fg:x="5674" fg:w="5"/><text x="68.4635%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u32 (5 samples, 0.06%)</title><rect x="68.2135%" y="1013" width="0.0601%" height="15" fill="rgb(222,202,31)" fg:x="5674" fg:w="5"/><text x="68.4635%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="68.2255%" y="997" width="0.0481%" height="15" fill="rgb(243,203,4)" fg:x="5675" fg:w="4"/><text x="68.4755%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="68.2255%" y="981" width="0.0481%" height="15" fill="rgb(237,92,17)" fg:x="5675" fg:w="4"/><text x="68.4755%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="68.2255%" y="965" width="0.0481%" height="15" fill="rgb(231,119,7)" fg:x="5675" fg:w="4"/><text x="68.4755%" y="975.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="68.2616%" y="949" width="0.0120%" height="15" fill="rgb(237,82,41)" fg:x="5678" fg:w="1"/><text x="68.5116%" y="959.50"></text></g><g><title>core::hash::Hash::hash_slice (7 samples, 0.08%)</title><rect x="68.2015%" y="1093" width="0.0842%" height="15" fill="rgb(226,81,48)" fg:x="5673" fg:w="7"/><text x="68.4515%" y="1103.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="68.2015%" y="1077" width="0.0842%" height="15" fill="rgb(234,70,51)" fg:x="5673" fg:w="7"/><text x="68.4515%" y="1087.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="68.2135%" y="1061" width="0.0721%" height="15" fill="rgb(251,86,4)" fg:x="5674" fg:w="6"/><text x="68.4635%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="68.2736%" y="1045" width="0.0120%" height="15" fill="rgb(244,144,28)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="68.2736%" y="1029" width="0.0120%" height="15" fill="rgb(232,161,39)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="68.2736%" y="1013" width="0.0120%" height="15" fill="rgb(247,34,51)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="68.2736%" y="997" width="0.0120%" height="15" fill="rgb(225,132,2)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="68.2736%" y="981" width="0.0120%" height="15" fill="rgb(209,159,44)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="68.2736%" y="965" width="0.0120%" height="15" fill="rgb(251,214,1)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="68.2736%" y="949" width="0.0120%" height="15" fill="rgb(247,84,47)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="68.2736%" y="933" width="0.0120%" height="15" fill="rgb(240,111,43)" fg:x="5679" fg:w="1"/><text x="68.5236%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="68.1895%" y="1125" width="0.1082%" height="15" fill="rgb(215,214,35)" fg:x="5672" fg:w="9"/><text x="68.4395%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.10%)</title><rect x="68.2015%" y="1109" width="0.0962%" height="15" fill="rgb(248,207,23)" fg:x="5673" fg:w="8"/><text x="68.4515%" y="1119.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="68.2856%" y="1093" width="0.0120%" height="15" fill="rgb(214,186,4)" fg:x="5680" fg:w="1"/><text x="68.5356%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="68.2856%" y="1077" width="0.0120%" height="15" fill="rgb(220,133,22)" fg:x="5680" fg:w="1"/><text x="68.5356%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="68.2856%" y="1061" width="0.0120%" height="15" fill="rgb(239,134,19)" fg:x="5680" fg:w="1"/><text x="68.5356%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="68.2856%" y="1045" width="0.0120%" height="15" fill="rgb(250,140,9)" fg:x="5680" fg:w="1"/><text x="68.5356%" y="1055.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="68.2856%" y="1029" width="0.0120%" height="15" fill="rgb(225,59,14)" fg:x="5680" fg:w="1"/><text x="68.5356%" y="1039.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="68.2977%" y="1109" width="0.1322%" height="15" fill="rgb(214,152,51)" fg:x="5681" fg:w="11"/><text x="68.5477%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (9 samples, 0.11%)</title><rect x="68.3217%" y="1093" width="0.1082%" height="15" fill="rgb(251,227,43)" fg:x="5683" fg:w="9"/><text x="68.5717%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u32 (9 samples, 0.11%)</title><rect x="68.3217%" y="1077" width="0.1082%" height="15" fill="rgb(241,96,17)" fg:x="5683" fg:w="9"/><text x="68.5717%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="68.3217%" y="1061" width="0.1082%" height="15" fill="rgb(234,198,43)" fg:x="5683" fg:w="9"/><text x="68.5717%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="68.3217%" y="1045" width="0.1082%" height="15" fill="rgb(220,108,29)" fg:x="5683" fg:w="9"/><text x="68.5717%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.11%)</title><rect x="68.3217%" y="1029" width="0.1082%" height="15" fill="rgb(226,163,33)" fg:x="5683" fg:w="9"/><text x="68.5717%" y="1039.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.05%)</title><rect x="68.3818%" y="1013" width="0.0481%" height="15" fill="rgb(205,194,45)" fg:x="5688" fg:w="4"/><text x="68.6318%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="68.4179%" y="997" width="0.0120%" height="15" fill="rgb(206,143,44)" fg:x="5691" fg:w="1"/><text x="68.6679%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="68.4299%" y="1029" width="0.0240%" height="15" fill="rgb(236,136,36)" fg:x="5692" fg:w="2"/><text x="68.6799%" y="1039.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="68.4419%" y="1013" width="0.0120%" height="15" fill="rgb(249,172,42)" fg:x="5693" fg:w="1"/><text x="68.6919%" y="1023.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (14 samples, 0.17%)</title><rect x="68.2977%" y="1125" width="0.1683%" height="15" fill="rgb(216,139,23)" fg:x="5681" fg:w="14"/><text x="68.5477%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="68.4299%" y="1109" width="0.0361%" height="15" fill="rgb(207,166,20)" fg:x="5692" fg:w="3"/><text x="68.6799%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="68.4299%" y="1093" width="0.0361%" height="15" fill="rgb(210,209,22)" fg:x="5692" fg:w="3"/><text x="68.6799%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="68.4299%" y="1077" width="0.0361%" height="15" fill="rgb(232,118,20)" fg:x="5692" fg:w="3"/><text x="68.6799%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="68.4299%" y="1061" width="0.0361%" height="15" fill="rgb(238,113,42)" fg:x="5692" fg:w="3"/><text x="68.6799%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="68.4299%" y="1045" width="0.0361%" height="15" fill="rgb(231,42,5)" fg:x="5692" fg:w="3"/><text x="68.6799%" y="1055.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="68.4540%" y="1029" width="0.0120%" height="15" fill="rgb(243,166,24)" fg:x="5694" fg:w="1"/><text x="68.7040%" y="1039.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (25 samples, 0.30%)</title><rect x="68.1895%" y="1141" width="0.3006%" height="15" fill="rgb(237,226,12)" fg:x="5672" fg:w="25"/><text x="68.4395%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="68.4660%" y="1125" width="0.0240%" height="15" fill="rgb(229,133,24)" fg:x="5695" fg:w="2"/><text x="68.7160%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="68.4660%" y="1109" width="0.0240%" height="15" fill="rgb(238,33,43)" fg:x="5695" fg:w="2"/><text x="68.7160%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="68.4660%" y="1093" width="0.0240%" height="15" fill="rgb(227,59,38)" fg:x="5695" fg:w="2"/><text x="68.7160%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="68.4660%" y="1077" width="0.0240%" height="15" fill="rgb(230,97,0)" fg:x="5695" fg:w="2"/><text x="68.7160%" y="1087.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="68.4780%" y="1061" width="0.0120%" height="15" fill="rgb(250,173,50)" fg:x="5696" fg:w="1"/><text x="68.7280%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="68.4780%" y="1045" width="0.0120%" height="15" fill="rgb(240,15,50)" fg:x="5696" fg:w="1"/><text x="68.7280%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="68.4900%" y="1141" width="0.0120%" height="15" fill="rgb(221,93,22)" fg:x="5697" fg:w="1"/><text x="68.7400%" y="1151.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="68.4900%" y="1125" width="0.0120%" height="15" fill="rgb(245,180,53)" fg:x="5697" fg:w="1"/><text x="68.7400%" y="1135.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="68.4900%" y="1109" width="0.0120%" height="15" fill="rgb(231,88,51)" fg:x="5697" fg:w="1"/><text x="68.7400%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="68.4900%" y="1093" width="0.0120%" height="15" fill="rgb(240,58,21)" fg:x="5697" fg:w="1"/><text x="68.7400%" y="1103.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.5020%" y="1077" width="0.0240%" height="15" fill="rgb(237,21,10)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="1087.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.5020%" y="1061" width="0.0240%" height="15" fill="rgb(218,43,11)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.5020%" y="1045" width="0.0240%" height="15" fill="rgb(218,221,29)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="68.5020%" y="1029" width="0.0240%" height="15" fill="rgb(214,118,42)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="68.5020%" y="1013" width="0.0240%" height="15" fill="rgb(251,200,26)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="68.5020%" y="997" width="0.0240%" height="15" fill="rgb(237,101,39)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="68.5020%" y="981" width="0.0240%" height="15" fill="rgb(251,117,11)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="68.5020%" y="965" width="0.0240%" height="15" fill="rgb(216,223,23)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="68.5020%" y="949" width="0.0240%" height="15" fill="rgb(251,54,12)" fg:x="5698" fg:w="2"/><text x="68.7520%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="68.5141%" y="933" width="0.0120%" height="15" fill="rgb(254,176,54)" fg:x="5699" fg:w="1"/><text x="68.7641%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="68.5141%" y="917" width="0.0120%" height="15" fill="rgb(210,32,8)" fg:x="5699" fg:w="1"/><text x="68.7641%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="68.5141%" y="901" width="0.0120%" height="15" fill="rgb(235,52,38)" fg:x="5699" fg:w="1"/><text x="68.7641%" y="911.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="68.5141%" y="885" width="0.0120%" height="15" fill="rgb(231,4,44)" fg:x="5699" fg:w="1"/><text x="68.7641%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="68.5261%" y="1077" width="0.0120%" height="15" fill="rgb(249,2,32)" fg:x="5700" fg:w="1"/><text x="68.7761%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="68.5261%" y="1061" width="0.0120%" height="15" fill="rgb(224,65,26)" fg:x="5700" fg:w="1"/><text x="68.7761%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="68.5261%" y="1045" width="0.0120%" height="15" fill="rgb(250,73,40)" fg:x="5700" fg:w="1"/><text x="68.7761%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="68.5261%" y="1029" width="0.0120%" height="15" fill="rgb(253,177,16)" fg:x="5700" fg:w="1"/><text x="68.7761%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="68.5261%" y="1013" width="0.0120%" height="15" fill="rgb(217,32,34)" fg:x="5700" fg:w="1"/><text x="68.7761%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="68.5261%" y="997" width="0.0120%" height="15" fill="rgb(212,7,10)" fg:x="5700" fg:w="1"/><text x="68.7761%" y="1007.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="68.5381%" y="1077" width="0.0120%" height="15" fill="rgb(245,89,8)" fg:x="5701" fg:w="1"/><text x="68.7881%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (549 samples, 6.60%)</title><rect x="61.9620%" y="1317" width="6.6001%" height="15" fill="rgb(237,16,53)" fg:x="5154" fg:w="549"/><text x="62.2120%" y="1327.50">&lt;std::col..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (549 samples, 6.60%)</title><rect x="61.9620%" y="1301" width="6.6001%" height="15" fill="rgb(250,204,30)" fg:x="5154" fg:w="549"/><text x="62.2120%" y="1311.50">&lt;hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (34 samples, 0.41%)</title><rect x="68.1534%" y="1285" width="0.4088%" height="15" fill="rgb(208,77,27)" fg:x="5669" fg:w="34"/><text x="68.4034%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (34 samples, 0.41%)</title><rect x="68.1534%" y="1269" width="0.4088%" height="15" fill="rgb(250,204,28)" fg:x="5669" fg:w="34"/><text x="68.4034%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34 samples, 0.41%)</title><rect x="68.1534%" y="1253" width="0.4088%" height="15" fill="rgb(244,63,21)" fg:x="5669" fg:w="34"/><text x="68.4034%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (34 samples, 0.41%)</title><rect x="68.1534%" y="1237" width="0.4088%" height="15" fill="rgb(236,85,44)" fg:x="5669" fg:w="34"/><text x="68.4034%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (34 samples, 0.41%)</title><rect x="68.1534%" y="1221" width="0.4088%" height="15" fill="rgb(215,98,4)" fg:x="5669" fg:w="34"/><text x="68.4034%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (33 samples, 0.40%)</title><rect x="68.1654%" y="1205" width="0.3967%" height="15" fill="rgb(235,38,11)" fg:x="5670" fg:w="33"/><text x="68.4154%" y="1215.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (33 samples, 0.40%)</title><rect x="68.1654%" y="1189" width="0.3967%" height="15" fill="rgb(254,186,25)" fg:x="5670" fg:w="33"/><text x="68.4154%" y="1199.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.40%)</title><rect x="68.1654%" y="1173" width="0.3967%" height="15" fill="rgb(225,55,31)" fg:x="5670" fg:w="33"/><text x="68.4154%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.37%)</title><rect x="68.1895%" y="1157" width="0.3727%" height="15" fill="rgb(211,15,21)" fg:x="5672" fg:w="31"/><text x="68.4395%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.06%)</title><rect x="68.5020%" y="1141" width="0.0601%" height="15" fill="rgb(215,187,41)" fg:x="5698" fg:w="5"/><text x="68.7520%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="68.5020%" y="1125" width="0.0601%" height="15" fill="rgb(248,69,32)" fg:x="5698" fg:w="5"/><text x="68.7520%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="68.5020%" y="1109" width="0.0601%" height="15" fill="rgb(252,102,52)" fg:x="5698" fg:w="5"/><text x="68.7520%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="68.5020%" y="1093" width="0.0601%" height="15" fill="rgb(253,140,32)" fg:x="5698" fg:w="5"/><text x="68.7520%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="68.5501%" y="1077" width="0.0120%" height="15" fill="rgb(216,56,42)" fg:x="5702" fg:w="1"/><text x="68.8001%" y="1087.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="68.5501%" y="1061" width="0.0120%" height="15" fill="rgb(216,184,14)" fg:x="5702" fg:w="1"/><text x="68.8001%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="68.5501%" y="1045" width="0.0120%" height="15" fill="rgb(237,187,27)" fg:x="5702" fg:w="1"/><text x="68.8001%" y="1055.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.5622%" y="1269" width="0.0240%" height="15" fill="rgb(219,65,3)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1279.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.5622%" y="1253" width="0.0240%" height="15" fill="rgb(245,83,25)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="68.5622%" y="1237" width="0.0240%" height="15" fill="rgb(214,205,45)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="68.5622%" y="1221" width="0.0240%" height="15" fill="rgb(241,20,18)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="68.5622%" y="1205" width="0.0240%" height="15" fill="rgb(232,163,23)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="68.5622%" y="1189" width="0.0240%" height="15" fill="rgb(214,5,46)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="68.5622%" y="1173" width="0.0240%" height="15" fill="rgb(229,78,17)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="68.5622%" y="1157" width="0.0240%" height="15" fill="rgb(248,89,10)" fg:x="5703" fg:w="2"/><text x="68.8122%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="68.5742%" y="1141" width="0.0120%" height="15" fill="rgb(248,54,15)" fg:x="5704" fg:w="1"/><text x="68.8242%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="68.5742%" y="1125" width="0.0120%" height="15" fill="rgb(223,116,6)" fg:x="5704" fg:w="1"/><text x="68.8242%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="68.5742%" y="1109" width="0.0120%" height="15" fill="rgb(205,125,38)" fg:x="5704" fg:w="1"/><text x="68.8242%" y="1119.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="68.5742%" y="1093" width="0.0120%" height="15" fill="rgb(251,78,38)" fg:x="5704" fg:w="1"/><text x="68.8242%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="68.5862%" y="1269" width="0.0481%" height="15" fill="rgb(253,78,28)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="68.5862%" y="1253" width="0.0481%" height="15" fill="rgb(209,120,3)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="68.5862%" y="1237" width="0.0481%" height="15" fill="rgb(238,229,9)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="68.5862%" y="1221" width="0.0481%" height="15" fill="rgb(253,159,18)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="68.5862%" y="1205" width="0.0481%" height="15" fill="rgb(244,42,34)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="68.5862%" y="1189" width="0.0481%" height="15" fill="rgb(224,8,7)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1199.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="68.5862%" y="1173" width="0.0481%" height="15" fill="rgb(210,201,45)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1183.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="68.5862%" y="1157" width="0.0481%" height="15" fill="rgb(252,185,21)" fg:x="5705" fg:w="4"/><text x="68.8362%" y="1167.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="68.6102%" y="1141" width="0.0240%" height="15" fill="rgb(223,131,1)" fg:x="5707" fg:w="2"/><text x="68.8602%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.08%)</title><rect x="68.5622%" y="1317" width="0.0842%" height="15" fill="rgb(245,141,16)" fg:x="5703" fg:w="7"/><text x="68.8122%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.08%)</title><rect x="68.5622%" y="1301" width="0.0842%" height="15" fill="rgb(229,55,45)" fg:x="5703" fg:w="7"/><text x="68.8122%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="68.5622%" y="1285" width="0.0842%" height="15" fill="rgb(208,92,15)" fg:x="5703" fg:w="7"/><text x="68.8122%" y="1295.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="68.6343%" y="1269" width="0.0120%" height="15" fill="rgb(234,185,47)" fg:x="5709" fg:w="1"/><text x="68.8843%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="68.8627%" y="1125" width="0.0361%" height="15" fill="rgb(253,104,50)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="68.8627%" y="1109" width="0.0361%" height="15" fill="rgb(205,70,7)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="68.8627%" y="1093" width="0.0361%" height="15" fill="rgb(240,178,43)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="68.8627%" y="1077" width="0.0361%" height="15" fill="rgb(214,112,2)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="68.8627%" y="1061" width="0.0361%" height="15" fill="rgb(206,46,17)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="68.8627%" y="1045" width="0.0361%" height="15" fill="rgb(225,220,16)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="68.8627%" y="1029" width="0.0361%" height="15" fill="rgb(238,65,40)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="68.8627%" y="1013" width="0.0361%" height="15" fill="rgb(230,151,21)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="68.8627%" y="997" width="0.0361%" height="15" fill="rgb(218,58,49)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="68.8627%" y="981" width="0.0361%" height="15" fill="rgb(219,179,14)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="991.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="68.8627%" y="965" width="0.0361%" height="15" fill="rgb(223,72,1)" fg:x="5728" fg:w="3"/><text x="69.1127%" y="975.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="68.8747%" y="949" width="0.0240%" height="15" fill="rgb(238,126,10)" fg:x="5729" fg:w="2"/><text x="69.1247%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="68.8988%" y="1109" width="0.0361%" height="15" fill="rgb(224,206,38)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="68.8988%" y="1093" width="0.0361%" height="15" fill="rgb(212,201,54)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="68.8988%" y="1077" width="0.0361%" height="15" fill="rgb(218,154,48)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="68.8988%" y="1061" width="0.0361%" height="15" fill="rgb(232,93,24)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="68.8988%" y="1045" width="0.0361%" height="15" fill="rgb(245,30,21)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="68.8988%" y="1029" width="0.0361%" height="15" fill="rgb(242,148,29)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="68.8988%" y="1013" width="0.0361%" height="15" fill="rgb(244,153,54)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="68.8988%" y="997" width="0.0361%" height="15" fill="rgb(252,87,22)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="68.8988%" y="981" width="0.0361%" height="15" fill="rgb(210,51,29)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="991.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="68.8988%" y="965" width="0.0361%" height="15" fill="rgb(242,136,47)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="975.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="68.8988%" y="949" width="0.0361%" height="15" fill="rgb(238,68,4)" fg:x="5731" fg:w="3"/><text x="69.1488%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="68.9108%" y="933" width="0.0240%" height="15" fill="rgb(242,161,30)" fg:x="5732" fg:w="2"/><text x="69.1608%" y="943.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.9348%" y="1109" width="0.0240%" height="15" fill="rgb(218,58,44)" fg:x="5734" fg:w="2"/><text x="69.1848%" y="1119.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.9348%" y="1093" width="0.0240%" height="15" fill="rgb(252,125,32)" fg:x="5734" fg:w="2"/><text x="69.1848%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.9348%" y="1077" width="0.0240%" height="15" fill="rgb(219,178,0)" fg:x="5734" fg:w="2"/><text x="69.1848%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="68.9469%" y="1061" width="0.0120%" height="15" fill="rgb(213,152,7)" fg:x="5735" fg:w="1"/><text x="69.1969%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="68.9469%" y="1045" width="0.0120%" height="15" fill="rgb(249,109,34)" fg:x="5735" fg:w="1"/><text x="69.1969%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="68.9469%" y="1029" width="0.0120%" height="15" fill="rgb(232,96,21)" fg:x="5735" fg:w="1"/><text x="69.1969%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="68.9469%" y="1013" width="0.0120%" height="15" fill="rgb(228,27,39)" fg:x="5735" fg:w="1"/><text x="69.1969%" y="1023.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="68.9589%" y="1061" width="0.0120%" height="15" fill="rgb(211,182,52)" fg:x="5736" fg:w="1"/><text x="69.2089%" y="1071.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="68.9589%" y="1045" width="0.0120%" height="15" fill="rgb(234,178,38)" fg:x="5736" fg:w="1"/><text x="69.2089%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="68.9589%" y="1029" width="0.0120%" height="15" fill="rgb(221,111,3)" fg:x="5736" fg:w="1"/><text x="69.2089%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="68.9589%" y="1013" width="0.0120%" height="15" fill="rgb(228,175,21)" fg:x="5736" fg:w="1"/><text x="69.2089%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="68.9589%" y="997" width="0.0120%" height="15" fill="rgb(228,174,43)" fg:x="5736" fg:w="1"/><text x="69.2089%" y="1007.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="68.9589%" y="981" width="0.0120%" height="15" fill="rgb(211,191,0)" fg:x="5736" fg:w="1"/><text x="69.2089%" y="991.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="68.9589%" y="965" width="0.0120%" height="15" fill="rgb(253,117,3)" fg:x="5736" fg:w="1"/><text x="69.2089%" y="975.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="68.8988%" y="1125" width="0.0962%" height="15" fill="rgb(241,127,19)" fg:x="5731" fg:w="8"/><text x="69.1488%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="68.9589%" y="1109" width="0.0361%" height="15" fill="rgb(218,103,12)" fg:x="5736" fg:w="3"/><text x="69.2089%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="68.9589%" y="1093" width="0.0361%" height="15" fill="rgb(236,214,43)" fg:x="5736" fg:w="3"/><text x="69.2089%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="68.9589%" y="1077" width="0.0361%" height="15" fill="rgb(244,144,19)" fg:x="5736" fg:w="3"/><text x="69.2089%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="68.9709%" y="1061" width="0.0240%" height="15" fill="rgb(246,188,10)" fg:x="5737" fg:w="2"/><text x="69.2209%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="68.9709%" y="1045" width="0.0240%" height="15" fill="rgb(212,193,33)" fg:x="5737" fg:w="2"/><text x="69.2209%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="68.9709%" y="1029" width="0.0240%" height="15" fill="rgb(241,51,29)" fg:x="5737" fg:w="2"/><text x="69.2209%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="68.9829%" y="1013" width="0.0120%" height="15" fill="rgb(211,58,19)" fg:x="5738" fg:w="1"/><text x="69.2329%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="68.9829%" y="997" width="0.0120%" height="15" fill="rgb(229,111,26)" fg:x="5738" fg:w="1"/><text x="69.2329%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="68.9829%" y="981" width="0.0120%" height="15" fill="rgb(213,115,40)" fg:x="5738" fg:w="1"/><text x="69.2329%" y="991.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="68.9829%" y="965" width="0.0120%" height="15" fill="rgb(209,56,44)" fg:x="5738" fg:w="1"/><text x="69.2329%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="68.9829%" y="949" width="0.0120%" height="15" fill="rgb(230,108,32)" fg:x="5738" fg:w="1"/><text x="69.2329%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.9950%" y="1125" width="0.0240%" height="15" fill="rgb(216,165,31)" fg:x="5739" fg:w="2"/><text x="69.2450%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="68.9950%" y="1109" width="0.0240%" height="15" fill="rgb(218,122,21)" fg:x="5739" fg:w="2"/><text x="69.2450%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="69.0070%" y="1093" width="0.0120%" height="15" fill="rgb(223,224,47)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="69.0070%" y="1077" width="0.0120%" height="15" fill="rgb(238,102,44)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="69.0070%" y="1061" width="0.0120%" height="15" fill="rgb(236,46,40)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="69.0070%" y="1045" width="0.0120%" height="15" fill="rgb(247,202,50)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="1055.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="69.0070%" y="1029" width="0.0120%" height="15" fill="rgb(209,99,20)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="69.0070%" y="1013" width="0.0120%" height="15" fill="rgb(252,27,34)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="69.0070%" y="997" width="0.0120%" height="15" fill="rgb(215,206,23)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="69.0070%" y="981" width="0.0120%" height="15" fill="rgb(212,135,36)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="991.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="69.0070%" y="965" width="0.0120%" height="15" fill="rgb(240,189,1)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="69.0070%" y="949" width="0.0120%" height="15" fill="rgb(242,56,20)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="69.0070%" y="933" width="0.0120%" height="15" fill="rgb(247,132,33)" fg:x="5740" fg:w="1"/><text x="69.2570%" y="943.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="69.0310%" y="1077" width="0.0120%" height="15" fill="rgb(208,149,11)" fg:x="5742" fg:w="1"/><text x="69.2810%" y="1087.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="69.0430%" y="1029" width="0.0601%" height="15" fill="rgb(211,33,11)" fg:x="5743" fg:w="5"/><text x="69.2930%" y="1039.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="69.0551%" y="1013" width="0.0481%" height="15" fill="rgb(221,29,38)" fg:x="5744" fg:w="4"/><text x="69.3051%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (6 samples, 0.07%)</title><rect x="69.1031%" y="997" width="0.0721%" height="15" fill="rgb(206,182,49)" fg:x="5748" fg:w="6"/><text x="69.3531%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (6 samples, 0.07%)</title><rect x="69.1031%" y="981" width="0.0721%" height="15" fill="rgb(216,140,1)" fg:x="5748" fg:w="6"/><text x="69.3531%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="69.1031%" y="965" width="0.0721%" height="15" fill="rgb(232,57,40)" fg:x="5748" fg:w="6"/><text x="69.3531%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="69.1031%" y="949" width="0.0721%" height="15" fill="rgb(224,186,18)" fg:x="5748" fg:w="6"/><text x="69.3531%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="69.1031%" y="933" width="0.0721%" height="15" fill="rgb(215,121,11)" fg:x="5748" fg:w="6"/><text x="69.3531%" y="943.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="69.1152%" y="917" width="0.0601%" height="15" fill="rgb(245,147,10)" fg:x="5749" fg:w="5"/><text x="69.3652%" y="927.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="69.1272%" y="901" width="0.0481%" height="15" fill="rgb(238,153,13)" fg:x="5750" fg:w="4"/><text x="69.3772%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="69.1873%" y="869" width="0.0481%" height="15" fill="rgb(233,108,0)" fg:x="5755" fg:w="4"/><text x="69.4373%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="69.1873%" y="853" width="0.0481%" height="15" fill="rgb(212,157,17)" fg:x="5755" fg:w="4"/><text x="69.4373%" y="863.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="69.1873%" y="837" width="0.0481%" height="15" fill="rgb(225,213,38)" fg:x="5755" fg:w="4"/><text x="69.4373%" y="847.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="69.1873%" y="821" width="0.0481%" height="15" fill="rgb(248,16,11)" fg:x="5755" fg:w="4"/><text x="69.4373%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="69.1753%" y="981" width="0.0721%" height="15" fill="rgb(241,33,4)" fg:x="5754" fg:w="6"/><text x="69.4253%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (6 samples, 0.07%)</title><rect x="69.1753%" y="965" width="0.0721%" height="15" fill="rgb(222,26,43)" fg:x="5754" fg:w="6"/><text x="69.4253%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (5 samples, 0.06%)</title><rect x="69.1873%" y="949" width="0.0601%" height="15" fill="rgb(243,29,36)" fg:x="5755" fg:w="5"/><text x="69.4373%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (5 samples, 0.06%)</title><rect x="69.1873%" y="933" width="0.0601%" height="15" fill="rgb(241,9,27)" fg:x="5755" fg:w="5"/><text x="69.4373%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (5 samples, 0.06%)</title><rect x="69.1873%" y="917" width="0.0601%" height="15" fill="rgb(205,117,26)" fg:x="5755" fg:w="5"/><text x="69.4373%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (5 samples, 0.06%)</title><rect x="69.1873%" y="901" width="0.0601%" height="15" fill="rgb(209,80,39)" fg:x="5755" fg:w="5"/><text x="69.4373%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="69.1873%" y="885" width="0.0601%" height="15" fill="rgb(239,155,6)" fg:x="5755" fg:w="5"/><text x="69.4373%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="69.2354%" y="869" width="0.0120%" height="15" fill="rgb(212,104,12)" fg:x="5759" fg:w="1"/><text x="69.4854%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (21 samples, 0.25%)</title><rect x="69.1031%" y="1013" width="0.2525%" height="15" fill="rgb(234,204,3)" fg:x="5748" fg:w="21"/><text x="69.3531%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (15 samples, 0.18%)</title><rect x="69.1753%" y="997" width="0.1803%" height="15" fill="rgb(251,218,7)" fg:x="5754" fg:w="15"/><text x="69.4253%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (9 samples, 0.11%)</title><rect x="69.2474%" y="981" width="0.1082%" height="15" fill="rgb(221,81,32)" fg:x="5760" fg:w="9"/><text x="69.4974%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.11%)</title><rect x="69.2474%" y="965" width="0.1082%" height="15" fill="rgb(214,152,26)" fg:x="5760" fg:w="9"/><text x="69.4974%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.11%)</title><rect x="69.2474%" y="949" width="0.1082%" height="15" fill="rgb(223,22,3)" fg:x="5760" fg:w="9"/><text x="69.4974%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.11%)</title><rect x="69.2474%" y="933" width="0.1082%" height="15" fill="rgb(207,174,7)" fg:x="5760" fg:w="9"/><text x="69.4974%" y="943.50"></text></g><g><title>cfree (9 samples, 0.11%)</title><rect x="69.2474%" y="917" width="0.1082%" height="15" fill="rgb(224,19,52)" fg:x="5760" fg:w="9"/><text x="69.4974%" y="927.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="69.2594%" y="901" width="0.0962%" height="15" fill="rgb(228,24,14)" fg:x="5761" fg:w="8"/><text x="69.5094%" y="911.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="69.2835%" y="885" width="0.0721%" height="15" fill="rgb(230,153,43)" fg:x="5763" fg:w="6"/><text x="69.5335%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="69.3316%" y="869" width="0.0240%" height="15" fill="rgb(231,106,12)" fg:x="5767" fg:w="2"/><text x="69.5816%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (22 samples, 0.26%)</title><rect x="69.1031%" y="1029" width="0.2645%" height="15" fill="rgb(215,92,2)" fg:x="5748" fg:w="22"/><text x="69.3531%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (1 samples, 0.01%)</title><rect x="69.3556%" y="1013" width="0.0120%" height="15" fill="rgb(249,143,25)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="69.3556%" y="997" width="0.0120%" height="15" fill="rgb(252,7,35)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="69.3556%" y="981" width="0.0120%" height="15" fill="rgb(216,69,40)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (1 samples, 0.01%)</title><rect x="69.3556%" y="965" width="0.0120%" height="15" fill="rgb(240,36,33)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="69.3556%" y="949" width="0.0120%" height="15" fill="rgb(231,128,14)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.01%)</title><rect x="69.3556%" y="933" width="0.0120%" height="15" fill="rgb(245,143,14)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.01%)</title><rect x="69.3556%" y="917" width="0.0120%" height="15" fill="rgb(222,130,28)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (1 samples, 0.01%)</title><rect x="69.3556%" y="901" width="0.0120%" height="15" fill="rgb(212,10,48)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="911.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="69.3556%" y="885" width="0.0120%" height="15" fill="rgb(254,118,45)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="69.3556%" y="869" width="0.0120%" height="15" fill="rgb(228,6,45)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="69.3556%" y="853" width="0.0120%" height="15" fill="rgb(241,18,35)" fg:x="5769" fg:w="1"/><text x="69.6056%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="69.3797%" y="965" width="0.0120%" height="15" fill="rgb(227,214,53)" fg:x="5771" fg:w="1"/><text x="69.6297%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="69.3676%" y="1013" width="0.0481%" height="15" fill="rgb(224,107,51)" fg:x="5770" fg:w="4"/><text x="69.6176%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="69.3676%" y="997" width="0.0481%" height="15" fill="rgb(248,60,28)" fg:x="5770" fg:w="4"/><text x="69.6176%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="69.3676%" y="981" width="0.0481%" height="15" fill="rgb(249,101,23)" fg:x="5770" fg:w="4"/><text x="69.6176%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="69.3917%" y="965" width="0.0240%" height="15" fill="rgb(228,51,19)" fg:x="5772" fg:w="2"/><text x="69.6417%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="69.3917%" y="949" width="0.0240%" height="15" fill="rgb(213,20,6)" fg:x="5772" fg:w="2"/><text x="69.6417%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="69.4398%" y="997" width="0.0842%" height="15" fill="rgb(212,124,10)" fg:x="5776" fg:w="7"/><text x="69.6898%" y="1007.50"></text></g><g><title>core::ptr::read (6 samples, 0.07%)</title><rect x="69.4518%" y="981" width="0.0721%" height="15" fill="rgb(248,3,40)" fg:x="5777" fg:w="6"/><text x="69.7018%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="69.5961%" y="805" width="0.0240%" height="15" fill="rgb(223,178,23)" fg:x="5789" fg:w="2"/><text x="69.8461%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="69.6081%" y="789" width="0.0120%" height="15" fill="rgb(240,132,45)" fg:x="5790" fg:w="1"/><text x="69.8581%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.12%)</title><rect x="69.5480%" y="853" width="0.1202%" height="15" fill="rgb(245,164,36)" fg:x="5785" fg:w="10"/><text x="69.7980%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.12%)</title><rect x="69.5480%" y="837" width="0.1202%" height="15" fill="rgb(231,188,53)" fg:x="5785" fg:w="10"/><text x="69.7980%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.12%)</title><rect x="69.5480%" y="821" width="0.1202%" height="15" fill="rgb(237,198,39)" fg:x="5785" fg:w="10"/><text x="69.7980%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.05%)</title><rect x="69.6201%" y="805" width="0.0481%" height="15" fill="rgb(223,120,35)" fg:x="5791" fg:w="4"/><text x="69.8701%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="69.6562%" y="789" width="0.0120%" height="15" fill="rgb(253,107,49)" fg:x="5794" fg:w="1"/><text x="69.9062%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (13 samples, 0.16%)</title><rect x="69.5239%" y="885" width="0.1563%" height="15" fill="rgb(216,44,31)" fg:x="5783" fg:w="13"/><text x="69.7739%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u32 (13 samples, 0.16%)</title><rect x="69.5239%" y="869" width="0.1563%" height="15" fill="rgb(253,87,21)" fg:x="5783" fg:w="13"/><text x="69.7739%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="69.6682%" y="853" width="0.0120%" height="15" fill="rgb(226,18,2)" fg:x="5795" fg:w="1"/><text x="69.9182%" y="863.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (15 samples, 0.18%)</title><rect x="69.5239%" y="901" width="0.1803%" height="15" fill="rgb(216,8,46)" fg:x="5783" fg:w="15"/><text x="69.7739%" y="911.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (2 samples, 0.02%)</title><rect x="69.6802%" y="885" width="0.0240%" height="15" fill="rgb(226,140,39)" fg:x="5796" fg:w="2"/><text x="69.9302%" y="895.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (2 samples, 0.02%)</title><rect x="69.6802%" y="869" width="0.0240%" height="15" fill="rgb(221,194,54)" fg:x="5796" fg:w="2"/><text x="69.9302%" y="879.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="69.7403%" y="805" width="0.0120%" height="15" fill="rgb(213,92,11)" fg:x="5801" fg:w="1"/><text x="69.9903%" y="815.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="69.7403%" y="789" width="0.0120%" height="15" fill="rgb(229,162,46)" fg:x="5801" fg:w="1"/><text x="69.9903%" y="799.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="69.7403%" y="773" width="0.0120%" height="15" fill="rgb(214,111,36)" fg:x="5801" fg:w="1"/><text x="69.9903%" y="783.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.06%)</title><rect x="69.7043%" y="821" width="0.0601%" height="15" fill="rgb(207,6,21)" fg:x="5798" fg:w="5"/><text x="69.9543%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="69.7523%" y="805" width="0.0120%" height="15" fill="rgb(213,127,38)" fg:x="5802" fg:w="1"/><text x="70.0023%" y="815.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (21 samples, 0.25%)</title><rect x="69.5239%" y="917" width="0.2525%" height="15" fill="rgb(238,118,32)" fg:x="5783" fg:w="21"/><text x="69.7739%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.07%)</title><rect x="69.7043%" y="901" width="0.0721%" height="15" fill="rgb(240,139,39)" fg:x="5798" fg:w="6"/><text x="69.9543%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.07%)</title><rect x="69.7043%" y="885" width="0.0721%" height="15" fill="rgb(235,10,37)" fg:x="5798" fg:w="6"/><text x="69.9543%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (6 samples, 0.07%)</title><rect x="69.7043%" y="869" width="0.0721%" height="15" fill="rgb(249,171,38)" fg:x="5798" fg:w="6"/><text x="69.9543%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (6 samples, 0.07%)</title><rect x="69.7043%" y="853" width="0.0721%" height="15" fill="rgb(242,144,32)" fg:x="5798" fg:w="6"/><text x="69.9543%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (6 samples, 0.07%)</title><rect x="69.7043%" y="837" width="0.0721%" height="15" fill="rgb(217,117,21)" fg:x="5798" fg:w="6"/><text x="69.9543%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="69.7644%" y="821" width="0.0120%" height="15" fill="rgb(249,87,1)" fg:x="5803" fg:w="1"/><text x="70.0144%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="69.7764%" y="837" width="0.0120%" height="15" fill="rgb(248,196,48)" fg:x="5804" fg:w="1"/><text x="70.0264%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="69.7764%" y="821" width="0.0120%" height="15" fill="rgb(251,206,33)" fg:x="5804" fg:w="1"/><text x="70.0264%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="69.7764%" y="869" width="0.0240%" height="15" fill="rgb(232,141,28)" fg:x="5804" fg:w="2"/><text x="70.0264%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="69.7764%" y="853" width="0.0240%" height="15" fill="rgb(209,167,14)" fg:x="5804" fg:w="2"/><text x="70.0264%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="69.7884%" y="837" width="0.0120%" height="15" fill="rgb(225,11,50)" fg:x="5805" fg:w="1"/><text x="70.0384%" y="847.50"></text></g><g><title>core::hash::Hash::hash_slice (24 samples, 0.29%)</title><rect x="69.5239%" y="949" width="0.2885%" height="15" fill="rgb(209,50,20)" fg:x="5783" fg:w="24"/><text x="69.7739%" y="959.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (24 samples, 0.29%)</title><rect x="69.5239%" y="933" width="0.2885%" height="15" fill="rgb(212,17,46)" fg:x="5783" fg:w="24"/><text x="69.7739%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.04%)</title><rect x="69.7764%" y="917" width="0.0361%" height="15" fill="rgb(216,101,39)" fg:x="5804" fg:w="3"/><text x="70.0264%" y="927.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.04%)</title><rect x="69.7764%" y="901" width="0.0361%" height="15" fill="rgb(212,228,48)" fg:x="5804" fg:w="3"/><text x="70.0264%" y="911.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.04%)</title><rect x="69.7764%" y="885" width="0.0361%" height="15" fill="rgb(250,6,50)" fg:x="5804" fg:w="3"/><text x="70.0264%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="69.8004%" y="869" width="0.0120%" height="15" fill="rgb(250,160,48)" fg:x="5806" fg:w="1"/><text x="70.0504%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.06%)</title><rect x="69.8485%" y="885" width="0.0601%" height="15" fill="rgb(244,216,33)" fg:x="5810" fg:w="5"/><text x="70.0985%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="69.8846%" y="869" width="0.0240%" height="15" fill="rgb(207,157,5)" fg:x="5813" fg:w="2"/><text x="70.1346%" y="879.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="69.9086%" y="885" width="0.0120%" height="15" fill="rgb(228,199,8)" fg:x="5815" fg:w="1"/><text x="70.1586%" y="895.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="69.9086%" y="869" width="0.0120%" height="15" fill="rgb(227,80,20)" fg:x="5815" fg:w="1"/><text x="70.1586%" y="879.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="69.9086%" y="853" width="0.0120%" height="15" fill="rgb(222,9,33)" fg:x="5815" fg:w="1"/><text x="70.1586%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="69.8125%" y="917" width="0.1322%" height="15" fill="rgb(239,44,28)" fg:x="5807" fg:w="11"/><text x="70.0625%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="69.8125%" y="901" width="0.1322%" height="15" fill="rgb(249,187,43)" fg:x="5807" fg:w="11"/><text x="70.0625%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="69.9207%" y="885" width="0.0240%" height="15" fill="rgb(216,141,28)" fg:x="5816" fg:w="2"/><text x="70.1707%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (36 samples, 0.43%)</title><rect x="69.5239%" y="981" width="0.4328%" height="15" fill="rgb(230,154,53)" fg:x="5783" fg:w="36"/><text x="69.7739%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (36 samples, 0.43%)</title><rect x="69.5239%" y="965" width="0.4328%" height="15" fill="rgb(227,82,4)" fg:x="5783" fg:w="36"/><text x="69.7739%" y="975.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (12 samples, 0.14%)</title><rect x="69.8125%" y="949" width="0.1443%" height="15" fill="rgb(220,107,16)" fg:x="5807" fg:w="12"/><text x="70.0625%" y="959.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.14%)</title><rect x="69.8125%" y="933" width="0.1443%" height="15" fill="rgb(207,187,2)" fg:x="5807" fg:w="12"/><text x="70.0625%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="69.9447%" y="917" width="0.0120%" height="15" fill="rgb(210,162,52)" fg:x="5818" fg:w="1"/><text x="70.1947%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="70.2092%" y="853" width="0.0120%" height="15" fill="rgb(217,216,49)" fg:x="5840" fg:w="1"/><text x="70.4592%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.06%)</title><rect x="70.1851%" y="869" width="0.0601%" height="15" fill="rgb(218,146,49)" fg:x="5838" fg:w="5"/><text x="70.4351%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="70.2212%" y="853" width="0.0240%" height="15" fill="rgb(216,55,40)" fg:x="5841" fg:w="2"/><text x="70.4712%" y="863.50"></text></g><g><title>core::cmp::min (3 samples, 0.04%)</title><rect x="70.2453%" y="869" width="0.0361%" height="15" fill="rgb(208,196,21)" fg:x="5843" fg:w="3"/><text x="70.4953%" y="879.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.04%)</title><rect x="70.2453%" y="853" width="0.0361%" height="15" fill="rgb(242,117,42)" fg:x="5843" fg:w="3"/><text x="70.4953%" y="863.50"></text></g><g><title>core::cmp::min_by (3 samples, 0.04%)</title><rect x="70.2453%" y="837" width="0.0361%" height="15" fill="rgb(210,11,23)" fg:x="5843" fg:w="3"/><text x="70.4953%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 0.48%)</title><rect x="69.9808%" y="917" width="0.4809%" height="15" fill="rgb(217,110,2)" fg:x="5821" fg:w="40"/><text x="70.2308%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (40 samples, 0.48%)</title><rect x="69.9808%" y="901" width="0.4809%" height="15" fill="rgb(229,77,54)" fg:x="5821" fg:w="40"/><text x="70.2308%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 0.48%)</title><rect x="69.9808%" y="885" width="0.4809%" height="15" fill="rgb(218,53,16)" fg:x="5821" fg:w="40"/><text x="70.2308%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (15 samples, 0.18%)</title><rect x="70.2813%" y="869" width="0.1803%" height="15" fill="rgb(215,38,13)" fg:x="5846" fg:w="15"/><text x="70.5313%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="70.4376%" y="853" width="0.0240%" height="15" fill="rgb(235,42,18)" fg:x="5859" fg:w="2"/><text x="70.6876%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (42 samples, 0.50%)</title><rect x="69.9687%" y="949" width="0.5049%" height="15" fill="rgb(219,66,54)" fg:x="5820" fg:w="42"/><text x="70.2187%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u32 (42 samples, 0.50%)</title><rect x="69.9687%" y="933" width="0.5049%" height="15" fill="rgb(222,205,4)" fg:x="5820" fg:w="42"/><text x="70.2187%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="70.4616%" y="917" width="0.0120%" height="15" fill="rgb(227,213,46)" fg:x="5861" fg:w="1"/><text x="70.7116%" y="927.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (48 samples, 0.58%)</title><rect x="69.9567%" y="965" width="0.5771%" height="15" fill="rgb(250,145,42)" fg:x="5819" fg:w="48"/><text x="70.2067%" y="975.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (5 samples, 0.06%)</title><rect x="70.4737%" y="949" width="0.0601%" height="15" fill="rgb(219,15,2)" fg:x="5862" fg:w="5"/><text x="70.7237%" y="959.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (2 samples, 0.02%)</title><rect x="70.5097%" y="933" width="0.0240%" height="15" fill="rgb(231,181,52)" fg:x="5865" fg:w="2"/><text x="70.7597%" y="943.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (1 samples, 0.01%)</title><rect x="70.5218%" y="917" width="0.0120%" height="15" fill="rgb(235,1,42)" fg:x="5866" fg:w="1"/><text x="70.7718%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="70.6179%" y="885" width="0.0240%" height="15" fill="rgb(249,88,27)" fg:x="5874" fg:w="2"/><text x="70.8679%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="70.6300%" y="869" width="0.0120%" height="15" fill="rgb(235,145,16)" fg:x="5875" fg:w="1"/><text x="70.8800%" y="879.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="70.6420%" y="885" width="0.0120%" height="15" fill="rgb(237,114,19)" fg:x="5876" fg:w="1"/><text x="70.8920%" y="895.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="70.6420%" y="869" width="0.0120%" height="15" fill="rgb(238,51,50)" fg:x="5876" fg:w="1"/><text x="70.8920%" y="879.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="70.6420%" y="853" width="0.0120%" height="15" fill="rgb(205,194,25)" fg:x="5876" fg:w="1"/><text x="70.8920%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="70.6901%" y="869" width="0.0120%" height="15" fill="rgb(215,203,17)" fg:x="5880" fg:w="1"/><text x="70.9401%" y="879.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="70.7021%" y="869" width="0.0120%" height="15" fill="rgb(233,112,49)" fg:x="5881" fg:w="1"/><text x="70.9521%" y="879.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="70.7021%" y="853" width="0.0120%" height="15" fill="rgb(241,130,26)" fg:x="5881" fg:w="1"/><text x="70.9521%" y="863.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="70.7021%" y="837" width="0.0120%" height="15" fill="rgb(252,223,19)" fg:x="5881" fg:w="1"/><text x="70.9521%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (64 samples, 0.77%)</title><rect x="69.9567%" y="981" width="0.7694%" height="15" fill="rgb(211,95,25)" fg:x="5819" fg:w="64"/><text x="70.2067%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.19%)</title><rect x="70.5338%" y="965" width="0.1924%" height="15" fill="rgb(251,182,27)" fg:x="5867" fg:w="16"/><text x="70.7838%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16 samples, 0.19%)</title><rect x="70.5338%" y="949" width="0.1924%" height="15" fill="rgb(238,24,4)" fg:x="5867" fg:w="16"/><text x="70.7838%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (16 samples, 0.19%)</title><rect x="70.5338%" y="933" width="0.1924%" height="15" fill="rgb(224,220,25)" fg:x="5867" fg:w="16"/><text x="70.7838%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (16 samples, 0.19%)</title><rect x="70.5338%" y="917" width="0.1924%" height="15" fill="rgb(239,133,26)" fg:x="5867" fg:w="16"/><text x="70.7838%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (16 samples, 0.19%)</title><rect x="70.5338%" y="901" width="0.1924%" height="15" fill="rgb(211,94,48)" fg:x="5867" fg:w="16"/><text x="70.7838%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.07%)</title><rect x="70.6540%" y="885" width="0.0721%" height="15" fill="rgb(239,87,6)" fg:x="5877" fg:w="6"/><text x="70.9040%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="70.7141%" y="869" width="0.0120%" height="15" fill="rgb(227,62,0)" fg:x="5882" fg:w="1"/><text x="70.9641%" y="879.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (106 samples, 1.27%)</title><rect x="69.5239%" y="997" width="1.2743%" height="15" fill="rgb(211,226,4)" fg:x="5783" fg:w="106"/><text x="69.7739%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (6 samples, 0.07%)</title><rect x="70.7261%" y="981" width="0.0721%" height="15" fill="rgb(253,38,52)" fg:x="5883" fg:w="6"/><text x="70.9761%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.07%)</title><rect x="70.7261%" y="965" width="0.0721%" height="15" fill="rgb(229,126,40)" fg:x="5883" fg:w="6"/><text x="70.9761%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="70.7261%" y="949" width="0.0721%" height="15" fill="rgb(229,165,44)" fg:x="5883" fg:w="6"/><text x="70.9761%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="70.7261%" y="933" width="0.0721%" height="15" fill="rgb(247,95,47)" fg:x="5883" fg:w="6"/><text x="70.9761%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.05%)</title><rect x="70.7502%" y="917" width="0.0481%" height="15" fill="rgb(216,140,30)" fg:x="5885" fg:w="4"/><text x="71.0002%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="70.8464%" y="949" width="0.0120%" height="15" fill="rgb(246,214,8)" fg:x="5893" fg:w="1"/><text x="71.0964%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="70.8464%" y="933" width="0.0120%" height="15" fill="rgb(227,224,15)" fg:x="5893" fg:w="1"/><text x="71.0964%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="70.8464%" y="917" width="0.0120%" height="15" fill="rgb(233,175,4)" fg:x="5893" fg:w="1"/><text x="71.0964%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="70.8464%" y="901" width="0.0120%" height="15" fill="rgb(221,66,45)" fg:x="5893" fg:w="1"/><text x="71.0964%" y="911.50"></text></g><g><title>alloc::slice::_&lt;impl [T]&gt;::sort_by_key::_{{closure}} (1 samples, 0.01%)</title><rect x="70.8584%" y="949" width="0.0120%" height="15" fill="rgb(221,178,18)" fg:x="5894" fg:w="1"/><text x="71.1084%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="70.8584%" y="933" width="0.0120%" height="15" fill="rgb(213,81,29)" fg:x="5894" fg:w="1"/><text x="71.1084%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="70.8704%" y="949" width="0.0601%" height="15" fill="rgb(220,89,49)" fg:x="5895" fg:w="5"/><text x="71.1204%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="70.9305%" y="949" width="0.0240%" height="15" fill="rgb(227,60,33)" fg:x="5900" fg:w="2"/><text x="71.1805%" y="959.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="70.9305%" y="933" width="0.0240%" height="15" fill="rgb(205,113,12)" fg:x="5900" fg:w="2"/><text x="71.1805%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="70.9305%" y="917" width="0.0240%" height="15" fill="rgb(211,32,1)" fg:x="5900" fg:w="2"/><text x="71.1805%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (17 samples, 0.20%)</title><rect x="70.7983%" y="997" width="0.2044%" height="15" fill="rgb(246,2,12)" fg:x="5889" fg:w="17"/><text x="71.0483%" y="1007.50"></text></g><g><title>alloc::slice::stable_sort (17 samples, 0.20%)</title><rect x="70.7983%" y="981" width="0.2044%" height="15" fill="rgb(243,37,27)" fg:x="5889" fg:w="17"/><text x="71.0483%" y="991.50"></text></g><g><title>core::slice::sort::insert_tail (14 samples, 0.17%)</title><rect x="70.8343%" y="965" width="0.1683%" height="15" fill="rgb(248,211,31)" fg:x="5892" fg:w="14"/><text x="71.0843%" y="975.50"></text></g><g><title>core::ptr::read (4 samples, 0.05%)</title><rect x="70.9546%" y="949" width="0.0481%" height="15" fill="rgb(242,146,47)" fg:x="5902" fg:w="4"/><text x="71.2046%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.0026%" y="837" width="0.0120%" height="15" fill="rgb(206,70,20)" fg:x="5906" fg:w="1"/><text x="71.2526%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.0026%" y="821" width="0.0120%" height="15" fill="rgb(215,10,51)" fg:x="5906" fg:w="1"/><text x="71.2526%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.0026%" y="805" width="0.0120%" height="15" fill="rgb(243,178,53)" fg:x="5906" fg:w="1"/><text x="71.2526%" y="815.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="71.0026%" y="789" width="0.0120%" height="15" fill="rgb(233,221,20)" fg:x="5906" fg:w="1"/><text x="71.2526%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.01%)</title><rect x="71.0026%" y="773" width="0.0120%" height="15" fill="rgb(218,95,35)" fg:x="5906" fg:w="1"/><text x="71.2526%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="71.0026%" y="757" width="0.0120%" height="15" fill="rgb(229,13,5)" fg:x="5906" fg:w="1"/><text x="71.2526%" y="767.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="71.0026%" y="933" width="0.0481%" height="15" fill="rgb(252,164,30)" fg:x="5906" fg:w="4"/><text x="71.2526%" y="943.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="71.0026%" y="917" width="0.0481%" height="15" fill="rgb(232,68,36)" fg:x="5906" fg:w="4"/><text x="71.2526%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="71.0026%" y="901" width="0.0481%" height="15" fill="rgb(219,59,54)" fg:x="5906" fg:w="4"/><text x="71.2526%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="71.0026%" y="885" width="0.0481%" height="15" fill="rgb(250,92,33)" fg:x="5906" fg:w="4"/><text x="71.2526%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="71.0026%" y="869" width="0.0481%" height="15" fill="rgb(229,162,54)" fg:x="5906" fg:w="4"/><text x="71.2526%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="71.0026%" y="853" width="0.0481%" height="15" fill="rgb(244,114,52)" fg:x="5906" fg:w="4"/><text x="71.2526%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="71.0147%" y="837" width="0.0361%" height="15" fill="rgb(212,211,43)" fg:x="5907" fg:w="3"/><text x="71.2647%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="71.0147%" y="821" width="0.0361%" height="15" fill="rgb(226,147,8)" fg:x="5907" fg:w="3"/><text x="71.2647%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="71.0147%" y="805" width="0.0361%" height="15" fill="rgb(226,23,13)" fg:x="5907" fg:w="3"/><text x="71.2647%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="71.0147%" y="789" width="0.0361%" height="15" fill="rgb(240,63,4)" fg:x="5907" fg:w="3"/><text x="71.2647%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="71.0147%" y="773" width="0.0361%" height="15" fill="rgb(221,1,32)" fg:x="5907" fg:w="3"/><text x="71.2647%" y="783.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="71.0147%" y="757" width="0.0361%" height="15" fill="rgb(242,117,10)" fg:x="5907" fg:w="3"/><text x="71.2647%" y="767.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="71.0267%" y="741" width="0.0240%" height="15" fill="rgb(249,172,44)" fg:x="5908" fg:w="2"/><text x="71.2767%" y="751.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="71.0628%" y="837" width="0.0120%" height="15" fill="rgb(244,46,45)" fg:x="5911" fg:w="1"/><text x="71.3128%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="71.0507%" y="933" width="0.0361%" height="15" fill="rgb(206,43,17)" fg:x="5910" fg:w="3"/><text x="71.3007%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="71.0507%" y="917" width="0.0361%" height="15" fill="rgb(239,218,39)" fg:x="5910" fg:w="3"/><text x="71.3007%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="71.0507%" y="901" width="0.0361%" height="15" fill="rgb(208,169,54)" fg:x="5910" fg:w="3"/><text x="71.3007%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="71.0507%" y="885" width="0.0361%" height="15" fill="rgb(247,25,42)" fg:x="5910" fg:w="3"/><text x="71.3007%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="71.0507%" y="869" width="0.0361%" height="15" fill="rgb(226,23,31)" fg:x="5910" fg:w="3"/><text x="71.3007%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="71.0507%" y="853" width="0.0361%" height="15" fill="rgb(247,16,28)" fg:x="5910" fg:w="3"/><text x="71.3007%" y="863.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="71.0748%" y="837" width="0.0120%" height="15" fill="rgb(231,147,38)" fg:x="5912" fg:w="1"/><text x="71.3248%" y="847.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="71.0868%" y="933" width="0.0120%" height="15" fill="rgb(253,81,48)" fg:x="5913" fg:w="1"/><text x="71.3368%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.11%)</title><rect x="71.0026%" y="997" width="0.1082%" height="15" fill="rgb(249,222,43)" fg:x="5906" fg:w="9"/><text x="71.2526%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="71.0026%" y="981" width="0.1082%" height="15" fill="rgb(221,3,27)" fg:x="5906" fg:w="9"/><text x="71.2526%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="71.0026%" y="965" width="0.1082%" height="15" fill="rgb(228,180,5)" fg:x="5906" fg:w="9"/><text x="71.2526%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="71.0026%" y="949" width="0.1082%" height="15" fill="rgb(227,131,42)" fg:x="5906" fg:w="9"/><text x="71.2526%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="71.0988%" y="933" width="0.0120%" height="15" fill="rgb(212,3,39)" fg:x="5914" fg:w="1"/><text x="71.3488%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="71.0988%" y="917" width="0.0120%" height="15" fill="rgb(226,45,5)" fg:x="5914" fg:w="1"/><text x="71.3488%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="71.0988%" y="901" width="0.0120%" height="15" fill="rgb(215,167,45)" fg:x="5914" fg:w="1"/><text x="71.3488%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="71.1108%" y="997" width="0.0361%" height="15" fill="rgb(250,218,53)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="1007.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="71.1108%" y="981" width="0.0361%" height="15" fill="rgb(207,140,0)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (3 samples, 0.04%)</title><rect x="71.1108%" y="965" width="0.0361%" height="15" fill="rgb(238,133,51)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="975.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="71.1108%" y="949" width="0.0361%" height="15" fill="rgb(218,203,53)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="71.1108%" y="933" width="0.0361%" height="15" fill="rgb(226,184,25)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="71.1108%" y="917" width="0.0361%" height="15" fill="rgb(231,121,21)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.04%)</title><rect x="71.1108%" y="901" width="0.0361%" height="15" fill="rgb(251,14,34)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.04%)</title><rect x="71.1108%" y="885" width="0.0361%" height="15" fill="rgb(249,193,11)" fg:x="5915" fg:w="3"/><text x="71.3608%" y="895.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="71.1229%" y="869" width="0.0240%" height="15" fill="rgb(220,172,37)" fg:x="5916" fg:w="2"/><text x="71.3729%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="71.1349%" y="853" width="0.0120%" height="15" fill="rgb(231,229,43)" fg:x="5917" fg:w="1"/><text x="71.3849%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (152 samples, 1.83%)</title><rect x="69.3676%" y="1029" width="1.8274%" height="15" fill="rgb(250,161,5)" fg:x="5770" fg:w="152"/><text x="69.6176%" y="1039.50">h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (148 samples, 1.78%)</title><rect x="69.4157%" y="1013" width="1.7793%" height="15" fill="rgb(218,225,18)" fg:x="5774" fg:w="148"/><text x="69.6657%" y="1023.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (4 samples, 0.05%)</title><rect x="71.1469%" y="997" width="0.0481%" height="15" fill="rgb(245,45,42)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (4 samples, 0.05%)</title><rect x="71.1469%" y="981" width="0.0481%" height="15" fill="rgb(211,115,1)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (4 samples, 0.05%)</title><rect x="71.1469%" y="965" width="0.0481%" height="15" fill="rgb(248,133,52)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (4 samples, 0.05%)</title><rect x="71.1469%" y="949" width="0.0481%" height="15" fill="rgb(238,100,21)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="71.1469%" y="933" width="0.0481%" height="15" fill="rgb(247,144,11)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="71.1469%" y="917" width="0.0481%" height="15" fill="rgb(206,164,16)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="71.1469%" y="901" width="0.0481%" height="15" fill="rgb(222,34,3)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="911.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="71.1469%" y="885" width="0.0481%" height="15" fill="rgb(248,82,4)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="895.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="71.1469%" y="869" width="0.0481%" height="15" fill="rgb(228,81,46)" fg:x="5918" fg:w="4"/><text x="71.3969%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.1950%" y="997" width="0.0120%" height="15" fill="rgb(227,67,47)" fg:x="5922" fg:w="1"/><text x="71.4450%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="71.1950%" y="981" width="0.0120%" height="15" fill="rgb(215,93,53)" fg:x="5922" fg:w="1"/><text x="71.4450%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="71.2190%" y="933" width="0.0120%" height="15" fill="rgb(248,194,39)" fg:x="5924" fg:w="1"/><text x="71.4690%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="71.2792%" y="885" width="0.0361%" height="15" fill="rgb(215,5,19)" fg:x="5929" fg:w="3"/><text x="71.5292%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (9 samples, 0.11%)</title><rect x="71.2311%" y="933" width="0.1082%" height="15" fill="rgb(226,215,51)" fg:x="5925" fg:w="9"/><text x="71.4811%" y="943.50"></text></g><g><title>alloc::slice::stable_sort (9 samples, 0.11%)</title><rect x="71.2311%" y="917" width="0.1082%" height="15" fill="rgb(225,56,26)" fg:x="5925" fg:w="9"/><text x="71.4811%" y="927.50"></text></g><g><title>core::slice::sort::insert_tail (6 samples, 0.07%)</title><rect x="71.2671%" y="901" width="0.0721%" height="15" fill="rgb(222,75,29)" fg:x="5928" fg:w="6"/><text x="71.5171%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="71.3152%" y="885" width="0.0240%" height="15" fill="rgb(236,139,6)" fg:x="5932" fg:w="2"/><text x="71.5652%" y="895.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="71.3152%" y="869" width="0.0240%" height="15" fill="rgb(223,137,36)" fg:x="5932" fg:w="2"/><text x="71.5652%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="71.3152%" y="853" width="0.0240%" height="15" fill="rgb(226,99,2)" fg:x="5932" fg:w="2"/><text x="71.5652%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="71.3393%" y="853" width="0.0721%" height="15" fill="rgb(206,133,23)" fg:x="5934" fg:w="6"/><text x="71.5893%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6 samples, 0.07%)</title><rect x="71.3393%" y="837" width="0.0721%" height="15" fill="rgb(243,173,15)" fg:x="5934" fg:w="6"/><text x="71.5893%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.02%)</title><rect x="71.3874%" y="821" width="0.0240%" height="15" fill="rgb(228,69,28)" fg:x="5938" fg:w="2"/><text x="71.6374%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.02%)</title><rect x="71.3874%" y="805" width="0.0240%" height="15" fill="rgb(212,51,22)" fg:x="5938" fg:w="2"/><text x="71.6374%" y="815.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="71.4595%" y="757" width="0.0120%" height="15" fill="rgb(227,113,0)" fg:x="5944" fg:w="1"/><text x="71.7095%" y="767.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="71.4114%" y="773" width="0.0721%" height="15" fill="rgb(252,84,27)" fg:x="5940" fg:w="6"/><text x="71.6614%" y="783.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (1 samples, 0.01%)</title><rect x="71.4715%" y="757" width="0.0120%" height="15" fill="rgb(223,145,39)" fg:x="5945" fg:w="1"/><text x="71.7215%" y="767.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (9 samples, 0.11%)</title><rect x="71.4114%" y="789" width="0.1082%" height="15" fill="rgb(239,219,30)" fg:x="5940" fg:w="9"/><text x="71.6614%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="71.4835%" y="773" width="0.0361%" height="15" fill="rgb(224,196,39)" fg:x="5946" fg:w="3"/><text x="71.7335%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.04%)</title><rect x="71.4835%" y="757" width="0.0361%" height="15" fill="rgb(205,35,43)" fg:x="5946" fg:w="3"/><text x="71.7335%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="71.4835%" y="741" width="0.0361%" height="15" fill="rgb(228,201,21)" fg:x="5946" fg:w="3"/><text x="71.7335%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="71.4835%" y="725" width="0.0361%" height="15" fill="rgb(237,118,16)" fg:x="5946" fg:w="3"/><text x="71.7335%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="71.4835%" y="709" width="0.0361%" height="15" fill="rgb(241,17,19)" fg:x="5946" fg:w="3"/><text x="71.7335%" y="719.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="71.4835%" y="693" width="0.0361%" height="15" fill="rgb(214,10,25)" fg:x="5946" fg:w="3"/><text x="71.7335%" y="703.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="71.5316%" y="629" width="0.0240%" height="15" fill="rgb(238,37,29)" fg:x="5950" fg:w="2"/><text x="71.7816%" y="639.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (19 samples, 0.23%)</title><rect x="71.3393%" y="933" width="0.2284%" height="15" fill="rgb(253,83,25)" fg:x="5934" fg:w="19"/><text x="71.5893%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.23%)</title><rect x="71.3393%" y="917" width="0.2284%" height="15" fill="rgb(234,192,12)" fg:x="5934" fg:w="19"/><text x="71.5893%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.23%)</title><rect x="71.3393%" y="901" width="0.2284%" height="15" fill="rgb(241,216,45)" fg:x="5934" fg:w="19"/><text x="71.5893%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (19 samples, 0.23%)</title><rect x="71.3393%" y="885" width="0.2284%" height="15" fill="rgb(242,22,33)" fg:x="5934" fg:w="19"/><text x="71.5893%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.23%)</title><rect x="71.3393%" y="869" width="0.2284%" height="15" fill="rgb(231,105,49)" fg:x="5934" fg:w="19"/><text x="71.5893%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (13 samples, 0.16%)</title><rect x="71.4114%" y="853" width="0.1563%" height="15" fill="rgb(218,204,15)" fg:x="5940" fg:w="13"/><text x="71.6614%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (13 samples, 0.16%)</title><rect x="71.4114%" y="837" width="0.1563%" height="15" fill="rgb(235,138,41)" fg:x="5940" fg:w="13"/><text x="71.6614%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.16%)</title><rect x="71.4114%" y="821" width="0.1563%" height="15" fill="rgb(246,0,9)" fg:x="5940" fg:w="13"/><text x="71.6614%" y="831.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (13 samples, 0.16%)</title><rect x="71.4114%" y="805" width="0.1563%" height="15" fill="rgb(210,74,4)" fg:x="5940" fg:w="13"/><text x="71.6614%" y="815.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.05%)</title><rect x="71.5196%" y="789" width="0.0481%" height="15" fill="rgb(250,60,41)" fg:x="5949" fg:w="4"/><text x="71.7696%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="71.5316%" y="773" width="0.0361%" height="15" fill="rgb(220,115,12)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="71.5316%" y="757" width="0.0361%" height="15" fill="rgb(237,100,13)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.04%)</title><rect x="71.5316%" y="741" width="0.0361%" height="15" fill="rgb(213,55,26)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="71.5316%" y="725" width="0.0361%" height="15" fill="rgb(216,17,4)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.04%)</title><rect x="71.5316%" y="709" width="0.0361%" height="15" fill="rgb(220,153,47)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.04%)</title><rect x="71.5316%" y="693" width="0.0361%" height="15" fill="rgb(215,131,9)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="71.5316%" y="677" width="0.0361%" height="15" fill="rgb(233,46,42)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="687.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="71.5316%" y="661" width="0.0361%" height="15" fill="rgb(226,86,7)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="671.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="71.5316%" y="645" width="0.0361%" height="15" fill="rgb(239,226,21)" fg:x="5950" fg:w="3"/><text x="71.7816%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="71.5557%" y="629" width="0.0120%" height="15" fill="rgb(244,137,22)" fg:x="5952" fg:w="1"/><text x="71.8057%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="71.5557%" y="613" width="0.0120%" height="15" fill="rgb(211,139,35)" fg:x="5952" fg:w="1"/><text x="71.8057%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="71.5557%" y="597" width="0.0120%" height="15" fill="rgb(214,62,50)" fg:x="5952" fg:w="1"/><text x="71.8057%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="71.5557%" y="581" width="0.0120%" height="15" fill="rgb(212,113,44)" fg:x="5952" fg:w="1"/><text x="71.8057%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="71.5557%" y="565" width="0.0120%" height="15" fill="rgb(226,150,43)" fg:x="5952" fg:w="1"/><text x="71.8057%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="71.5557%" y="549" width="0.0120%" height="15" fill="rgb(250,71,37)" fg:x="5952" fg:w="1"/><text x="71.8057%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="71.6278%" y="757" width="0.0120%" height="15" fill="rgb(219,76,19)" fg:x="5958" fg:w="1"/><text x="71.8778%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6398%" y="709" width="0.0120%" height="15" fill="rgb(250,39,11)" fg:x="5959" fg:w="1"/><text x="71.8898%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="71.6518%" y="709" width="0.0481%" height="15" fill="rgb(230,64,31)" fg:x="5960" fg:w="4"/><text x="71.9018%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="71.6518%" y="693" width="0.0481%" height="15" fill="rgb(208,222,23)" fg:x="5960" fg:w="4"/><text x="71.9018%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="71.6518%" y="677" width="0.0481%" height="15" fill="rgb(227,125,18)" fg:x="5960" fg:w="4"/><text x="71.9018%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="71.6518%" y="661" width="0.0481%" height="15" fill="rgb(234,210,9)" fg:x="5960" fg:w="4"/><text x="71.9018%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="71.6518%" y="645" width="0.0481%" height="15" fill="rgb(217,127,24)" fg:x="5960" fg:w="4"/><text x="71.9018%" y="655.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="71.6518%" y="629" width="0.0481%" height="15" fill="rgb(239,141,48)" fg:x="5960" fg:w="4"/><text x="71.9018%" y="639.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="71.6879%" y="613" width="0.0120%" height="15" fill="rgb(227,109,8)" fg:x="5963" fg:w="1"/><text x="71.9379%" y="623.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (8 samples, 0.10%)</title><rect x="71.6278%" y="805" width="0.0962%" height="15" fill="rgb(235,184,23)" fg:x="5958" fg:w="8"/><text x="71.8778%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="71.6278%" y="789" width="0.0962%" height="15" fill="rgb(227,226,48)" fg:x="5958" fg:w="8"/><text x="71.8778%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="71.6278%" y="773" width="0.0962%" height="15" fill="rgb(206,150,11)" fg:x="5958" fg:w="8"/><text x="71.8778%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.08%)</title><rect x="71.6398%" y="757" width="0.0842%" height="15" fill="rgb(254,2,33)" fg:x="5959" fg:w="7"/><text x="71.8898%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.08%)</title><rect x="71.6398%" y="741" width="0.0842%" height="15" fill="rgb(243,160,20)" fg:x="5959" fg:w="7"/><text x="71.8898%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="71.6398%" y="725" width="0.0842%" height="15" fill="rgb(218,208,30)" fg:x="5959" fg:w="7"/><text x="71.8898%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="71.6999%" y="709" width="0.0240%" height="15" fill="rgb(224,120,49)" fg:x="5964" fg:w="2"/><text x="71.9499%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="71.7240%" y="773" width="0.0120%" height="15" fill="rgb(246,12,2)" fg:x="5966" fg:w="1"/><text x="71.9740%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.16%)</title><rect x="71.6158%" y="885" width="0.1563%" height="15" fill="rgb(236,117,3)" fg:x="5957" fg:w="13"/><text x="71.8658%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (13 samples, 0.16%)</title><rect x="71.6158%" y="869" width="0.1563%" height="15" fill="rgb(216,128,52)" fg:x="5957" fg:w="13"/><text x="71.8658%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.16%)</title><rect x="71.6158%" y="853" width="0.1563%" height="15" fill="rgb(246,145,19)" fg:x="5957" fg:w="13"/><text x="71.8658%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.14%)</title><rect x="71.6278%" y="837" width="0.1443%" height="15" fill="rgb(222,11,46)" fg:x="5958" fg:w="12"/><text x="71.8778%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (12 samples, 0.14%)</title><rect x="71.6278%" y="821" width="0.1443%" height="15" fill="rgb(245,82,36)" fg:x="5958" fg:w="12"/><text x="71.8778%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.05%)</title><rect x="71.7240%" y="805" width="0.0481%" height="15" fill="rgb(250,73,51)" fg:x="5966" fg:w="4"/><text x="71.9740%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (4 samples, 0.05%)</title><rect x="71.7240%" y="789" width="0.0481%" height="15" fill="rgb(221,189,23)" fg:x="5966" fg:w="4"/><text x="71.9740%" y="799.50"></text></g><g><title>core::ptr::write (3 samples, 0.04%)</title><rect x="71.7360%" y="773" width="0.0361%" height="15" fill="rgb(210,33,7)" fg:x="5967" fg:w="3"/><text x="71.9860%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.24%)</title><rect x="71.5677%" y="933" width="0.2404%" height="15" fill="rgb(210,107,22)" fg:x="5953" fg:w="20"/><text x="71.8177%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.24%)</title><rect x="71.5677%" y="917" width="0.2404%" height="15" fill="rgb(222,116,37)" fg:x="5953" fg:w="20"/><text x="71.8177%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.20%)</title><rect x="71.6038%" y="901" width="0.2044%" height="15" fill="rgb(254,17,48)" fg:x="5956" fg:w="17"/><text x="71.8538%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.04%)</title><rect x="71.7721%" y="885" width="0.0361%" height="15" fill="rgb(224,36,32)" fg:x="5970" fg:w="3"/><text x="72.0221%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="71.7721%" y="869" width="0.0361%" height="15" fill="rgb(232,90,46)" fg:x="5970" fg:w="3"/><text x="72.0221%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="71.7721%" y="853" width="0.0361%" height="15" fill="rgb(241,66,40)" fg:x="5970" fg:w="3"/><text x="72.0221%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="71.7721%" y="837" width="0.0361%" height="15" fill="rgb(249,184,29)" fg:x="5970" fg:w="3"/><text x="72.0221%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="71.7721%" y="821" width="0.0361%" height="15" fill="rgb(231,181,1)" fg:x="5970" fg:w="3"/><text x="72.0221%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="71.7721%" y="805" width="0.0361%" height="15" fill="rgb(224,94,2)" fg:x="5970" fg:w="3"/><text x="72.0221%" y="815.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="71.7721%" y="789" width="0.0361%" height="15" fill="rgb(229,170,15)" fg:x="5970" fg:w="3"/><text x="72.0221%" y="799.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="71.7841%" y="773" width="0.0240%" height="15" fill="rgb(240,127,35)" fg:x="5971" fg:w="2"/><text x="72.0341%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="71.8081%" y="821" width="0.0481%" height="15" fill="rgb(248,196,34)" fg:x="5973" fg:w="4"/><text x="72.0581%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="71.8081%" y="805" width="0.0481%" height="15" fill="rgb(236,137,7)" fg:x="5973" fg:w="4"/><text x="72.0581%" y="815.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="71.8081%" y="789" width="0.0481%" height="15" fill="rgb(235,127,16)" fg:x="5973" fg:w="4"/><text x="72.0581%" y="799.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="71.8201%" y="773" width="0.0361%" height="15" fill="rgb(250,192,54)" fg:x="5974" fg:w="3"/><text x="72.0701%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="71.8081%" y="917" width="0.0601%" height="15" fill="rgb(218,98,20)" fg:x="5973" fg:w="5"/><text x="72.0581%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (5 samples, 0.06%)</title><rect x="71.8081%" y="901" width="0.0601%" height="15" fill="rgb(230,176,47)" fg:x="5973" fg:w="5"/><text x="72.0581%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (5 samples, 0.06%)</title><rect x="71.8081%" y="885" width="0.0601%" height="15" fill="rgb(244,2,33)" fg:x="5973" fg:w="5"/><text x="72.0581%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (5 samples, 0.06%)</title><rect x="71.8081%" y="869" width="0.0601%" height="15" fill="rgb(231,100,17)" fg:x="5973" fg:w="5"/><text x="72.0581%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (5 samples, 0.06%)</title><rect x="71.8081%" y="853" width="0.0601%" height="15" fill="rgb(245,23,12)" fg:x="5973" fg:w="5"/><text x="72.0581%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="71.8081%" y="837" width="0.0601%" height="15" fill="rgb(249,55,22)" fg:x="5973" fg:w="5"/><text x="72.0581%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="71.8562%" y="821" width="0.0120%" height="15" fill="rgb(207,134,9)" fg:x="5977" fg:w="1"/><text x="72.1062%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (61 samples, 0.73%)</title><rect x="71.2070%" y="997" width="0.7333%" height="15" fill="rgb(218,134,0)" fg:x="5923" fg:w="61"/><text x="71.4570%" y="1007.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (61 samples, 0.73%)</title><rect x="71.2070%" y="981" width="0.7333%" height="15" fill="rgb(213,212,33)" fg:x="5923" fg:w="61"/><text x="71.4570%" y="991.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (61 samples, 0.73%)</title><rect x="71.2070%" y="965" width="0.7333%" height="15" fill="rgb(252,106,18)" fg:x="5923" fg:w="61"/><text x="71.4570%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (61 samples, 0.73%)</title><rect x="71.2070%" y="949" width="0.7333%" height="15" fill="rgb(208,126,42)" fg:x="5923" fg:w="61"/><text x="71.4570%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (11 samples, 0.13%)</title><rect x="71.8081%" y="933" width="0.1322%" height="15" fill="rgb(246,175,29)" fg:x="5973" fg:w="11"/><text x="72.0581%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (6 samples, 0.07%)</title><rect x="71.8682%" y="917" width="0.0721%" height="15" fill="rgb(215,13,50)" fg:x="5978" fg:w="6"/><text x="72.1182%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="71.8682%" y="901" width="0.0721%" height="15" fill="rgb(216,172,15)" fg:x="5978" fg:w="6"/><text x="72.1182%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="71.8682%" y="885" width="0.0721%" height="15" fill="rgb(212,103,13)" fg:x="5978" fg:w="6"/><text x="72.1182%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="71.8682%" y="869" width="0.0721%" height="15" fill="rgb(231,171,36)" fg:x="5978" fg:w="6"/><text x="72.1182%" y="879.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="71.8803%" y="853" width="0.0601%" height="15" fill="rgb(250,123,20)" fg:x="5979" fg:w="5"/><text x="72.1303%" y="863.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="71.9043%" y="837" width="0.0361%" height="15" fill="rgb(212,53,50)" fg:x="5981" fg:w="3"/><text x="72.1543%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (63 samples, 0.76%)</title><rect x="71.1950%" y="1029" width="0.7574%" height="15" fill="rgb(243,54,12)" fg:x="5922" fg:w="63"/><text x="71.4450%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (63 samples, 0.76%)</title><rect x="71.1950%" y="1013" width="0.7574%" height="15" fill="rgb(234,101,34)" fg:x="5922" fg:w="63"/><text x="71.4450%" y="1023.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="71.9404%" y="997" width="0.0120%" height="15" fill="rgb(254,67,22)" fg:x="5984" fg:w="1"/><text x="72.1904%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (243 samples, 2.92%)</title><rect x="69.0430%" y="1077" width="2.9214%" height="15" fill="rgb(250,35,47)" fg:x="5743" fg:w="243"/><text x="69.2930%" y="1087.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (243 samples, 2.92%)</title><rect x="69.0430%" y="1061" width="2.9214%" height="15" fill="rgb(226,126,38)" fg:x="5743" fg:w="243"/><text x="69.2930%" y="1071.50">co..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (243 samples, 2.92%)</title><rect x="69.0430%" y="1045" width="2.9214%" height="15" fill="rgb(216,138,53)" fg:x="5743" fg:w="243"/><text x="69.2930%" y="1055.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (1 samples, 0.01%)</title><rect x="71.9524%" y="1029" width="0.0120%" height="15" fill="rgb(246,199,43)" fg:x="5985" fg:w="1"/><text x="72.2024%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.01%)</title><rect x="71.9524%" y="1013" width="0.0120%" height="15" fill="rgb(232,125,11)" fg:x="5985" fg:w="1"/><text x="72.2024%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="71.9524%" y="997" width="0.0120%" height="15" fill="rgb(218,219,45)" fg:x="5985" fg:w="1"/><text x="72.2024%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="71.9524%" y="981" width="0.0120%" height="15" fill="rgb(216,102,54)" fg:x="5985" fg:w="1"/><text x="72.2024%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (252 samples, 3.03%)</title><rect x="69.0190%" y="1093" width="3.0296%" height="15" fill="rgb(250,228,7)" fg:x="5741" fg:w="252"/><text x="69.2690%" y="1103.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;smithereens::Fragment&gt;&gt; (7 samples, 0.08%)</title><rect x="71.9644%" y="1077" width="0.0842%" height="15" fill="rgb(226,125,25)" fg:x="5986" fg:w="7"/><text x="72.2144%" y="1087.50"></text></g><g><title>cfree (7 samples, 0.08%)</title><rect x="71.9644%" y="1061" width="0.0842%" height="15" fill="rgb(224,165,27)" fg:x="5986" fg:w="7"/><text x="72.2144%" y="1071.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="71.9644%" y="1045" width="0.0842%" height="15" fill="rgb(233,86,3)" fg:x="5986" fg:w="7"/><text x="72.2144%" y="1055.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="71.9644%" y="1029" width="0.0842%" height="15" fill="rgb(228,116,20)" fg:x="5986" fg:w="7"/><text x="72.2144%" y="1039.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="71.9644%" y="1013" width="0.0842%" height="15" fill="rgb(209,192,17)" fg:x="5986" fg:w="7"/><text x="72.2144%" y="1023.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="72.0005%" y="997" width="0.0481%" height="15" fill="rgb(224,88,34)" fg:x="5989" fg:w="4"/><text x="72.2505%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="72.0486%" y="757" width="0.0120%" height="15" fill="rgb(233,38,6)" fg:x="5993" fg:w="1"/><text x="72.2986%" y="767.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="72.0486%" y="853" width="0.0240%" height="15" fill="rgb(212,59,30)" fg:x="5993" fg:w="2"/><text x="72.2986%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="72.0486%" y="837" width="0.0240%" height="15" fill="rgb(213,80,3)" fg:x="5993" fg:w="2"/><text x="72.2986%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="72.0486%" y="821" width="0.0240%" height="15" fill="rgb(251,178,7)" fg:x="5993" fg:w="2"/><text x="72.2986%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.0486%" y="805" width="0.0240%" height="15" fill="rgb(213,154,26)" fg:x="5993" fg:w="2"/><text x="72.2986%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.0486%" y="789" width="0.0240%" height="15" fill="rgb(238,165,49)" fg:x="5993" fg:w="2"/><text x="72.2986%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.0486%" y="773" width="0.0240%" height="15" fill="rgb(248,91,46)" fg:x="5993" fg:w="2"/><text x="72.2986%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.0606%" y="757" width="0.0120%" height="15" fill="rgb(244,21,52)" fg:x="5994" fg:w="1"/><text x="72.3106%" y="767.50"></text></g><g><title>core::hash::Hash::hash_slice (4 samples, 0.05%)</title><rect x="72.0486%" y="901" width="0.0481%" height="15" fill="rgb(247,122,20)" fg:x="5993" fg:w="4"/><text x="72.2986%" y="911.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="72.0486%" y="885" width="0.0481%" height="15" fill="rgb(218,27,9)" fg:x="5993" fg:w="4"/><text x="72.2986%" y="895.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="72.0486%" y="869" width="0.0481%" height="15" fill="rgb(246,7,6)" fg:x="5993" fg:w="4"/><text x="72.2986%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="72.0726%" y="853" width="0.0240%" height="15" fill="rgb(227,135,54)" fg:x="5995" fg:w="2"/><text x="72.3226%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="72.0726%" y="837" width="0.0240%" height="15" fill="rgb(247,14,11)" fg:x="5995" fg:w="2"/><text x="72.3226%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="72.0726%" y="821" width="0.0240%" height="15" fill="rgb(206,149,34)" fg:x="5995" fg:w="2"/><text x="72.3226%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="72.0726%" y="805" width="0.0240%" height="15" fill="rgb(227,228,4)" fg:x="5995" fg:w="2"/><text x="72.3226%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="72.0726%" y="789" width="0.0240%" height="15" fill="rgb(238,218,28)" fg:x="5995" fg:w="2"/><text x="72.3226%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="72.0846%" y="773" width="0.0120%" height="15" fill="rgb(252,86,40)" fg:x="5996" fg:w="1"/><text x="72.3346%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.0846%" y="757" width="0.0120%" height="15" fill="rgb(251,225,11)" fg:x="5996" fg:w="1"/><text x="72.3346%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="72.0486%" y="933" width="0.0721%" height="15" fill="rgb(206,46,49)" fg:x="5993" fg:w="6"/><text x="72.2986%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (6 samples, 0.07%)</title><rect x="72.0486%" y="917" width="0.0721%" height="15" fill="rgb(245,128,24)" fg:x="5993" fg:w="6"/><text x="72.2986%" y="927.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.02%)</title><rect x="72.0967%" y="901" width="0.0240%" height="15" fill="rgb(219,177,34)" fg:x="5997" fg:w="2"/><text x="72.3467%" y="911.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="72.0967%" y="885" width="0.0240%" height="15" fill="rgb(218,60,48)" fg:x="5997" fg:w="2"/><text x="72.3467%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.0967%" y="869" width="0.0240%" height="15" fill="rgb(221,11,5)" fg:x="5997" fg:w="2"/><text x="72.3467%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.0967%" y="853" width="0.0240%" height="15" fill="rgb(220,148,13)" fg:x="5997" fg:w="2"/><text x="72.3467%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="72.1087%" y="837" width="0.0120%" height="15" fill="rgb(210,16,3)" fg:x="5998" fg:w="1"/><text x="72.3587%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="72.1087%" y="821" width="0.0120%" height="15" fill="rgb(236,80,2)" fg:x="5998" fg:w="1"/><text x="72.3587%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="72.1327%" y="821" width="0.0240%" height="15" fill="rgb(239,129,19)" fg:x="6000" fg:w="2"/><text x="72.3827%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="72.1327%" y="805" width="0.0240%" height="15" fill="rgb(220,106,35)" fg:x="6000" fg:w="2"/><text x="72.3827%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4 samples, 0.05%)</title><rect x="72.1207%" y="901" width="0.0481%" height="15" fill="rgb(252,139,45)" fg:x="5999" fg:w="4"/><text x="72.3707%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u32 (4 samples, 0.05%)</title><rect x="72.1207%" y="885" width="0.0481%" height="15" fill="rgb(229,8,36)" fg:x="5999" fg:w="4"/><text x="72.3707%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="72.1207%" y="869" width="0.0481%" height="15" fill="rgb(230,126,33)" fg:x="5999" fg:w="4"/><text x="72.3707%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="72.1207%" y="853" width="0.0481%" height="15" fill="rgb(239,140,21)" fg:x="5999" fg:w="4"/><text x="72.3707%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="72.1207%" y="837" width="0.0481%" height="15" fill="rgb(254,104,9)" fg:x="5999" fg:w="4"/><text x="72.3707%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.1568%" y="821" width="0.0120%" height="15" fill="rgb(239,52,14)" fg:x="6002" fg:w="1"/><text x="72.4068%" y="831.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="72.1207%" y="917" width="0.0601%" height="15" fill="rgb(208,227,44)" fg:x="5999" fg:w="5"/><text x="72.3707%" y="927.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="72.1688%" y="901" width="0.0120%" height="15" fill="rgb(246,18,19)" fg:x="6003" fg:w="1"/><text x="72.4188%" y="911.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="72.1688%" y="885" width="0.0120%" height="15" fill="rgb(235,228,25)" fg:x="6003" fg:w="1"/><text x="72.4188%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="72.1928%" y="837" width="0.0120%" height="15" fill="rgb(240,156,20)" fg:x="6005" fg:w="1"/><text x="72.4428%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="72.1207%" y="933" width="0.0962%" height="15" fill="rgb(224,8,20)" fg:x="5999" fg:w="8"/><text x="72.3707%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="72.1808%" y="917" width="0.0361%" height="15" fill="rgb(214,12,52)" fg:x="6004" fg:w="3"/><text x="72.4308%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="72.1808%" y="901" width="0.0361%" height="15" fill="rgb(211,220,47)" fg:x="6004" fg:w="3"/><text x="72.4308%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="72.1808%" y="885" width="0.0361%" height="15" fill="rgb(250,173,5)" fg:x="6004" fg:w="3"/><text x="72.4308%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="72.1808%" y="869" width="0.0361%" height="15" fill="rgb(250,125,52)" fg:x="6004" fg:w="3"/><text x="72.4308%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="72.1808%" y="853" width="0.0361%" height="15" fill="rgb(209,133,18)" fg:x="6004" fg:w="3"/><text x="72.4308%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.2049%" y="837" width="0.0120%" height="15" fill="rgb(216,173,22)" fg:x="6006" fg:w="1"/><text x="72.4549%" y="847.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (16 samples, 0.19%)</title><rect x="72.0486%" y="949" width="0.1924%" height="15" fill="rgb(205,3,22)" fg:x="5993" fg:w="16"/><text x="72.2986%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="72.2169%" y="933" width="0.0240%" height="15" fill="rgb(248,22,20)" fg:x="6007" fg:w="2"/><text x="72.4669%" y="943.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="72.2169%" y="917" width="0.0240%" height="15" fill="rgb(233,6,29)" fg:x="6007" fg:w="2"/><text x="72.4669%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.2169%" y="901" width="0.0240%" height="15" fill="rgb(240,22,54)" fg:x="6007" fg:w="2"/><text x="72.4669%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.2169%" y="885" width="0.0240%" height="15" fill="rgb(231,133,32)" fg:x="6007" fg:w="2"/><text x="72.4669%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.2289%" y="869" width="0.0120%" height="15" fill="rgb(248,193,4)" fg:x="6008" fg:w="1"/><text x="72.4789%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="72.2289%" y="853" width="0.0120%" height="15" fill="rgb(211,178,46)" fg:x="6008" fg:w="1"/><text x="72.4789%" y="863.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="72.2409%" y="885" width="0.0240%" height="15" fill="rgb(224,5,42)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="895.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="72.2409%" y="869" width="0.0240%" height="15" fill="rgb(239,176,25)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="72.2409%" y="853" width="0.0240%" height="15" fill="rgb(245,187,50)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="72.2409%" y="837" width="0.0240%" height="15" fill="rgb(248,24,15)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="72.2409%" y="821" width="0.0240%" height="15" fill="rgb(205,166,13)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="72.2409%" y="805" width="0.0240%" height="15" fill="rgb(208,114,23)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="72.2409%" y="789" width="0.0240%" height="15" fill="rgb(239,127,18)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="72.2409%" y="773" width="0.0240%" height="15" fill="rgb(219,154,28)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="72.2409%" y="757" width="0.0240%" height="15" fill="rgb(225,157,23)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="72.2409%" y="741" width="0.0240%" height="15" fill="rgb(219,8,6)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="72.2409%" y="725" width="0.0240%" height="15" fill="rgb(212,47,6)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="72.2409%" y="709" width="0.0240%" height="15" fill="rgb(224,190,4)" fg:x="6009" fg:w="2"/><text x="72.4909%" y="719.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="72.2529%" y="693" width="0.0120%" height="15" fill="rgb(239,183,29)" fg:x="6010" fg:w="1"/><text x="72.5029%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.04%)</title><rect x="72.2409%" y="949" width="0.0361%" height="15" fill="rgb(213,57,7)" fg:x="6009" fg:w="3"/><text x="72.4909%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="72.2409%" y="933" width="0.0361%" height="15" fill="rgb(216,148,1)" fg:x="6009" fg:w="3"/><text x="72.4909%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="72.2409%" y="917" width="0.0361%" height="15" fill="rgb(236,182,29)" fg:x="6009" fg:w="3"/><text x="72.4909%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="72.2409%" y="901" width="0.0361%" height="15" fill="rgb(244,120,48)" fg:x="6009" fg:w="3"/><text x="72.4909%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="72.2650%" y="885" width="0.0120%" height="15" fill="rgb(206,71,34)" fg:x="6011" fg:w="1"/><text x="72.5150%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="72.2650%" y="869" width="0.0120%" height="15" fill="rgb(242,32,6)" fg:x="6011" fg:w="1"/><text x="72.5150%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="72.2650%" y="853" width="0.0120%" height="15" fill="rgb(241,35,3)" fg:x="6011" fg:w="1"/><text x="72.5150%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="72.2650%" y="837" width="0.0120%" height="15" fill="rgb(222,62,19)" fg:x="6011" fg:w="1"/><text x="72.5150%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="72.2650%" y="821" width="0.0120%" height="15" fill="rgb(223,110,41)" fg:x="6011" fg:w="1"/><text x="72.5150%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="72.2650%" y="805" width="0.0120%" height="15" fill="rgb(208,224,4)" fg:x="6011" fg:w="1"/><text x="72.5150%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (275 samples, 3.31%)</title><rect x="69.0190%" y="1125" width="3.3061%" height="15" fill="rgb(241,137,19)" fg:x="5741" fg:w="275"/><text x="69.2690%" y="1135.50">&lt;st..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (275 samples, 3.31%)</title><rect x="69.0190%" y="1109" width="3.3061%" height="15" fill="rgb(244,24,17)" fg:x="5741" fg:w="275"/><text x="69.2690%" y="1119.50">&lt;ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (23 samples, 0.28%)</title><rect x="72.0486%" y="1093" width="0.2765%" height="15" fill="rgb(245,178,49)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (23 samples, 0.28%)</title><rect x="72.0486%" y="1077" width="0.2765%" height="15" fill="rgb(219,160,38)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (23 samples, 0.28%)</title><rect x="72.0486%" y="1061" width="0.2765%" height="15" fill="rgb(228,137,14)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (23 samples, 0.28%)</title><rect x="72.0486%" y="1045" width="0.2765%" height="15" fill="rgb(237,134,11)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (23 samples, 0.28%)</title><rect x="72.0486%" y="1029" width="0.2765%" height="15" fill="rgb(211,126,44)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (23 samples, 0.28%)</title><rect x="72.0486%" y="1013" width="0.2765%" height="15" fill="rgb(226,171,33)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="1023.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (23 samples, 0.28%)</title><rect x="72.0486%" y="997" width="0.2765%" height="15" fill="rgb(253,99,13)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.28%)</title><rect x="72.0486%" y="981" width="0.2765%" height="15" fill="rgb(244,48,7)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (23 samples, 0.28%)</title><rect x="72.0486%" y="965" width="0.2765%" height="15" fill="rgb(244,217,54)" fg:x="5993" fg:w="23"/><text x="72.2986%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (4 samples, 0.05%)</title><rect x="72.2770%" y="949" width="0.0481%" height="15" fill="rgb(224,15,18)" fg:x="6012" fg:w="4"/><text x="72.5270%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (4 samples, 0.05%)</title><rect x="72.2770%" y="933" width="0.0481%" height="15" fill="rgb(244,99,12)" fg:x="6012" fg:w="4"/><text x="72.5270%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (4 samples, 0.05%)</title><rect x="72.2770%" y="917" width="0.0481%" height="15" fill="rgb(233,226,8)" fg:x="6012" fg:w="4"/><text x="72.5270%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (4 samples, 0.05%)</title><rect x="72.2770%" y="901" width="0.0481%" height="15" fill="rgb(229,211,3)" fg:x="6012" fg:w="4"/><text x="72.5270%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="72.2770%" y="885" width="0.0481%" height="15" fill="rgb(216,140,21)" fg:x="6012" fg:w="4"/><text x="72.5270%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="72.2770%" y="869" width="0.0481%" height="15" fill="rgb(234,122,30)" fg:x="6012" fg:w="4"/><text x="72.5270%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="72.2770%" y="853" width="0.0481%" height="15" fill="rgb(236,25,46)" fg:x="6012" fg:w="4"/><text x="72.5270%" y="863.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="72.2890%" y="837" width="0.0361%" height="15" fill="rgb(217,52,54)" fg:x="6013" fg:w="3"/><text x="72.5390%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.3131%" y="821" width="0.0120%" height="15" fill="rgb(222,29,26)" fg:x="6015" fg:w="1"/><text x="72.5631%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.3251%" y="1125" width="0.0120%" height="15" fill="rgb(216,177,29)" fg:x="6016" fg:w="1"/><text x="72.5751%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="72.3251%" y="1109" width="0.0120%" height="15" fill="rgb(247,136,51)" fg:x="6016" fg:w="1"/><text x="72.5751%" y="1119.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="72.3371%" y="1077" width="0.0120%" height="15" fill="rgb(231,47,47)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="1087.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="72.3371%" y="1061" width="0.0120%" height="15" fill="rgb(211,192,36)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="72.3371%" y="1045" width="0.0120%" height="15" fill="rgb(229,156,32)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="72.3371%" y="1029" width="0.0120%" height="15" fill="rgb(248,213,20)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="72.3371%" y="1013" width="0.0120%" height="15" fill="rgb(217,64,7)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.3371%" y="997" width="0.0120%" height="15" fill="rgb(232,142,8)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.3371%" y="981" width="0.0120%" height="15" fill="rgb(224,92,44)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.3371%" y="965" width="0.0120%" height="15" fill="rgb(214,169,17)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="72.3371%" y="949" width="0.0120%" height="15" fill="rgb(210,59,37)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="959.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.01%)</title><rect x="72.3371%" y="933" width="0.0120%" height="15" fill="rgb(214,116,48)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="72.3371%" y="917" width="0.0120%" height="15" fill="rgb(244,191,6)" fg:x="6017" fg:w="1"/><text x="72.5871%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="72.3371%" y="1125" width="0.0240%" height="15" fill="rgb(241,50,52)" fg:x="6017" fg:w="2"/><text x="72.5871%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="72.3371%" y="1109" width="0.0240%" height="15" fill="rgb(236,75,39)" fg:x="6017" fg:w="2"/><text x="72.5871%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="72.3371%" y="1093" width="0.0240%" height="15" fill="rgb(236,99,0)" fg:x="6017" fg:w="2"/><text x="72.5871%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="72.3491%" y="1077" width="0.0120%" height="15" fill="rgb(207,202,15)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="72.3491%" y="1061" width="0.0120%" height="15" fill="rgb(233,207,14)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="72.3491%" y="1045" width="0.0120%" height="15" fill="rgb(226,27,51)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="72.3491%" y="1029" width="0.0120%" height="15" fill="rgb(206,104,42)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="72.3491%" y="1013" width="0.0120%" height="15" fill="rgb(212,225,4)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="72.3491%" y="997" width="0.0120%" height="15" fill="rgb(233,96,42)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="72.3491%" y="981" width="0.0120%" height="15" fill="rgb(229,21,32)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.3491%" y="965" width="0.0120%" height="15" fill="rgb(226,216,24)" fg:x="6018" fg:w="1"/><text x="72.5991%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="72.4693%" y="933" width="0.0120%" height="15" fill="rgb(221,163,17)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="72.4693%" y="917" width="0.0120%" height="15" fill="rgb(216,216,42)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="72.4693%" y="901" width="0.0120%" height="15" fill="rgb(240,118,7)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="72.4693%" y="885" width="0.0120%" height="15" fill="rgb(221,67,37)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.4693%" y="869" width="0.0120%" height="15" fill="rgb(241,32,44)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.4693%" y="853" width="0.0120%" height="15" fill="rgb(235,204,43)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.4693%" y="837" width="0.0120%" height="15" fill="rgb(213,116,10)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="847.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="72.4693%" y="821" width="0.0120%" height="15" fill="rgb(239,15,48)" fg:x="6028" fg:w="1"/><text x="72.7193%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="72.4934%" y="917" width="0.0240%" height="15" fill="rgb(207,123,36)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="72.4934%" y="901" width="0.0240%" height="15" fill="rgb(209,103,30)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="72.4934%" y="885" width="0.0240%" height="15" fill="rgb(238,100,19)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="72.4934%" y="869" width="0.0240%" height="15" fill="rgb(244,30,14)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="72.4934%" y="853" width="0.0240%" height="15" fill="rgb(249,174,6)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="72.4934%" y="837" width="0.0240%" height="15" fill="rgb(235,213,41)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="72.4934%" y="821" width="0.0240%" height="15" fill="rgb(213,118,6)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="72.4934%" y="805" width="0.0240%" height="15" fill="rgb(235,44,51)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="72.4934%" y="789" width="0.0240%" height="15" fill="rgb(217,9,53)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="72.4934%" y="773" width="0.0240%" height="15" fill="rgb(237,172,34)" fg:x="6030" fg:w="2"/><text x="72.7434%" y="783.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="72.5054%" y="757" width="0.0120%" height="15" fill="rgb(206,206,11)" fg:x="6031" fg:w="1"/><text x="72.7554%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="72.5174%" y="917" width="0.0240%" height="15" fill="rgb(214,149,29)" fg:x="6032" fg:w="2"/><text x="72.7674%" y="927.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="72.5174%" y="901" width="0.0240%" height="15" fill="rgb(208,123,3)" fg:x="6032" fg:w="2"/><text x="72.7674%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="72.5174%" y="885" width="0.0240%" height="15" fill="rgb(229,126,4)" fg:x="6032" fg:w="2"/><text x="72.7674%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="72.5295%" y="869" width="0.0120%" height="15" fill="rgb(222,92,36)" fg:x="6033" fg:w="1"/><text x="72.7795%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="72.5295%" y="853" width="0.0120%" height="15" fill="rgb(216,39,41)" fg:x="6033" fg:w="1"/><text x="72.7795%" y="863.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="72.5295%" y="837" width="0.0120%" height="15" fill="rgb(253,127,28)" fg:x="6033" fg:w="1"/><text x="72.7795%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="72.5295%" y="821" width="0.0120%" height="15" fill="rgb(249,152,51)" fg:x="6033" fg:w="1"/><text x="72.7795%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="72.5295%" y="805" width="0.0120%" height="15" fill="rgb(209,123,42)" fg:x="6033" fg:w="1"/><text x="72.7795%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="72.5295%" y="789" width="0.0120%" height="15" fill="rgb(241,118,22)" fg:x="6033" fg:w="1"/><text x="72.7795%" y="799.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="72.4814%" y="933" width="0.0842%" height="15" fill="rgb(208,25,7)" fg:x="6029" fg:w="7"/><text x="72.7314%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="72.5415%" y="917" width="0.0240%" height="15" fill="rgb(243,144,39)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="72.5415%" y="901" width="0.0240%" height="15" fill="rgb(250,50,5)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="72.5415%" y="885" width="0.0240%" height="15" fill="rgb(207,67,11)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="72.5415%" y="869" width="0.0240%" height="15" fill="rgb(245,204,40)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="72.5415%" y="853" width="0.0240%" height="15" fill="rgb(238,228,24)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="72.5415%" y="837" width="0.0240%" height="15" fill="rgb(217,116,22)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="72.5415%" y="821" width="0.0240%" height="15" fill="rgb(234,98,12)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="72.5415%" y="805" width="0.0240%" height="15" fill="rgb(242,170,50)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="72.5415%" y="789" width="0.0240%" height="15" fill="rgb(235,7,5)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="799.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="72.5415%" y="773" width="0.0240%" height="15" fill="rgb(241,114,28)" fg:x="6034" fg:w="2"/><text x="72.7915%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="72.5655%" y="933" width="0.0120%" height="15" fill="rgb(246,112,42)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="943.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="72.5655%" y="917" width="0.0120%" height="15" fill="rgb(248,228,14)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="927.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="72.5655%" y="901" width="0.0120%" height="15" fill="rgb(208,133,18)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="72.5655%" y="885" width="0.0120%" height="15" fill="rgb(207,35,49)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="72.5655%" y="869" width="0.0120%" height="15" fill="rgb(205,68,36)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="72.5655%" y="853" width="0.0120%" height="15" fill="rgb(245,62,40)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="863.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="72.5655%" y="837" width="0.0120%" height="15" fill="rgb(228,27,24)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="72.5655%" y="821" width="0.0120%" height="15" fill="rgb(253,19,12)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="72.5655%" y="805" width="0.0120%" height="15" fill="rgb(232,28,20)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="72.5655%" y="789" width="0.0120%" height="15" fill="rgb(218,35,51)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="799.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="72.5655%" y="773" width="0.0120%" height="15" fill="rgb(212,90,40)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.5655%" y="757" width="0.0120%" height="15" fill="rgb(220,172,12)" fg:x="6036" fg:w="1"/><text x="72.8155%" y="767.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="72.5775%" y="837" width="0.0361%" height="15" fill="rgb(226,159,20)" fg:x="6037" fg:w="3"/><text x="72.8275%" y="847.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="72.5896%" y="821" width="0.0240%" height="15" fill="rgb(234,205,16)" fg:x="6038" fg:w="2"/><text x="72.8396%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="72.6136%" y="805" width="0.0120%" height="15" fill="rgb(207,9,39)" fg:x="6040" fg:w="1"/><text x="72.8636%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="72.6136%" y="789" width="0.0120%" height="15" fill="rgb(249,143,15)" fg:x="6040" fg:w="1"/><text x="72.8636%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="72.6136%" y="773" width="0.0120%" height="15" fill="rgb(253,133,29)" fg:x="6040" fg:w="1"/><text x="72.8636%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="72.6136%" y="757" width="0.0120%" height="15" fill="rgb(221,187,0)" fg:x="6040" fg:w="1"/><text x="72.8636%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="72.6136%" y="741" width="0.0120%" height="15" fill="rgb(205,204,26)" fg:x="6040" fg:w="1"/><text x="72.8636%" y="751.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="72.6136%" y="725" width="0.0120%" height="15" fill="rgb(224,68,54)" fg:x="6040" fg:w="1"/><text x="72.8636%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="72.6256%" y="789" width="0.0361%" height="15" fill="rgb(209,67,4)" fg:x="6041" fg:w="3"/><text x="72.8756%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (3 samples, 0.04%)</title><rect x="72.6256%" y="773" width="0.0361%" height="15" fill="rgb(228,229,18)" fg:x="6041" fg:w="3"/><text x="72.8756%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="72.6377%" y="757" width="0.0240%" height="15" fill="rgb(231,89,13)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="72.6377%" y="741" width="0.0240%" height="15" fill="rgb(210,182,18)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="72.6377%" y="725" width="0.0240%" height="15" fill="rgb(240,105,2)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="72.6377%" y="709" width="0.0240%" height="15" fill="rgb(207,170,50)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="72.6377%" y="693" width="0.0240%" height="15" fill="rgb(232,133,24)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="72.6377%" y="677" width="0.0240%" height="15" fill="rgb(235,166,27)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="72.6377%" y="661" width="0.0240%" height="15" fill="rgb(209,19,13)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="671.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="72.6377%" y="645" width="0.0240%" height="15" fill="rgb(226,79,39)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="655.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="72.6377%" y="629" width="0.0240%" height="15" fill="rgb(222,163,10)" fg:x="6042" fg:w="2"/><text x="72.8877%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.6497%" y="613" width="0.0120%" height="15" fill="rgb(214,44,19)" fg:x="6043" fg:w="1"/><text x="72.8997%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.6497%" y="597" width="0.0120%" height="15" fill="rgb(210,217,13)" fg:x="6043" fg:w="1"/><text x="72.8997%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (6 samples, 0.07%)</title><rect x="72.6136%" y="837" width="0.0721%" height="15" fill="rgb(237,61,54)" fg:x="6040" fg:w="6"/><text x="72.8636%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (6 samples, 0.07%)</title><rect x="72.6136%" y="821" width="0.0721%" height="15" fill="rgb(226,184,24)" fg:x="6040" fg:w="6"/><text x="72.8636%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="72.6256%" y="805" width="0.0601%" height="15" fill="rgb(223,226,4)" fg:x="6041" fg:w="5"/><text x="72.8756%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="72.6617%" y="789" width="0.0240%" height="15" fill="rgb(210,26,41)" fg:x="6044" fg:w="2"/><text x="72.9117%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="72.6617%" y="773" width="0.0240%" height="15" fill="rgb(220,221,6)" fg:x="6044" fg:w="2"/><text x="72.9117%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="72.6617%" y="757" width="0.0240%" height="15" fill="rgb(225,89,49)" fg:x="6044" fg:w="2"/><text x="72.9117%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="72.6617%" y="741" width="0.0240%" height="15" fill="rgb(218,70,45)" fg:x="6044" fg:w="2"/><text x="72.9117%" y="751.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="72.6617%" y="725" width="0.0240%" height="15" fill="rgb(238,166,21)" fg:x="6044" fg:w="2"/><text x="72.9117%" y="735.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="72.6617%" y="709" width="0.0240%" height="15" fill="rgb(224,141,44)" fg:x="6044" fg:w="2"/><text x="72.9117%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.6737%" y="693" width="0.0120%" height="15" fill="rgb(230,12,49)" fg:x="6045" fg:w="1"/><text x="72.9237%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="72.6737%" y="677" width="0.0120%" height="15" fill="rgb(212,174,12)" fg:x="6045" fg:w="1"/><text x="72.9237%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="72.6857%" y="821" width="0.0120%" height="15" fill="rgb(246,67,9)" fg:x="6046" fg:w="1"/><text x="72.9357%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="72.6857%" y="805" width="0.0120%" height="15" fill="rgb(239,35,23)" fg:x="6046" fg:w="1"/><text x="72.9357%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="72.6857%" y="789" width="0.0120%" height="15" fill="rgb(211,167,0)" fg:x="6046" fg:w="1"/><text x="72.9357%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="72.6857%" y="773" width="0.0120%" height="15" fill="rgb(225,119,45)" fg:x="6046" fg:w="1"/><text x="72.9357%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.7098%" y="805" width="0.0120%" height="15" fill="rgb(210,162,6)" fg:x="6048" fg:w="1"/><text x="72.9598%" y="815.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="72.7098%" y="789" width="0.0120%" height="15" fill="rgb(208,118,35)" fg:x="6048" fg:w="1"/><text x="72.9598%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="72.7338%" y="597" width="0.0120%" height="15" fill="rgb(239,4,53)" fg:x="6050" fg:w="1"/><text x="72.9838%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="72.7338%" y="613" width="0.0240%" height="15" fill="rgb(213,130,21)" fg:x="6050" fg:w="2"/><text x="72.9838%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="72.7459%" y="597" width="0.0120%" height="15" fill="rgb(235,148,0)" fg:x="6051" fg:w="1"/><text x="72.9959%" y="607.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="72.7218%" y="709" width="0.0481%" height="15" fill="rgb(244,224,18)" fg:x="6049" fg:w="4"/><text x="72.9718%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4 samples, 0.05%)</title><rect x="72.7218%" y="693" width="0.0481%" height="15" fill="rgb(211,214,4)" fg:x="6049" fg:w="4"/><text x="72.9718%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u32 (4 samples, 0.05%)</title><rect x="72.7218%" y="677" width="0.0481%" height="15" fill="rgb(206,119,25)" fg:x="6049" fg:w="4"/><text x="72.9718%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="72.7218%" y="661" width="0.0481%" height="15" fill="rgb(243,93,47)" fg:x="6049" fg:w="4"/><text x="72.9718%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="72.7218%" y="645" width="0.0481%" height="15" fill="rgb(224,194,6)" fg:x="6049" fg:w="4"/><text x="72.9718%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="72.7218%" y="629" width="0.0481%" height="15" fill="rgb(243,229,6)" fg:x="6049" fg:w="4"/><text x="72.9718%" y="639.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.7579%" y="613" width="0.0120%" height="15" fill="rgb(207,23,50)" fg:x="6052" fg:w="1"/><text x="73.0079%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="72.7699%" y="629" width="0.0120%" height="15" fill="rgb(253,192,32)" fg:x="6053" fg:w="1"/><text x="73.0199%" y="639.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.7699%" y="613" width="0.0120%" height="15" fill="rgb(213,21,6)" fg:x="6053" fg:w="1"/><text x="73.0199%" y="623.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="72.7218%" y="725" width="0.0721%" height="15" fill="rgb(243,151,13)" fg:x="6049" fg:w="6"/><text x="72.9718%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="72.7699%" y="709" width="0.0240%" height="15" fill="rgb(233,165,41)" fg:x="6053" fg:w="2"/><text x="73.0199%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="72.7699%" y="693" width="0.0240%" height="15" fill="rgb(246,176,45)" fg:x="6053" fg:w="2"/><text x="73.0199%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="72.7699%" y="677" width="0.0240%" height="15" fill="rgb(217,170,52)" fg:x="6053" fg:w="2"/><text x="73.0199%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="72.7699%" y="661" width="0.0240%" height="15" fill="rgb(214,203,54)" fg:x="6053" fg:w="2"/><text x="73.0199%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="72.7699%" y="645" width="0.0240%" height="15" fill="rgb(248,215,49)" fg:x="6053" fg:w="2"/><text x="73.0199%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.7819%" y="629" width="0.0120%" height="15" fill="rgb(208,46,10)" fg:x="6054" fg:w="1"/><text x="73.0319%" y="639.50"></text></g><g><title>core::hash::Hash::hash_slice (8 samples, 0.10%)</title><rect x="72.7218%" y="757" width="0.0962%" height="15" fill="rgb(254,5,31)" fg:x="6049" fg:w="8"/><text x="72.9718%" y="767.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="72.7218%" y="741" width="0.0962%" height="15" fill="rgb(222,104,33)" fg:x="6049" fg:w="8"/><text x="72.9718%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="72.7939%" y="725" width="0.0240%" height="15" fill="rgb(248,49,16)" fg:x="6055" fg:w="2"/><text x="73.0439%" y="735.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="72.7939%" y="709" width="0.0240%" height="15" fill="rgb(232,198,41)" fg:x="6055" fg:w="2"/><text x="73.0439%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="72.7939%" y="693" width="0.0240%" height="15" fill="rgb(214,125,3)" fg:x="6055" fg:w="2"/><text x="73.0439%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.7939%" y="677" width="0.0240%" height="15" fill="rgb(229,220,28)" fg:x="6055" fg:w="2"/><text x="73.0439%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.7939%" y="661" width="0.0240%" height="15" fill="rgb(222,64,37)" fg:x="6055" fg:w="2"/><text x="73.0439%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.8060%" y="645" width="0.0120%" height="15" fill="rgb(249,184,13)" fg:x="6056" fg:w="1"/><text x="73.0560%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="72.8300%" y="693" width="0.0120%" height="15" fill="rgb(252,176,6)" fg:x="6058" fg:w="1"/><text x="73.0800%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="72.8300%" y="677" width="0.0120%" height="15" fill="rgb(228,153,7)" fg:x="6058" fg:w="1"/><text x="73.0800%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="72.7218%" y="789" width="0.1322%" height="15" fill="rgb(242,193,5)" fg:x="6049" fg:w="11"/><text x="72.9718%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.13%)</title><rect x="72.7218%" y="773" width="0.1322%" height="15" fill="rgb(232,140,9)" fg:x="6049" fg:w="11"/><text x="72.9718%" y="783.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (3 samples, 0.04%)</title><rect x="72.8180%" y="757" width="0.0361%" height="15" fill="rgb(213,222,16)" fg:x="6057" fg:w="3"/><text x="73.0680%" y="767.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.04%)</title><rect x="72.8180%" y="741" width="0.0361%" height="15" fill="rgb(222,75,50)" fg:x="6057" fg:w="3"/><text x="73.0680%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="72.8180%" y="725" width="0.0361%" height="15" fill="rgb(205,180,2)" fg:x="6057" fg:w="3"/><text x="73.0680%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="72.8180%" y="709" width="0.0361%" height="15" fill="rgb(216,34,7)" fg:x="6057" fg:w="3"/><text x="73.0680%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="72.8420%" y="693" width="0.0120%" height="15" fill="rgb(253,16,32)" fg:x="6059" fg:w="1"/><text x="73.0920%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.04%)</title><rect x="72.9021%" y="677" width="0.0361%" height="15" fill="rgb(208,97,28)" fg:x="6064" fg:w="3"/><text x="73.1521%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="72.9142%" y="661" width="0.0240%" height="15" fill="rgb(225,92,11)" fg:x="6065" fg:w="2"/><text x="73.1642%" y="671.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="72.8541%" y="773" width="0.1322%" height="15" fill="rgb(243,38,12)" fg:x="6060" fg:w="11"/><text x="73.1041%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (11 samples, 0.13%)</title><rect x="72.8541%" y="757" width="0.1322%" height="15" fill="rgb(208,139,16)" fg:x="6060" fg:w="11"/><text x="73.1041%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u32 (11 samples, 0.13%)</title><rect x="72.8541%" y="741" width="0.1322%" height="15" fill="rgb(227,24,9)" fg:x="6060" fg:w="11"/><text x="73.1041%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="72.8541%" y="725" width="0.1322%" height="15" fill="rgb(206,62,11)" fg:x="6060" fg:w="11"/><text x="73.1041%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="72.8541%" y="709" width="0.1322%" height="15" fill="rgb(228,134,27)" fg:x="6060" fg:w="11"/><text x="73.1041%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.13%)</title><rect x="72.8541%" y="693" width="0.1322%" height="15" fill="rgb(205,55,33)" fg:x="6060" fg:w="11"/><text x="73.1041%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.05%)</title><rect x="72.9382%" y="677" width="0.0481%" height="15" fill="rgb(243,75,43)" fg:x="6067" fg:w="4"/><text x="73.1882%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="72.9983%" y="693" width="0.0120%" height="15" fill="rgb(223,27,42)" fg:x="6072" fg:w="1"/><text x="73.2483%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (15 samples, 0.18%)</title><rect x="72.8541%" y="789" width="0.1803%" height="15" fill="rgb(232,189,33)" fg:x="6060" fg:w="15"/><text x="73.1041%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="72.9863%" y="773" width="0.0481%" height="15" fill="rgb(210,9,39)" fg:x="6071" fg:w="4"/><text x="73.2363%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.05%)</title><rect x="72.9863%" y="757" width="0.0481%" height="15" fill="rgb(242,85,26)" fg:x="6071" fg:w="4"/><text x="73.2363%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="72.9863%" y="741" width="0.0481%" height="15" fill="rgb(248,44,4)" fg:x="6071" fg:w="4"/><text x="73.2363%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="72.9863%" y="725" width="0.0481%" height="15" fill="rgb(250,96,46)" fg:x="6071" fg:w="4"/><text x="73.2363%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="72.9863%" y="709" width="0.0481%" height="15" fill="rgb(229,116,26)" fg:x="6071" fg:w="4"/><text x="73.2363%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="73.0103%" y="693" width="0.0240%" height="15" fill="rgb(246,94,34)" fg:x="6073" fg:w="2"/><text x="73.2603%" y="703.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (27 samples, 0.32%)</title><rect x="72.7218%" y="805" width="0.3246%" height="15" fill="rgb(251,73,21)" fg:x="6049" fg:w="27"/><text x="72.9718%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="73.0344%" y="789" width="0.0120%" height="15" fill="rgb(254,121,25)" fg:x="6075" fg:w="1"/><text x="73.2844%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="73.0344%" y="773" width="0.0120%" height="15" fill="rgb(215,161,49)" fg:x="6075" fg:w="1"/><text x="73.2844%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="73.0344%" y="757" width="0.0120%" height="15" fill="rgb(221,43,13)" fg:x="6075" fg:w="1"/><text x="73.2844%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="73.0344%" y="741" width="0.0120%" height="15" fill="rgb(249,5,37)" fg:x="6075" fg:w="1"/><text x="73.2844%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="73.0344%" y="725" width="0.0120%" height="15" fill="rgb(226,25,44)" fg:x="6075" fg:w="1"/><text x="73.2844%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="73.0464%" y="805" width="0.0120%" height="15" fill="rgb(238,189,16)" fg:x="6076" fg:w="1"/><text x="73.2964%" y="815.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="73.0464%" y="789" width="0.0120%" height="15" fill="rgb(251,186,8)" fg:x="6076" fg:w="1"/><text x="73.2964%" y="799.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="73.0464%" y="773" width="0.0120%" height="15" fill="rgb(254,34,31)" fg:x="6076" fg:w="1"/><text x="73.2964%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="73.0584%" y="805" width="0.0240%" height="15" fill="rgb(225,215,27)" fg:x="6077" fg:w="2"/><text x="73.3084%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="73.0584%" y="789" width="0.0240%" height="15" fill="rgb(221,192,48)" fg:x="6077" fg:w="2"/><text x="73.3084%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="73.0584%" y="773" width="0.0240%" height="15" fill="rgb(219,137,20)" fg:x="6077" fg:w="2"/><text x="73.3084%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="73.0584%" y="757" width="0.0240%" height="15" fill="rgb(219,84,11)" fg:x="6077" fg:w="2"/><text x="73.3084%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="73.0584%" y="741" width="0.0240%" height="15" fill="rgb(224,10,23)" fg:x="6077" fg:w="2"/><text x="73.3084%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.0825%" y="805" width="0.0120%" height="15" fill="rgb(248,22,39)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.0825%" y="789" width="0.0120%" height="15" fill="rgb(212,154,20)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="73.0825%" y="773" width="0.0120%" height="15" fill="rgb(236,199,50)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.0825%" y="757" width="0.0120%" height="15" fill="rgb(211,9,17)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.0825%" y="741" width="0.0120%" height="15" fill="rgb(243,216,36)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.0825%" y="725" width="0.0120%" height="15" fill="rgb(250,2,10)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="73.0825%" y="709" width="0.0120%" height="15" fill="rgb(226,50,48)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="73.0825%" y="693" width="0.0120%" height="15" fill="rgb(243,81,16)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="703.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="73.0825%" y="677" width="0.0120%" height="15" fill="rgb(250,14,2)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.0825%" y="661" width="0.0120%" height="15" fill="rgb(233,135,29)" fg:x="6079" fg:w="1"/><text x="73.3325%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.42%)</title><rect x="72.6857%" y="837" width="0.4208%" height="15" fill="rgb(224,64,43)" fg:x="6046" fg:w="35"/><text x="72.9357%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.41%)</title><rect x="72.6978%" y="821" width="0.4088%" height="15" fill="rgb(238,84,13)" fg:x="6047" fg:w="34"/><text x="72.9478%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="73.0945%" y="805" width="0.0120%" height="15" fill="rgb(253,48,26)" fg:x="6080" fg:w="1"/><text x="73.3445%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="73.0945%" y="789" width="0.0120%" height="15" fill="rgb(205,223,31)" fg:x="6080" fg:w="1"/><text x="73.3445%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="73.0945%" y="773" width="0.0120%" height="15" fill="rgb(221,41,32)" fg:x="6080" fg:w="1"/><text x="73.3445%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="73.0945%" y="757" width="0.0120%" height="15" fill="rgb(213,158,31)" fg:x="6080" fg:w="1"/><text x="73.3445%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.0945%" y="741" width="0.0120%" height="15" fill="rgb(245,126,43)" fg:x="6080" fg:w="1"/><text x="73.3445%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="73.0945%" y="725" width="0.0120%" height="15" fill="rgb(227,7,22)" fg:x="6080" fg:w="1"/><text x="73.3445%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="73.0945%" y="709" width="0.0120%" height="15" fill="rgb(252,90,44)" fg:x="6080" fg:w="1"/><text x="73.3445%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="73.1306%" y="693" width="0.0240%" height="15" fill="rgb(253,91,0)" fg:x="6083" fg:w="2"/><text x="73.3806%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="73.1546%" y="693" width="0.0120%" height="15" fill="rgb(252,175,49)" fg:x="6085" fg:w="1"/><text x="73.4046%" y="703.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.1546%" y="677" width="0.0120%" height="15" fill="rgb(246,150,1)" fg:x="6085" fg:w="1"/><text x="73.4046%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="73.1546%" y="661" width="0.0120%" height="15" fill="rgb(241,192,25)" fg:x="6085" fg:w="1"/><text x="73.4046%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (6 samples, 0.07%)</title><rect x="73.1065%" y="741" width="0.0721%" height="15" fill="rgb(239,187,11)" fg:x="6081" fg:w="6"/><text x="73.3565%" y="751.50"></text></g><g><title>alloc::slice::stable_sort (6 samples, 0.07%)</title><rect x="73.1065%" y="725" width="0.0721%" height="15" fill="rgb(218,202,51)" fg:x="6081" fg:w="6"/><text x="73.3565%" y="735.50"></text></g><g><title>core::slice::sort::insert_tail (4 samples, 0.05%)</title><rect x="73.1306%" y="709" width="0.0481%" height="15" fill="rgb(225,176,8)" fg:x="6083" fg:w="4"/><text x="73.3806%" y="719.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="73.1666%" y="693" width="0.0120%" height="15" fill="rgb(219,122,41)" fg:x="6086" fg:w="1"/><text x="73.4166%" y="703.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="73.2027%" y="581" width="0.0361%" height="15" fill="rgb(248,140,20)" fg:x="6089" fg:w="3"/><text x="73.4527%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.01%)</title><rect x="73.2267%" y="565" width="0.0120%" height="15" fill="rgb(245,41,37)" fg:x="6091" fg:w="1"/><text x="73.4767%" y="575.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="73.2027%" y="597" width="0.0721%" height="15" fill="rgb(235,82,39)" fg:x="6089" fg:w="6"/><text x="73.4527%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="73.2388%" y="581" width="0.0361%" height="15" fill="rgb(230,108,42)" fg:x="6092" fg:w="3"/><text x="73.4888%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.04%)</title><rect x="73.2388%" y="565" width="0.0361%" height="15" fill="rgb(215,150,50)" fg:x="6092" fg:w="3"/><text x="73.4888%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="73.2388%" y="549" width="0.0361%" height="15" fill="rgb(233,212,5)" fg:x="6092" fg:w="3"/><text x="73.4888%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="73.2388%" y="533" width="0.0361%" height="15" fill="rgb(245,80,22)" fg:x="6092" fg:w="3"/><text x="73.4888%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="73.2388%" y="517" width="0.0361%" height="15" fill="rgb(238,129,16)" fg:x="6092" fg:w="3"/><text x="73.4888%" y="527.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="73.2388%" y="501" width="0.0361%" height="15" fill="rgb(240,19,0)" fg:x="6092" fg:w="3"/><text x="73.4888%" y="511.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (10 samples, 0.12%)</title><rect x="73.1786%" y="741" width="0.1202%" height="15" fill="rgb(232,42,35)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.12%)</title><rect x="73.1786%" y="725" width="0.1202%" height="15" fill="rgb(223,130,24)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.12%)</title><rect x="73.1786%" y="709" width="0.1202%" height="15" fill="rgb(237,16,22)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.12%)</title><rect x="73.1786%" y="693" width="0.1202%" height="15" fill="rgb(248,192,20)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.12%)</title><rect x="73.1786%" y="677" width="0.1202%" height="15" fill="rgb(233,167,2)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.12%)</title><rect x="73.1786%" y="661" width="0.1202%" height="15" fill="rgb(252,71,44)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (10 samples, 0.12%)</title><rect x="73.1786%" y="645" width="0.1202%" height="15" fill="rgb(238,37,47)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.12%)</title><rect x="73.1786%" y="629" width="0.1202%" height="15" fill="rgb(214,202,54)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="639.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (10 samples, 0.12%)</title><rect x="73.1786%" y="613" width="0.1202%" height="15" fill="rgb(254,165,40)" fg:x="6087" fg:w="10"/><text x="73.4286%" y="623.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="597" width="0.0240%" height="15" fill="rgb(246,173,38)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="581" width="0.0240%" height="15" fill="rgb(215,3,27)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="73.2748%" y="565" width="0.0240%" height="15" fill="rgb(239,169,51)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="73.2748%" y="549" width="0.0240%" height="15" fill="rgb(212,5,25)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="73.2748%" y="533" width="0.0240%" height="15" fill="rgb(243,45,17)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.02%)</title><rect x="73.2748%" y="517" width="0.0240%" height="15" fill="rgb(242,97,9)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.02%)</title><rect x="73.2748%" y="501" width="0.0240%" height="15" fill="rgb(228,71,31)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="485" width="0.0240%" height="15" fill="rgb(252,184,16)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="495.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="469" width="0.0240%" height="15" fill="rgb(236,169,46)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="479.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="453" width="0.0240%" height="15" fill="rgb(207,17,47)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="437" width="0.0240%" height="15" fill="rgb(206,201,28)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="421" width="0.0240%" height="15" fill="rgb(224,184,23)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="405" width="0.0240%" height="15" fill="rgb(208,139,48)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="73.2748%" y="389" width="0.0240%" height="15" fill="rgb(208,130,10)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="73.2748%" y="373" width="0.0240%" height="15" fill="rgb(211,213,45)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="73.2748%" y="357" width="0.0240%" height="15" fill="rgb(235,100,30)" fg:x="6095" fg:w="2"/><text x="73.5248%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.2989%" y="517" width="0.0120%" height="15" fill="rgb(206,144,31)" fg:x="6097" fg:w="1"/><text x="73.5489%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.2989%" y="501" width="0.0120%" height="15" fill="rgb(224,200,26)" fg:x="6097" fg:w="1"/><text x="73.5489%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="73.2989%" y="485" width="0.0120%" height="15" fill="rgb(247,104,53)" fg:x="6097" fg:w="1"/><text x="73.5489%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.2989%" y="469" width="0.0120%" height="15" fill="rgb(220,14,17)" fg:x="6097" fg:w="1"/><text x="73.5489%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.2989%" y="453" width="0.0120%" height="15" fill="rgb(230,140,40)" fg:x="6097" fg:w="1"/><text x="73.5489%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.2989%" y="437" width="0.0120%" height="15" fill="rgb(229,2,41)" fg:x="6097" fg:w="1"/><text x="73.5489%" y="447.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.2989%" y="421" width="0.0120%" height="15" fill="rgb(232,89,16)" fg:x="6097" fg:w="1"/><text x="73.5489%" y="431.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (4 samples, 0.05%)</title><rect x="73.2989%" y="613" width="0.0481%" height="15" fill="rgb(247,59,52)" fg:x="6097" fg:w="4"/><text x="73.5489%" y="623.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="73.2989%" y="597" width="0.0481%" height="15" fill="rgb(226,110,21)" fg:x="6097" fg:w="4"/><text x="73.5489%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="73.2989%" y="581" width="0.0481%" height="15" fill="rgb(224,176,43)" fg:x="6097" fg:w="4"/><text x="73.5489%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="73.2989%" y="565" width="0.0481%" height="15" fill="rgb(221,73,6)" fg:x="6097" fg:w="4"/><text x="73.5489%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="73.2989%" y="549" width="0.0481%" height="15" fill="rgb(232,78,19)" fg:x="6097" fg:w="4"/><text x="73.5489%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="73.2989%" y="533" width="0.0481%" height="15" fill="rgb(233,112,48)" fg:x="6097" fg:w="4"/><text x="73.5489%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="73.3109%" y="517" width="0.0361%" height="15" fill="rgb(243,131,47)" fg:x="6098" fg:w="3"/><text x="73.5609%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.06%)</title><rect x="73.2989%" y="693" width="0.0601%" height="15" fill="rgb(226,51,1)" fg:x="6097" fg:w="5"/><text x="73.5489%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5 samples, 0.06%)</title><rect x="73.2989%" y="677" width="0.0601%" height="15" fill="rgb(247,58,7)" fg:x="6097" fg:w="5"/><text x="73.5489%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.06%)</title><rect x="73.2989%" y="661" width="0.0601%" height="15" fill="rgb(209,7,32)" fg:x="6097" fg:w="5"/><text x="73.5489%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.06%)</title><rect x="73.2989%" y="645" width="0.0601%" height="15" fill="rgb(209,39,41)" fg:x="6097" fg:w="5"/><text x="73.5489%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5 samples, 0.06%)</title><rect x="73.2989%" y="629" width="0.0601%" height="15" fill="rgb(226,182,46)" fg:x="6097" fg:w="5"/><text x="73.5489%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="73.3470%" y="613" width="0.0120%" height="15" fill="rgb(230,219,10)" fg:x="6101" fg:w="1"/><text x="73.5970%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="73.3470%" y="597" width="0.0120%" height="15" fill="rgb(227,175,30)" fg:x="6101" fg:w="1"/><text x="73.5970%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="73.3470%" y="581" width="0.0120%" height="15" fill="rgb(217,2,50)" fg:x="6101" fg:w="1"/><text x="73.5970%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.08%)</title><rect x="73.2989%" y="741" width="0.0842%" height="15" fill="rgb(229,160,0)" fg:x="6097" fg:w="7"/><text x="73.5489%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.08%)</title><rect x="73.2989%" y="725" width="0.0842%" height="15" fill="rgb(207,78,37)" fg:x="6097" fg:w="7"/><text x="73.5489%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.08%)</title><rect x="73.2989%" y="709" width="0.0842%" height="15" fill="rgb(225,57,0)" fg:x="6097" fg:w="7"/><text x="73.5489%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="73.3590%" y="693" width="0.0240%" height="15" fill="rgb(232,154,2)" fg:x="6102" fg:w="2"/><text x="73.6090%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="73.3590%" y="677" width="0.0240%" height="15" fill="rgb(241,212,25)" fg:x="6102" fg:w="2"/><text x="73.6090%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="73.3590%" y="661" width="0.0240%" height="15" fill="rgb(226,69,20)" fg:x="6102" fg:w="2"/><text x="73.6090%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="73.3590%" y="645" width="0.0240%" height="15" fill="rgb(247,184,54)" fg:x="6102" fg:w="2"/><text x="73.6090%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.3710%" y="629" width="0.0120%" height="15" fill="rgb(210,145,0)" fg:x="6103" fg:w="1"/><text x="73.6210%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.3710%" y="613" width="0.0120%" height="15" fill="rgb(253,82,12)" fg:x="6103" fg:w="1"/><text x="73.6210%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.3710%" y="597" width="0.0120%" height="15" fill="rgb(245,42,11)" fg:x="6103" fg:w="1"/><text x="73.6210%" y="607.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.3710%" y="581" width="0.0120%" height="15" fill="rgb(219,147,32)" fg:x="6103" fg:w="1"/><text x="73.6210%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="73.3830%" y="629" width="0.0240%" height="15" fill="rgb(246,12,7)" fg:x="6104" fg:w="2"/><text x="73.6330%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="73.3830%" y="613" width="0.0240%" height="15" fill="rgb(243,50,9)" fg:x="6104" fg:w="2"/><text x="73.6330%" y="623.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="73.3830%" y="597" width="0.0240%" height="15" fill="rgb(219,149,6)" fg:x="6104" fg:w="2"/><text x="73.6330%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.3950%" y="581" width="0.0120%" height="15" fill="rgb(241,51,42)" fg:x="6105" fg:w="1"/><text x="73.6450%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="73.3830%" y="725" width="0.0361%" height="15" fill="rgb(226,128,27)" fg:x="6104" fg:w="3"/><text x="73.6330%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (3 samples, 0.04%)</title><rect x="73.3830%" y="709" width="0.0361%" height="15" fill="rgb(244,144,4)" fg:x="6104" fg:w="3"/><text x="73.6330%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (3 samples, 0.04%)</title><rect x="73.3830%" y="693" width="0.0361%" height="15" fill="rgb(221,4,13)" fg:x="6104" fg:w="3"/><text x="73.6330%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (3 samples, 0.04%)</title><rect x="73.3830%" y="677" width="0.0361%" height="15" fill="rgb(208,170,28)" fg:x="6104" fg:w="3"/><text x="73.6330%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (3 samples, 0.04%)</title><rect x="73.3830%" y="661" width="0.0361%" height="15" fill="rgb(226,131,13)" fg:x="6104" fg:w="3"/><text x="73.6330%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="73.3830%" y="645" width="0.0361%" height="15" fill="rgb(215,72,41)" fg:x="6104" fg:w="3"/><text x="73.6330%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="73.4071%" y="629" width="0.0120%" height="15" fill="rgb(243,108,20)" fg:x="6106" fg:w="1"/><text x="73.6571%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="73.4071%" y="613" width="0.0120%" height="15" fill="rgb(230,189,17)" fg:x="6106" fg:w="1"/><text x="73.6571%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (71 samples, 0.85%)</title><rect x="72.5775%" y="885" width="0.8536%" height="15" fill="rgb(220,50,17)" fg:x="6037" fg:w="71"/><text x="72.8275%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (71 samples, 0.85%)</title><rect x="72.5775%" y="869" width="0.8536%" height="15" fill="rgb(248,152,48)" fg:x="6037" fg:w="71"/><text x="72.8275%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (71 samples, 0.85%)</title><rect x="72.5775%" y="853" width="0.8536%" height="15" fill="rgb(244,91,11)" fg:x="6037" fg:w="71"/><text x="72.8275%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (27 samples, 0.32%)</title><rect x="73.1065%" y="837" width="0.3246%" height="15" fill="rgb(220,157,5)" fg:x="6081" fg:w="27"/><text x="73.3565%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (27 samples, 0.32%)</title><rect x="73.1065%" y="821" width="0.3246%" height="15" fill="rgb(253,137,8)" fg:x="6081" fg:w="27"/><text x="73.3565%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (27 samples, 0.32%)</title><rect x="73.1065%" y="805" width="0.3246%" height="15" fill="rgb(217,137,51)" fg:x="6081" fg:w="27"/><text x="73.3565%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (27 samples, 0.32%)</title><rect x="73.1065%" y="789" width="0.3246%" height="15" fill="rgb(218,209,53)" fg:x="6081" fg:w="27"/><text x="73.3565%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (27 samples, 0.32%)</title><rect x="73.1065%" y="773" width="0.3246%" height="15" fill="rgb(249,137,25)" fg:x="6081" fg:w="27"/><text x="73.3565%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (27 samples, 0.32%)</title><rect x="73.1065%" y="757" width="0.3246%" height="15" fill="rgb(239,155,26)" fg:x="6081" fg:w="27"/><text x="73.3565%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (4 samples, 0.05%)</title><rect x="73.3830%" y="741" width="0.0481%" height="15" fill="rgb(227,85,46)" fg:x="6104" fg:w="4"/><text x="73.6330%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="73.4191%" y="725" width="0.0120%" height="15" fill="rgb(251,107,43)" fg:x="6107" fg:w="1"/><text x="73.6691%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.4191%" y="709" width="0.0120%" height="15" fill="rgb(234,170,33)" fg:x="6107" fg:w="1"/><text x="73.6691%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="73.4191%" y="693" width="0.0120%" height="15" fill="rgb(206,29,35)" fg:x="6107" fg:w="1"/><text x="73.6691%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (72 samples, 0.87%)</title><rect x="72.5775%" y="901" width="0.8656%" height="15" fill="rgb(227,138,25)" fg:x="6037" fg:w="72"/><text x="72.8275%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;smithereens::Fragment&gt;&gt; (1 samples, 0.01%)</title><rect x="73.4311%" y="885" width="0.0120%" height="15" fill="rgb(249,131,35)" fg:x="6108" fg:w="1"/><text x="73.6811%" y="895.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="73.4311%" y="869" width="0.0120%" height="15" fill="rgb(239,6,40)" fg:x="6108" fg:w="1"/><text x="73.6811%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.4311%" y="853" width="0.0120%" height="15" fill="rgb(246,136,47)" fg:x="6108" fg:w="1"/><text x="73.6811%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.4311%" y="837" width="0.0120%" height="15" fill="rgb(253,58,26)" fg:x="6108" fg:w="1"/><text x="73.6811%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.4311%" y="821" width="0.0120%" height="15" fill="rgb(237,141,10)" fg:x="6108" fg:w="1"/><text x="73.6811%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.4311%" y="805" width="0.0120%" height="15" fill="rgb(234,156,12)" fg:x="6108" fg:w="1"/><text x="73.6811%" y="815.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="73.4431%" y="661" width="0.0120%" height="15" fill="rgb(243,224,36)" fg:x="6109" fg:w="1"/><text x="73.6931%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="73.4431%" y="645" width="0.0120%" height="15" fill="rgb(205,229,51)" fg:x="6109" fg:w="1"/><text x="73.6931%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="73.4431%" y="741" width="0.0240%" height="15" fill="rgb(223,189,4)" fg:x="6109" fg:w="2"/><text x="73.6931%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="73.4431%" y="725" width="0.0240%" height="15" fill="rgb(249,167,54)" fg:x="6109" fg:w="2"/><text x="73.6931%" y="735.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="73.4431%" y="709" width="0.0240%" height="15" fill="rgb(218,34,28)" fg:x="6109" fg:w="2"/><text x="73.6931%" y="719.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="73.4431%" y="693" width="0.0240%" height="15" fill="rgb(232,109,42)" fg:x="6109" fg:w="2"/><text x="73.6931%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="73.4431%" y="677" width="0.0240%" height="15" fill="rgb(248,214,46)" fg:x="6109" fg:w="2"/><text x="73.6931%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="73.4552%" y="661" width="0.0120%" height="15" fill="rgb(244,216,40)" fg:x="6110" fg:w="1"/><text x="73.7052%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="73.4552%" y="645" width="0.0120%" height="15" fill="rgb(231,226,31)" fg:x="6110" fg:w="1"/><text x="73.7052%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="73.4552%" y="629" width="0.0120%" height="15" fill="rgb(238,38,43)" fg:x="6110" fg:w="1"/><text x="73.7052%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="73.4552%" y="613" width="0.0120%" height="15" fill="rgb(208,88,43)" fg:x="6110" fg:w="1"/><text x="73.7052%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="73.4552%" y="597" width="0.0120%" height="15" fill="rgb(205,136,37)" fg:x="6110" fg:w="1"/><text x="73.7052%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="73.4552%" y="581" width="0.0120%" height="15" fill="rgb(237,34,14)" fg:x="6110" fg:w="1"/><text x="73.7052%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="73.4792%" y="629" width="0.0120%" height="15" fill="rgb(236,193,44)" fg:x="6112" fg:w="1"/><text x="73.7292%" y="639.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="73.4672%" y="741" width="0.0361%" height="15" fill="rgb(231,48,10)" fg:x="6111" fg:w="3"/><text x="73.7172%" y="751.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="73.4672%" y="725" width="0.0361%" height="15" fill="rgb(213,141,34)" fg:x="6111" fg:w="3"/><text x="73.7172%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="73.4672%" y="709" width="0.0361%" height="15" fill="rgb(249,130,34)" fg:x="6111" fg:w="3"/><text x="73.7172%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="73.4672%" y="693" width="0.0361%" height="15" fill="rgb(219,42,41)" fg:x="6111" fg:w="3"/><text x="73.7172%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="73.4672%" y="677" width="0.0361%" height="15" fill="rgb(224,100,54)" fg:x="6111" fg:w="3"/><text x="73.7172%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="73.4672%" y="661" width="0.0361%" height="15" fill="rgb(229,200,27)" fg:x="6111" fg:w="3"/><text x="73.7172%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="73.4672%" y="645" width="0.0361%" height="15" fill="rgb(217,118,10)" fg:x="6111" fg:w="3"/><text x="73.7172%" y="655.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="73.4912%" y="629" width="0.0120%" height="15" fill="rgb(206,22,3)" fg:x="6113" fg:w="1"/><text x="73.7412%" y="639.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="73.4912%" y="613" width="0.0120%" height="15" fill="rgb(232,163,46)" fg:x="6113" fg:w="1"/><text x="73.7412%" y="623.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="73.4912%" y="597" width="0.0120%" height="15" fill="rgb(206,95,13)" fg:x="6113" fg:w="1"/><text x="73.7412%" y="607.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="73.4431%" y="757" width="0.0721%" height="15" fill="rgb(253,154,18)" fg:x="6109" fg:w="6"/><text x="73.6931%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="73.5032%" y="741" width="0.0120%" height="15" fill="rgb(219,32,23)" fg:x="6114" fg:w="1"/><text x="73.7532%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="73.5032%" y="725" width="0.0120%" height="15" fill="rgb(230,191,45)" fg:x="6114" fg:w="1"/><text x="73.7532%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="73.5032%" y="709" width="0.0120%" height="15" fill="rgb(229,64,36)" fg:x="6114" fg:w="1"/><text x="73.7532%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="73.5032%" y="693" width="0.0120%" height="15" fill="rgb(205,129,25)" fg:x="6114" fg:w="1"/><text x="73.7532%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="73.5032%" y="677" width="0.0120%" height="15" fill="rgb(254,112,7)" fg:x="6114" fg:w="1"/><text x="73.7532%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="73.5032%" y="661" width="0.0120%" height="15" fill="rgb(226,53,48)" fg:x="6114" fg:w="1"/><text x="73.7532%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (9 samples, 0.11%)</title><rect x="73.4431%" y="821" width="0.1082%" height="15" fill="rgb(214,153,38)" fg:x="6109" fg:w="9"/><text x="73.6931%" y="831.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (9 samples, 0.11%)</title><rect x="73.4431%" y="805" width="0.1082%" height="15" fill="rgb(243,101,7)" fg:x="6109" fg:w="9"/><text x="73.6931%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.11%)</title><rect x="73.4431%" y="789" width="0.1082%" height="15" fill="rgb(240,140,22)" fg:x="6109" fg:w="9"/><text x="73.6931%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.11%)</title><rect x="73.4431%" y="773" width="0.1082%" height="15" fill="rgb(235,114,2)" fg:x="6109" fg:w="9"/><text x="73.6931%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (3 samples, 0.04%)</title><rect x="73.5153%" y="757" width="0.0361%" height="15" fill="rgb(242,59,12)" fg:x="6115" fg:w="3"/><text x="73.7653%" y="767.50"></text></g><g><title>alloc::slice::stable_sort (3 samples, 0.04%)</title><rect x="73.5153%" y="741" width="0.0361%" height="15" fill="rgb(252,134,9)" fg:x="6115" fg:w="3"/><text x="73.7653%" y="751.50"></text></g><g><title>core::slice::sort::insert_tail (3 samples, 0.04%)</title><rect x="73.5153%" y="725" width="0.0361%" height="15" fill="rgb(236,4,44)" fg:x="6115" fg:w="3"/><text x="73.7653%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="73.5273%" y="709" width="0.0240%" height="15" fill="rgb(254,172,41)" fg:x="6116" fg:w="2"/><text x="73.7773%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (82 samples, 0.99%)</title><rect x="72.5775%" y="933" width="0.9858%" height="15" fill="rgb(244,63,20)" fg:x="6037" fg:w="82"/><text x="72.8275%" y="943.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (82 samples, 0.99%)</title><rect x="72.5775%" y="917" width="0.9858%" height="15" fill="rgb(250,73,31)" fg:x="6037" fg:w="82"/><text x="72.8275%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (10 samples, 0.12%)</title><rect x="73.4431%" y="901" width="0.1202%" height="15" fill="rgb(241,38,36)" fg:x="6109" fg:w="10"/><text x="73.6931%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.12%)</title><rect x="73.4431%" y="885" width="0.1202%" height="15" fill="rgb(245,211,2)" fg:x="6109" fg:w="10"/><text x="73.6931%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.12%)</title><rect x="73.4431%" y="869" width="0.1202%" height="15" fill="rgb(206,120,28)" fg:x="6109" fg:w="10"/><text x="73.6931%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (10 samples, 0.12%)</title><rect x="73.4431%" y="853" width="0.1202%" height="15" fill="rgb(211,59,34)" fg:x="6109" fg:w="10"/><text x="73.6931%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (10 samples, 0.12%)</title><rect x="73.4431%" y="837" width="0.1202%" height="15" fill="rgb(233,168,5)" fg:x="6109" fg:w="10"/><text x="73.6931%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.01%)</title><rect x="73.5513%" y="821" width="0.0120%" height="15" fill="rgb(234,33,13)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.01%)</title><rect x="73.5513%" y="805" width="0.0120%" height="15" fill="rgb(231,150,26)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="73.5513%" y="789" width="0.0120%" height="15" fill="rgb(217,191,4)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="799.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="73.5513%" y="773" width="0.0120%" height="15" fill="rgb(246,198,38)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.5513%" y="757" width="0.0120%" height="15" fill="rgb(245,64,37)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.5513%" y="741" width="0.0120%" height="15" fill="rgb(250,30,36)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.5513%" y="725" width="0.0120%" height="15" fill="rgb(217,86,53)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="735.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.5513%" y="709" width="0.0120%" height="15" fill="rgb(228,157,16)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.5513%" y="693" width="0.0120%" height="15" fill="rgb(217,59,31)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="73.5513%" y="677" width="0.0120%" height="15" fill="rgb(237,138,41)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="73.5513%" y="661" width="0.0120%" height="15" fill="rgb(227,91,49)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="73.5513%" y="645" width="0.0120%" height="15" fill="rgb(247,21,44)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="73.5513%" y="629" width="0.0120%" height="15" fill="rgb(219,210,51)" fg:x="6118" fg:w="1"/><text x="73.8013%" y="639.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.5634%" y="885" width="0.0120%" height="15" fill="rgb(209,140,6)" fg:x="6119" fg:w="1"/><text x="73.8134%" y="895.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.5634%" y="869" width="0.0120%" height="15" fill="rgb(221,188,24)" fg:x="6119" fg:w="1"/><text x="73.8134%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="73.5634%" y="853" width="0.0120%" height="15" fill="rgb(232,154,20)" fg:x="6119" fg:w="1"/><text x="73.8134%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="73.5634%" y="837" width="0.0120%" height="15" fill="rgb(244,137,50)" fg:x="6119" fg:w="1"/><text x="73.8134%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="73.5634%" y="821" width="0.0120%" height="15" fill="rgb(225,185,43)" fg:x="6119" fg:w="1"/><text x="73.8134%" y="831.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="73.5634%" y="805" width="0.0120%" height="15" fill="rgb(213,205,38)" fg:x="6119" fg:w="1"/><text x="73.8134%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="73.5634%" y="933" width="0.0240%" height="15" fill="rgb(236,73,12)" fg:x="6119" fg:w="2"/><text x="73.8134%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="73.5634%" y="917" width="0.0240%" height="15" fill="rgb(235,219,13)" fg:x="6119" fg:w="2"/><text x="73.8134%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="73.5634%" y="901" width="0.0240%" height="15" fill="rgb(218,59,36)" fg:x="6119" fg:w="2"/><text x="73.8134%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.5754%" y="885" width="0.0120%" height="15" fill="rgb(205,110,39)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.5754%" y="869" width="0.0120%" height="15" fill="rgb(218,206,42)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="73.5754%" y="853" width="0.0120%" height="15" fill="rgb(248,125,24)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.5754%" y="837" width="0.0120%" height="15" fill="rgb(242,28,27)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.5754%" y="821" width="0.0120%" height="15" fill="rgb(216,228,15)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.5754%" y="805" width="0.0120%" height="15" fill="rgb(235,116,46)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="815.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.5754%" y="789" width="0.0120%" height="15" fill="rgb(224,18,32)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.5754%" y="773" width="0.0120%" height="15" fill="rgb(252,5,12)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.5754%" y="757" width="0.0120%" height="15" fill="rgb(251,36,5)" fg:x="6120" fg:w="1"/><text x="73.8254%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.6235%" y="725" width="0.0120%" height="15" fill="rgb(217,53,14)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.6235%" y="709" width="0.0120%" height="15" fill="rgb(215,86,45)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.6235%" y="693" width="0.0120%" height="15" fill="rgb(242,169,11)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="73.6235%" y="677" width="0.0120%" height="15" fill="rgb(211,213,45)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="73.6235%" y="661" width="0.0120%" height="15" fill="rgb(205,88,11)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="671.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="73.6235%" y="645" width="0.0120%" height="15" fill="rgb(252,69,26)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.6235%" y="629" width="0.0120%" height="15" fill="rgb(246,123,37)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.6235%" y="613" width="0.0120%" height="15" fill="rgb(212,205,5)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.6235%" y="597" width="0.0120%" height="15" fill="rgb(253,148,0)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="607.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.6235%" y="581" width="0.0120%" height="15" fill="rgb(239,22,4)" fg:x="6124" fg:w="1"/><text x="73.8735%" y="591.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.6235%" y="741" width="0.0240%" height="15" fill="rgb(226,26,53)" fg:x="6124" fg:w="2"/><text x="73.8735%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="73.6355%" y="725" width="0.0120%" height="15" fill="rgb(225,229,45)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="73.6355%" y="709" width="0.0120%" height="15" fill="rgb(220,60,37)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="73.6355%" y="693" width="0.0120%" height="15" fill="rgb(217,180,35)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.6355%" y="677" width="0.0120%" height="15" fill="rgb(229,7,53)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.6355%" y="661" width="0.0120%" height="15" fill="rgb(254,137,3)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="73.6355%" y="645" width="0.0120%" height="15" fill="rgb(215,140,41)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.6355%" y="629" width="0.0120%" height="15" fill="rgb(250,80,15)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.6355%" y="613" width="0.0120%" height="15" fill="rgb(252,191,6)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.6355%" y="597" width="0.0120%" height="15" fill="rgb(246,217,18)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="607.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.6355%" y="581" width="0.0120%" height="15" fill="rgb(223,93,7)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.6355%" y="565" width="0.0120%" height="15" fill="rgb(225,55,52)" fg:x="6125" fg:w="1"/><text x="73.8855%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="73.6475%" y="645" width="0.0120%" height="15" fill="rgb(240,31,24)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="73.6475%" y="629" width="0.0120%" height="15" fill="rgb(205,56,52)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.6475%" y="613" width="0.0120%" height="15" fill="rgb(246,146,12)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.6475%" y="597" width="0.0120%" height="15" fill="rgb(239,84,36)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.6475%" y="581" width="0.0120%" height="15" fill="rgb(207,41,40)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="73.6475%" y="565" width="0.0120%" height="15" fill="rgb(241,179,25)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="73.6475%" y="549" width="0.0120%" height="15" fill="rgb(210,0,34)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="559.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="73.6475%" y="533" width="0.0120%" height="15" fill="rgb(225,217,29)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.6475%" y="517" width="0.0120%" height="15" fill="rgb(216,191,38)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.6475%" y="501" width="0.0120%" height="15" fill="rgb(232,140,52)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.6475%" y="485" width="0.0120%" height="15" fill="rgb(223,158,51)" fg:x="6126" fg:w="1"/><text x="73.8975%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="73.6956%" y="485" width="0.0120%" height="15" fill="rgb(235,29,51)" fg:x="6130" fg:w="1"/><text x="73.9456%" y="495.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="73.7076%" y="485" width="0.0120%" height="15" fill="rgb(215,181,18)" fg:x="6131" fg:w="1"/><text x="73.9576%" y="495.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="73.7076%" y="469" width="0.0120%" height="15" fill="rgb(227,125,34)" fg:x="6131" fg:w="1"/><text x="73.9576%" y="479.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="73.7076%" y="453" width="0.0120%" height="15" fill="rgb(230,197,49)" fg:x="6131" fg:w="1"/><text x="73.9576%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.07%)</title><rect x="73.6595%" y="645" width="0.0721%" height="15" fill="rgb(239,141,16)" fg:x="6127" fg:w="6"/><text x="73.9095%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.07%)</title><rect x="73.6595%" y="629" width="0.0721%" height="15" fill="rgb(225,105,43)" fg:x="6127" fg:w="6"/><text x="73.9095%" y="639.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="73.6595%" y="613" width="0.0721%" height="15" fill="rgb(214,131,14)" fg:x="6127" fg:w="6"/><text x="73.9095%" y="623.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="73.6595%" y="597" width="0.0721%" height="15" fill="rgb(229,177,11)" fg:x="6127" fg:w="6"/><text x="73.9095%" y="607.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="73.6595%" y="581" width="0.0721%" height="15" fill="rgb(231,180,14)" fg:x="6127" fg:w="6"/><text x="73.9095%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (5 samples, 0.06%)</title><rect x="73.6716%" y="565" width="0.0601%" height="15" fill="rgb(232,88,2)" fg:x="6128" fg:w="5"/><text x="73.9216%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u32 (5 samples, 0.06%)</title><rect x="73.6716%" y="549" width="0.0601%" height="15" fill="rgb(205,220,8)" fg:x="6128" fg:w="5"/><text x="73.9216%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="73.6716%" y="533" width="0.0601%" height="15" fill="rgb(225,23,53)" fg:x="6128" fg:w="5"/><text x="73.9216%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="73.6836%" y="517" width="0.0481%" height="15" fill="rgb(213,62,29)" fg:x="6129" fg:w="4"/><text x="73.9336%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="73.6836%" y="501" width="0.0481%" height="15" fill="rgb(227,75,7)" fg:x="6129" fg:w="4"/><text x="73.9336%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="73.7196%" y="485" width="0.0120%" height="15" fill="rgb(207,105,14)" fg:x="6132" fg:w="1"/><text x="73.9696%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (2 samples, 0.02%)</title><rect x="73.7317%" y="549" width="0.0240%" height="15" fill="rgb(245,62,29)" fg:x="6133" fg:w="2"/><text x="73.9817%" y="559.50"></text></g><g><title>alloc::slice::stable_sort (2 samples, 0.02%)</title><rect x="73.7317%" y="533" width="0.0240%" height="15" fill="rgb(236,202,4)" fg:x="6133" fg:w="2"/><text x="73.9817%" y="543.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="73.7437%" y="517" width="0.0120%" height="15" fill="rgb(250,67,1)" fg:x="6134" fg:w="1"/><text x="73.9937%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="73.7437%" y="501" width="0.0120%" height="15" fill="rgb(253,115,44)" fg:x="6134" fg:w="1"/><text x="73.9937%" y="511.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.7437%" y="485" width="0.0120%" height="15" fill="rgb(251,139,18)" fg:x="6134" fg:w="1"/><text x="73.9937%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="73.7437%" y="469" width="0.0120%" height="15" fill="rgb(218,22,32)" fg:x="6134" fg:w="1"/><text x="73.9937%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.7677%" y="325" width="0.0120%" height="15" fill="rgb(243,53,5)" fg:x="6136" fg:w="1"/><text x="74.0177%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.7677%" y="309" width="0.0120%" height="15" fill="rgb(227,56,16)" fg:x="6136" fg:w="1"/><text x="74.0177%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="73.7677%" y="293" width="0.0120%" height="15" fill="rgb(245,53,0)" fg:x="6136" fg:w="1"/><text x="74.0177%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.7677%" y="277" width="0.0120%" height="15" fill="rgb(216,170,35)" fg:x="6136" fg:w="1"/><text x="74.0177%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.7677%" y="261" width="0.0120%" height="15" fill="rgb(211,200,8)" fg:x="6136" fg:w="1"/><text x="74.0177%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.7677%" y="245" width="0.0120%" height="15" fill="rgb(228,204,44)" fg:x="6136" fg:w="1"/><text x="74.0177%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="73.7557%" y="549" width="0.0361%" height="15" fill="rgb(214,121,17)" fg:x="6135" fg:w="3"/><text x="74.0057%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="73.7557%" y="533" width="0.0361%" height="15" fill="rgb(233,64,38)" fg:x="6135" fg:w="3"/><text x="74.0057%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="73.7677%" y="517" width="0.0240%" height="15" fill="rgb(253,54,19)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="73.7677%" y="501" width="0.0240%" height="15" fill="rgb(253,94,18)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.02%)</title><rect x="73.7677%" y="485" width="0.0240%" height="15" fill="rgb(227,57,52)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="73.7677%" y="469" width="0.0240%" height="15" fill="rgb(230,228,50)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="73.7677%" y="453" width="0.0240%" height="15" fill="rgb(217,205,27)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.02%)</title><rect x="73.7677%" y="437" width="0.0240%" height="15" fill="rgb(252,71,50)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="447.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (2 samples, 0.02%)</title><rect x="73.7677%" y="421" width="0.0240%" height="15" fill="rgb(209,86,4)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="431.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.7677%" y="405" width="0.0240%" height="15" fill="rgb(229,94,0)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.7677%" y="389" width="0.0240%" height="15" fill="rgb(252,223,21)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="73.7677%" y="373" width="0.0240%" height="15" fill="rgb(230,210,4)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="73.7677%" y="357" width="0.0240%" height="15" fill="rgb(240,149,38)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="73.7677%" y="341" width="0.0240%" height="15" fill="rgb(254,105,20)" fg:x="6136" fg:w="2"/><text x="74.0177%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="73.7798%" y="325" width="0.0120%" height="15" fill="rgb(253,87,46)" fg:x="6137" fg:w="1"/><text x="74.0298%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.16%)</title><rect x="73.6475%" y="709" width="0.1563%" height="15" fill="rgb(253,116,33)" fg:x="6126" fg:w="13"/><text x="73.8975%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (13 samples, 0.16%)</title><rect x="73.6475%" y="693" width="0.1563%" height="15" fill="rgb(229,198,5)" fg:x="6126" fg:w="13"/><text x="73.8975%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (13 samples, 0.16%)</title><rect x="73.6475%" y="677" width="0.1563%" height="15" fill="rgb(242,38,37)" fg:x="6126" fg:w="13"/><text x="73.8975%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (13 samples, 0.16%)</title><rect x="73.6475%" y="661" width="0.1563%" height="15" fill="rgb(242,69,53)" fg:x="6126" fg:w="13"/><text x="73.8975%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6 samples, 0.07%)</title><rect x="73.7317%" y="645" width="0.0721%" height="15" fill="rgb(249,80,16)" fg:x="6133" fg:w="6"/><text x="73.9817%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (6 samples, 0.07%)</title><rect x="73.7317%" y="629" width="0.0721%" height="15" fill="rgb(206,128,11)" fg:x="6133" fg:w="6"/><text x="73.9817%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (6 samples, 0.07%)</title><rect x="73.7317%" y="613" width="0.0721%" height="15" fill="rgb(212,35,20)" fg:x="6133" fg:w="6"/><text x="73.9817%" y="623.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (6 samples, 0.07%)</title><rect x="73.7317%" y="597" width="0.0721%" height="15" fill="rgb(236,79,13)" fg:x="6133" fg:w="6"/><text x="73.9817%" y="607.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6 samples, 0.07%)</title><rect x="73.7317%" y="581" width="0.0721%" height="15" fill="rgb(233,123,3)" fg:x="6133" fg:w="6"/><text x="73.9817%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.07%)</title><rect x="73.7317%" y="565" width="0.0721%" height="15" fill="rgb(214,93,52)" fg:x="6133" fg:w="6"/><text x="73.9817%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="73.7918%" y="549" width="0.0120%" height="15" fill="rgb(251,37,40)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.7918%" y="533" width="0.0120%" height="15" fill="rgb(227,80,54)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="73.7918%" y="517" width="0.0120%" height="15" fill="rgb(254,48,11)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="73.7918%" y="501" width="0.0120%" height="15" fill="rgb(235,193,26)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="73.7918%" y="485" width="0.0120%" height="15" fill="rgb(229,99,21)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="73.7918%" y="469" width="0.0120%" height="15" fill="rgb(211,140,41)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.7918%" y="453" width="0.0120%" height="15" fill="rgb(240,227,30)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="73.7918%" y="437" width="0.0120%" height="15" fill="rgb(215,224,45)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="73.7918%" y="421" width="0.0120%" height="15" fill="rgb(206,123,31)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="431.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="73.7918%" y="405" width="0.0120%" height="15" fill="rgb(210,138,16)" fg:x="6138" fg:w="1"/><text x="74.0418%" y="415.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="73.8038%" y="373" width="0.0120%" height="15" fill="rgb(228,57,28)" fg:x="6139" fg:w="1"/><text x="74.0538%" y="383.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="73.8038%" y="357" width="0.0120%" height="15" fill="rgb(242,170,10)" fg:x="6139" fg:w="1"/><text x="74.0538%" y="367.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="73.8038%" y="341" width="0.0120%" height="15" fill="rgb(228,214,39)" fg:x="6139" fg:w="1"/><text x="74.0538%" y="351.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (15 samples, 0.18%)</title><rect x="73.6475%" y="741" width="0.1803%" height="15" fill="rgb(218,179,33)" fg:x="6126" fg:w="15"/><text x="73.8975%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (15 samples, 0.18%)</title><rect x="73.6475%" y="725" width="0.1803%" height="15" fill="rgb(235,193,39)" fg:x="6126" fg:w="15"/><text x="73.8975%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.02%)</title><rect x="73.8038%" y="709" width="0.0240%" height="15" fill="rgb(219,221,36)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="73.8038%" y="693" width="0.0240%" height="15" fill="rgb(248,218,19)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="73.8038%" y="677" width="0.0240%" height="15" fill="rgb(205,50,9)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.02%)</title><rect x="73.8038%" y="661" width="0.0240%" height="15" fill="rgb(238,81,28)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.02%)</title><rect x="73.8038%" y="645" width="0.0240%" height="15" fill="rgb(235,110,19)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2 samples, 0.02%)</title><rect x="73.8038%" y="629" width="0.0240%" height="15" fill="rgb(214,7,14)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="639.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (2 samples, 0.02%)</title><rect x="73.8038%" y="613" width="0.0240%" height="15" fill="rgb(211,77,3)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="73.8038%" y="597" width="0.0240%" height="15" fill="rgb(229,5,9)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="581" width="0.0240%" height="15" fill="rgb(225,90,11)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="591.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="565" width="0.0240%" height="15" fill="rgb(242,56,8)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="549" width="0.0240%" height="15" fill="rgb(249,212,39)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="533" width="0.0240%" height="15" fill="rgb(236,90,9)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="543.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="73.8038%" y="517" width="0.0240%" height="15" fill="rgb(206,88,35)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="527.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="501" width="0.0240%" height="15" fill="rgb(205,126,30)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="511.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="485" width="0.0240%" height="15" fill="rgb(230,176,12)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="469" width="0.0240%" height="15" fill="rgb(243,19,9)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="73.8038%" y="453" width="0.0240%" height="15" fill="rgb(245,171,17)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="73.8038%" y="437" width="0.0240%" height="15" fill="rgb(227,52,21)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="73.8038%" y="421" width="0.0240%" height="15" fill="rgb(238,69,14)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="73.8038%" y="405" width="0.0240%" height="15" fill="rgb(241,156,39)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="73.8038%" y="389" width="0.0240%" height="15" fill="rgb(212,227,28)" fg:x="6139" fg:w="2"/><text x="74.0538%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="73.8158%" y="373" width="0.0120%" height="15" fill="rgb(209,118,27)" fg:x="6140" fg:w="1"/><text x="74.0658%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="73.8399%" y="549" width="0.0120%" height="15" fill="rgb(226,102,5)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="73.8399%" y="533" width="0.0120%" height="15" fill="rgb(223,34,3)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.8399%" y="517" width="0.0120%" height="15" fill="rgb(221,81,38)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.8399%" y="501" width="0.0120%" height="15" fill="rgb(236,219,28)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.8399%" y="485" width="0.0120%" height="15" fill="rgb(213,200,14)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="73.8399%" y="469" width="0.0120%" height="15" fill="rgb(240,33,19)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="73.8399%" y="453" width="0.0120%" height="15" fill="rgb(233,113,27)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="463.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="73.8399%" y="437" width="0.0120%" height="15" fill="rgb(220,221,18)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.8399%" y="421" width="0.0120%" height="15" fill="rgb(238,92,8)" fg:x="6142" fg:w="1"/><text x="74.0899%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="73.8519%" y="549" width="0.0120%" height="15" fill="rgb(222,164,16)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="73.8519%" y="533" width="0.0120%" height="15" fill="rgb(241,119,3)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="73.8519%" y="517" width="0.0120%" height="15" fill="rgb(241,44,8)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="73.8519%" y="501" width="0.0120%" height="15" fill="rgb(230,36,40)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="511.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="73.8519%" y="485" width="0.0120%" height="15" fill="rgb(243,16,36)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="73.8519%" y="469" width="0.0120%" height="15" fill="rgb(231,4,26)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="73.8519%" y="453" width="0.0120%" height="15" fill="rgb(240,9,31)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="463.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="73.8519%" y="437" width="0.0120%" height="15" fill="rgb(207,173,15)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="73.8519%" y="421" width="0.0120%" height="15" fill="rgb(224,192,53)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="73.8519%" y="405" width="0.0120%" height="15" fill="rgb(223,67,28)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="73.8519%" y="389" width="0.0120%" height="15" fill="rgb(211,20,47)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="73.8519%" y="373" width="0.0120%" height="15" fill="rgb(240,228,2)" fg:x="6143" fg:w="1"/><text x="74.1019%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.8639%" y="373" width="0.0120%" height="15" fill="rgb(248,151,12)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="73.8639%" y="357" width="0.0120%" height="15" fill="rgb(244,8,39)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="73.8639%" y="341" width="0.0120%" height="15" fill="rgb(222,26,8)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="73.8639%" y="325" width="0.0120%" height="15" fill="rgb(213,106,44)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.8639%" y="309" width="0.0120%" height="15" fill="rgb(214,129,20)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.8639%" y="293" width="0.0120%" height="15" fill="rgb(212,32,13)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="73.8639%" y="277" width="0.0120%" height="15" fill="rgb(208,168,33)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.8639%" y="261" width="0.0120%" height="15" fill="rgb(231,207,8)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.8639%" y="245" width="0.0120%" height="15" fill="rgb(235,219,23)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.8639%" y="229" width="0.0120%" height="15" fill="rgb(226,216,26)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="239.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.8639%" y="213" width="0.0120%" height="15" fill="rgb(239,137,16)" fg:x="6144" fg:w="1"/><text x="74.1139%" y="223.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.8759%" y="373" width="0.0240%" height="15" fill="rgb(207,12,36)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="383.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.8759%" y="357" width="0.0240%" height="15" fill="rgb(210,214,24)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.8759%" y="341" width="0.0240%" height="15" fill="rgb(206,56,30)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="73.8759%" y="325" width="0.0240%" height="15" fill="rgb(228,143,26)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="73.8759%" y="309" width="0.0240%" height="15" fill="rgb(216,218,46)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="319.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="73.8759%" y="293" width="0.0240%" height="15" fill="rgb(206,6,19)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="73.8759%" y="277" width="0.0240%" height="15" fill="rgb(239,177,51)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="73.8759%" y="261" width="0.0240%" height="15" fill="rgb(216,55,25)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="73.8759%" y="245" width="0.0240%" height="15" fill="rgb(231,163,29)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="255.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="73.8759%" y="229" width="0.0240%" height="15" fill="rgb(232,149,50)" fg:x="6145" fg:w="2"/><text x="74.1259%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.8880%" y="213" width="0.0120%" height="15" fill="rgb(223,142,48)" fg:x="6146" fg:w="1"/><text x="74.1380%" y="223.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.9000%" y="325" width="0.0240%" height="15" fill="rgb(245,83,23)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="335.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="73.9000%" y="309" width="0.0240%" height="15" fill="rgb(224,63,2)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="73.9000%" y="293" width="0.0240%" height="15" fill="rgb(218,65,53)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="73.9000%" y="277" width="0.0240%" height="15" fill="rgb(221,84,29)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="73.9000%" y="261" width="0.0240%" height="15" fill="rgb(234,0,32)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="73.9000%" y="245" width="0.0240%" height="15" fill="rgb(206,20,16)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="73.9000%" y="229" width="0.0240%" height="15" fill="rgb(244,172,18)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="73.9000%" y="213" width="0.0240%" height="15" fill="rgb(254,133,1)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="73.9000%" y="197" width="0.0240%" height="15" fill="rgb(222,206,41)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="73.9000%" y="181" width="0.0240%" height="15" fill="rgb(212,3,42)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="73.9000%" y="165" width="0.0240%" height="15" fill="rgb(241,11,4)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="175.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="73.9000%" y="149" width="0.0240%" height="15" fill="rgb(205,19,26)" fg:x="6147" fg:w="2"/><text x="74.1500%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.9120%" y="133" width="0.0120%" height="15" fill="rgb(210,179,32)" fg:x="6148" fg:w="1"/><text x="74.1620%" y="143.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (7 samples, 0.08%)</title><rect x="73.8639%" y="501" width="0.0842%" height="15" fill="rgb(227,116,49)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="73.8639%" y="485" width="0.0842%" height="15" fill="rgb(211,146,6)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="73.8639%" y="469" width="0.0842%" height="15" fill="rgb(219,44,39)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="73.8639%" y="453" width="0.0842%" height="15" fill="rgb(234,128,11)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (7 samples, 0.08%)</title><rect x="73.8639%" y="437" width="0.0842%" height="15" fill="rgb(220,183,53)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (7 samples, 0.08%)</title><rect x="73.8639%" y="421" width="0.0842%" height="15" fill="rgb(213,219,32)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="431.50"></text></g><g><title>core::clone::Clone::clone (7 samples, 0.08%)</title><rect x="73.8639%" y="405" width="0.0842%" height="15" fill="rgb(232,156,16)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="415.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="73.8639%" y="389" width="0.0842%" height="15" fill="rgb(246,135,34)" fg:x="6144" fg:w="7"/><text x="74.1139%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="73.9000%" y="373" width="0.0481%" height="15" fill="rgb(241,99,0)" fg:x="6147" fg:w="4"/><text x="74.1500%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="73.9000%" y="357" width="0.0481%" height="15" fill="rgb(222,103,45)" fg:x="6147" fg:w="4"/><text x="74.1500%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="73.9000%" y="341" width="0.0481%" height="15" fill="rgb(212,57,4)" fg:x="6147" fg:w="4"/><text x="74.1500%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="73.9240%" y="325" width="0.0240%" height="15" fill="rgb(215,68,47)" fg:x="6149" fg:w="2"/><text x="74.1740%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="73.9240%" y="309" width="0.0240%" height="15" fill="rgb(230,84,2)" fg:x="6149" fg:w="2"/><text x="74.1740%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="73.9240%" y="293" width="0.0240%" height="15" fill="rgb(220,102,14)" fg:x="6149" fg:w="2"/><text x="74.1740%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="73.9240%" y="277" width="0.0240%" height="15" fill="rgb(240,10,32)" fg:x="6149" fg:w="2"/><text x="74.1740%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="73.9240%" y="261" width="0.0240%" height="15" fill="rgb(215,47,27)" fg:x="6149" fg:w="2"/><text x="74.1740%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="73.9240%" y="245" width="0.0240%" height="15" fill="rgb(233,188,43)" fg:x="6149" fg:w="2"/><text x="74.1740%" y="255.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="73.9240%" y="229" width="0.0240%" height="15" fill="rgb(253,190,1)" fg:x="6149" fg:w="2"/><text x="74.1740%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.9360%" y="213" width="0.0120%" height="15" fill="rgb(206,114,52)" fg:x="6150" fg:w="1"/><text x="74.1860%" y="223.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.9481%" y="357" width="0.0120%" height="15" fill="rgb(233,120,37)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="367.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.9481%" y="341" width="0.0120%" height="15" fill="rgb(214,52,39)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="73.9481%" y="325" width="0.0120%" height="15" fill="rgb(223,80,29)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="73.9481%" y="309" width="0.0120%" height="15" fill="rgb(230,101,40)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="73.9481%" y="293" width="0.0120%" height="15" fill="rgb(219,211,8)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="73.9481%" y="277" width="0.0120%" height="15" fill="rgb(252,126,28)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.9481%" y="261" width="0.0120%" height="15" fill="rgb(215,56,38)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.9481%" y="245" width="0.0120%" height="15" fill="rgb(249,55,44)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="73.9481%" y="229" width="0.0120%" height="15" fill="rgb(220,221,32)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.9481%" y="213" width="0.0120%" height="15" fill="rgb(212,216,41)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.9481%" y="197" width="0.0120%" height="15" fill="rgb(228,213,43)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.9481%" y="181" width="0.0120%" height="15" fill="rgb(211,31,26)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="191.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.9481%" y="165" width="0.0120%" height="15" fill="rgb(229,202,19)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.9481%" y="149" width="0.0120%" height="15" fill="rgb(229,105,46)" fg:x="6151" fg:w="1"/><text x="74.1981%" y="159.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="73.9481%" y="453" width="0.0240%" height="15" fill="rgb(235,108,1)" fg:x="6151" fg:w="2"/><text x="74.1981%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="73.9481%" y="437" width="0.0240%" height="15" fill="rgb(245,111,35)" fg:x="6151" fg:w="2"/><text x="74.1981%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="73.9481%" y="421" width="0.0240%" height="15" fill="rgb(219,185,31)" fg:x="6151" fg:w="2"/><text x="74.1981%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="73.9481%" y="405" width="0.0240%" height="15" fill="rgb(214,4,43)" fg:x="6151" fg:w="2"/><text x="74.1981%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="73.9481%" y="389" width="0.0240%" height="15" fill="rgb(235,227,40)" fg:x="6151" fg:w="2"/><text x="74.1981%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="73.9481%" y="373" width="0.0240%" height="15" fill="rgb(230,88,30)" fg:x="6151" fg:w="2"/><text x="74.1981%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.9601%" y="357" width="0.0120%" height="15" fill="rgb(216,217,1)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="73.9601%" y="341" width="0.0120%" height="15" fill="rgb(248,139,50)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="73.9601%" y="325" width="0.0120%" height="15" fill="rgb(233,1,21)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="73.9601%" y="309" width="0.0120%" height="15" fill="rgb(215,183,12)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="73.9601%" y="293" width="0.0120%" height="15" fill="rgb(229,104,42)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="73.9601%" y="277" width="0.0120%" height="15" fill="rgb(243,34,48)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="287.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="73.9601%" y="261" width="0.0120%" height="15" fill="rgb(239,11,44)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.9601%" y="245" width="0.0120%" height="15" fill="rgb(231,98,35)" fg:x="6152" fg:w="1"/><text x="74.2101%" y="255.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="73.9721%" y="341" width="0.0120%" height="15" fill="rgb(233,28,25)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="73.9721%" y="325" width="0.0120%" height="15" fill="rgb(234,123,11)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="73.9721%" y="309" width="0.0120%" height="15" fill="rgb(220,69,3)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="73.9721%" y="293" width="0.0120%" height="15" fill="rgb(214,64,36)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="73.9721%" y="277" width="0.0120%" height="15" fill="rgb(211,138,32)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="73.9721%" y="261" width="0.0120%" height="15" fill="rgb(213,118,47)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="73.9721%" y="245" width="0.0120%" height="15" fill="rgb(243,124,49)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="73.9721%" y="229" width="0.0120%" height="15" fill="rgb(221,30,28)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="239.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="73.9721%" y="213" width="0.0120%" height="15" fill="rgb(246,37,13)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="223.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="73.9721%" y="197" width="0.0120%" height="15" fill="rgb(249,66,14)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="73.9721%" y="181" width="0.0120%" height="15" fill="rgb(213,166,5)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="73.9721%" y="165" width="0.0120%" height="15" fill="rgb(221,66,24)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="73.9721%" y="149" width="0.0120%" height="15" fill="rgb(210,132,17)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="73.9721%" y="133" width="0.0120%" height="15" fill="rgb(243,202,5)" fg:x="6153" fg:w="1"/><text x="74.2221%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="73.8399%" y="661" width="0.1563%" height="15" fill="rgb(233,70,48)" fg:x="6142" fg:w="13"/><text x="74.0899%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="73.8399%" y="645" width="0.1563%" height="15" fill="rgb(238,41,26)" fg:x="6142" fg:w="13"/><text x="74.0899%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (13 samples, 0.16%)</title><rect x="73.8399%" y="629" width="0.1563%" height="15" fill="rgb(241,19,31)" fg:x="6142" fg:w="13"/><text x="74.0899%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="73.8399%" y="613" width="0.1563%" height="15" fill="rgb(214,76,10)" fg:x="6142" fg:w="13"/><text x="74.0899%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.16%)</title><rect x="73.8399%" y="597" width="0.1563%" height="15" fill="rgb(254,202,22)" fg:x="6142" fg:w="13"/><text x="74.0899%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.16%)</title><rect x="73.8399%" y="581" width="0.1563%" height="15" fill="rgb(214,72,24)" fg:x="6142" fg:w="13"/><text x="74.0899%" y="591.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (13 samples, 0.16%)</title><rect x="73.8399%" y="565" width="0.1563%" height="15" fill="rgb(221,92,46)" fg:x="6142" fg:w="13"/><text x="74.0899%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.13%)</title><rect x="73.8639%" y="549" width="0.1322%" height="15" fill="rgb(246,13,50)" fg:x="6144" fg:w="11"/><text x="74.1139%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.13%)</title><rect x="73.8639%" y="533" width="0.1322%" height="15" fill="rgb(240,165,38)" fg:x="6144" fg:w="11"/><text x="74.1139%" y="543.50"></text></g><g><title>smithereens::fragment::_{{closure}} (11 samples, 0.13%)</title><rect x="73.8639%" y="517" width="0.1322%" height="15" fill="rgb(241,24,51)" fg:x="6144" fg:w="11"/><text x="74.1139%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="73.9481%" y="501" width="0.0481%" height="15" fill="rgb(227,51,44)" fg:x="6151" fg:w="4"/><text x="74.1981%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.05%)</title><rect x="73.9481%" y="485" width="0.0481%" height="15" fill="rgb(231,121,3)" fg:x="6151" fg:w="4"/><text x="74.1981%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.05%)</title><rect x="73.9481%" y="469" width="0.0481%" height="15" fill="rgb(245,3,41)" fg:x="6151" fg:w="4"/><text x="74.1981%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="73.9721%" y="453" width="0.0240%" height="15" fill="rgb(214,13,26)" fg:x="6153" fg:w="2"/><text x="74.2221%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="73.9721%" y="437" width="0.0240%" height="15" fill="rgb(252,75,11)" fg:x="6153" fg:w="2"/><text x="74.2221%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.02%)</title><rect x="73.9721%" y="421" width="0.0240%" height="15" fill="rgb(218,226,17)" fg:x="6153" fg:w="2"/><text x="74.2221%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.02%)</title><rect x="73.9721%" y="405" width="0.0240%" height="15" fill="rgb(248,89,38)" fg:x="6153" fg:w="2"/><text x="74.2221%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.02%)</title><rect x="73.9721%" y="389" width="0.0240%" height="15" fill="rgb(237,73,46)" fg:x="6153" fg:w="2"/><text x="74.2221%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="73.9721%" y="373" width="0.0240%" height="15" fill="rgb(242,78,33)" fg:x="6153" fg:w="2"/><text x="74.2221%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="73.9721%" y="357" width="0.0240%" height="15" fill="rgb(235,60,3)" fg:x="6153" fg:w="2"/><text x="74.2221%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="73.9841%" y="341" width="0.0120%" height="15" fill="rgb(216,172,19)" fg:x="6154" fg:w="1"/><text x="74.2341%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="73.9841%" y="325" width="0.0120%" height="15" fill="rgb(227,6,42)" fg:x="6154" fg:w="1"/><text x="74.2341%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.18%)</title><rect x="73.8278%" y="693" width="0.1803%" height="15" fill="rgb(223,207,42)" fg:x="6141" fg:w="15"/><text x="74.0778%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.18%)</title><rect x="73.8278%" y="677" width="0.1803%" height="15" fill="rgb(246,138,30)" fg:x="6141" fg:w="15"/><text x="74.0778%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="73.9962%" y="661" width="0.0120%" height="15" fill="rgb(251,199,47)" fg:x="6155" fg:w="1"/><text x="74.2462%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.19%)</title><rect x="73.8278%" y="741" width="0.1924%" height="15" fill="rgb(228,218,44)" fg:x="6141" fg:w="16"/><text x="74.0778%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.19%)</title><rect x="73.8278%" y="725" width="0.1924%" height="15" fill="rgb(220,68,6)" fg:x="6141" fg:w="16"/><text x="74.0778%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.19%)</title><rect x="73.8278%" y="709" width="0.1924%" height="15" fill="rgb(240,60,26)" fg:x="6141" fg:w="16"/><text x="74.0778%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.0082%" y="693" width="0.0120%" height="15" fill="rgb(211,200,19)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.0082%" y="677" width="0.0120%" height="15" fill="rgb(242,145,30)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="74.0082%" y="661" width="0.0120%" height="15" fill="rgb(225,64,13)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.0082%" y="645" width="0.0120%" height="15" fill="rgb(218,103,35)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="74.0082%" y="629" width="0.0120%" height="15" fill="rgb(216,93,46)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="74.0082%" y="613" width="0.0120%" height="15" fill="rgb(225,159,27)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="623.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="74.0082%" y="597" width="0.0120%" height="15" fill="rgb(225,204,11)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="74.0082%" y="581" width="0.0120%" height="15" fill="rgb(205,56,4)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="74.0082%" y="565" width="0.0120%" height="15" fill="rgb(206,6,35)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="74.0082%" y="549" width="0.0120%" height="15" fill="rgb(247,73,52)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="74.0082%" y="533" width="0.0120%" height="15" fill="rgb(246,97,4)" fg:x="6156" fg:w="1"/><text x="74.2582%" y="543.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (1 samples, 0.01%)</title><rect x="74.0202%" y="741" width="0.0120%" height="15" fill="rgb(212,37,15)" fg:x="6157" fg:w="1"/><text x="74.2702%" y="751.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (1 samples, 0.01%)</title><rect x="74.0202%" y="725" width="0.0120%" height="15" fill="rgb(208,130,40)" fg:x="6157" fg:w="1"/><text x="74.2702%" y="735.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.0322%" y="645" width="0.0120%" height="15" fill="rgb(236,55,29)" fg:x="6158" fg:w="1"/><text x="74.2822%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.0322%" y="629" width="0.0120%" height="15" fill="rgb(209,156,45)" fg:x="6158" fg:w="1"/><text x="74.2822%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="74.0322%" y="613" width="0.0120%" height="15" fill="rgb(249,107,4)" fg:x="6158" fg:w="1"/><text x="74.2822%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.0322%" y="597" width="0.0120%" height="15" fill="rgb(227,7,13)" fg:x="6158" fg:w="1"/><text x="74.2822%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.0322%" y="581" width="0.0120%" height="15" fill="rgb(250,129,14)" fg:x="6158" fg:w="1"/><text x="74.2822%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.0322%" y="565" width="0.0120%" height="15" fill="rgb(229,92,13)" fg:x="6158" fg:w="1"/><text x="74.2822%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="74.0322%" y="549" width="0.0120%" height="15" fill="rgb(245,98,39)" fg:x="6158" fg:w="1"/><text x="74.2822%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="74.0322%" y="741" width="0.0240%" height="15" fill="rgb(234,135,48)" fg:x="6158" fg:w="2"/><text x="74.2822%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="74.0322%" y="725" width="0.0240%" height="15" fill="rgb(230,98,28)" fg:x="6158" fg:w="2"/><text x="74.2822%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="74.0322%" y="709" width="0.0240%" height="15" fill="rgb(223,121,0)" fg:x="6158" fg:w="2"/><text x="74.2822%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="74.0322%" y="693" width="0.0240%" height="15" fill="rgb(234,173,33)" fg:x="6158" fg:w="2"/><text x="74.2822%" y="703.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.0322%" y="677" width="0.0240%" height="15" fill="rgb(245,47,8)" fg:x="6158" fg:w="2"/><text x="74.2822%" y="687.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.0322%" y="661" width="0.0240%" height="15" fill="rgb(205,17,20)" fg:x="6158" fg:w="2"/><text x="74.2822%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="74.0442%" y="645" width="0.0120%" height="15" fill="rgb(232,151,16)" fg:x="6159" fg:w="1"/><text x="74.2942%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="74.0442%" y="629" width="0.0120%" height="15" fill="rgb(208,30,32)" fg:x="6159" fg:w="1"/><text x="74.2942%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="74.0442%" y="613" width="0.0120%" height="15" fill="rgb(254,26,3)" fg:x="6159" fg:w="1"/><text x="74.2942%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="74.0442%" y="597" width="0.0120%" height="15" fill="rgb(240,177,30)" fg:x="6159" fg:w="1"/><text x="74.2942%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="74.0442%" y="581" width="0.0120%" height="15" fill="rgb(248,76,44)" fg:x="6159" fg:w="1"/><text x="74.2942%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.0683%" y="677" width="0.0120%" height="15" fill="rgb(241,186,54)" fg:x="6161" fg:w="1"/><text x="74.3183%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="74.0683%" y="661" width="0.0120%" height="15" fill="rgb(249,171,29)" fg:x="6161" fg:w="1"/><text x="74.3183%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="74.0683%" y="645" width="0.0120%" height="15" fill="rgb(237,151,44)" fg:x="6161" fg:w="1"/><text x="74.3183%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="74.0683%" y="629" width="0.0120%" height="15" fill="rgb(228,174,30)" fg:x="6161" fg:w="1"/><text x="74.3183%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.0683%" y="613" width="0.0120%" height="15" fill="rgb(252,14,37)" fg:x="6161" fg:w="1"/><text x="74.3183%" y="623.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="74.0563%" y="693" width="0.0361%" height="15" fill="rgb(207,111,40)" fg:x="6160" fg:w="3"/><text x="74.3063%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.0803%" y="677" width="0.0120%" height="15" fill="rgb(248,171,54)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.0803%" y="661" width="0.0120%" height="15" fill="rgb(211,127,2)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.0803%" y="645" width="0.0120%" height="15" fill="rgb(236,87,47)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.0803%" y="629" width="0.0120%" height="15" fill="rgb(223,190,45)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="74.0803%" y="613" width="0.0120%" height="15" fill="rgb(215,5,16)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="74.0803%" y="597" width="0.0120%" height="15" fill="rgb(252,82,33)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="74.0803%" y="581" width="0.0120%" height="15" fill="rgb(247,213,44)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.0803%" y="565" width="0.0120%" height="15" fill="rgb(205,196,44)" fg:x="6162" fg:w="1"/><text x="74.3303%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="74.0923%" y="581" width="0.0120%" height="15" fill="rgb(237,96,54)" fg:x="6163" fg:w="1"/><text x="74.3423%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="74.0923%" y="645" width="0.0240%" height="15" fill="rgb(230,113,34)" fg:x="6163" fg:w="2"/><text x="74.3423%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="74.0923%" y="629" width="0.0240%" height="15" fill="rgb(221,224,12)" fg:x="6163" fg:w="2"/><text x="74.3423%" y="639.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="74.0923%" y="613" width="0.0240%" height="15" fill="rgb(219,112,44)" fg:x="6163" fg:w="2"/><text x="74.3423%" y="623.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.0923%" y="597" width="0.0240%" height="15" fill="rgb(210,31,13)" fg:x="6163" fg:w="2"/><text x="74.3423%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.1044%" y="581" width="0.0120%" height="15" fill="rgb(230,25,16)" fg:x="6164" fg:w="1"/><text x="74.3544%" y="591.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.1044%" y="565" width="0.0120%" height="15" fill="rgb(246,108,53)" fg:x="6164" fg:w="1"/><text x="74.3544%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.1044%" y="549" width="0.0120%" height="15" fill="rgb(241,172,50)" fg:x="6164" fg:w="1"/><text x="74.3544%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="74.1044%" y="533" width="0.0120%" height="15" fill="rgb(235,141,10)" fg:x="6164" fg:w="1"/><text x="74.3544%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="74.1044%" y="517" width="0.0120%" height="15" fill="rgb(220,174,43)" fg:x="6164" fg:w="1"/><text x="74.3544%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="74.1044%" y="501" width="0.0120%" height="15" fill="rgb(215,181,40)" fg:x="6164" fg:w="1"/><text x="74.3544%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="74.0923%" y="693" width="0.0361%" height="15" fill="rgb(230,97,2)" fg:x="6163" fg:w="3"/><text x="74.3423%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="74.0923%" y="677" width="0.0361%" height="15" fill="rgb(211,25,27)" fg:x="6163" fg:w="3"/><text x="74.3423%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="74.0923%" y="661" width="0.0361%" height="15" fill="rgb(230,87,26)" fg:x="6163" fg:w="3"/><text x="74.3423%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="74.1164%" y="645" width="0.0120%" height="15" fill="rgb(227,160,17)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="74.1164%" y="629" width="0.0120%" height="15" fill="rgb(244,85,34)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="639.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="74.1164%" y="613" width="0.0120%" height="15" fill="rgb(207,70,0)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="74.1164%" y="597" width="0.0120%" height="15" fill="rgb(223,129,7)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="74.1164%" y="581" width="0.0120%" height="15" fill="rgb(246,105,7)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="74.1164%" y="565" width="0.0120%" height="15" fill="rgb(215,154,42)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="575.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="74.1164%" y="549" width="0.0120%" height="15" fill="rgb(220,215,30)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.1164%" y="533" width="0.0120%" height="15" fill="rgb(228,81,51)" fg:x="6165" fg:w="1"/><text x="74.3664%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="74.1645%" y="501" width="0.0481%" height="15" fill="rgb(247,71,54)" fg:x="6169" fg:w="4"/><text x="74.4145%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="74.1645%" y="485" width="0.0481%" height="15" fill="rgb(234,176,34)" fg:x="6169" fg:w="4"/><text x="74.4145%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="74.1645%" y="469" width="0.0481%" height="15" fill="rgb(241,103,54)" fg:x="6169" fg:w="4"/><text x="74.4145%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="74.1645%" y="453" width="0.0481%" height="15" fill="rgb(228,22,34)" fg:x="6169" fg:w="4"/><text x="74.4145%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="74.1645%" y="437" width="0.0481%" height="15" fill="rgb(241,179,48)" fg:x="6169" fg:w="4"/><text x="74.4145%" y="447.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="74.1645%" y="421" width="0.0481%" height="15" fill="rgb(235,167,37)" fg:x="6169" fg:w="4"/><text x="74.4145%" y="431.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="74.1645%" y="405" width="0.0481%" height="15" fill="rgb(213,109,30)" fg:x="6169" fg:w="4"/><text x="74.4145%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.1885%" y="389" width="0.0240%" height="15" fill="rgb(222,172,16)" fg:x="6171" fg:w="2"/><text x="74.4385%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="74.1645%" y="565" width="0.0601%" height="15" fill="rgb(233,192,5)" fg:x="6169" fg:w="5"/><text x="74.4145%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="74.1645%" y="549" width="0.0601%" height="15" fill="rgb(247,189,41)" fg:x="6169" fg:w="5"/><text x="74.4145%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="74.1645%" y="533" width="0.0601%" height="15" fill="rgb(218,134,47)" fg:x="6169" fg:w="5"/><text x="74.4145%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="74.1645%" y="517" width="0.0601%" height="15" fill="rgb(216,29,3)" fg:x="6169" fg:w="5"/><text x="74.4145%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="74.2126%" y="501" width="0.0120%" height="15" fill="rgb(246,140,12)" fg:x="6173" fg:w="1"/><text x="74.4626%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="74.2246%" y="565" width="0.0481%" height="15" fill="rgb(230,136,11)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="575.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="74.2246%" y="549" width="0.0481%" height="15" fill="rgb(247,22,47)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="74.2246%" y="533" width="0.0481%" height="15" fill="rgb(218,84,22)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (4 samples, 0.05%)</title><rect x="74.2246%" y="517" width="0.0481%" height="15" fill="rgb(216,87,39)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.05%)</title><rect x="74.2246%" y="501" width="0.0481%" height="15" fill="rgb(221,178,8)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="511.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.05%)</title><rect x="74.2246%" y="485" width="0.0481%" height="15" fill="rgb(230,42,11)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="74.2246%" y="469" width="0.0481%" height="15" fill="rgb(237,229,4)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="74.2246%" y="453" width="0.0481%" height="15" fill="rgb(222,31,33)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="463.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="74.2246%" y="437" width="0.0481%" height="15" fill="rgb(210,17,39)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="447.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="74.2246%" y="421" width="0.0481%" height="15" fill="rgb(244,93,20)" fg:x="6174" fg:w="4"/><text x="74.4746%" y="431.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.2486%" y="405" width="0.0240%" height="15" fill="rgb(210,40,47)" fg:x="6176" fg:w="2"/><text x="74.4986%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.2727%" y="517" width="0.0120%" height="15" fill="rgb(239,211,47)" fg:x="6178" fg:w="1"/><text x="74.5227%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.2727%" y="501" width="0.0120%" height="15" fill="rgb(251,223,49)" fg:x="6178" fg:w="1"/><text x="74.5227%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.2727%" y="485" width="0.0120%" height="15" fill="rgb(221,149,5)" fg:x="6178" fg:w="1"/><text x="74.5227%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="74.2727%" y="469" width="0.0120%" height="15" fill="rgb(219,224,51)" fg:x="6178" fg:w="1"/><text x="74.5227%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.01%)</title><rect x="74.2727%" y="453" width="0.0120%" height="15" fill="rgb(223,7,8)" fg:x="6178" fg:w="1"/><text x="74.5227%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="74.2727%" y="437" width="0.0120%" height="15" fill="rgb(241,217,22)" fg:x="6178" fg:w="1"/><text x="74.5227%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="74.2847%" y="437" width="0.0842%" height="15" fill="rgb(248,209,0)" fg:x="6179" fg:w="7"/><text x="74.5347%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="74.2847%" y="421" width="0.0842%" height="15" fill="rgb(217,205,4)" fg:x="6179" fg:w="7"/><text x="74.5347%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="74.2847%" y="405" width="0.0842%" height="15" fill="rgb(228,124,39)" fg:x="6179" fg:w="7"/><text x="74.5347%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="74.2847%" y="389" width="0.0842%" height="15" fill="rgb(250,116,42)" fg:x="6179" fg:w="7"/><text x="74.5347%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="74.2847%" y="373" width="0.0842%" height="15" fill="rgb(223,202,9)" fg:x="6179" fg:w="7"/><text x="74.5347%" y="383.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="74.2847%" y="357" width="0.0842%" height="15" fill="rgb(242,222,40)" fg:x="6179" fg:w="7"/><text x="74.5347%" y="367.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="74.2847%" y="341" width="0.0842%" height="15" fill="rgb(229,99,46)" fg:x="6179" fg:w="7"/><text x="74.5347%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.3568%" y="325" width="0.0120%" height="15" fill="rgb(225,56,46)" fg:x="6185" fg:w="1"/><text x="74.6068%" y="335.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="74.2847%" y="517" width="0.0962%" height="15" fill="rgb(227,94,5)" fg:x="6179" fg:w="8"/><text x="74.5347%" y="527.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="74.2847%" y="501" width="0.0962%" height="15" fill="rgb(205,112,38)" fg:x="6179" fg:w="8"/><text x="74.5347%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.10%)</title><rect x="74.2847%" y="485" width="0.0962%" height="15" fill="rgb(231,133,46)" fg:x="6179" fg:w="8"/><text x="74.5347%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.10%)</title><rect x="74.2847%" y="469" width="0.0962%" height="15" fill="rgb(217,16,9)" fg:x="6179" fg:w="8"/><text x="74.5347%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.10%)</title><rect x="74.2847%" y="453" width="0.0962%" height="15" fill="rgb(249,173,9)" fg:x="6179" fg:w="8"/><text x="74.5347%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="74.3688%" y="437" width="0.0120%" height="15" fill="rgb(205,163,53)" fg:x="6186" fg:w="1"/><text x="74.6188%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (24 samples, 0.29%)</title><rect x="74.1284%" y="693" width="0.2885%" height="15" fill="rgb(217,54,41)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="74.1284%" y="677" width="0.2885%" height="15" fill="rgb(228,216,12)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="74.1284%" y="661" width="0.2885%" height="15" fill="rgb(244,228,15)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="74.1284%" y="645" width="0.2885%" height="15" fill="rgb(221,176,53)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (24 samples, 0.29%)</title><rect x="74.1284%" y="629" width="0.2885%" height="15" fill="rgb(205,94,34)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (24 samples, 0.29%)</title><rect x="74.1284%" y="613" width="0.2885%" height="15" fill="rgb(213,110,48)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="623.50"></text></g><g><title>core::clone::Clone::clone (24 samples, 0.29%)</title><rect x="74.1284%" y="597" width="0.2885%" height="15" fill="rgb(236,142,28)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="607.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="74.1284%" y="581" width="0.2885%" height="15" fill="rgb(225,135,29)" fg:x="6166" fg:w="24"/><text x="74.3784%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.14%)</title><rect x="74.2727%" y="565" width="0.1443%" height="15" fill="rgb(252,45,31)" fg:x="6178" fg:w="12"/><text x="74.5227%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.14%)</title><rect x="74.2727%" y="549" width="0.1443%" height="15" fill="rgb(211,187,50)" fg:x="6178" fg:w="12"/><text x="74.5227%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.14%)</title><rect x="74.2727%" y="533" width="0.1443%" height="15" fill="rgb(229,109,7)" fg:x="6178" fg:w="12"/><text x="74.5227%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="74.3809%" y="517" width="0.0361%" height="15" fill="rgb(251,131,51)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="74.3809%" y="501" width="0.0361%" height="15" fill="rgb(251,180,35)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="74.3809%" y="485" width="0.0361%" height="15" fill="rgb(211,46,32)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="74.3809%" y="469" width="0.0361%" height="15" fill="rgb(248,123,17)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="74.3809%" y="453" width="0.0361%" height="15" fill="rgb(227,141,18)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="463.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="74.3809%" y="437" width="0.0361%" height="15" fill="rgb(216,102,9)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="447.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="74.3809%" y="421" width="0.0361%" height="15" fill="rgb(253,47,13)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="74.3809%" y="405" width="0.0361%" height="15" fill="rgb(226,93,23)" fg:x="6187" fg:w="3"/><text x="74.6309%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.4169%" y="613" width="0.0120%" height="15" fill="rgb(247,104,17)" fg:x="6190" fg:w="1"/><text x="74.6669%" y="623.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="74.4169%" y="597" width="0.0120%" height="15" fill="rgb(233,203,26)" fg:x="6190" fg:w="1"/><text x="74.6669%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.4289%" y="501" width="0.0120%" height="15" fill="rgb(244,98,49)" fg:x="6191" fg:w="1"/><text x="74.6789%" y="511.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="74.4289%" y="485" width="0.0120%" height="15" fill="rgb(235,134,22)" fg:x="6191" fg:w="1"/><text x="74.6789%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.4289%" y="469" width="0.0120%" height="15" fill="rgb(221,70,32)" fg:x="6191" fg:w="1"/><text x="74.6789%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.4289%" y="453" width="0.0120%" height="15" fill="rgb(238,15,50)" fg:x="6191" fg:w="1"/><text x="74.6789%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.4289%" y="437" width="0.0120%" height="15" fill="rgb(215,221,48)" fg:x="6191" fg:w="1"/><text x="74.6789%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="74.4289%" y="421" width="0.0120%" height="15" fill="rgb(236,73,3)" fg:x="6191" fg:w="1"/><text x="74.6789%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.4289%" y="597" width="0.0240%" height="15" fill="rgb(250,107,11)" fg:x="6191" fg:w="2"/><text x="74.6789%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="74.4289%" y="581" width="0.0240%" height="15" fill="rgb(242,39,14)" fg:x="6191" fg:w="2"/><text x="74.6789%" y="591.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="74.4289%" y="565" width="0.0240%" height="15" fill="rgb(248,164,37)" fg:x="6191" fg:w="2"/><text x="74.6789%" y="575.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.4289%" y="549" width="0.0240%" height="15" fill="rgb(217,60,12)" fg:x="6191" fg:w="2"/><text x="74.6789%" y="559.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.4289%" y="533" width="0.0240%" height="15" fill="rgb(240,125,29)" fg:x="6191" fg:w="2"/><text x="74.6789%" y="543.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.4289%" y="517" width="0.0240%" height="15" fill="rgb(208,207,28)" fg:x="6191" fg:w="2"/><text x="74.6789%" y="527.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="74.4410%" y="501" width="0.0120%" height="15" fill="rgb(209,159,27)" fg:x="6192" fg:w="1"/><text x="74.6910%" y="511.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="74.4410%" y="485" width="0.0120%" height="15" fill="rgb(251,176,53)" fg:x="6192" fg:w="1"/><text x="74.6910%" y="495.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="74.4289%" y="613" width="0.0361%" height="15" fill="rgb(211,85,7)" fg:x="6191" fg:w="3"/><text x="74.6789%" y="623.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.4530%" y="597" width="0.0120%" height="15" fill="rgb(216,64,54)" fg:x="6193" fg:w="1"/><text x="74.7030%" y="607.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.4530%" y="581" width="0.0120%" height="15" fill="rgb(217,54,24)" fg:x="6193" fg:w="1"/><text x="74.7030%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.4530%" y="565" width="0.0120%" height="15" fill="rgb(208,206,53)" fg:x="6193" fg:w="1"/><text x="74.7030%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="74.4530%" y="549" width="0.0120%" height="15" fill="rgb(251,74,39)" fg:x="6193" fg:w="1"/><text x="74.7030%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.4530%" y="533" width="0.0120%" height="15" fill="rgb(226,47,5)" fg:x="6193" fg:w="1"/><text x="74.7030%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.4530%" y="517" width="0.0120%" height="15" fill="rgb(234,111,33)" fg:x="6193" fg:w="1"/><text x="74.7030%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.4530%" y="501" width="0.0120%" height="15" fill="rgb(251,14,10)" fg:x="6193" fg:w="1"/><text x="74.7030%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="74.4650%" y="613" width="0.0120%" height="15" fill="rgb(232,43,0)" fg:x="6194" fg:w="1"/><text x="74.7150%" y="623.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="74.4650%" y="597" width="0.0120%" height="15" fill="rgb(222,68,43)" fg:x="6194" fg:w="1"/><text x="74.7150%" y="607.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="74.4650%" y="581" width="0.0120%" height="15" fill="rgb(217,24,23)" fg:x="6194" fg:w="1"/><text x="74.7150%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="74.4650%" y="565" width="0.0120%" height="15" fill="rgb(229,209,14)" fg:x="6194" fg:w="1"/><text x="74.7150%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.4770%" y="549" width="0.0120%" height="15" fill="rgb(250,149,48)" fg:x="6195" fg:w="1"/><text x="74.7270%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.10%)</title><rect x="74.4169%" y="645" width="0.0962%" height="15" fill="rgb(210,120,37)" fg:x="6190" fg:w="8"/><text x="74.6669%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.10%)</title><rect x="74.4169%" y="629" width="0.0962%" height="15" fill="rgb(210,21,8)" fg:x="6190" fg:w="8"/><text x="74.6669%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.04%)</title><rect x="74.4770%" y="613" width="0.0361%" height="15" fill="rgb(243,145,7)" fg:x="6195" fg:w="3"/><text x="74.7270%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="74.4770%" y="597" width="0.0361%" height="15" fill="rgb(238,178,32)" fg:x="6195" fg:w="3"/><text x="74.7270%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="74.4770%" y="581" width="0.0361%" height="15" fill="rgb(222,4,10)" fg:x="6195" fg:w="3"/><text x="74.7270%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="74.4770%" y="565" width="0.0361%" height="15" fill="rgb(239,7,37)" fg:x="6195" fg:w="3"/><text x="74.7270%" y="575.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.4891%" y="549" width="0.0240%" height="15" fill="rgb(215,31,37)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="559.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.4891%" y="533" width="0.0240%" height="15" fill="rgb(224,83,33)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.4891%" y="517" width="0.0240%" height="15" fill="rgb(239,55,3)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="74.4891%" y="501" width="0.0240%" height="15" fill="rgb(247,92,11)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="74.4891%" y="485" width="0.0240%" height="15" fill="rgb(239,200,7)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="74.4891%" y="469" width="0.0240%" height="15" fill="rgb(227,115,8)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="74.4891%" y="453" width="0.0240%" height="15" fill="rgb(215,189,27)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="74.4891%" y="437" width="0.0240%" height="15" fill="rgb(251,216,39)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="74.4891%" y="421" width="0.0240%" height="15" fill="rgb(207,29,47)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="74.4891%" y="405" width="0.0240%" height="15" fill="rgb(210,71,34)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="74.4891%" y="389" width="0.0240%" height="15" fill="rgb(253,217,51)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="74.4891%" y="373" width="0.0240%" height="15" fill="rgb(222,117,46)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="383.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="74.4891%" y="357" width="0.0240%" height="15" fill="rgb(226,132,6)" fg:x="6196" fg:w="2"/><text x="74.7391%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="74.5251%" y="533" width="0.0120%" height="15" fill="rgb(254,145,51)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.5251%" y="517" width="0.0120%" height="15" fill="rgb(231,199,27)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.5251%" y="501" width="0.0120%" height="15" fill="rgb(245,158,14)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="74.5251%" y="485" width="0.0120%" height="15" fill="rgb(240,113,14)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.5251%" y="469" width="0.0120%" height="15" fill="rgb(210,20,13)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.5251%" y="453" width="0.0120%" height="15" fill="rgb(241,144,13)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="74.5251%" y="437" width="0.0120%" height="15" fill="rgb(235,43,34)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="74.5251%" y="421" width="0.0120%" height="15" fill="rgb(208,36,20)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="74.5251%" y="405" width="0.0120%" height="15" fill="rgb(239,204,10)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="74.5251%" y="389" width="0.0120%" height="15" fill="rgb(217,84,43)" fg:x="6199" fg:w="1"/><text x="74.7751%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.5371%" y="517" width="0.0120%" height="15" fill="rgb(241,170,50)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="74.5371%" y="501" width="0.0120%" height="15" fill="rgb(226,205,29)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="74.5371%" y="485" width="0.0120%" height="15" fill="rgb(233,113,1)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="74.5371%" y="469" width="0.0120%" height="15" fill="rgb(253,98,13)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="74.5371%" y="453" width="0.0120%" height="15" fill="rgb(211,115,12)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.5371%" y="437" width="0.0120%" height="15" fill="rgb(208,12,16)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="74.5371%" y="421" width="0.0120%" height="15" fill="rgb(237,193,54)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="74.5371%" y="405" width="0.0120%" height="15" fill="rgb(243,22,42)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="415.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="74.5371%" y="389" width="0.0120%" height="15" fill="rgb(233,151,36)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.5371%" y="373" width="0.0120%" height="15" fill="rgb(237,57,45)" fg:x="6200" fg:w="1"/><text x="74.7871%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="74.5371%" y="533" width="0.0240%" height="15" fill="rgb(221,88,17)" fg:x="6200" fg:w="2"/><text x="74.7871%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="74.5492%" y="517" width="0.0120%" height="15" fill="rgb(230,79,15)" fg:x="6201" fg:w="1"/><text x="74.7992%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.5492%" y="501" width="0.0120%" height="15" fill="rgb(213,57,13)" fg:x="6201" fg:w="1"/><text x="74.7992%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="74.5492%" y="485" width="0.0120%" height="15" fill="rgb(222,116,39)" fg:x="6201" fg:w="1"/><text x="74.7992%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="74.5492%" y="469" width="0.0120%" height="15" fill="rgb(245,107,2)" fg:x="6201" fg:w="1"/><text x="74.7992%" y="479.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="74.5492%" y="453" width="0.0120%" height="15" fill="rgb(238,1,10)" fg:x="6201" fg:w="1"/><text x="74.7992%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.95%)</title><rect x="73.6235%" y="837" width="0.9497%" height="15" fill="rgb(249,4,48)" fg:x="6124" fg:w="79"/><text x="73.8735%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (79 samples, 0.95%)</title><rect x="73.6235%" y="821" width="0.9497%" height="15" fill="rgb(223,151,18)" fg:x="6124" fg:w="79"/><text x="73.8735%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.95%)</title><rect x="73.6235%" y="805" width="0.9497%" height="15" fill="rgb(227,65,43)" fg:x="6124" fg:w="79"/><text x="73.8735%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (79 samples, 0.95%)</title><rect x="73.6235%" y="789" width="0.9497%" height="15" fill="rgb(218,40,45)" fg:x="6124" fg:w="79"/><text x="73.8735%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (79 samples, 0.95%)</title><rect x="73.6235%" y="773" width="0.9497%" height="15" fill="rgb(252,121,31)" fg:x="6124" fg:w="79"/><text x="73.8735%" y="783.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (79 samples, 0.95%)</title><rect x="73.6235%" y="757" width="0.9497%" height="15" fill="rgb(219,158,43)" fg:x="6124" fg:w="79"/><text x="73.8735%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (43 samples, 0.52%)</title><rect x="74.0563%" y="741" width="0.5170%" height="15" fill="rgb(231,162,42)" fg:x="6160" fg:w="43"/><text x="74.3063%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (43 samples, 0.52%)</title><rect x="74.0563%" y="725" width="0.5170%" height="15" fill="rgb(217,179,25)" fg:x="6160" fg:w="43"/><text x="74.3063%" y="735.50"></text></g><g><title>smithereens::fragment::_{{closure}} (43 samples, 0.52%)</title><rect x="74.0563%" y="709" width="0.5170%" height="15" fill="rgb(206,212,31)" fg:x="6160" fg:w="43"/><text x="74.3063%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.16%)</title><rect x="74.4169%" y="693" width="0.1563%" height="15" fill="rgb(235,144,12)" fg:x="6190" fg:w="13"/><text x="74.6669%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.16%)</title><rect x="74.4169%" y="677" width="0.1563%" height="15" fill="rgb(213,51,10)" fg:x="6190" fg:w="13"/><text x="74.6669%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.16%)</title><rect x="74.4169%" y="661" width="0.1563%" height="15" fill="rgb(231,145,14)" fg:x="6190" fg:w="13"/><text x="74.6669%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.06%)</title><rect x="74.5131%" y="645" width="0.0601%" height="15" fill="rgb(235,15,28)" fg:x="6198" fg:w="5"/><text x="74.7631%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.06%)</title><rect x="74.5131%" y="629" width="0.0601%" height="15" fill="rgb(237,206,10)" fg:x="6198" fg:w="5"/><text x="74.7631%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.06%)</title><rect x="74.5131%" y="613" width="0.0601%" height="15" fill="rgb(236,227,27)" fg:x="6198" fg:w="5"/><text x="74.7631%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (5 samples, 0.06%)</title><rect x="74.5131%" y="597" width="0.0601%" height="15" fill="rgb(246,83,35)" fg:x="6198" fg:w="5"/><text x="74.7631%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (5 samples, 0.06%)</title><rect x="74.5131%" y="581" width="0.0601%" height="15" fill="rgb(220,136,24)" fg:x="6198" fg:w="5"/><text x="74.7631%" y="591.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.06%)</title><rect x="74.5131%" y="565" width="0.0601%" height="15" fill="rgb(217,3,25)" fg:x="6198" fg:w="5"/><text x="74.7631%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.06%)</title><rect x="74.5131%" y="549" width="0.0601%" height="15" fill="rgb(239,24,14)" fg:x="6198" fg:w="5"/><text x="74.7631%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="74.5612%" y="533" width="0.0120%" height="15" fill="rgb(244,16,53)" fg:x="6202" fg:w="1"/><text x="74.8112%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="74.5612%" y="517" width="0.0120%" height="15" fill="rgb(208,175,44)" fg:x="6202" fg:w="1"/><text x="74.8112%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="74.5612%" y="501" width="0.0120%" height="15" fill="rgb(252,18,48)" fg:x="6202" fg:w="1"/><text x="74.8112%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.96%)</title><rect x="73.6235%" y="853" width="0.9618%" height="15" fill="rgb(234,199,32)" fg:x="6124" fg:w="80"/><text x="73.8735%" y="863.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.01%)</title><rect x="74.5732%" y="837" width="0.0120%" height="15" fill="rgb(225,77,54)" fg:x="6203" fg:w="1"/><text x="74.8232%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (86 samples, 1.03%)</title><rect x="73.5874%" y="885" width="1.0339%" height="15" fill="rgb(225,42,25)" fg:x="6121" fg:w="86"/><text x="73.8374%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (86 samples, 1.03%)</title><rect x="73.5874%" y="869" width="1.0339%" height="15" fill="rgb(242,227,46)" fg:x="6121" fg:w="86"/><text x="73.8374%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="74.5852%" y="853" width="0.0361%" height="15" fill="rgb(246,197,35)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="74.5852%" y="837" width="0.0361%" height="15" fill="rgb(215,159,26)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="74.5852%" y="821" width="0.0361%" height="15" fill="rgb(212,194,50)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="74.5852%" y="805" width="0.0361%" height="15" fill="rgb(246,132,1)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="74.5852%" y="789" width="0.0361%" height="15" fill="rgb(217,71,7)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="74.5852%" y="773" width="0.0361%" height="15" fill="rgb(252,59,32)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="783.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="74.5852%" y="757" width="0.0361%" height="15" fill="rgb(253,204,25)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="767.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="74.5852%" y="741" width="0.0361%" height="15" fill="rgb(232,21,16)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="751.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="74.5852%" y="725" width="0.0361%" height="15" fill="rgb(248,90,29)" fg:x="6204" fg:w="3"/><text x="74.8352%" y="735.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.5973%" y="709" width="0.0240%" height="15" fill="rgb(249,223,7)" fg:x="6205" fg:w="2"/><text x="74.8473%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="74.5973%" y="693" width="0.0240%" height="15" fill="rgb(231,119,42)" fg:x="6205" fg:w="2"/><text x="74.8473%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="74.6213%" y="773" width="0.0120%" height="15" fill="rgb(215,41,35)" fg:x="6207" fg:w="1"/><text x="74.8713%" y="783.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.6333%" y="773" width="0.0120%" height="15" fill="rgb(220,44,45)" fg:x="6208" fg:w="1"/><text x="74.8833%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.6333%" y="757" width="0.0120%" height="15" fill="rgb(253,197,36)" fg:x="6208" fg:w="1"/><text x="74.8833%" y="767.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.6333%" y="741" width="0.0120%" height="15" fill="rgb(245,225,54)" fg:x="6208" fg:w="1"/><text x="74.8833%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.6333%" y="725" width="0.0120%" height="15" fill="rgb(239,94,37)" fg:x="6208" fg:w="1"/><text x="74.8833%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="74.6453%" y="773" width="0.0120%" height="15" fill="rgb(242,217,10)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="74.6453%" y="757" width="0.0120%" height="15" fill="rgb(250,193,7)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="74.6453%" y="741" width="0.0120%" height="15" fill="rgb(230,104,19)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="74.6453%" y="725" width="0.0120%" height="15" fill="rgb(230,181,4)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="74.6453%" y="709" width="0.0120%" height="15" fill="rgb(216,219,49)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="74.6453%" y="693" width="0.0120%" height="15" fill="rgb(254,144,0)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="74.6453%" y="677" width="0.0120%" height="15" fill="rgb(205,209,38)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="74.6453%" y="661" width="0.0120%" height="15" fill="rgb(240,21,42)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="671.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.6453%" y="645" width="0.0120%" height="15" fill="rgb(241,132,3)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.6453%" y="629" width="0.0120%" height="15" fill="rgb(225,14,2)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="74.6453%" y="613" width="0.0120%" height="15" fill="rgb(210,141,35)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="623.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="74.6453%" y="597" width="0.0120%" height="15" fill="rgb(251,14,44)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="74.6453%" y="581" width="0.0120%" height="15" fill="rgb(247,48,18)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.6453%" y="565" width="0.0120%" height="15" fill="rgb(225,0,40)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.6453%" y="549" width="0.0120%" height="15" fill="rgb(221,31,33)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="74.6453%" y="533" width="0.0120%" height="15" fill="rgb(237,42,40)" fg:x="6209" fg:w="1"/><text x="74.8953%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="74.6574%" y="581" width="0.0120%" height="15" fill="rgb(233,51,29)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="591.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="74.6574%" y="565" width="0.0120%" height="15" fill="rgb(226,58,20)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="74.6574%" y="549" width="0.0120%" height="15" fill="rgb(208,98,7)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="74.6574%" y="533" width="0.0120%" height="15" fill="rgb(228,143,44)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="74.6574%" y="517" width="0.0120%" height="15" fill="rgb(246,55,38)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="74.6574%" y="501" width="0.0120%" height="15" fill="rgb(247,87,16)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="74.6574%" y="485" width="0.0120%" height="15" fill="rgb(234,129,42)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="74.6574%" y="469" width="0.0120%" height="15" fill="rgb(220,82,16)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="479.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.6574%" y="453" width="0.0120%" height="15" fill="rgb(211,88,4)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="463.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.6574%" y="437" width="0.0120%" height="15" fill="rgb(248,151,21)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="447.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.6574%" y="421" width="0.0120%" height="15" fill="rgb(238,163,6)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.6574%" y="405" width="0.0120%" height="15" fill="rgb(209,183,11)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="74.6574%" y="389" width="0.0120%" height="15" fill="rgb(219,37,20)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.6574%" y="373" width="0.0120%" height="15" fill="rgb(210,158,4)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.6574%" y="357" width="0.0120%" height="15" fill="rgb(221,167,53)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.6574%" y="341" width="0.0120%" height="15" fill="rgb(237,151,45)" fg:x="6210" fg:w="1"/><text x="74.9074%" y="351.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (2 samples, 0.02%)</title><rect x="74.6694%" y="581" width="0.0240%" height="15" fill="rgb(231,39,3)" fg:x="6211" fg:w="2"/><text x="74.9194%" y="591.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (2 samples, 0.02%)</title><rect x="74.6694%" y="565" width="0.0240%" height="15" fill="rgb(212,167,28)" fg:x="6211" fg:w="2"/><text x="74.9194%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.01%)</title><rect x="74.6814%" y="549" width="0.0120%" height="15" fill="rgb(232,178,8)" fg:x="6212" fg:w="1"/><text x="74.9314%" y="559.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="74.6814%" y="533" width="0.0120%" height="15" fill="rgb(225,151,20)" fg:x="6212" fg:w="1"/><text x="74.9314%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="74.6934%" y="581" width="0.0120%" height="15" fill="rgb(238,3,37)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="74.6934%" y="565" width="0.0120%" height="15" fill="rgb(251,147,42)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="74.6934%" y="549" width="0.0120%" height="15" fill="rgb(208,173,10)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="74.6934%" y="533" width="0.0120%" height="15" fill="rgb(246,225,4)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="74.6934%" y="517" width="0.0120%" height="15" fill="rgb(248,102,6)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="74.6934%" y="501" width="0.0120%" height="15" fill="rgb(232,6,21)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="74.6934%" y="485" width="0.0120%" height="15" fill="rgb(221,179,22)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="495.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="74.6934%" y="469" width="0.0120%" height="15" fill="rgb(252,50,20)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="479.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.01%)</title><rect x="74.6934%" y="453" width="0.0120%" height="15" fill="rgb(222,56,38)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="463.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="74.6934%" y="437" width="0.0120%" height="15" fill="rgb(206,193,29)" fg:x="6213" fg:w="1"/><text x="74.9434%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.07%)</title><rect x="74.6574%" y="773" width="0.0721%" height="15" fill="rgb(239,192,45)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="74.6574%" y="757" width="0.0721%" height="15" fill="rgb(254,18,36)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="74.6574%" y="741" width="0.0721%" height="15" fill="rgb(221,127,11)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.07%)</title><rect x="74.6574%" y="725" width="0.0721%" height="15" fill="rgb(234,146,35)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.07%)</title><rect x="74.6574%" y="709" width="0.0721%" height="15" fill="rgb(254,201,37)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="74.6574%" y="693" width="0.0721%" height="15" fill="rgb(211,202,23)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="74.6574%" y="677" width="0.0721%" height="15" fill="rgb(237,91,2)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (6 samples, 0.07%)</title><rect x="74.6574%" y="661" width="0.0721%" height="15" fill="rgb(226,228,36)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="74.6574%" y="645" width="0.0721%" height="15" fill="rgb(213,63,50)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="74.6574%" y="629" width="0.0721%" height="15" fill="rgb(235,194,19)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.07%)</title><rect x="74.6574%" y="613" width="0.0721%" height="15" fill="rgb(207,204,18)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="623.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (6 samples, 0.07%)</title><rect x="74.6574%" y="597" width="0.0721%" height="15" fill="rgb(248,8,7)" fg:x="6210" fg:w="6"/><text x="74.9074%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="74.7055%" y="581" width="0.0240%" height="15" fill="rgb(223,145,47)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="74.7055%" y="565" width="0.0240%" height="15" fill="rgb(228,84,11)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="575.50"></text></g><g><title>smithereens::fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="74.7055%" y="549" width="0.0240%" height="15" fill="rgb(218,76,45)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="74.7055%" y="533" width="0.0240%" height="15" fill="rgb(223,80,15)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.7055%" y="517" width="0.0240%" height="15" fill="rgb(219,218,33)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="527.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.7055%" y="501" width="0.0240%" height="15" fill="rgb(208,51,11)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.7055%" y="485" width="0.0240%" height="15" fill="rgb(229,165,39)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="74.7055%" y="469" width="0.0240%" height="15" fill="rgb(241,100,24)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="74.7055%" y="453" width="0.0240%" height="15" fill="rgb(228,14,23)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="463.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="74.7055%" y="437" width="0.0240%" height="15" fill="rgb(247,116,52)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="447.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.7055%" y="421" width="0.0240%" height="15" fill="rgb(216,149,33)" fg:x="6214" fg:w="2"/><text x="74.9555%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="74.7175%" y="405" width="0.0120%" height="15" fill="rgb(238,142,29)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="74.7175%" y="389" width="0.0120%" height="15" fill="rgb(224,83,40)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="74.7175%" y="373" width="0.0120%" height="15" fill="rgb(234,165,11)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="383.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7175%" y="357" width="0.0120%" height="15" fill="rgb(215,96,23)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="367.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7175%" y="341" width="0.0120%" height="15" fill="rgb(233,179,26)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="74.7175%" y="325" width="0.0120%" height="15" fill="rgb(225,129,33)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="74.7175%" y="309" width="0.0120%" height="15" fill="rgb(237,49,13)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="74.7175%" y="293" width="0.0120%" height="15" fill="rgb(211,3,31)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7175%" y="277" width="0.0120%" height="15" fill="rgb(216,152,19)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7175%" y="261" width="0.0120%" height="15" fill="rgb(251,121,35)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="74.7175%" y="245" width="0.0120%" height="15" fill="rgb(210,217,47)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="74.7175%" y="229" width="0.0120%" height="15" fill="rgb(244,116,22)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="74.7175%" y="213" width="0.0120%" height="15" fill="rgb(228,17,21)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="74.7175%" y="197" width="0.0120%" height="15" fill="rgb(240,149,34)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="207.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="74.7175%" y="181" width="0.0120%" height="15" fill="rgb(208,125,47)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.7175%" y="165" width="0.0120%" height="15" fill="rgb(249,186,39)" fg:x="6215" fg:w="1"/><text x="74.9675%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7295%" y="597" width="0.0120%" height="15" fill="rgb(240,220,33)" fg:x="6216" fg:w="1"/><text x="74.9795%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="74.7295%" y="581" width="0.0120%" height="15" fill="rgb(243,110,23)" fg:x="6216" fg:w="1"/><text x="74.9795%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="74.7295%" y="565" width="0.0120%" height="15" fill="rgb(219,163,46)" fg:x="6216" fg:w="1"/><text x="74.9795%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="74.7295%" y="549" width="0.0120%" height="15" fill="rgb(216,126,30)" fg:x="6216" fg:w="1"/><text x="74.9795%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7415%" y="597" width="0.0120%" height="15" fill="rgb(208,139,11)" fg:x="6217" fg:w="1"/><text x="74.9915%" y="607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7415%" y="581" width="0.0120%" height="15" fill="rgb(213,118,36)" fg:x="6217" fg:w="1"/><text x="74.9915%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7415%" y="565" width="0.0120%" height="15" fill="rgb(226,43,17)" fg:x="6217" fg:w="1"/><text x="74.9915%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="74.7415%" y="549" width="0.0120%" height="15" fill="rgb(254,217,4)" fg:x="6217" fg:w="1"/><text x="74.9915%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="74.7415%" y="533" width="0.0120%" height="15" fill="rgb(210,134,47)" fg:x="6217" fg:w="1"/><text x="74.9915%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="74.7415%" y="517" width="0.0120%" height="15" fill="rgb(237,24,49)" fg:x="6217" fg:w="1"/><text x="74.9915%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.7415%" y="501" width="0.0120%" height="15" fill="rgb(251,39,46)" fg:x="6217" fg:w="1"/><text x="74.9915%" y="511.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7535%" y="549" width="0.0120%" height="15" fill="rgb(251,220,3)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="559.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7535%" y="533" width="0.0120%" height="15" fill="rgb(228,105,12)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="74.7535%" y="517" width="0.0120%" height="15" fill="rgb(215,196,1)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="74.7535%" y="501" width="0.0120%" height="15" fill="rgb(214,33,39)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="74.7535%" y="485" width="0.0120%" height="15" fill="rgb(220,19,52)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7535%" y="469" width="0.0120%" height="15" fill="rgb(221,78,38)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7535%" y="453" width="0.0120%" height="15" fill="rgb(253,30,16)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="74.7535%" y="437" width="0.0120%" height="15" fill="rgb(242,65,0)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="74.7535%" y="421" width="0.0120%" height="15" fill="rgb(235,201,12)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="74.7535%" y="405" width="0.0120%" height="15" fill="rgb(233,161,9)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="74.7535%" y="389" width="0.0120%" height="15" fill="rgb(241,207,41)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="399.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="74.7535%" y="373" width="0.0120%" height="15" fill="rgb(212,69,46)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.7535%" y="357" width="0.0120%" height="15" fill="rgb(239,69,45)" fg:x="6218" fg:w="1"/><text x="75.0035%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="74.6213%" y="885" width="0.1563%" height="15" fill="rgb(242,117,48)" fg:x="6207" fg:w="13"/><text x="74.8713%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="74.6213%" y="869" width="0.1563%" height="15" fill="rgb(228,41,36)" fg:x="6207" fg:w="13"/><text x="74.8713%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (13 samples, 0.16%)</title><rect x="74.6213%" y="853" width="0.1563%" height="15" fill="rgb(212,3,32)" fg:x="6207" fg:w="13"/><text x="74.8713%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="74.6213%" y="837" width="0.1563%" height="15" fill="rgb(233,41,49)" fg:x="6207" fg:w="13"/><text x="74.8713%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.16%)</title><rect x="74.6213%" y="821" width="0.1563%" height="15" fill="rgb(252,170,49)" fg:x="6207" fg:w="13"/><text x="74.8713%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.16%)</title><rect x="74.6213%" y="805" width="0.1563%" height="15" fill="rgb(229,53,26)" fg:x="6207" fg:w="13"/><text x="74.8713%" y="815.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (13 samples, 0.16%)</title><rect x="74.6213%" y="789" width="0.1563%" height="15" fill="rgb(217,157,12)" fg:x="6207" fg:w="13"/><text x="74.8713%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.05%)</title><rect x="74.7295%" y="773" width="0.0481%" height="15" fill="rgb(227,17,9)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="74.7295%" y="757" width="0.0481%" height="15" fill="rgb(218,84,12)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="767.50"></text></g><g><title>smithereens::fragment::_{{closure}} (4 samples, 0.05%)</title><rect x="74.7295%" y="741" width="0.0481%" height="15" fill="rgb(212,79,24)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="751.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.05%)</title><rect x="74.7295%" y="725" width="0.0481%" height="15" fill="rgb(217,222,37)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="74.7295%" y="709" width="0.0481%" height="15" fill="rgb(246,208,8)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="719.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="74.7295%" y="693" width="0.0481%" height="15" fill="rgb(244,133,10)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="74.7295%" y="677" width="0.0481%" height="15" fill="rgb(209,219,41)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.05%)</title><rect x="74.7295%" y="661" width="0.0481%" height="15" fill="rgb(253,175,45)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4 samples, 0.05%)</title><rect x="74.7295%" y="645" width="0.0481%" height="15" fill="rgb(235,100,37)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="655.50"></text></g><g><title>core::clone::Clone::clone (4 samples, 0.05%)</title><rect x="74.7295%" y="629" width="0.0481%" height="15" fill="rgb(225,87,19)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="639.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="74.7295%" y="613" width="0.0481%" height="15" fill="rgb(217,152,17)" fg:x="6216" fg:w="4"/><text x="74.9795%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="74.7535%" y="597" width="0.0240%" height="15" fill="rgb(235,72,13)" fg:x="6218" fg:w="2"/><text x="75.0035%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="74.7535%" y="581" width="0.0240%" height="15" fill="rgb(233,140,18)" fg:x="6218" fg:w="2"/><text x="75.0035%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="74.7535%" y="565" width="0.0240%" height="15" fill="rgb(207,212,28)" fg:x="6218" fg:w="2"/><text x="75.0035%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7656%" y="549" width="0.0120%" height="15" fill="rgb(220,130,25)" fg:x="6219" fg:w="1"/><text x="75.0156%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7656%" y="533" width="0.0120%" height="15" fill="rgb(205,55,34)" fg:x="6219" fg:w="1"/><text x="75.0156%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="74.7656%" y="517" width="0.0120%" height="15" fill="rgb(237,54,35)" fg:x="6219" fg:w="1"/><text x="75.0156%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="74.7656%" y="501" width="0.0120%" height="15" fill="rgb(208,67,23)" fg:x="6219" fg:w="1"/><text x="75.0156%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="74.7656%" y="485" width="0.0120%" height="15" fill="rgb(206,207,50)" fg:x="6219" fg:w="1"/><text x="75.0156%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="74.7656%" y="469" width="0.0120%" height="15" fill="rgb(213,211,42)" fg:x="6219" fg:w="1"/><text x="75.0156%" y="479.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="74.7656%" y="453" width="0.0120%" height="15" fill="rgb(252,197,50)" fg:x="6219" fg:w="1"/><text x="75.0156%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (100 samples, 1.20%)</title><rect x="73.5874%" y="933" width="1.2022%" height="15" fill="rgb(251,211,41)" fg:x="6121" fg:w="100"/><text x="73.8374%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (100 samples, 1.20%)</title><rect x="73.5874%" y="917" width="1.2022%" height="15" fill="rgb(229,211,5)" fg:x="6121" fg:w="100"/><text x="73.8374%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (100 samples, 1.20%)</title><rect x="73.5874%" y="901" width="1.2022%" height="15" fill="rgb(239,36,31)" fg:x="6121" fg:w="100"/><text x="73.8374%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="74.7776%" y="885" width="0.0120%" height="15" fill="rgb(248,67,31)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7776%" y="869" width="0.0120%" height="15" fill="rgb(249,55,44)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="74.7776%" y="853" width="0.0120%" height="15" fill="rgb(216,82,12)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="74.7776%" y="837" width="0.0120%" height="15" fill="rgb(242,174,1)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="74.7776%" y="821" width="0.0120%" height="15" fill="rgb(208,120,29)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="74.7776%" y="805" width="0.0120%" height="15" fill="rgb(221,105,43)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="74.7776%" y="789" width="0.0120%" height="15" fill="rgb(234,124,22)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="799.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="74.7776%" y="773" width="0.0120%" height="15" fill="rgb(212,23,30)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.7776%" y="757" width="0.0120%" height="15" fill="rgb(219,122,53)" fg:x="6220" fg:w="1"/><text x="75.0276%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="74.7896%" y="901" width="0.0120%" height="15" fill="rgb(248,84,24)" fg:x="6221" fg:w="1"/><text x="75.0396%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="74.7896%" y="885" width="0.0120%" height="15" fill="rgb(245,115,18)" fg:x="6221" fg:w="1"/><text x="75.0396%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.7896%" y="869" width="0.0120%" height="15" fill="rgb(227,176,51)" fg:x="6221" fg:w="1"/><text x="75.0396%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="74.7896%" y="853" width="0.0120%" height="15" fill="rgb(229,63,42)" fg:x="6221" fg:w="1"/><text x="75.0396%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="74.7896%" y="837" width="0.0120%" height="15" fill="rgb(247,202,24)" fg:x="6221" fg:w="1"/><text x="75.0396%" y="847.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="74.7896%" y="821" width="0.0120%" height="15" fill="rgb(244,173,20)" fg:x="6221" fg:w="1"/><text x="75.0396%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.7896%" y="805" width="0.0120%" height="15" fill="rgb(242,81,47)" fg:x="6221" fg:w="1"/><text x="75.0396%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (3 samples, 0.04%)</title><rect x="74.7896%" y="917" width="0.0361%" height="15" fill="rgb(231,185,54)" fg:x="6221" fg:w="3"/><text x="75.0396%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8016%" y="901" width="0.0240%" height="15" fill="rgb(243,55,32)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="74.8016%" y="885" width="0.0240%" height="15" fill="rgb(208,167,19)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (2 samples, 0.02%)</title><rect x="74.8016%" y="869" width="0.0240%" height="15" fill="rgb(231,72,35)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8016%" y="853" width="0.0240%" height="15" fill="rgb(250,173,51)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="74.8016%" y="837" width="0.0240%" height="15" fill="rgb(209,5,22)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8016%" y="821" width="0.0240%" height="15" fill="rgb(250,174,19)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8016%" y="805" width="0.0240%" height="15" fill="rgb(217,3,49)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="74.8016%" y="789" width="0.0240%" height="15" fill="rgb(218,225,5)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="74.8016%" y="773" width="0.0240%" height="15" fill="rgb(236,89,11)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="74.8016%" y="757" width="0.0240%" height="15" fill="rgb(206,33,28)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="767.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="74.8016%" y="741" width="0.0240%" height="15" fill="rgb(241,56,42)" fg:x="6222" fg:w="2"/><text x="75.0516%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (5 samples, 0.06%)</title><rect x="74.7896%" y="933" width="0.0601%" height="15" fill="rgb(222,44,11)" fg:x="6221" fg:w="5"/><text x="75.0396%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8257%" y="917" width="0.0240%" height="15" fill="rgb(234,111,20)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8257%" y="901" width="0.0240%" height="15" fill="rgb(237,77,6)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8257%" y="885" width="0.0240%" height="15" fill="rgb(235,111,23)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (2 samples, 0.02%)</title><rect x="74.8257%" y="869" width="0.0240%" height="15" fill="rgb(251,135,29)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="74.8257%" y="853" width="0.0240%" height="15" fill="rgb(217,57,1)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2 samples, 0.02%)</title><rect x="74.8257%" y="837" width="0.0240%" height="15" fill="rgb(249,119,31)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2 samples, 0.02%)</title><rect x="74.8257%" y="821" width="0.0240%" height="15" fill="rgb(233,164,33)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="74.8257%" y="805" width="0.0240%" height="15" fill="rgb(250,217,43)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="74.8257%" y="789" width="0.0240%" height="15" fill="rgb(232,154,50)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="799.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="74.8257%" y="773" width="0.0240%" height="15" fill="rgb(227,190,8)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="783.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.8257%" y="757" width="0.0240%" height="15" fill="rgb(209,217,32)" fg:x="6224" fg:w="2"/><text x="75.0757%" y="767.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (1 samples, 0.01%)</title><rect x="74.8497%" y="933" width="0.0120%" height="15" fill="rgb(243,203,50)" fg:x="6226" fg:w="1"/><text x="75.0997%" y="943.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (1 samples, 0.01%)</title><rect x="74.8497%" y="917" width="0.0120%" height="15" fill="rgb(232,152,27)" fg:x="6226" fg:w="1"/><text x="75.0997%" y="927.50"></text></g><g><title>smithereens::expand_from (1 samples, 0.01%)</title><rect x="74.8617%" y="933" width="0.0120%" height="15" fill="rgb(240,34,29)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="74.8617%" y="917" width="0.0120%" height="15" fill="rgb(215,185,52)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="74.8617%" y="901" width="0.0120%" height="15" fill="rgb(240,89,49)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="74.8617%" y="885" width="0.0120%" height="15" fill="rgb(225,12,52)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="74.8617%" y="869" width="0.0120%" height="15" fill="rgb(239,128,45)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="74.8617%" y="853" width="0.0120%" height="15" fill="rgb(211,78,47)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="863.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="74.8617%" y="837" width="0.0120%" height="15" fill="rgb(232,31,21)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="847.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="74.8617%" y="821" width="0.0120%" height="15" fill="rgb(222,168,14)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.8617%" y="805" width="0.0120%" height="15" fill="rgb(209,128,24)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.8617%" y="789" width="0.0120%" height="15" fill="rgb(249,35,13)" fg:x="6227" fg:w="1"/><text x="75.1117%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.8738%" y="853" width="0.0240%" height="15" fill="rgb(218,7,2)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="74.8738%" y="837" width="0.0240%" height="15" fill="rgb(238,107,27)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="847.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="74.8738%" y="821" width="0.0240%" height="15" fill="rgb(217,88,38)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="831.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.8738%" y="805" width="0.0240%" height="15" fill="rgb(230,207,0)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="815.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.8738%" y="789" width="0.0240%" height="15" fill="rgb(249,64,54)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="799.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.8738%" y="773" width="0.0240%" height="15" fill="rgb(231,7,11)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="74.8738%" y="757" width="0.0240%" height="15" fill="rgb(205,149,21)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="74.8738%" y="741" width="0.0240%" height="15" fill="rgb(215,126,34)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="74.8738%" y="725" width="0.0240%" height="15" fill="rgb(241,132,45)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="74.8738%" y="709" width="0.0240%" height="15" fill="rgb(252,69,32)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="74.8738%" y="693" width="0.0240%" height="15" fill="rgb(232,204,19)" fg:x="6228" fg:w="2"/><text x="75.1238%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="74.8858%" y="677" width="0.0120%" height="15" fill="rgb(249,15,47)" fg:x="6229" fg:w="1"/><text x="75.1358%" y="687.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.8978%" y="837" width="0.0120%" height="15" fill="rgb(209,227,23)" fg:x="6230" fg:w="1"/><text x="75.1478%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.8978%" y="821" width="0.0120%" height="15" fill="rgb(248,92,24)" fg:x="6230" fg:w="1"/><text x="75.1478%" y="831.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="74.8738%" y="869" width="0.0481%" height="15" fill="rgb(247,59,2)" fg:x="6228" fg:w="4"/><text x="75.1238%" y="879.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.8978%" y="853" width="0.0240%" height="15" fill="rgb(221,30,5)" fg:x="6230" fg:w="2"/><text x="75.1478%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="74.9098%" y="837" width="0.0120%" height="15" fill="rgb(208,108,53)" fg:x="6231" fg:w="1"/><text x="75.1598%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="74.9098%" y="821" width="0.0120%" height="15" fill="rgb(211,183,26)" fg:x="6231" fg:w="1"/><text x="75.1598%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="74.9098%" y="805" width="0.0120%" height="15" fill="rgb(232,132,4)" fg:x="6231" fg:w="1"/><text x="75.1598%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="74.9098%" y="789" width="0.0120%" height="15" fill="rgb(253,128,37)" fg:x="6231" fg:w="1"/><text x="75.1598%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="74.9098%" y="773" width="0.0120%" height="15" fill="rgb(221,58,24)" fg:x="6231" fg:w="1"/><text x="75.1598%" y="783.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="74.9098%" y="757" width="0.0120%" height="15" fill="rgb(230,54,45)" fg:x="6231" fg:w="1"/><text x="75.1598%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="74.9219%" y="869" width="0.0120%" height="15" fill="rgb(254,21,18)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.9219%" y="853" width="0.0120%" height="15" fill="rgb(221,108,0)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="74.9219%" y="837" width="0.0120%" height="15" fill="rgb(206,95,1)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="847.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.9219%" y="821" width="0.0120%" height="15" fill="rgb(237,52,5)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="74.9219%" y="805" width="0.0120%" height="15" fill="rgb(218,150,34)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.9219%" y="789" width="0.0120%" height="15" fill="rgb(235,194,28)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="74.9219%" y="773" width="0.0120%" height="15" fill="rgb(245,92,18)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="74.9219%" y="757" width="0.0120%" height="15" fill="rgb(253,203,53)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="767.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="74.9219%" y="741" width="0.0120%" height="15" fill="rgb(249,185,47)" fg:x="6232" fg:w="1"/><text x="75.1719%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.07%)</title><rect x="74.8738%" y="901" width="0.0721%" height="15" fill="rgb(252,194,52)" fg:x="6228" fg:w="6"/><text x="75.1238%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.07%)</title><rect x="74.8738%" y="885" width="0.0721%" height="15" fill="rgb(210,53,36)" fg:x="6228" fg:w="6"/><text x="75.1238%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="74.9339%" y="869" width="0.0120%" height="15" fill="rgb(237,37,25)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="74.9339%" y="853" width="0.0120%" height="15" fill="rgb(242,116,27)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="74.9339%" y="837" width="0.0120%" height="15" fill="rgb(213,185,26)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="74.9339%" y="821" width="0.0120%" height="15" fill="rgb(225,204,8)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.9339%" y="805" width="0.0120%" height="15" fill="rgb(254,111,37)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="74.9339%" y="789" width="0.0120%" height="15" fill="rgb(242,35,9)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="74.9339%" y="773" width="0.0120%" height="15" fill="rgb(232,138,49)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="783.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="74.9339%" y="757" width="0.0120%" height="15" fill="rgb(247,56,4)" fg:x="6233" fg:w="1"/><text x="75.1839%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.9459%" y="741" width="0.0120%" height="15" fill="rgb(226,179,17)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="74.9459%" y="725" width="0.0120%" height="15" fill="rgb(216,163,45)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="735.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="74.9459%" y="709" width="0.0120%" height="15" fill="rgb(211,157,3)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="719.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.9459%" y="693" width="0.0120%" height="15" fill="rgb(234,44,20)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.9459%" y="677" width="0.0120%" height="15" fill="rgb(254,138,23)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="687.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.9459%" y="661" width="0.0120%" height="15" fill="rgb(206,119,39)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.9459%" y="645" width="0.0120%" height="15" fill="rgb(231,105,52)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="655.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="74.9459%" y="629" width="0.0120%" height="15" fill="rgb(250,20,5)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.9459%" y="613" width="0.0120%" height="15" fill="rgb(215,198,30)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.9459%" y="597" width="0.0120%" height="15" fill="rgb(246,142,8)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.9459%" y="581" width="0.0120%" height="15" fill="rgb(243,26,38)" fg:x="6234" fg:w="1"/><text x="75.1959%" y="591.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="74.9459%" y="757" width="0.0240%" height="15" fill="rgb(205,133,28)" fg:x="6234" fg:w="2"/><text x="75.1959%" y="767.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.9579%" y="741" width="0.0120%" height="15" fill="rgb(212,34,0)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="751.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.9579%" y="725" width="0.0120%" height="15" fill="rgb(251,226,22)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.9579%" y="709" width="0.0120%" height="15" fill="rgb(252,119,9)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="74.9579%" y="693" width="0.0120%" height="15" fill="rgb(213,150,50)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.9579%" y="677" width="0.0120%" height="15" fill="rgb(212,24,39)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.9579%" y="661" width="0.0120%" height="15" fill="rgb(213,46,39)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="74.9579%" y="645" width="0.0120%" height="15" fill="rgb(239,106,12)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="74.9579%" y="629" width="0.0120%" height="15" fill="rgb(249,229,21)" fg:x="6235" fg:w="1"/><text x="75.2079%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3 samples, 0.04%)</title><rect x="74.9459%" y="821" width="0.0361%" height="15" fill="rgb(212,158,3)" fg:x="6234" fg:w="3"/><text x="75.1959%" y="831.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (3 samples, 0.04%)</title><rect x="74.9459%" y="805" width="0.0361%" height="15" fill="rgb(253,26,48)" fg:x="6234" fg:w="3"/><text x="75.1959%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="74.9459%" y="789" width="0.0361%" height="15" fill="rgb(238,178,20)" fg:x="6234" fg:w="3"/><text x="75.1959%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="74.9459%" y="773" width="0.0361%" height="15" fill="rgb(208,86,15)" fg:x="6234" fg:w="3"/><text x="75.1959%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="74.9699%" y="757" width="0.0120%" height="15" fill="rgb(239,42,53)" fg:x="6236" fg:w="1"/><text x="75.2199%" y="767.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="74.9699%" y="741" width="0.0120%" height="15" fill="rgb(245,226,8)" fg:x="6236" fg:w="1"/><text x="75.2199%" y="751.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="74.9699%" y="725" width="0.0120%" height="15" fill="rgb(216,176,32)" fg:x="6236" fg:w="1"/><text x="75.2199%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="74.9699%" y="709" width="0.0120%" height="15" fill="rgb(231,186,21)" fg:x="6236" fg:w="1"/><text x="75.2199%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.06%)</title><rect x="74.9459%" y="885" width="0.0601%" height="15" fill="rgb(205,95,49)" fg:x="6234" fg:w="5"/><text x="75.1959%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.06%)</title><rect x="74.9459%" y="869" width="0.0601%" height="15" fill="rgb(217,145,8)" fg:x="6234" fg:w="5"/><text x="75.1959%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.06%)</title><rect x="74.9459%" y="853" width="0.0601%" height="15" fill="rgb(239,144,48)" fg:x="6234" fg:w="5"/><text x="75.1959%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.06%)</title><rect x="74.9459%" y="837" width="0.0601%" height="15" fill="rgb(214,189,23)" fg:x="6234" fg:w="5"/><text x="75.1959%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (2 samples, 0.02%)</title><rect x="74.9820%" y="821" width="0.0240%" height="15" fill="rgb(229,157,17)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.02%)</title><rect x="74.9820%" y="805" width="0.0240%" height="15" fill="rgb(230,5,48)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="74.9820%" y="789" width="0.0240%" height="15" fill="rgb(224,156,48)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="799.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="74.9820%" y="773" width="0.0240%" height="15" fill="rgb(223,14,29)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="74.9820%" y="757" width="0.0240%" height="15" fill="rgb(229,96,36)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="74.9820%" y="741" width="0.0240%" height="15" fill="rgb(231,102,53)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="751.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="74.9820%" y="725" width="0.0240%" height="15" fill="rgb(210,77,38)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="735.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="74.9820%" y="709" width="0.0240%" height="15" fill="rgb(235,131,6)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="719.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.9820%" y="693" width="0.0240%" height="15" fill="rgb(252,55,38)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="703.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.9820%" y="677" width="0.0240%" height="15" fill="rgb(246,38,14)" fg:x="6237" fg:w="2"/><text x="75.2320%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="75.0060%" y="805" width="0.0120%" height="15" fill="rgb(242,27,5)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="75.0060%" y="789" width="0.0120%" height="15" fill="rgb(228,65,35)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="75.0060%" y="773" width="0.0120%" height="15" fill="rgb(245,93,11)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="75.0060%" y="757" width="0.0120%" height="15" fill="rgb(213,1,31)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="75.0060%" y="741" width="0.0120%" height="15" fill="rgb(237,205,14)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="75.0060%" y="725" width="0.0120%" height="15" fill="rgb(232,118,45)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="75.0060%" y="709" width="0.0120%" height="15" fill="rgb(218,5,6)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="75.0060%" y="693" width="0.0120%" height="15" fill="rgb(251,87,51)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="703.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.01%)</title><rect x="75.0060%" y="677" width="0.0120%" height="15" fill="rgb(207,225,20)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="687.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.0060%" y="661" width="0.0120%" height="15" fill="rgb(222,78,54)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.0060%" y="645" width="0.0120%" height="15" fill="rgb(232,85,16)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="75.0060%" y="629" width="0.0120%" height="15" fill="rgb(244,25,33)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="75.0060%" y="613" width="0.0120%" height="15" fill="rgb(233,24,36)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="75.0060%" y="597" width="0.0120%" height="15" fill="rgb(253,49,54)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.0060%" y="581" width="0.0120%" height="15" fill="rgb(245,12,22)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.0060%" y="565" width="0.0120%" height="15" fill="rgb(253,141,28)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="75.0060%" y="549" width="0.0120%" height="15" fill="rgb(225,207,27)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="75.0060%" y="533" width="0.0120%" height="15" fill="rgb(220,84,2)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="75.0060%" y="517" width="0.0120%" height="15" fill="rgb(224,37,37)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="75.0060%" y="501" width="0.0120%" height="15" fill="rgb(220,143,18)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="511.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="75.0060%" y="485" width="0.0120%" height="15" fill="rgb(210,88,33)" fg:x="6239" fg:w="1"/><text x="75.2560%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (13 samples, 0.16%)</title><rect x="74.8738%" y="933" width="0.1563%" height="15" fill="rgb(219,87,51)" fg:x="6228" fg:w="13"/><text x="75.1238%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (13 samples, 0.16%)</title><rect x="74.8738%" y="917" width="0.1563%" height="15" fill="rgb(211,7,35)" fg:x="6228" fg:w="13"/><text x="75.1238%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7 samples, 0.08%)</title><rect x="74.9459%" y="901" width="0.0842%" height="15" fill="rgb(232,77,2)" fg:x="6234" fg:w="7"/><text x="75.1959%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2 samples, 0.02%)</title><rect x="75.0060%" y="885" width="0.0240%" height="15" fill="rgb(249,94,25)" fg:x="6239" fg:w="2"/><text x="75.2560%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="75.0060%" y="869" width="0.0240%" height="15" fill="rgb(215,112,2)" fg:x="6239" fg:w="2"/><text x="75.2560%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.02%)</title><rect x="75.0060%" y="853" width="0.0240%" height="15" fill="rgb(226,115,48)" fg:x="6239" fg:w="2"/><text x="75.2560%" y="863.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="75.0060%" y="837" width="0.0240%" height="15" fill="rgb(249,196,10)" fg:x="6239" fg:w="2"/><text x="75.2560%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="75.0060%" y="821" width="0.0240%" height="15" fill="rgb(237,109,14)" fg:x="6239" fg:w="2"/><text x="75.2560%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="75.0180%" y="805" width="0.0120%" height="15" fill="rgb(217,103,53)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.0180%" y="789" width="0.0120%" height="15" fill="rgb(244,137,9)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="75.0180%" y="773" width="0.0120%" height="15" fill="rgb(227,201,3)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="75.0180%" y="757" width="0.0120%" height="15" fill="rgb(243,94,6)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="75.0180%" y="741" width="0.0120%" height="15" fill="rgb(235,118,5)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="75.0180%" y="725" width="0.0120%" height="15" fill="rgb(247,10,30)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.0180%" y="709" width="0.0120%" height="15" fill="rgb(205,26,28)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="75.0180%" y="693" width="0.0120%" height="15" fill="rgb(206,99,35)" fg:x="6240" fg:w="1"/><text x="75.2680%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="75.0301%" y="869" width="0.0120%" height="15" fill="rgb(238,130,40)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="75.0301%" y="853" width="0.0120%" height="15" fill="rgb(224,126,31)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="75.0301%" y="837" width="0.0120%" height="15" fill="rgb(254,105,17)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="75.0301%" y="821" width="0.0120%" height="15" fill="rgb(216,87,36)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.0301%" y="805" width="0.0120%" height="15" fill="rgb(240,21,12)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.0301%" y="789" width="0.0120%" height="15" fill="rgb(245,192,34)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="75.0301%" y="773" width="0.0120%" height="15" fill="rgb(226,100,49)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="75.0301%" y="757" width="0.0120%" height="15" fill="rgb(245,188,27)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="75.0301%" y="741" width="0.0120%" height="15" fill="rgb(212,170,8)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="75.0301%" y="725" width="0.0120%" height="15" fill="rgb(217,113,29)" fg:x="6241" fg:w="1"/><text x="75.2801%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (2 samples, 0.02%)</title><rect x="75.0301%" y="933" width="0.0240%" height="15" fill="rgb(237,30,3)" fg:x="6241" fg:w="2"/><text x="75.2801%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (2 samples, 0.02%)</title><rect x="75.0301%" y="917" width="0.0240%" height="15" fill="rgb(227,19,28)" fg:x="6241" fg:w="2"/><text x="75.2801%" y="927.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}} (2 samples, 0.02%)</title><rect x="75.0301%" y="901" width="0.0240%" height="15" fill="rgb(239,172,45)" fg:x="6241" fg:w="2"/><text x="75.2801%" y="911.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="75.0301%" y="885" width="0.0240%" height="15" fill="rgb(254,55,39)" fg:x="6241" fg:w="2"/><text x="75.2801%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.01%)</title><rect x="75.0421%" y="869" width="0.0120%" height="15" fill="rgb(249,208,12)" fg:x="6242" fg:w="1"/><text x="75.2921%" y="879.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.01%)</title><rect x="75.0421%" y="853" width="0.0120%" height="15" fill="rgb(240,52,13)" fg:x="6242" fg:w="1"/><text x="75.2921%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="75.0421%" y="837" width="0.0120%" height="15" fill="rgb(252,149,13)" fg:x="6242" fg:w="1"/><text x="75.2921%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.0781%" y="869" width="0.0120%" height="15" fill="rgb(232,81,48)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="75.0781%" y="853" width="0.0120%" height="15" fill="rgb(222,144,2)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="75.0781%" y="837" width="0.0120%" height="15" fill="rgb(216,81,32)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="75.0781%" y="821" width="0.0120%" height="15" fill="rgb(244,78,51)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.0781%" y="805" width="0.0120%" height="15" fill="rgb(217,66,21)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.0781%" y="789" width="0.0120%" height="15" fill="rgb(247,101,42)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="75.0781%" y="773" width="0.0120%" height="15" fill="rgb(227,81,39)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="75.0781%" y="757" width="0.0120%" height="15" fill="rgb(220,223,44)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="75.0781%" y="741" width="0.0120%" height="15" fill="rgb(205,218,2)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="75.0781%" y="725" width="0.0120%" height="15" fill="rgb(212,207,28)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="735.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="75.0781%" y="709" width="0.0120%" height="15" fill="rgb(224,12,41)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="75.0781%" y="693" width="0.0120%" height="15" fill="rgb(216,118,12)" fg:x="6245" fg:w="1"/><text x="75.3281%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.0902%" y="869" width="0.0120%" height="15" fill="rgb(252,97,46)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="879.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.0902%" y="853" width="0.0120%" height="15" fill="rgb(244,206,19)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="863.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.0902%" y="837" width="0.0120%" height="15" fill="rgb(231,84,31)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.0902%" y="821" width="0.0120%" height="15" fill="rgb(244,133,0)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="75.0902%" y="805" width="0.0120%" height="15" fill="rgb(223,15,50)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="75.0902%" y="789" width="0.0120%" height="15" fill="rgb(250,118,49)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="799.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="75.0902%" y="773" width="0.0120%" height="15" fill="rgb(248,25,38)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="75.0902%" y="757" width="0.0120%" height="15" fill="rgb(215,70,14)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="75.0902%" y="741" width="0.0120%" height="15" fill="rgb(215,28,15)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="75.0902%" y="725" width="0.0120%" height="15" fill="rgb(243,6,28)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="735.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="75.0902%" y="709" width="0.0120%" height="15" fill="rgb(222,130,1)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="75.0902%" y="693" width="0.0120%" height="15" fill="rgb(236,166,44)" fg:x="6246" fg:w="1"/><text x="75.3402%" y="703.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1022%" y="821" width="0.0120%" height="15" fill="rgb(221,108,14)" fg:x="6247" fg:w="1"/><text x="75.3522%" y="831.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1022%" y="805" width="0.0120%" height="15" fill="rgb(252,3,45)" fg:x="6247" fg:w="1"/><text x="75.3522%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="75.1022%" y="789" width="0.0120%" height="15" fill="rgb(237,68,30)" fg:x="6247" fg:w="1"/><text x="75.3522%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="75.1022%" y="773" width="0.0120%" height="15" fill="rgb(211,79,22)" fg:x="6247" fg:w="1"/><text x="75.3522%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="75.1022%" y="757" width="0.0120%" height="15" fill="rgb(252,185,21)" fg:x="6247" fg:w="1"/><text x="75.3522%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="75.1022%" y="741" width="0.0120%" height="15" fill="rgb(225,189,26)" fg:x="6247" fg:w="1"/><text x="75.3522%" y="751.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="75.0541%" y="885" width="0.0721%" height="15" fill="rgb(241,30,40)" fg:x="6243" fg:w="6"/><text x="75.3041%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="75.1022%" y="869" width="0.0240%" height="15" fill="rgb(235,215,44)" fg:x="6247" fg:w="2"/><text x="75.3522%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="75.1022%" y="853" width="0.0240%" height="15" fill="rgb(205,8,29)" fg:x="6247" fg:w="2"/><text x="75.3522%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="75.1022%" y="837" width="0.0240%" height="15" fill="rgb(241,137,42)" fg:x="6247" fg:w="2"/><text x="75.3522%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.1142%" y="821" width="0.0120%" height="15" fill="rgb(237,155,2)" fg:x="6248" fg:w="1"/><text x="75.3642%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="75.1142%" y="805" width="0.0120%" height="15" fill="rgb(245,29,42)" fg:x="6248" fg:w="1"/><text x="75.3642%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="75.1142%" y="789" width="0.0120%" height="15" fill="rgb(234,101,35)" fg:x="6248" fg:w="1"/><text x="75.3642%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="75.1142%" y="773" width="0.0120%" height="15" fill="rgb(228,64,37)" fg:x="6248" fg:w="1"/><text x="75.3642%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="75.1142%" y="757" width="0.0120%" height="15" fill="rgb(217,214,36)" fg:x="6248" fg:w="1"/><text x="75.3642%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="75.1142%" y="741" width="0.0120%" height="15" fill="rgb(243,70,3)" fg:x="6248" fg:w="1"/><text x="75.3642%" y="751.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="75.1142%" y="725" width="0.0120%" height="15" fill="rgb(253,158,52)" fg:x="6248" fg:w="1"/><text x="75.3642%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1503%" y="773" width="0.0120%" height="15" fill="rgb(234,111,54)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1503%" y="757" width="0.0120%" height="15" fill="rgb(217,70,32)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1503%" y="741" width="0.0120%" height="15" fill="rgb(234,18,33)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="75.1503%" y="725" width="0.0120%" height="15" fill="rgb(234,12,49)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="75.1503%" y="709" width="0.0120%" height="15" fill="rgb(236,10,21)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="719.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="75.1503%" y="693" width="0.0120%" height="15" fill="rgb(248,182,45)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="75.1503%" y="677" width="0.0120%" height="15" fill="rgb(217,95,36)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="75.1503%" y="661" width="0.0120%" height="15" fill="rgb(212,110,31)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="75.1503%" y="645" width="0.0120%" height="15" fill="rgb(206,32,53)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="655.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="75.1503%" y="629" width="0.0120%" height="15" fill="rgb(246,141,37)" fg:x="6251" fg:w="1"/><text x="75.4003%" y="639.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1623%" y="725" width="0.0120%" height="15" fill="rgb(219,16,7)" fg:x="6252" fg:w="1"/><text x="75.4123%" y="735.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1623%" y="709" width="0.0120%" height="15" fill="rgb(230,205,45)" fg:x="6252" fg:w="1"/><text x="75.4123%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="75.1623%" y="693" width="0.0120%" height="15" fill="rgb(231,43,49)" fg:x="6252" fg:w="1"/><text x="75.4123%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="75.1623%" y="677" width="0.0120%" height="15" fill="rgb(212,106,34)" fg:x="6252" fg:w="1"/><text x="75.4123%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="75.1623%" y="661" width="0.0120%" height="15" fill="rgb(206,83,17)" fg:x="6252" fg:w="1"/><text x="75.4123%" y="671.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1623%" y="645" width="0.0120%" height="15" fill="rgb(244,154,49)" fg:x="6252" fg:w="1"/><text x="75.4123%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="75.1623%" y="629" width="0.0120%" height="15" fill="rgb(244,149,49)" fg:x="6252" fg:w="1"/><text x="75.4123%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.07%)</title><rect x="75.1262%" y="837" width="0.0721%" height="15" fill="rgb(227,134,18)" fg:x="6249" fg:w="6"/><text x="75.3762%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6 samples, 0.07%)</title><rect x="75.1262%" y="821" width="0.0721%" height="15" fill="rgb(237,116,36)" fg:x="6249" fg:w="6"/><text x="75.3762%" y="831.50"></text></g><g><title>core::clone::Clone::clone (6 samples, 0.07%)</title><rect x="75.1262%" y="805" width="0.0721%" height="15" fill="rgb(205,129,40)" fg:x="6249" fg:w="6"/><text x="75.3762%" y="815.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="75.1262%" y="789" width="0.0721%" height="15" fill="rgb(236,178,4)" fg:x="6249" fg:w="6"/><text x="75.3762%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="75.1623%" y="773" width="0.0361%" height="15" fill="rgb(251,76,53)" fg:x="6252" fg:w="3"/><text x="75.4123%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="75.1623%" y="757" width="0.0361%" height="15" fill="rgb(242,92,40)" fg:x="6252" fg:w="3"/><text x="75.4123%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="75.1623%" y="741" width="0.0361%" height="15" fill="rgb(209,45,30)" fg:x="6252" fg:w="3"/><text x="75.4123%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="75.1743%" y="725" width="0.0240%" height="15" fill="rgb(218,157,36)" fg:x="6253" fg:w="2"/><text x="75.4243%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="75.1743%" y="709" width="0.0240%" height="15" fill="rgb(222,186,16)" fg:x="6253" fg:w="2"/><text x="75.4243%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="75.1743%" y="693" width="0.0240%" height="15" fill="rgb(254,72,35)" fg:x="6253" fg:w="2"/><text x="75.4243%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="75.1743%" y="677" width="0.0240%" height="15" fill="rgb(224,25,35)" fg:x="6253" fg:w="2"/><text x="75.4243%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="75.1743%" y="661" width="0.0240%" height="15" fill="rgb(206,135,52)" fg:x="6253" fg:w="2"/><text x="75.4243%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="75.1743%" y="645" width="0.0240%" height="15" fill="rgb(229,174,47)" fg:x="6253" fg:w="2"/><text x="75.4243%" y="655.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="75.1863%" y="629" width="0.0120%" height="15" fill="rgb(242,184,21)" fg:x="6254" fg:w="1"/><text x="75.4363%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="75.1863%" y="613" width="0.0120%" height="15" fill="rgb(213,22,45)" fg:x="6254" fg:w="1"/><text x="75.4363%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="75.1262%" y="885" width="0.1563%" height="15" fill="rgb(237,81,54)" fg:x="6249" fg:w="13"/><text x="75.3762%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="75.1262%" y="869" width="0.1563%" height="15" fill="rgb(248,177,18)" fg:x="6249" fg:w="13"/><text x="75.3762%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="75.1262%" y="853" width="0.1563%" height="15" fill="rgb(254,31,16)" fg:x="6249" fg:w="13"/><text x="75.3762%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (7 samples, 0.08%)</title><rect x="75.1984%" y="837" width="0.0842%" height="15" fill="rgb(235,20,31)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (7 samples, 0.08%)</title><rect x="75.1984%" y="821" width="0.0842%" height="15" fill="rgb(240,56,43)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="831.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.08%)</title><rect x="75.1984%" y="805" width="0.0842%" height="15" fill="rgb(237,197,51)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="75.1984%" y="789" width="0.0842%" height="15" fill="rgb(241,162,44)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="75.1984%" y="773" width="0.0842%" height="15" fill="rgb(224,23,20)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="783.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="75.1984%" y="757" width="0.0842%" height="15" fill="rgb(250,109,34)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="767.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="75.1984%" y="741" width="0.0842%" height="15" fill="rgb(214,175,50)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="751.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="75.1984%" y="725" width="0.0842%" height="15" fill="rgb(213,182,5)" fg:x="6255" fg:w="7"/><text x="75.4484%" y="735.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="75.2224%" y="709" width="0.0601%" height="15" fill="rgb(209,199,19)" fg:x="6257" fg:w="5"/><text x="75.4724%" y="719.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="75.2344%" y="693" width="0.0481%" height="15" fill="rgb(236,224,42)" fg:x="6258" fg:w="4"/><text x="75.4844%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="75.3787%" y="693" width="0.1443%" height="15" fill="rgb(246,226,29)" fg:x="6270" fg:w="12"/><text x="75.6287%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="75.3787%" y="677" width="0.1443%" height="15" fill="rgb(227,223,11)" fg:x="6270" fg:w="12"/><text x="75.6287%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.14%)</title><rect x="75.3787%" y="661" width="0.1443%" height="15" fill="rgb(219,7,51)" fg:x="6270" fg:w="12"/><text x="75.6287%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.14%)</title><rect x="75.3787%" y="645" width="0.1443%" height="15" fill="rgb(245,167,10)" fg:x="6270" fg:w="12"/><text x="75.6287%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.14%)</title><rect x="75.3787%" y="629" width="0.1443%" height="15" fill="rgb(237,224,16)" fg:x="6270" fg:w="12"/><text x="75.6287%" y="639.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.14%)</title><rect x="75.3787%" y="613" width="0.1443%" height="15" fill="rgb(226,132,13)" fg:x="6270" fg:w="12"/><text x="75.6287%" y="623.50"></text></g><g><title>malloc (12 samples, 0.14%)</title><rect x="75.3787%" y="597" width="0.1443%" height="15" fill="rgb(214,140,3)" fg:x="6270" fg:w="12"/><text x="75.6287%" y="607.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="75.4869%" y="581" width="0.0361%" height="15" fill="rgb(221,177,4)" fg:x="6279" fg:w="3"/><text x="75.7369%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="75.3667%" y="757" width="0.1683%" height="15" fill="rgb(238,139,3)" fg:x="6269" fg:w="14"/><text x="75.6167%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.17%)</title><rect x="75.3667%" y="741" width="0.1683%" height="15" fill="rgb(216,17,39)" fg:x="6269" fg:w="14"/><text x="75.6167%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.17%)</title><rect x="75.3667%" y="725" width="0.1683%" height="15" fill="rgb(238,120,9)" fg:x="6269" fg:w="14"/><text x="75.6167%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.17%)</title><rect x="75.3667%" y="709" width="0.1683%" height="15" fill="rgb(244,92,53)" fg:x="6269" fg:w="14"/><text x="75.6167%" y="719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="75.5230%" y="693" width="0.0120%" height="15" fill="rgb(224,148,33)" fg:x="6282" fg:w="1"/><text x="75.7730%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="75.5470%" y="709" width="0.0240%" height="15" fill="rgb(243,6,36)" fg:x="6284" fg:w="2"/><text x="75.7970%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="75.5590%" y="693" width="0.0120%" height="15" fill="rgb(230,102,11)" fg:x="6285" fg:w="1"/><text x="75.8090%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="75.5590%" y="677" width="0.0120%" height="15" fill="rgb(234,148,36)" fg:x="6285" fg:w="1"/><text x="75.8090%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="75.5590%" y="661" width="0.0120%" height="15" fill="rgb(251,153,25)" fg:x="6285" fg:w="1"/><text x="75.8090%" y="671.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="75.5711%" y="677" width="0.0120%" height="15" fill="rgb(215,129,8)" fg:x="6286" fg:w="1"/><text x="75.8211%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (20 samples, 0.24%)</title><rect x="75.5350%" y="757" width="0.2404%" height="15" fill="rgb(224,128,35)" fg:x="6283" fg:w="20"/><text x="75.7850%" y="767.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.24%)</title><rect x="75.5350%" y="741" width="0.2404%" height="15" fill="rgb(237,56,52)" fg:x="6283" fg:w="20"/><text x="75.7850%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.24%)</title><rect x="75.5350%" y="725" width="0.2404%" height="15" fill="rgb(234,213,19)" fg:x="6283" fg:w="20"/><text x="75.7850%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (17 samples, 0.20%)</title><rect x="75.5711%" y="709" width="0.2044%" height="15" fill="rgb(252,82,23)" fg:x="6286" fg:w="17"/><text x="75.8211%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (17 samples, 0.20%)</title><rect x="75.5711%" y="693" width="0.2044%" height="15" fill="rgb(254,201,21)" fg:x="6286" fg:w="17"/><text x="75.8211%" y="703.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (16 samples, 0.19%)</title><rect x="75.5831%" y="677" width="0.1924%" height="15" fill="rgb(250,186,11)" fg:x="6287" fg:w="16"/><text x="75.8331%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.19%)</title><rect x="75.5831%" y="661" width="0.1924%" height="15" fill="rgb(211,174,5)" fg:x="6287" fg:w="16"/><text x="75.8331%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.19%)</title><rect x="75.5831%" y="645" width="0.1924%" height="15" fill="rgb(214,121,10)" fg:x="6287" fg:w="16"/><text x="75.8331%" y="655.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.19%)</title><rect x="75.5831%" y="629" width="0.1924%" height="15" fill="rgb(241,66,2)" fg:x="6287" fg:w="16"/><text x="75.8331%" y="639.50"></text></g><g><title>malloc (15 samples, 0.18%)</title><rect x="75.5951%" y="613" width="0.1803%" height="15" fill="rgb(220,167,19)" fg:x="6288" fg:w="15"/><text x="75.8451%" y="623.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="75.6913%" y="597" width="0.0842%" height="15" fill="rgb(231,54,50)" fg:x="6296" fg:w="7"/><text x="75.9413%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="75.7754%" y="709" width="0.0361%" height="15" fill="rgb(239,217,53)" fg:x="6303" fg:w="3"/><text x="76.0254%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="75.7874%" y="693" width="0.0240%" height="15" fill="rgb(248,8,0)" fg:x="6304" fg:w="2"/><text x="76.0374%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="75.7995%" y="677" width="0.0120%" height="15" fill="rgb(229,118,37)" fg:x="6305" fg:w="1"/><text x="76.0495%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="75.7995%" y="661" width="0.0120%" height="15" fill="rgb(253,223,43)" fg:x="6305" fg:w="1"/><text x="76.0495%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.01%)</title><rect x="75.7995%" y="645" width="0.0120%" height="15" fill="rgb(211,77,36)" fg:x="6305" fg:w="1"/><text x="76.0495%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="75.7995%" y="629" width="0.0120%" height="15" fill="rgb(219,3,53)" fg:x="6305" fg:w="1"/><text x="76.0495%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="75.8115%" y="677" width="0.0240%" height="15" fill="rgb(244,45,42)" fg:x="6306" fg:w="2"/><text x="76.0615%" y="687.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="75.8355%" y="629" width="0.0361%" height="15" fill="rgb(225,95,27)" fg:x="6308" fg:w="3"/><text x="76.0855%" y="639.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="75.8355%" y="613" width="0.0361%" height="15" fill="rgb(207,74,8)" fg:x="6308" fg:w="3"/><text x="76.0855%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.26%)</title><rect x="75.8716%" y="629" width="0.2645%" height="15" fill="rgb(243,63,36)" fg:x="6311" fg:w="22"/><text x="76.1216%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.26%)</title><rect x="75.8716%" y="613" width="0.2645%" height="15" fill="rgb(211,180,12)" fg:x="6311" fg:w="22"/><text x="76.1216%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.26%)</title><rect x="75.8716%" y="597" width="0.2645%" height="15" fill="rgb(254,166,49)" fg:x="6311" fg:w="22"/><text x="76.1216%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.25%)</title><rect x="75.8836%" y="581" width="0.2525%" height="15" fill="rgb(205,19,0)" fg:x="6312" fg:w="21"/><text x="76.1336%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.25%)</title><rect x="75.8836%" y="565" width="0.2525%" height="15" fill="rgb(224,172,32)" fg:x="6312" fg:w="21"/><text x="76.1336%" y="575.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.25%)</title><rect x="75.8836%" y="549" width="0.2525%" height="15" fill="rgb(254,136,30)" fg:x="6312" fg:w="21"/><text x="76.1336%" y="559.50"></text></g><g><title>malloc (19 samples, 0.23%)</title><rect x="75.9077%" y="533" width="0.2284%" height="15" fill="rgb(246,19,35)" fg:x="6314" fg:w="19"/><text x="76.1577%" y="543.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="76.0880%" y="517" width="0.0481%" height="15" fill="rgb(219,24,36)" fg:x="6329" fg:w="4"/><text x="76.3380%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="76.1241%" y="501" width="0.0120%" height="15" fill="rgb(251,55,1)" fg:x="6332" fg:w="1"/><text x="76.3741%" y="511.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (28 samples, 0.34%)</title><rect x="75.8115%" y="709" width="0.3366%" height="15" fill="rgb(218,117,39)" fg:x="6306" fg:w="28"/><text x="76.0615%" y="719.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (28 samples, 0.34%)</title><rect x="75.8115%" y="693" width="0.3366%" height="15" fill="rgb(248,169,11)" fg:x="6306" fg:w="28"/><text x="76.0615%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26 samples, 0.31%)</title><rect x="75.8355%" y="677" width="0.3126%" height="15" fill="rgb(244,40,44)" fg:x="6308" fg:w="26"/><text x="76.0855%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (26 samples, 0.31%)</title><rect x="75.8355%" y="661" width="0.3126%" height="15" fill="rgb(234,62,37)" fg:x="6308" fg:w="26"/><text x="76.0855%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26 samples, 0.31%)</title><rect x="75.8355%" y="645" width="0.3126%" height="15" fill="rgb(207,117,42)" fg:x="6308" fg:w="26"/><text x="76.0855%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="76.1361%" y="629" width="0.0120%" height="15" fill="rgb(213,43,2)" fg:x="6333" fg:w="1"/><text x="76.3861%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (39 samples, 0.47%)</title><rect x="76.1481%" y="709" width="0.4689%" height="15" fill="rgb(244,202,51)" fg:x="6334" fg:w="39"/><text x="76.3981%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (39 samples, 0.47%)</title><rect x="76.1481%" y="693" width="0.4689%" height="15" fill="rgb(253,174,46)" fg:x="6334" fg:w="39"/><text x="76.3981%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (39 samples, 0.47%)</title><rect x="76.1481%" y="677" width="0.4689%" height="15" fill="rgb(251,23,1)" fg:x="6334" fg:w="39"/><text x="76.3981%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.46%)</title><rect x="76.1601%" y="661" width="0.4568%" height="15" fill="rgb(253,26,1)" fg:x="6335" fg:w="38"/><text x="76.4101%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.46%)</title><rect x="76.1601%" y="645" width="0.4568%" height="15" fill="rgb(216,89,31)" fg:x="6335" fg:w="38"/><text x="76.4101%" y="655.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.46%)</title><rect x="76.1601%" y="629" width="0.4568%" height="15" fill="rgb(209,109,5)" fg:x="6335" fg:w="38"/><text x="76.4101%" y="639.50"></text></g><g><title>malloc (35 samples, 0.42%)</title><rect x="76.1962%" y="613" width="0.4208%" height="15" fill="rgb(229,63,13)" fg:x="6338" fg:w="35"/><text x="76.4462%" y="623.50"></text></g><g><title>[libc.so.6] (15 samples, 0.18%)</title><rect x="76.4366%" y="597" width="0.1803%" height="15" fill="rgb(238,137,54)" fg:x="6358" fg:w="15"/><text x="76.6866%" y="607.50"></text></g><g><title>core::clone::Clone::clone (115 samples, 1.38%)</title><rect x="75.2825%" y="789" width="1.3825%" height="15" fill="rgb(228,1,9)" fg:x="6262" fg:w="115"/><text x="75.5325%" y="799.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (115 samples, 1.38%)</title><rect x="75.2825%" y="773" width="1.3825%" height="15" fill="rgb(249,120,48)" fg:x="6262" fg:w="115"/><text x="75.5325%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74 samples, 0.89%)</title><rect x="75.7754%" y="757" width="0.8896%" height="15" fill="rgb(209,72,36)" fg:x="6303" fg:w="74"/><text x="76.0254%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (74 samples, 0.89%)</title><rect x="75.7754%" y="741" width="0.8896%" height="15" fill="rgb(247,98,49)" fg:x="6303" fg:w="74"/><text x="76.0254%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74 samples, 0.89%)</title><rect x="75.7754%" y="725" width="0.8896%" height="15" fill="rgb(233,75,36)" fg:x="6303" fg:w="74"/><text x="76.0254%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.05%)</title><rect x="76.6170%" y="709" width="0.0481%" height="15" fill="rgb(225,14,24)" fg:x="6373" fg:w="4"/><text x="76.8670%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (117 samples, 1.41%)</title><rect x="75.2825%" y="821" width="1.4066%" height="15" fill="rgb(237,193,20)" fg:x="6262" fg:w="117"/><text x="75.5325%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (117 samples, 1.41%)</title><rect x="75.2825%" y="805" width="1.4066%" height="15" fill="rgb(239,122,19)" fg:x="6262" fg:w="117"/><text x="75.5325%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="76.6651%" y="789" width="0.0240%" height="15" fill="rgb(231,220,10)" fg:x="6377" fg:w="2"/><text x="76.9151%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="76.6651%" y="773" width="0.0240%" height="15" fill="rgb(220,66,15)" fg:x="6377" fg:w="2"/><text x="76.9151%" y="783.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="76.6651%" y="757" width="0.0240%" height="15" fill="rgb(215,171,52)" fg:x="6377" fg:w="2"/><text x="76.9151%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="76.6771%" y="741" width="0.0120%" height="15" fill="rgb(241,169,50)" fg:x="6378" fg:w="1"/><text x="76.9271%" y="751.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (119 samples, 1.43%)</title><rect x="75.2825%" y="885" width="1.4306%" height="15" fill="rgb(236,189,0)" fg:x="6262" fg:w="119"/><text x="75.5325%" y="895.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (119 samples, 1.43%)</title><rect x="75.2825%" y="869" width="1.4306%" height="15" fill="rgb(217,147,20)" fg:x="6262" fg:w="119"/><text x="75.5325%" y="879.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (119 samples, 1.43%)</title><rect x="75.2825%" y="853" width="1.4306%" height="15" fill="rgb(206,188,39)" fg:x="6262" fg:w="119"/><text x="75.5325%" y="863.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (119 samples, 1.43%)</title><rect x="75.2825%" y="837" width="1.4306%" height="15" fill="rgb(227,118,25)" fg:x="6262" fg:w="119"/><text x="75.5325%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="76.6891%" y="821" width="0.0240%" height="15" fill="rgb(248,171,40)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="76.6891%" y="805" width="0.0240%" height="15" fill="rgb(251,90,54)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="76.6891%" y="789" width="0.0240%" height="15" fill="rgb(234,11,46)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="76.6891%" y="773" width="0.0240%" height="15" fill="rgb(229,134,13)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="76.6891%" y="757" width="0.0240%" height="15" fill="rgb(223,129,3)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="76.6891%" y="741" width="0.0240%" height="15" fill="rgb(221,124,13)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="751.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="76.6891%" y="725" width="0.0240%" height="15" fill="rgb(234,3,18)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="735.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="76.6891%" y="709" width="0.0240%" height="15" fill="rgb(249,199,20)" fg:x="6379" fg:w="2"/><text x="76.9391%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="76.7132%" y="885" width="0.0120%" height="15" fill="rgb(224,134,6)" fg:x="6381" fg:w="1"/><text x="76.9632%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="76.7132%" y="869" width="0.0120%" height="15" fill="rgb(254,83,26)" fg:x="6381" fg:w="1"/><text x="76.9632%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="76.7132%" y="853" width="0.0120%" height="15" fill="rgb(217,88,9)" fg:x="6381" fg:w="1"/><text x="76.9632%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="76.7132%" y="837" width="0.0120%" height="15" fill="rgb(225,73,2)" fg:x="6381" fg:w="1"/><text x="76.9632%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="76.7132%" y="821" width="0.0120%" height="15" fill="rgb(226,44,39)" fg:x="6381" fg:w="1"/><text x="76.9632%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="76.7132%" y="805" width="0.0120%" height="15" fill="rgb(228,53,17)" fg:x="6381" fg:w="1"/><text x="76.9632%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="76.7132%" y="789" width="0.0120%" height="15" fill="rgb(212,27,27)" fg:x="6381" fg:w="1"/><text x="76.9632%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="76.7252%" y="693" width="0.0361%" height="15" fill="rgb(241,50,6)" fg:x="6382" fg:w="3"/><text x="76.9752%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="76.7252%" y="677" width="0.0361%" height="15" fill="rgb(225,28,51)" fg:x="6382" fg:w="3"/><text x="76.9752%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="76.7252%" y="661" width="0.0361%" height="15" fill="rgb(215,33,16)" fg:x="6382" fg:w="3"/><text x="76.9752%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="76.7252%" y="645" width="0.0361%" height="15" fill="rgb(243,40,39)" fg:x="6382" fg:w="3"/><text x="76.9752%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="76.7252%" y="629" width="0.0361%" height="15" fill="rgb(225,11,42)" fg:x="6382" fg:w="3"/><text x="76.9752%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="76.7372%" y="613" width="0.0240%" height="15" fill="rgb(241,220,38)" fg:x="6383" fg:w="2"/><text x="76.9872%" y="623.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="76.7252%" y="709" width="0.0481%" height="15" fill="rgb(244,52,35)" fg:x="6382" fg:w="4"/><text x="76.9752%" y="719.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="76.7612%" y="693" width="0.0120%" height="15" fill="rgb(246,42,46)" fg:x="6385" fg:w="1"/><text x="77.0112%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="76.7252%" y="725" width="0.0601%" height="15" fill="rgb(205,184,13)" fg:x="6382" fg:w="5"/><text x="76.9752%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="76.7733%" y="709" width="0.0120%" height="15" fill="rgb(209,48,36)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="76.7733%" y="693" width="0.0120%" height="15" fill="rgb(244,34,51)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="76.7733%" y="677" width="0.0120%" height="15" fill="rgb(221,107,33)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="76.7733%" y="661" width="0.0120%" height="15" fill="rgb(224,203,12)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="76.7733%" y="645" width="0.0120%" height="15" fill="rgb(230,215,18)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="655.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="76.7733%" y="629" width="0.0120%" height="15" fill="rgb(206,185,35)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="639.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="76.7733%" y="613" width="0.0120%" height="15" fill="rgb(228,140,34)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="623.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="76.7733%" y="597" width="0.0120%" height="15" fill="rgb(208,93,13)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="607.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="76.7733%" y="581" width="0.0120%" height="15" fill="rgb(221,193,39)" fg:x="6386" fg:w="1"/><text x="77.0233%" y="591.50"></text></g><g><title>core::hash::Hash::hash_slice (6 samples, 0.07%)</title><rect x="76.7252%" y="757" width="0.0721%" height="15" fill="rgb(241,132,34)" fg:x="6382" fg:w="6"/><text x="76.9752%" y="767.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="76.7252%" y="741" width="0.0721%" height="15" fill="rgb(221,141,10)" fg:x="6382" fg:w="6"/><text x="76.9752%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="76.7853%" y="725" width="0.0120%" height="15" fill="rgb(226,90,31)" fg:x="6387" fg:w="1"/><text x="77.0353%" y="735.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="76.7853%" y="709" width="0.0120%" height="15" fill="rgb(243,75,5)" fg:x="6387" fg:w="1"/><text x="77.0353%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="76.7853%" y="693" width="0.0120%" height="15" fill="rgb(227,156,21)" fg:x="6387" fg:w="1"/><text x="77.0353%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="76.7853%" y="677" width="0.0120%" height="15" fill="rgb(250,195,8)" fg:x="6387" fg:w="1"/><text x="77.0353%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="76.7853%" y="661" width="0.0120%" height="15" fill="rgb(220,134,5)" fg:x="6387" fg:w="1"/><text x="77.0353%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="76.7853%" y="645" width="0.0120%" height="15" fill="rgb(246,106,34)" fg:x="6387" fg:w="1"/><text x="77.0353%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="76.7853%" y="629" width="0.0120%" height="15" fill="rgb(205,1,4)" fg:x="6387" fg:w="1"/><text x="77.0353%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="76.7252%" y="789" width="0.0842%" height="15" fill="rgb(224,151,29)" fg:x="6382" fg:w="7"/><text x="76.9752%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.08%)</title><rect x="76.7252%" y="773" width="0.0842%" height="15" fill="rgb(251,196,0)" fg:x="6382" fg:w="7"/><text x="76.9752%" y="783.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="76.7973%" y="757" width="0.0120%" height="15" fill="rgb(212,127,0)" fg:x="6388" fg:w="1"/><text x="77.0473%" y="767.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="76.7973%" y="741" width="0.0120%" height="15" fill="rgb(236,71,53)" fg:x="6388" fg:w="1"/><text x="77.0473%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="76.7973%" y="725" width="0.0120%" height="15" fill="rgb(227,99,0)" fg:x="6388" fg:w="1"/><text x="77.0473%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="76.7973%" y="709" width="0.0120%" height="15" fill="rgb(239,89,21)" fg:x="6388" fg:w="1"/><text x="77.0473%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="76.8093%" y="757" width="0.0240%" height="15" fill="rgb(243,122,19)" fg:x="6389" fg:w="2"/><text x="77.0593%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="76.8093%" y="741" width="0.0240%" height="15" fill="rgb(229,192,45)" fg:x="6389" fg:w="2"/><text x="77.0593%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="76.8093%" y="725" width="0.0240%" height="15" fill="rgb(235,165,35)" fg:x="6389" fg:w="2"/><text x="77.0593%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="76.8093%" y="709" width="0.0240%" height="15" fill="rgb(253,202,0)" fg:x="6389" fg:w="2"/><text x="77.0593%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="76.8093%" y="693" width="0.0240%" height="15" fill="rgb(235,51,20)" fg:x="6389" fg:w="2"/><text x="77.0593%" y="703.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="76.8093%" y="773" width="0.0481%" height="15" fill="rgb(218,95,46)" fg:x="6389" fg:w="4"/><text x="77.0593%" y="783.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (2 samples, 0.02%)</title><rect x="76.8334%" y="757" width="0.0240%" height="15" fill="rgb(212,81,10)" fg:x="6391" fg:w="2"/><text x="77.0834%" y="767.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (2 samples, 0.02%)</title><rect x="76.8334%" y="741" width="0.0240%" height="15" fill="rgb(240,59,0)" fg:x="6391" fg:w="2"/><text x="77.0834%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="76.8574%" y="693" width="0.0120%" height="15" fill="rgb(212,191,42)" fg:x="6393" fg:w="1"/><text x="77.1074%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="76.8093%" y="789" width="0.0721%" height="15" fill="rgb(233,140,3)" fg:x="6389" fg:w="6"/><text x="77.0593%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="76.8574%" y="773" width="0.0240%" height="15" fill="rgb(215,69,23)" fg:x="6393" fg:w="2"/><text x="77.1074%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="76.8574%" y="757" width="0.0240%" height="15" fill="rgb(240,202,20)" fg:x="6393" fg:w="2"/><text x="77.1074%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="76.8574%" y="741" width="0.0240%" height="15" fill="rgb(209,146,50)" fg:x="6393" fg:w="2"/><text x="77.1074%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="76.8574%" y="725" width="0.0240%" height="15" fill="rgb(253,102,54)" fg:x="6393" fg:w="2"/><text x="77.1074%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="76.8574%" y="709" width="0.0240%" height="15" fill="rgb(250,173,47)" fg:x="6393" fg:w="2"/><text x="77.1074%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="76.8694%" y="693" width="0.0120%" height="15" fill="rgb(232,142,7)" fg:x="6394" fg:w="1"/><text x="77.1194%" y="703.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (14 samples, 0.17%)</title><rect x="76.7252%" y="805" width="0.1683%" height="15" fill="rgb(230,157,47)" fg:x="6382" fg:w="14"/><text x="76.9752%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="76.8815%" y="789" width="0.0120%" height="15" fill="rgb(214,177,35)" fg:x="6395" fg:w="1"/><text x="77.1315%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="76.8815%" y="773" width="0.0120%" height="15" fill="rgb(234,119,46)" fg:x="6395" fg:w="1"/><text x="77.1315%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="76.8815%" y="757" width="0.0120%" height="15" fill="rgb(241,180,50)" fg:x="6395" fg:w="1"/><text x="77.1315%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="76.8815%" y="741" width="0.0120%" height="15" fill="rgb(221,54,25)" fg:x="6395" fg:w="1"/><text x="77.1315%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (3 samples, 0.04%)</title><rect x="76.8935%" y="805" width="0.0361%" height="15" fill="rgb(209,157,44)" fg:x="6396" fg:w="3"/><text x="77.1435%" y="815.50"></text></g><g><title>alloc::slice::stable_sort (3 samples, 0.04%)</title><rect x="76.8935%" y="789" width="0.0361%" height="15" fill="rgb(246,115,41)" fg:x="6396" fg:w="3"/><text x="77.1435%" y="799.50"></text></g><g><title>core::slice::sort::insert_tail (2 samples, 0.02%)</title><rect x="76.9055%" y="773" width="0.0240%" height="15" fill="rgb(229,86,1)" fg:x="6397" fg:w="2"/><text x="77.1555%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="76.9175%" y="757" width="0.0120%" height="15" fill="rgb(240,108,53)" fg:x="6398" fg:w="1"/><text x="77.1675%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="76.9296%" y="805" width="0.0240%" height="15" fill="rgb(227,134,2)" fg:x="6399" fg:w="2"/><text x="77.1796%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="76.9296%" y="789" width="0.0240%" height="15" fill="rgb(213,129,25)" fg:x="6399" fg:w="2"/><text x="77.1796%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="76.9296%" y="773" width="0.0240%" height="15" fill="rgb(226,35,21)" fg:x="6399" fg:w="2"/><text x="77.1796%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="76.9296%" y="757" width="0.0240%" height="15" fill="rgb(208,129,26)" fg:x="6399" fg:w="2"/><text x="77.1796%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="76.9416%" y="741" width="0.0120%" height="15" fill="rgb(224,83,6)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="76.9416%" y="725" width="0.0120%" height="15" fill="rgb(227,52,39)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="76.9416%" y="709" width="0.0120%" height="15" fill="rgb(241,30,17)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="76.9416%" y="693" width="0.0120%" height="15" fill="rgb(246,186,42)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="76.9416%" y="677" width="0.0120%" height="15" fill="rgb(221,169,15)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="76.9416%" y="661" width="0.0120%" height="15" fill="rgb(235,108,21)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="671.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="76.9416%" y="645" width="0.0120%" height="15" fill="rgb(219,148,30)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="76.9416%" y="629" width="0.0120%" height="15" fill="rgb(220,109,5)" fg:x="6400" fg:w="1"/><text x="77.1916%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.24%)</title><rect x="76.7252%" y="837" width="0.2404%" height="15" fill="rgb(213,203,48)" fg:x="6382" fg:w="20"/><text x="76.9752%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (20 samples, 0.24%)</title><rect x="76.7252%" y="821" width="0.2404%" height="15" fill="rgb(244,71,33)" fg:x="6382" fg:w="20"/><text x="76.9752%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="76.9536%" y="805" width="0.0120%" height="15" fill="rgb(209,23,2)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="76.9536%" y="789" width="0.0120%" height="15" fill="rgb(219,97,7)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="76.9536%" y="773" width="0.0120%" height="15" fill="rgb(216,161,23)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="76.9536%" y="757" width="0.0120%" height="15" fill="rgb(207,45,42)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="76.9536%" y="741" width="0.0120%" height="15" fill="rgb(241,61,4)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="76.9536%" y="725" width="0.0120%" height="15" fill="rgb(236,170,1)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="76.9536%" y="709" width="0.0120%" height="15" fill="rgb(239,72,5)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="76.9536%" y="693" width="0.0120%" height="15" fill="rgb(214,13,50)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="703.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="76.9536%" y="677" width="0.0120%" height="15" fill="rgb(224,88,9)" fg:x="6401" fg:w="1"/><text x="77.2036%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="76.9656%" y="725" width="0.0120%" height="15" fill="rgb(238,192,34)" fg:x="6402" fg:w="1"/><text x="77.2156%" y="735.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="76.9656%" y="709" width="0.0120%" height="15" fill="rgb(217,203,50)" fg:x="6402" fg:w="1"/><text x="77.2156%" y="719.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="76.9656%" y="693" width="0.0120%" height="15" fill="rgb(241,123,32)" fg:x="6402" fg:w="1"/><text x="77.2156%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="76.9656%" y="677" width="0.0120%" height="15" fill="rgb(248,151,39)" fg:x="6402" fg:w="1"/><text x="77.2156%" y="687.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="76.9776%" y="581" width="0.0120%" height="15" fill="rgb(208,89,6)" fg:x="6403" fg:w="1"/><text x="77.2276%" y="591.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="76.9776%" y="565" width="0.0120%" height="15" fill="rgb(254,43,26)" fg:x="6403" fg:w="1"/><text x="77.2276%" y="575.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.02%)</title><rect x="76.9776%" y="725" width="0.0240%" height="15" fill="rgb(216,158,13)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="76.9776%" y="709" width="0.0240%" height="15" fill="rgb(212,47,37)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="76.9776%" y="693" width="0.0240%" height="15" fill="rgb(254,16,10)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="76.9776%" y="677" width="0.0240%" height="15" fill="rgb(223,228,16)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="76.9776%" y="661" width="0.0240%" height="15" fill="rgb(249,108,50)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.02%)</title><rect x="76.9776%" y="645" width="0.0240%" height="15" fill="rgb(208,220,5)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.02%)</title><rect x="76.9776%" y="629" width="0.0240%" height="15" fill="rgb(217,89,48)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="76.9776%" y="613" width="0.0240%" height="15" fill="rgb(212,113,41)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="623.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="76.9776%" y="597" width="0.0240%" height="15" fill="rgb(231,127,5)" fg:x="6403" fg:w="2"/><text x="77.2276%" y="607.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="581" width="0.0120%" height="15" fill="rgb(217,141,17)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="565" width="0.0120%" height="15" fill="rgb(245,125,54)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="76.9897%" y="549" width="0.0120%" height="15" fill="rgb(248,125,3)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="76.9897%" y="533" width="0.0120%" height="15" fill="rgb(236,119,51)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="76.9897%" y="517" width="0.0120%" height="15" fill="rgb(239,99,8)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="76.9897%" y="501" width="0.0120%" height="15" fill="rgb(224,228,4)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="76.9897%" y="485" width="0.0120%" height="15" fill="rgb(220,131,45)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="469" width="0.0120%" height="15" fill="rgb(215,62,5)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="479.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="453" width="0.0120%" height="15" fill="rgb(253,12,24)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="463.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="437" width="0.0120%" height="15" fill="rgb(248,120,50)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="421" width="0.0120%" height="15" fill="rgb(245,194,10)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="405" width="0.0120%" height="15" fill="rgb(241,149,38)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="389" width="0.0120%" height="15" fill="rgb(219,215,7)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="76.9897%" y="373" width="0.0120%" height="15" fill="rgb(208,120,31)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="76.9897%" y="357" width="0.0120%" height="15" fill="rgb(244,30,8)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="76.9897%" y="341" width="0.0120%" height="15" fill="rgb(238,35,44)" fg:x="6404" fg:w="1"/><text x="77.2397%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="77.0137%" y="549" width="0.0120%" height="15" fill="rgb(243,218,37)" fg:x="6406" fg:w="1"/><text x="77.2637%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="77.0257%" y="501" width="0.0721%" height="15" fill="rgb(218,169,10)" fg:x="6407" fg:w="6"/><text x="77.2757%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="77.0257%" y="485" width="0.0721%" height="15" fill="rgb(221,144,10)" fg:x="6407" fg:w="6"/><text x="77.2757%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="77.0257%" y="469" width="0.0721%" height="15" fill="rgb(226,41,38)" fg:x="6407" fg:w="6"/><text x="77.2757%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="77.0377%" y="453" width="0.0601%" height="15" fill="rgb(228,3,1)" fg:x="6408" fg:w="5"/><text x="77.2877%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="77.0377%" y="437" width="0.0601%" height="15" fill="rgb(209,129,12)" fg:x="6408" fg:w="5"/><text x="77.2877%" y="447.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="77.0377%" y="421" width="0.0601%" height="15" fill="rgb(213,136,33)" fg:x="6408" fg:w="5"/><text x="77.2877%" y="431.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="77.0377%" y="405" width="0.0601%" height="15" fill="rgb(209,181,29)" fg:x="6408" fg:w="5"/><text x="77.2877%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.0858%" y="389" width="0.0120%" height="15" fill="rgb(234,173,18)" fg:x="6412" fg:w="1"/><text x="77.3358%" y="399.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (9 samples, 0.11%)</title><rect x="77.0137%" y="597" width="0.1082%" height="15" fill="rgb(227,73,47)" fg:x="6406" fg:w="9"/><text x="77.2637%" y="607.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="77.0137%" y="581" width="0.1082%" height="15" fill="rgb(234,9,34)" fg:x="6406" fg:w="9"/><text x="77.2637%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="77.0137%" y="565" width="0.1082%" height="15" fill="rgb(235,172,15)" fg:x="6406" fg:w="9"/><text x="77.2637%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.10%)</title><rect x="77.0257%" y="549" width="0.0962%" height="15" fill="rgb(245,61,2)" fg:x="6407" fg:w="8"/><text x="77.2757%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.10%)</title><rect x="77.0257%" y="533" width="0.0962%" height="15" fill="rgb(238,39,47)" fg:x="6407" fg:w="8"/><text x="77.2757%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.10%)</title><rect x="77.0257%" y="517" width="0.0962%" height="15" fill="rgb(234,37,24)" fg:x="6407" fg:w="8"/><text x="77.2757%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="77.0979%" y="501" width="0.0240%" height="15" fill="rgb(248,223,24)" fg:x="6413" fg:w="2"/><text x="77.3479%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10 samples, 0.12%)</title><rect x="77.0137%" y="613" width="0.1202%" height="15" fill="rgb(223,12,15)" fg:x="6406" fg:w="10"/><text x="77.2637%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="77.1219%" y="597" width="0.0120%" height="15" fill="rgb(249,6,3)" fg:x="6415" fg:w="1"/><text x="77.3719%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="77.1219%" y="581" width="0.0120%" height="15" fill="rgb(237,105,33)" fg:x="6415" fg:w="1"/><text x="77.3719%" y="591.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="77.1219%" y="565" width="0.0120%" height="15" fill="rgb(252,208,35)" fg:x="6415" fg:w="1"/><text x="77.3719%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.14%)</title><rect x="77.0017%" y="677" width="0.1443%" height="15" fill="rgb(215,181,35)" fg:x="6405" fg:w="12"/><text x="77.2517%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (12 samples, 0.14%)</title><rect x="77.0017%" y="661" width="0.1443%" height="15" fill="rgb(246,212,3)" fg:x="6405" fg:w="12"/><text x="77.2517%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.14%)</title><rect x="77.0017%" y="645" width="0.1443%" height="15" fill="rgb(247,156,24)" fg:x="6405" fg:w="12"/><text x="77.2517%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.13%)</title><rect x="77.0137%" y="629" width="0.1322%" height="15" fill="rgb(248,9,31)" fg:x="6406" fg:w="11"/><text x="77.2637%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="77.1339%" y="613" width="0.0120%" height="15" fill="rgb(234,26,45)" fg:x="6416" fg:w="1"/><text x="77.3839%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="77.1339%" y="597" width="0.0120%" height="15" fill="rgb(249,11,32)" fg:x="6416" fg:w="1"/><text x="77.3839%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.17%)</title><rect x="77.0017%" y="725" width="0.1683%" height="15" fill="rgb(249,162,33)" fg:x="6405" fg:w="14"/><text x="77.2517%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.17%)</title><rect x="77.0017%" y="709" width="0.1683%" height="15" fill="rgb(232,4,32)" fg:x="6405" fg:w="14"/><text x="77.2517%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.17%)</title><rect x="77.0017%" y="693" width="0.1683%" height="15" fill="rgb(212,5,45)" fg:x="6405" fg:w="14"/><text x="77.2517%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="77.1459%" y="677" width="0.0240%" height="15" fill="rgb(227,95,13)" fg:x="6417" fg:w="2"/><text x="77.3959%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="77.1459%" y="661" width="0.0240%" height="15" fill="rgb(223,205,10)" fg:x="6417" fg:w="2"/><text x="77.3959%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="77.1459%" y="645" width="0.0240%" height="15" fill="rgb(222,178,8)" fg:x="6417" fg:w="2"/><text x="77.3959%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="77.1459%" y="629" width="0.0240%" height="15" fill="rgb(216,13,22)" fg:x="6417" fg:w="2"/><text x="77.3959%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.1580%" y="613" width="0.0120%" height="15" fill="rgb(240,167,12)" fg:x="6418" fg:w="1"/><text x="77.4080%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.1580%" y="597" width="0.0120%" height="15" fill="rgb(235,68,35)" fg:x="6418" fg:w="1"/><text x="77.4080%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.1580%" y="581" width="0.0120%" height="15" fill="rgb(253,40,27)" fg:x="6418" fg:w="1"/><text x="77.4080%" y="591.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.1580%" y="565" width="0.0120%" height="15" fill="rgb(214,19,28)" fg:x="6418" fg:w="1"/><text x="77.4080%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (19 samples, 0.23%)</title><rect x="76.9656%" y="789" width="0.2284%" height="15" fill="rgb(210,167,45)" fg:x="6402" fg:w="19"/><text x="77.2156%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (19 samples, 0.23%)</title><rect x="76.9656%" y="773" width="0.2284%" height="15" fill="rgb(232,97,40)" fg:x="6402" fg:w="19"/><text x="77.2156%" y="783.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (19 samples, 0.23%)</title><rect x="76.9656%" y="757" width="0.2284%" height="15" fill="rgb(250,35,23)" fg:x="6402" fg:w="19"/><text x="77.2156%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.23%)</title><rect x="76.9656%" y="741" width="0.2284%" height="15" fill="rgb(248,47,53)" fg:x="6402" fg:w="19"/><text x="77.2156%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="77.1700%" y="725" width="0.0240%" height="15" fill="rgb(226,58,50)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="77.1700%" y="709" width="0.0240%" height="15" fill="rgb(217,105,26)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (2 samples, 0.02%)</title><rect x="77.1700%" y="693" width="0.0240%" height="15" fill="rgb(208,64,1)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="77.1700%" y="677" width="0.0240%" height="15" fill="rgb(214,80,1)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="77.1700%" y="661" width="0.0240%" height="15" fill="rgb(206,175,26)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="77.1700%" y="645" width="0.0240%" height="15" fill="rgb(235,156,37)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="77.1700%" y="629" width="0.0240%" height="15" fill="rgb(213,100,9)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="77.1700%" y="613" width="0.0240%" height="15" fill="rgb(241,15,13)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="77.1700%" y="597" width="0.0240%" height="15" fill="rgb(205,97,43)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="607.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="77.1700%" y="581" width="0.0240%" height="15" fill="rgb(216,106,32)" fg:x="6419" fg:w="2"/><text x="77.4200%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.1820%" y="565" width="0.0120%" height="15" fill="rgb(226,200,8)" fg:x="6420" fg:w="1"/><text x="77.4320%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (40 samples, 0.48%)</title><rect x="76.7252%" y="885" width="0.4809%" height="15" fill="rgb(244,54,29)" fg:x="6382" fg:w="40"/><text x="76.9752%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (40 samples, 0.48%)</title><rect x="76.7252%" y="869" width="0.4809%" height="15" fill="rgb(252,169,12)" fg:x="6382" fg:w="40"/><text x="76.9752%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (40 samples, 0.48%)</title><rect x="76.7252%" y="853" width="0.4809%" height="15" fill="rgb(231,199,11)" fg:x="6382" fg:w="40"/><text x="76.9752%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.24%)</title><rect x="76.9656%" y="837" width="0.2404%" height="15" fill="rgb(233,191,18)" fg:x="6402" fg:w="20"/><text x="77.2156%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.24%)</title><rect x="76.9656%" y="821" width="0.2404%" height="15" fill="rgb(215,83,47)" fg:x="6402" fg:w="20"/><text x="77.2156%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (20 samples, 0.24%)</title><rect x="76.9656%" y="805" width="0.2404%" height="15" fill="rgb(251,67,19)" fg:x="6402" fg:w="20"/><text x="77.2156%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="77.1940%" y="789" width="0.0120%" height="15" fill="rgb(240,7,20)" fg:x="6421" fg:w="1"/><text x="77.4440%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="77.1940%" y="773" width="0.0120%" height="15" fill="rgb(210,150,26)" fg:x="6421" fg:w="1"/><text x="77.4440%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="77.1940%" y="757" width="0.0120%" height="15" fill="rgb(228,75,42)" fg:x="6421" fg:w="1"/><text x="77.4440%" y="767.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="77.2061%" y="805" width="0.0240%" height="15" fill="rgb(237,134,48)" fg:x="6422" fg:w="2"/><text x="77.4561%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="77.2061%" y="789" width="0.0240%" height="15" fill="rgb(205,80,50)" fg:x="6422" fg:w="2"/><text x="77.4561%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="77.2061%" y="773" width="0.0240%" height="15" fill="rgb(217,74,48)" fg:x="6422" fg:w="2"/><text x="77.4561%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="77.2061%" y="757" width="0.0240%" height="15" fill="rgb(205,82,50)" fg:x="6422" fg:w="2"/><text x="77.4561%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="77.2061%" y="741" width="0.0240%" height="15" fill="rgb(228,1,33)" fg:x="6422" fg:w="2"/><text x="77.4561%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="77.2061%" y="725" width="0.0240%" height="15" fill="rgb(214,50,23)" fg:x="6422" fg:w="2"/><text x="77.4561%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (397 samples, 4.77%)</title><rect x="72.4693%" y="1029" width="4.7728%" height="15" fill="rgb(210,62,9)" fg:x="6028" fg:w="397"/><text x="72.7193%" y="1039.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (397 samples, 4.77%)</title><rect x="72.4693%" y="1013" width="4.7728%" height="15" fill="rgb(210,104,37)" fg:x="6028" fg:w="397"/><text x="72.7193%" y="1023.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (397 samples, 4.77%)</title><rect x="72.4693%" y="997" width="4.7728%" height="15" fill="rgb(232,104,43)" fg:x="6028" fg:w="397"/><text x="72.7193%" y="1007.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (397 samples, 4.77%)</title><rect x="72.4693%" y="981" width="4.7728%" height="15" fill="rgb(244,52,6)" fg:x="6028" fg:w="397"/><text x="72.7193%" y="991.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (397 samples, 4.77%)</title><rect x="72.4693%" y="965" width="4.7728%" height="15" fill="rgb(211,174,52)" fg:x="6028" fg:w="397"/><text x="72.7193%" y="975.50">core::..</text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (397 samples, 4.77%)</title><rect x="72.4693%" y="949" width="4.7728%" height="15" fill="rgb(229,48,4)" fg:x="6028" fg:w="397"/><text x="72.7193%" y="959.50">smithe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (182 samples, 2.19%)</title><rect x="75.0541%" y="933" width="2.1880%" height="15" fill="rgb(205,155,16)" fg:x="6243" fg:w="182"/><text x="75.3041%" y="943.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (182 samples, 2.19%)</title><rect x="75.0541%" y="917" width="2.1880%" height="15" fill="rgb(211,141,53)" fg:x="6243" fg:w="182"/><text x="75.3041%" y="927.50">s..</text></g><g><title>smithereens::fragment::_{{closure}} (182 samples, 2.19%)</title><rect x="75.0541%" y="901" width="2.1880%" height="15" fill="rgb(240,148,11)" fg:x="6243" fg:w="182"/><text x="75.3041%" y="911.50">s..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.04%)</title><rect x="77.2061%" y="885" width="0.0361%" height="15" fill="rgb(214,45,23)" fg:x="6422" fg:w="3"/><text x="77.4561%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="77.2061%" y="869" width="0.0361%" height="15" fill="rgb(248,74,26)" fg:x="6422" fg:w="3"/><text x="77.4561%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="77.2061%" y="853" width="0.0361%" height="15" fill="rgb(218,121,16)" fg:x="6422" fg:w="3"/><text x="77.4561%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="77.2061%" y="837" width="0.0361%" height="15" fill="rgb(218,10,47)" fg:x="6422" fg:w="3"/><text x="77.4561%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="77.2061%" y="821" width="0.0361%" height="15" fill="rgb(227,99,14)" fg:x="6422" fg:w="3"/><text x="77.4561%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.2301%" y="805" width="0.0120%" height="15" fill="rgb(229,83,46)" fg:x="6424" fg:w="1"/><text x="77.4801%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="77.2301%" y="789" width="0.0120%" height="15" fill="rgb(228,25,1)" fg:x="6424" fg:w="1"/><text x="77.4801%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.2301%" y="773" width="0.0120%" height="15" fill="rgb(252,190,15)" fg:x="6424" fg:w="1"/><text x="77.4801%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.2301%" y="757" width="0.0120%" height="15" fill="rgb(213,103,51)" fg:x="6424" fg:w="1"/><text x="77.4801%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.2301%" y="741" width="0.0120%" height="15" fill="rgb(220,38,44)" fg:x="6424" fg:w="1"/><text x="77.4801%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="77.2301%" y="725" width="0.0120%" height="15" fill="rgb(210,45,26)" fg:x="6424" fg:w="1"/><text x="77.4801%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="77.2301%" y="709" width="0.0120%" height="15" fill="rgb(205,95,48)" fg:x="6424" fg:w="1"/><text x="77.4801%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="77.2421%" y="1029" width="0.0120%" height="15" fill="rgb(225,179,37)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="1039.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="77.2421%" y="1013" width="0.0120%" height="15" fill="rgb(230,209,3)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="77.2421%" y="997" width="0.0120%" height="15" fill="rgb(248,12,46)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="77.2421%" y="981" width="0.0120%" height="15" fill="rgb(234,18,0)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (1 samples, 0.01%)</title><rect x="77.2421%" y="965" width="0.0120%" height="15" fill="rgb(238,197,14)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (1 samples, 0.01%)</title><rect x="77.2421%" y="949" width="0.0120%" height="15" fill="rgb(251,162,48)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="959.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="77.2421%" y="933" width="0.0120%" height="15" fill="rgb(237,73,42)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="77.2421%" y="917" width="0.0120%" height="15" fill="rgb(211,108,8)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="77.2421%" y="901" width="0.0120%" height="15" fill="rgb(213,45,22)" fg:x="6425" fg:w="1"/><text x="77.4921%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (399 samples, 4.80%)</title><rect x="72.4693%" y="1045" width="4.7968%" height="15" fill="rgb(252,154,5)" fg:x="6028" fg:w="399"/><text x="72.7193%" y="1055.50">&lt;core:..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.01%)</title><rect x="77.2541%" y="1029" width="0.0120%" height="15" fill="rgb(221,79,52)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="1039.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="77.2541%" y="1013" width="0.0120%" height="15" fill="rgb(229,220,36)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.2541%" y="997" width="0.0120%" height="15" fill="rgb(211,17,16)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.2541%" y="981" width="0.0120%" height="15" fill="rgb(222,55,31)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="991.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.2541%" y="965" width="0.0120%" height="15" fill="rgb(221,221,31)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.2541%" y="949" width="0.0120%" height="15" fill="rgb(227,168,26)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.2541%" y="933" width="0.0120%" height="15" fill="rgb(224,139,9)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="77.2541%" y="917" width="0.0120%" height="15" fill="rgb(254,172,0)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="77.2541%" y="901" width="0.0120%" height="15" fill="rgb(235,203,1)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="77.2541%" y="885" width="0.0120%" height="15" fill="rgb(216,205,24)" fg:x="6426" fg:w="1"/><text x="77.5041%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (414 samples, 4.98%)</title><rect x="72.3611%" y="1077" width="4.9772%" height="15" fill="rgb(233,24,6)" fg:x="6019" fg:w="414"/><text x="72.6111%" y="1087.50">&lt;alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (414 samples, 4.98%)</title><rect x="72.3611%" y="1061" width="4.9772%" height="15" fill="rgb(244,110,9)" fg:x="6019" fg:w="414"/><text x="72.6111%" y="1071.50">alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.07%)</title><rect x="77.2662%" y="1045" width="0.0721%" height="15" fill="rgb(239,222,42)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.07%)</title><rect x="77.2662%" y="1029" width="0.0721%" height="15" fill="rgb(218,145,13)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.07%)</title><rect x="77.2662%" y="1013" width="0.0721%" height="15" fill="rgb(207,69,11)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="77.2662%" y="997" width="0.0721%" height="15" fill="rgb(220,223,22)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.07%)</title><rect x="77.2662%" y="981" width="0.0721%" height="15" fill="rgb(245,102,5)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.07%)</title><rect x="77.2662%" y="965" width="0.0721%" height="15" fill="rgb(211,148,2)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="975.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.07%)</title><rect x="77.2662%" y="949" width="0.0721%" height="15" fill="rgb(241,13,44)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="959.50"></text></g><g><title>realloc (6 samples, 0.07%)</title><rect x="77.2662%" y="933" width="0.0721%" height="15" fill="rgb(219,137,21)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="943.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="77.2662%" y="917" width="0.0721%" height="15" fill="rgb(242,206,5)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="927.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="77.2662%" y="901" width="0.0721%" height="15" fill="rgb(217,114,22)" fg:x="6427" fg:w="6"/><text x="77.5162%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="77.3143%" y="885" width="0.0240%" height="15" fill="rgb(253,206,42)" fg:x="6431" fg:w="2"/><text x="77.5643%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.3503%" y="821" width="0.0120%" height="15" fill="rgb(236,102,18)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="77.3503%" y="805" width="0.0120%" height="15" fill="rgb(208,59,49)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="815.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="77.3503%" y="789" width="0.0120%" height="15" fill="rgb(215,194,28)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="799.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.3503%" y="773" width="0.0120%" height="15" fill="rgb(243,207,11)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="783.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.3503%" y="757" width="0.0120%" height="15" fill="rgb(254,179,35)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="767.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.3503%" y="741" width="0.0120%" height="15" fill="rgb(235,97,3)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="77.3503%" y="725" width="0.0120%" height="15" fill="rgb(215,155,33)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="77.3503%" y="709" width="0.0120%" height="15" fill="rgb(223,128,12)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.3503%" y="693" width="0.0120%" height="15" fill="rgb(208,157,18)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.3503%" y="677" width="0.0120%" height="15" fill="rgb(249,70,54)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.3503%" y="661" width="0.0120%" height="15" fill="rgb(244,118,24)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="77.3503%" y="645" width="0.0120%" height="15" fill="rgb(211,54,0)" fg:x="6434" fg:w="1"/><text x="77.6003%" y="655.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="77.3503%" y="837" width="0.0240%" height="15" fill="rgb(245,137,45)" fg:x="6434" fg:w="2"/><text x="77.6003%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.3623%" y="821" width="0.0120%" height="15" fill="rgb(232,154,31)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="831.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.3623%" y="805" width="0.0120%" height="15" fill="rgb(253,6,39)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="77.3623%" y="789" width="0.0120%" height="15" fill="rgb(234,183,24)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="77.3623%" y="773" width="0.0120%" height="15" fill="rgb(252,84,40)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.3623%" y="757" width="0.0120%" height="15" fill="rgb(224,65,2)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.3623%" y="741" width="0.0120%" height="15" fill="rgb(229,38,24)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.3623%" y="725" width="0.0120%" height="15" fill="rgb(218,131,50)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="77.3623%" y="709" width="0.0120%" height="15" fill="rgb(233,106,18)" fg:x="6435" fg:w="1"/><text x="77.6123%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="77.3744%" y="837" width="0.0120%" height="15" fill="rgb(220,216,11)" fg:x="6436" fg:w="1"/><text x="77.6244%" y="847.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="77.3744%" y="821" width="0.0120%" height="15" fill="rgb(251,100,45)" fg:x="6436" fg:w="1"/><text x="77.6244%" y="831.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="77.3744%" y="805" width="0.0120%" height="15" fill="rgb(235,143,32)" fg:x="6436" fg:w="1"/><text x="77.6244%" y="815.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="77.3744%" y="789" width="0.0120%" height="15" fill="rgb(248,124,34)" fg:x="6436" fg:w="1"/><text x="77.6244%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.3864%" y="837" width="0.0120%" height="15" fill="rgb(225,221,4)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.3864%" y="821" width="0.0120%" height="15" fill="rgb(242,27,43)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.3864%" y="805" width="0.0120%" height="15" fill="rgb(227,54,8)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.3864%" y="789" width="0.0120%" height="15" fill="rgb(253,139,49)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.3864%" y="773" width="0.0120%" height="15" fill="rgb(231,26,43)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.3864%" y="757" width="0.0120%" height="15" fill="rgb(207,121,39)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="77.3864%" y="741" width="0.0120%" height="15" fill="rgb(223,101,35)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.3864%" y="725" width="0.0120%" height="15" fill="rgb(232,87,23)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.3864%" y="709" width="0.0120%" height="15" fill="rgb(225,180,29)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.3864%" y="693" width="0.0120%" height="15" fill="rgb(225,25,17)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="703.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="77.3864%" y="677" width="0.0120%" height="15" fill="rgb(223,8,52)" fg:x="6437" fg:w="1"/><text x="77.6364%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.06%)</title><rect x="77.3503%" y="869" width="0.0601%" height="15" fill="rgb(246,42,21)" fg:x="6434" fg:w="5"/><text x="77.6003%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.06%)</title><rect x="77.3503%" y="853" width="0.0601%" height="15" fill="rgb(205,64,43)" fg:x="6434" fg:w="5"/><text x="77.6003%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="77.3984%" y="837" width="0.0120%" height="15" fill="rgb(221,160,13)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="77.3984%" y="821" width="0.0120%" height="15" fill="rgb(239,58,35)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="77.3984%" y="805" width="0.0120%" height="15" fill="rgb(251,26,40)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="77.3984%" y="789" width="0.0120%" height="15" fill="rgb(247,0,4)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="77.3984%" y="773" width="0.0120%" height="15" fill="rgb(218,130,10)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="77.3984%" y="757" width="0.0120%" height="15" fill="rgb(239,32,7)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="77.3984%" y="741" width="0.0120%" height="15" fill="rgb(210,192,24)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="751.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="77.3984%" y="725" width="0.0120%" height="15" fill="rgb(226,212,17)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.3984%" y="709" width="0.0120%" height="15" fill="rgb(219,201,28)" fg:x="6438" fg:w="1"/><text x="77.6484%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.07%)</title><rect x="77.3503%" y="965" width="0.0721%" height="15" fill="rgb(235,207,41)" fg:x="6434" fg:w="6"/><text x="77.6003%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.07%)</title><rect x="77.3503%" y="949" width="0.0721%" height="15" fill="rgb(241,95,54)" fg:x="6434" fg:w="6"/><text x="77.6003%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.07%)</title><rect x="77.3503%" y="933" width="0.0721%" height="15" fill="rgb(248,12,23)" fg:x="6434" fg:w="6"/><text x="77.6003%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6 samples, 0.07%)</title><rect x="77.3503%" y="917" width="0.0721%" height="15" fill="rgb(228,173,4)" fg:x="6434" fg:w="6"/><text x="77.6003%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (6 samples, 0.07%)</title><rect x="77.3503%" y="901" width="0.0721%" height="15" fill="rgb(254,99,5)" fg:x="6434" fg:w="6"/><text x="77.6003%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (6 samples, 0.07%)</title><rect x="77.3503%" y="885" width="0.0721%" height="15" fill="rgb(212,184,17)" fg:x="6434" fg:w="6"/><text x="77.6003%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="77.4104%" y="869" width="0.0120%" height="15" fill="rgb(252,174,1)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="77.4104%" y="853" width="0.0120%" height="15" fill="rgb(241,118,51)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4104%" y="837" width="0.0120%" height="15" fill="rgb(227,94,47)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4104%" y="821" width="0.0120%" height="15" fill="rgb(229,104,2)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="831.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="77.4104%" y="805" width="0.0120%" height="15" fill="rgb(219,28,31)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="77.4104%" y="789" width="0.0120%" height="15" fill="rgb(233,109,36)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="77.4104%" y="773" width="0.0120%" height="15" fill="rgb(246,88,11)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="77.4104%" y="757" width="0.0120%" height="15" fill="rgb(209,212,17)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="77.4104%" y="741" width="0.0120%" height="15" fill="rgb(243,59,29)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="77.4104%" y="725" width="0.0120%" height="15" fill="rgb(244,205,48)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="77.4104%" y="709" width="0.0120%" height="15" fill="rgb(227,30,6)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="77.4104%" y="693" width="0.0120%" height="15" fill="rgb(220,205,48)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="77.4104%" y="677" width="0.0120%" height="15" fill="rgb(250,94,14)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4104%" y="661" width="0.0120%" height="15" fill="rgb(216,119,42)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4104%" y="645" width="0.0120%" height="15" fill="rgb(232,155,0)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4104%" y="629" width="0.0120%" height="15" fill="rgb(212,24,32)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="77.4104%" y="613" width="0.0120%" height="15" fill="rgb(216,69,20)" fg:x="6439" fg:w="1"/><text x="77.6604%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="77.4225%" y="773" width="0.0240%" height="15" fill="rgb(229,73,31)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="77.4225%" y="757" width="0.0240%" height="15" fill="rgb(224,219,20)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="77.4225%" y="741" width="0.0240%" height="15" fill="rgb(215,146,41)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.02%)</title><rect x="77.4225%" y="725" width="0.0240%" height="15" fill="rgb(244,71,31)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.02%)</title><rect x="77.4225%" y="709" width="0.0240%" height="15" fill="rgb(224,24,11)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2 samples, 0.02%)</title><rect x="77.4225%" y="693" width="0.0240%" height="15" fill="rgb(229,76,15)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="77.4225%" y="677" width="0.0240%" height="15" fill="rgb(209,93,2)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="77.4225%" y="661" width="0.0240%" height="15" fill="rgb(216,200,50)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="671.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="77.4225%" y="645" width="0.0240%" height="15" fill="rgb(211,67,34)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="77.4225%" y="629" width="0.0240%" height="15" fill="rgb(225,87,47)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="639.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="77.4225%" y="613" width="0.0240%" height="15" fill="rgb(217,185,16)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="77.4225%" y="597" width="0.0240%" height="15" fill="rgb(205,0,0)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="77.4225%" y="581" width="0.0240%" height="15" fill="rgb(207,116,45)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="77.4225%" y="565" width="0.0240%" height="15" fill="rgb(221,156,26)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="77.4225%" y="549" width="0.0240%" height="15" fill="rgb(213,140,4)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="77.4225%" y="533" width="0.0240%" height="15" fill="rgb(231,224,15)" fg:x="6440" fg:w="2"/><text x="77.6725%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="77.4465%" y="725" width="0.0120%" height="15" fill="rgb(244,76,20)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="77.4465%" y="709" width="0.0120%" height="15" fill="rgb(238,117,7)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.4465%" y="693" width="0.0120%" height="15" fill="rgb(235,1,10)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.4465%" y="677" width="0.0120%" height="15" fill="rgb(216,165,6)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="77.4465%" y="661" width="0.0120%" height="15" fill="rgb(246,91,35)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.4465%" y="645" width="0.0120%" height="15" fill="rgb(228,96,24)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="77.4465%" y="629" width="0.0120%" height="15" fill="rgb(254,217,53)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="77.4465%" y="613" width="0.0120%" height="15" fill="rgb(209,60,0)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="623.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4465%" y="597" width="0.0120%" height="15" fill="rgb(250,93,26)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="77.4465%" y="581" width="0.0120%" height="15" fill="rgb(211,9,40)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="77.4465%" y="565" width="0.0120%" height="15" fill="rgb(242,57,20)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="575.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4465%" y="549" width="0.0120%" height="15" fill="rgb(248,85,48)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="77.4465%" y="533" width="0.0120%" height="15" fill="rgb(212,117,2)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="77.4465%" y="517" width="0.0120%" height="15" fill="rgb(243,19,3)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="77.4465%" y="501" width="0.0120%" height="15" fill="rgb(232,217,24)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="77.4465%" y="485" width="0.0120%" height="15" fill="rgb(224,175,40)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="77.4465%" y="469" width="0.0120%" height="15" fill="rgb(212,162,32)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="77.4465%" y="453" width="0.0120%" height="15" fill="rgb(215,9,4)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="77.4465%" y="437" width="0.0120%" height="15" fill="rgb(242,42,7)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="447.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="77.4465%" y="421" width="0.0120%" height="15" fill="rgb(242,184,45)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.4465%" y="405" width="0.0120%" height="15" fill="rgb(228,111,51)" fg:x="6442" fg:w="1"/><text x="77.6965%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="77.4465%" y="773" width="0.0240%" height="15" fill="rgb(236,147,17)" fg:x="6442" fg:w="2"/><text x="77.6965%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="77.4465%" y="757" width="0.0240%" height="15" fill="rgb(210,75,22)" fg:x="6442" fg:w="2"/><text x="77.6965%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="77.4465%" y="741" width="0.0240%" height="15" fill="rgb(217,159,45)" fg:x="6442" fg:w="2"/><text x="77.6965%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.4585%" y="725" width="0.0120%" height="15" fill="rgb(245,165,53)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.4585%" y="709" width="0.0120%" height="15" fill="rgb(251,190,50)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="77.4585%" y="693" width="0.0120%" height="15" fill="rgb(208,203,29)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.4585%" y="677" width="0.0120%" height="15" fill="rgb(207,209,35)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="77.4585%" y="661" width="0.0120%" height="15" fill="rgb(230,144,49)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="77.4585%" y="645" width="0.0120%" height="15" fill="rgb(229,31,6)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="655.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4585%" y="629" width="0.0120%" height="15" fill="rgb(251,129,24)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="77.4585%" y="613" width="0.0120%" height="15" fill="rgb(235,105,15)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="77.4585%" y="597" width="0.0120%" height="15" fill="rgb(216,52,43)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="607.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4585%" y="581" width="0.0120%" height="15" fill="rgb(238,144,41)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="591.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="77.4585%" y="565" width="0.0120%" height="15" fill="rgb(243,63,9)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.4585%" y="549" width="0.0120%" height="15" fill="rgb(246,208,1)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="559.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.4585%" y="533" width="0.0120%" height="15" fill="rgb(233,182,18)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.4585%" y="517" width="0.0120%" height="15" fill="rgb(242,224,8)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="77.4585%" y="501" width="0.0120%" height="15" fill="rgb(243,54,37)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="77.4585%" y="485" width="0.0120%" height="15" fill="rgb(233,192,12)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="495.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="77.4585%" y="469" width="0.0120%" height="15" fill="rgb(251,192,53)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="479.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.4585%" y="453" width="0.0120%" height="15" fill="rgb(246,141,26)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.4585%" y="437" width="0.0120%" height="15" fill="rgb(239,195,19)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.4585%" y="421" width="0.0120%" height="15" fill="rgb(241,16,39)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.4585%" y="405" width="0.0120%" height="15" fill="rgb(223,13,53)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.4585%" y="389" width="0.0120%" height="15" fill="rgb(214,227,0)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.4585%" y="373" width="0.0120%" height="15" fill="rgb(228,103,26)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="77.4585%" y="357" width="0.0120%" height="15" fill="rgb(254,177,53)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.4585%" y="341" width="0.0120%" height="15" fill="rgb(208,201,34)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.4585%" y="325" width="0.0120%" height="15" fill="rgb(212,39,5)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.4585%" y="309" width="0.0120%" height="15" fill="rgb(246,117,3)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="319.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.4585%" y="293" width="0.0120%" height="15" fill="rgb(244,118,39)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.4585%" y="277" width="0.0120%" height="15" fill="rgb(241,64,10)" fg:x="6443" fg:w="1"/><text x="77.7085%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="77.4705%" y="741" width="0.0120%" height="15" fill="rgb(229,39,44)" fg:x="6444" fg:w="1"/><text x="77.7205%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.4705%" y="725" width="0.0120%" height="15" fill="rgb(230,226,3)" fg:x="6444" fg:w="1"/><text x="77.7205%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1 samples, 0.01%)</title><rect x="77.4705%" y="709" width="0.0120%" height="15" fill="rgb(222,13,42)" fg:x="6444" fg:w="1"/><text x="77.7205%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="77.4705%" y="693" width="0.0120%" height="15" fill="rgb(247,180,54)" fg:x="6444" fg:w="1"/><text x="77.7205%" y="703.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="77.4705%" y="677" width="0.0120%" height="15" fill="rgb(205,96,16)" fg:x="6444" fg:w="1"/><text x="77.7205%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.4705%" y="661" width="0.0120%" height="15" fill="rgb(205,100,21)" fg:x="6444" fg:w="1"/><text x="77.7205%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="77.4705%" y="773" width="0.0240%" height="15" fill="rgb(248,51,4)" fg:x="6444" fg:w="2"/><text x="77.7205%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="77.4705%" y="757" width="0.0240%" height="15" fill="rgb(217,197,30)" fg:x="6444" fg:w="2"/><text x="77.7205%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="77.4826%" y="741" width="0.0120%" height="15" fill="rgb(240,179,40)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="77.4826%" y="725" width="0.0120%" height="15" fill="rgb(212,185,35)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="77.4826%" y="709" width="0.0120%" height="15" fill="rgb(251,222,31)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="77.4826%" y="693" width="0.0120%" height="15" fill="rgb(208,140,36)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="77.4826%" y="677" width="0.0120%" height="15" fill="rgb(220,148,1)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4826%" y="661" width="0.0120%" height="15" fill="rgb(254,4,28)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="77.4826%" y="645" width="0.0120%" height="15" fill="rgb(222,185,44)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="77.4826%" y="629" width="0.0120%" height="15" fill="rgb(215,74,39)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="613" width="0.0120%" height="15" fill="rgb(247,86,4)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="623.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="597" width="0.0120%" height="15" fill="rgb(231,105,32)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="581" width="0.0120%" height="15" fill="rgb(222,65,35)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="565" width="0.0120%" height="15" fill="rgb(218,145,35)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="575.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="77.4826%" y="549" width="0.0120%" height="15" fill="rgb(208,7,15)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="559.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="533" width="0.0120%" height="15" fill="rgb(209,83,13)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="543.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="517" width="0.0120%" height="15" fill="rgb(218,3,10)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="527.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="501" width="0.0120%" height="15" fill="rgb(211,219,4)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="77.4826%" y="485" width="0.0120%" height="15" fill="rgb(228,194,12)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="77.4826%" y="469" width="0.0120%" height="15" fill="rgb(210,175,7)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.4826%" y="453" width="0.0120%" height="15" fill="rgb(243,132,6)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.4826%" y="437" width="0.0120%" height="15" fill="rgb(207,72,18)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.4826%" y="421" width="0.0120%" height="15" fill="rgb(236,1,18)" fg:x="6445" fg:w="1"/><text x="77.7326%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.4946%" y="725" width="0.0120%" height="15" fill="rgb(227,0,18)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.4946%" y="709" width="0.0120%" height="15" fill="rgb(247,37,5)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.4946%" y="693" width="0.0120%" height="15" fill="rgb(237,179,24)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="77.4946%" y="677" width="0.0120%" height="15" fill="rgb(226,53,20)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="77.4946%" y="661" width="0.0120%" height="15" fill="rgb(247,75,7)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="77.4946%" y="645" width="0.0120%" height="15" fill="rgb(233,96,12)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="77.4946%" y="629" width="0.0120%" height="15" fill="rgb(224,125,0)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="77.4946%" y="613" width="0.0120%" height="15" fill="rgb(224,92,25)" fg:x="6446" fg:w="1"/><text x="77.7446%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.04%)</title><rect x="77.5066%" y="661" width="0.0361%" height="15" fill="rgb(224,42,24)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.04%)</title><rect x="77.5066%" y="645" width="0.0361%" height="15" fill="rgb(234,132,49)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="655.50"></text></g><g><title>core::clone::Clone::clone (3 samples, 0.04%)</title><rect x="77.5066%" y="629" width="0.0361%" height="15" fill="rgb(248,100,35)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="639.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="77.5066%" y="613" width="0.0361%" height="15" fill="rgb(239,94,40)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="77.5066%" y="597" width="0.0361%" height="15" fill="rgb(235,139,28)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="77.5066%" y="581" width="0.0361%" height="15" fill="rgb(217,144,7)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="77.5066%" y="565" width="0.0361%" height="15" fill="rgb(227,55,4)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="77.5066%" y="549" width="0.0361%" height="15" fill="rgb(252,82,54)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="77.5066%" y="533" width="0.0361%" height="15" fill="rgb(245,172,4)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="77.5066%" y="517" width="0.0361%" height="15" fill="rgb(207,26,27)" fg:x="6447" fg:w="3"/><text x="77.7566%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="77.5186%" y="501" width="0.0240%" height="15" fill="rgb(252,98,18)" fg:x="6448" fg:w="2"/><text x="77.7686%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="77.5186%" y="485" width="0.0240%" height="15" fill="rgb(244,8,26)" fg:x="6448" fg:w="2"/><text x="77.7686%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="77.5186%" y="469" width="0.0240%" height="15" fill="rgb(237,173,45)" fg:x="6448" fg:w="2"/><text x="77.7686%" y="479.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="77.5186%" y="453" width="0.0240%" height="15" fill="rgb(208,213,49)" fg:x="6448" fg:w="2"/><text x="77.7686%" y="463.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.05%)</title><rect x="77.5066%" y="725" width="0.0481%" height="15" fill="rgb(212,122,37)" fg:x="6447" fg:w="4"/><text x="77.7566%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="77.5066%" y="709" width="0.0481%" height="15" fill="rgb(213,80,17)" fg:x="6447" fg:w="4"/><text x="77.7566%" y="719.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="77.5066%" y="693" width="0.0481%" height="15" fill="rgb(206,210,43)" fg:x="6447" fg:w="4"/><text x="77.7566%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="77.5066%" y="677" width="0.0481%" height="15" fill="rgb(229,214,3)" fg:x="6447" fg:w="4"/><text x="77.7566%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="77.5427%" y="661" width="0.0120%" height="15" fill="rgb(235,213,29)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="77.5427%" y="645" width="0.0120%" height="15" fill="rgb(248,135,26)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="655.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="77.5427%" y="629" width="0.0120%" height="15" fill="rgb(242,188,12)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.5427%" y="613" width="0.0120%" height="15" fill="rgb(245,38,12)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.5427%" y="597" width="0.0120%" height="15" fill="rgb(218,42,13)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.5427%" y="581" width="0.0120%" height="15" fill="rgb(238,132,49)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="591.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.5427%" y="565" width="0.0120%" height="15" fill="rgb(209,196,19)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.5427%" y="549" width="0.0120%" height="15" fill="rgb(244,131,22)" fg:x="6450" fg:w="1"/><text x="77.7927%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.5547%" y="629" width="0.0120%" height="15" fill="rgb(223,18,34)" fg:x="6451" fg:w="1"/><text x="77.8047%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="77.5547%" y="613" width="0.0120%" height="15" fill="rgb(252,124,54)" fg:x="6451" fg:w="1"/><text x="77.8047%" y="623.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="77.5547%" y="597" width="0.0120%" height="15" fill="rgb(229,106,42)" fg:x="6451" fg:w="1"/><text x="77.8047%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="77.5547%" y="581" width="0.0120%" height="15" fill="rgb(221,129,1)" fg:x="6451" fg:w="1"/><text x="77.8047%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.5547%" y="565" width="0.0120%" height="15" fill="rgb(229,74,15)" fg:x="6451" fg:w="1"/><text x="77.8047%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.5547%" y="549" width="0.0120%" height="15" fill="rgb(210,206,50)" fg:x="6451" fg:w="1"/><text x="77.8047%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="77.5547%" y="533" width="0.0120%" height="15" fill="rgb(251,114,31)" fg:x="6451" fg:w="1"/><text x="77.8047%" y="543.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="77.5547%" y="645" width="0.0240%" height="15" fill="rgb(215,225,28)" fg:x="6451" fg:w="2"/><text x="77.8047%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.5667%" y="629" width="0.0120%" height="15" fill="rgb(237,109,14)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.5667%" y="613" width="0.0120%" height="15" fill="rgb(230,13,37)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="77.5667%" y="597" width="0.0120%" height="15" fill="rgb(231,40,28)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.5667%" y="581" width="0.0120%" height="15" fill="rgb(231,202,18)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.5667%" y="565" width="0.0120%" height="15" fill="rgb(225,33,18)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.5667%" y="549" width="0.0120%" height="15" fill="rgb(223,64,47)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="77.5667%" y="533" width="0.0120%" height="15" fill="rgb(234,114,13)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="77.5667%" y="517" width="0.0120%" height="15" fill="rgb(248,56,40)" fg:x="6452" fg:w="1"/><text x="77.8167%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="77.5547%" y="677" width="0.0361%" height="15" fill="rgb(221,194,21)" fg:x="6451" fg:w="3"/><text x="77.8047%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="77.5547%" y="661" width="0.0361%" height="15" fill="rgb(242,108,46)" fg:x="6451" fg:w="3"/><text x="77.8047%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.5787%" y="645" width="0.0120%" height="15" fill="rgb(220,106,10)" fg:x="6453" fg:w="1"/><text x="77.8287%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.5787%" y="629" width="0.0120%" height="15" fill="rgb(211,88,4)" fg:x="6453" fg:w="1"/><text x="77.8287%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.5787%" y="613" width="0.0120%" height="15" fill="rgb(214,95,34)" fg:x="6453" fg:w="1"/><text x="77.8287%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.5787%" y="597" width="0.0120%" height="15" fill="rgb(250,160,33)" fg:x="6453" fg:w="1"/><text x="77.8287%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.5787%" y="581" width="0.0120%" height="15" fill="rgb(225,29,10)" fg:x="6453" fg:w="1"/><text x="77.8287%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="77.5547%" y="725" width="0.0481%" height="15" fill="rgb(224,28,30)" fg:x="6451" fg:w="4"/><text x="77.8047%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.05%)</title><rect x="77.5547%" y="709" width="0.0481%" height="15" fill="rgb(231,77,4)" fg:x="6451" fg:w="4"/><text x="77.8047%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.05%)</title><rect x="77.5547%" y="693" width="0.0481%" height="15" fill="rgb(209,63,21)" fg:x="6451" fg:w="4"/><text x="77.8047%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="77.5908%" y="677" width="0.0120%" height="15" fill="rgb(226,22,11)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="77.5908%" y="661" width="0.0120%" height="15" fill="rgb(216,82,30)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="77.5908%" y="645" width="0.0120%" height="15" fill="rgb(246,227,38)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="77.5908%" y="629" width="0.0120%" height="15" fill="rgb(251,203,53)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="77.5908%" y="613" width="0.0120%" height="15" fill="rgb(254,101,1)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="623.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="77.5908%" y="597" width="0.0120%" height="15" fill="rgb(241,180,5)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="581" width="0.0120%" height="15" fill="rgb(218,168,4)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="591.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="565" width="0.0120%" height="15" fill="rgb(224,223,32)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="549" width="0.0120%" height="15" fill="rgb(236,106,22)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="77.5908%" y="533" width="0.0120%" height="15" fill="rgb(206,121,5)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="77.5908%" y="517" width="0.0120%" height="15" fill="rgb(233,87,28)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="77.5908%" y="501" width="0.0120%" height="15" fill="rgb(236,137,17)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="77.5908%" y="485" width="0.0120%" height="15" fill="rgb(209,183,38)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="77.5908%" y="469" width="0.0120%" height="15" fill="rgb(206,162,44)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="453" width="0.0120%" height="15" fill="rgb(237,70,39)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="463.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="437" width="0.0120%" height="15" fill="rgb(212,176,5)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="447.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="421" width="0.0120%" height="15" fill="rgb(232,95,16)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="405" width="0.0120%" height="15" fill="rgb(219,115,35)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="389" width="0.0120%" height="15" fill="rgb(251,67,27)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="373" width="0.0120%" height="15" fill="rgb(222,95,40)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="77.5908%" y="357" width="0.0120%" height="15" fill="rgb(250,35,16)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="77.5908%" y="341" width="0.0120%" height="15" fill="rgb(224,86,44)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.5908%" y="325" width="0.0120%" height="15" fill="rgb(237,53,53)" fg:x="6454" fg:w="1"/><text x="77.8408%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.19%)</title><rect x="77.4225%" y="917" width="0.1924%" height="15" fill="rgb(208,171,33)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16 samples, 0.19%)</title><rect x="77.4225%" y="901" width="0.1924%" height="15" fill="rgb(222,64,27)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.19%)</title><rect x="77.4225%" y="885" width="0.1924%" height="15" fill="rgb(221,121,35)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.19%)</title><rect x="77.4225%" y="869" width="0.1924%" height="15" fill="rgb(228,137,42)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (16 samples, 0.19%)</title><rect x="77.4225%" y="853" width="0.1924%" height="15" fill="rgb(227,54,21)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.19%)</title><rect x="77.4225%" y="837" width="0.1924%" height="15" fill="rgb(240,168,33)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.19%)</title><rect x="77.4225%" y="821" width="0.1924%" height="15" fill="rgb(243,159,6)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.19%)</title><rect x="77.4225%" y="805" width="0.1924%" height="15" fill="rgb(205,211,41)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="815.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (16 samples, 0.19%)</title><rect x="77.4225%" y="789" width="0.1924%" height="15" fill="rgb(253,30,1)" fg:x="6440" fg:w="16"/><text x="77.6725%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.12%)</title><rect x="77.4946%" y="773" width="0.1202%" height="15" fill="rgb(226,80,18)" fg:x="6446" fg:w="10"/><text x="77.7446%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.12%)</title><rect x="77.4946%" y="757" width="0.1202%" height="15" fill="rgb(253,156,46)" fg:x="6446" fg:w="10"/><text x="77.7446%" y="767.50"></text></g><g><title>smithereens::fragment::_{{closure}} (10 samples, 0.12%)</title><rect x="77.4946%" y="741" width="0.1202%" height="15" fill="rgb(248,87,27)" fg:x="6446" fg:w="10"/><text x="77.7446%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="77.6028%" y="725" width="0.0120%" height="15" fill="rgb(227,122,2)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="77.6028%" y="709" width="0.0120%" height="15" fill="rgb(229,94,39)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="77.6028%" y="693" width="0.0120%" height="15" fill="rgb(225,173,31)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="77.6028%" y="677" width="0.0120%" height="15" fill="rgb(239,176,30)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="77.6028%" y="661" width="0.0120%" height="15" fill="rgb(212,104,21)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="77.6028%" y="645" width="0.0120%" height="15" fill="rgb(240,209,40)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="77.6028%" y="629" width="0.0120%" height="15" fill="rgb(234,195,5)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="639.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="77.6028%" y="613" width="0.0120%" height="15" fill="rgb(238,213,1)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="77.6028%" y="597" width="0.0120%" height="15" fill="rgb(235,182,54)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="581" width="0.0120%" height="15" fill="rgb(229,50,46)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="591.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="565" width="0.0120%" height="15" fill="rgb(219,145,13)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="549" width="0.0120%" height="15" fill="rgb(220,226,10)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="533" width="0.0120%" height="15" fill="rgb(248,47,30)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="543.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="77.6028%" y="517" width="0.0120%" height="15" fill="rgb(231,209,44)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="527.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="501" width="0.0120%" height="15" fill="rgb(209,80,30)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="511.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="485" width="0.0120%" height="15" fill="rgb(232,9,14)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="469" width="0.0120%" height="15" fill="rgb(243,91,43)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="77.6028%" y="453" width="0.0120%" height="15" fill="rgb(231,90,52)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.6028%" y="437" width="0.0120%" height="15" fill="rgb(253,192,44)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.6028%" y="421" width="0.0120%" height="15" fill="rgb(241,66,31)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="77.6028%" y="405" width="0.0120%" height="15" fill="rgb(235,81,37)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="77.6028%" y="389" width="0.0120%" height="15" fill="rgb(223,221,9)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="77.6028%" y="373" width="0.0120%" height="15" fill="rgb(242,180,7)" fg:x="6455" fg:w="1"/><text x="77.8528%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.20%)</title><rect x="77.4225%" y="965" width="0.2044%" height="15" fill="rgb(243,78,19)" fg:x="6440" fg:w="17"/><text x="77.6725%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.20%)</title><rect x="77.4225%" y="949" width="0.2044%" height="15" fill="rgb(233,23,17)" fg:x="6440" fg:w="17"/><text x="77.6725%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.20%)</title><rect x="77.4225%" y="933" width="0.2044%" height="15" fill="rgb(252,122,45)" fg:x="6440" fg:w="17"/><text x="77.6725%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.6148%" y="917" width="0.0120%" height="15" fill="rgb(247,108,20)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.6148%" y="901" width="0.0120%" height="15" fill="rgb(235,84,21)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="77.6148%" y="885" width="0.0120%" height="15" fill="rgb(247,129,10)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="77.6148%" y="869" width="0.0120%" height="15" fill="rgb(208,173,14)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="77.6148%" y="853" width="0.0120%" height="15" fill="rgb(236,31,38)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="77.6148%" y="837" width="0.0120%" height="15" fill="rgb(232,65,17)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="847.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="77.6148%" y="821" width="0.0120%" height="15" fill="rgb(224,45,49)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="77.6148%" y="805" width="0.0120%" height="15" fill="rgb(225,2,53)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="77.6148%" y="789" width="0.0120%" height="15" fill="rgb(248,210,53)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="799.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="77.6148%" y="773" width="0.0120%" height="15" fill="rgb(211,1,30)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="77.6148%" y="757" width="0.0120%" height="15" fill="rgb(224,96,15)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="741" width="0.0120%" height="15" fill="rgb(252,45,11)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="725" width="0.0120%" height="15" fill="rgb(220,125,38)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="709" width="0.0120%" height="15" fill="rgb(243,161,33)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="77.6148%" y="693" width="0.0120%" height="15" fill="rgb(248,197,34)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="77.6148%" y="677" width="0.0120%" height="15" fill="rgb(228,165,23)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="687.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="661" width="0.0120%" height="15" fill="rgb(236,94,38)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="671.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="645" width="0.0120%" height="15" fill="rgb(220,13,23)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="655.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="629" width="0.0120%" height="15" fill="rgb(234,26,39)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="613" width="0.0120%" height="15" fill="rgb(205,117,44)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6148%" y="597" width="0.0120%" height="15" fill="rgb(250,42,2)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="77.6148%" y="581" width="0.0120%" height="15" fill="rgb(223,83,14)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="77.6148%" y="565" width="0.0120%" height="15" fill="rgb(241,147,50)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="575.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="77.6148%" y="549" width="0.0120%" height="15" fill="rgb(218,90,6)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.6148%" y="533" width="0.0120%" height="15" fill="rgb(210,191,5)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.6148%" y="517" width="0.0120%" height="15" fill="rgb(225,139,19)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.6148%" y="501" width="0.0120%" height="15" fill="rgb(210,1,33)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="511.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.6148%" y="485" width="0.0120%" height="15" fill="rgb(213,50,3)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.6148%" y="469" width="0.0120%" height="15" fill="rgb(234,227,4)" fg:x="6456" fg:w="1"/><text x="77.8648%" y="479.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (1 samples, 0.01%)</title><rect x="77.6268%" y="965" width="0.0120%" height="15" fill="rgb(246,63,5)" fg:x="6457" fg:w="1"/><text x="77.8768%" y="975.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (1 samples, 0.01%)</title><rect x="77.6268%" y="949" width="0.0120%" height="15" fill="rgb(245,136,27)" fg:x="6457" fg:w="1"/><text x="77.8768%" y="959.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_edge (1 samples, 0.01%)</title><rect x="77.6268%" y="933" width="0.0120%" height="15" fill="rgb(247,199,27)" fg:x="6457" fg:w="1"/><text x="77.8768%" y="943.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_edge_adjust_indices (1 samples, 0.01%)</title><rect x="77.6268%" y="917" width="0.0120%" height="15" fill="rgb(252,158,49)" fg:x="6457" fg:w="1"/><text x="77.8768%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.01%)</title><rect x="77.6268%" y="901" width="0.0120%" height="15" fill="rgb(254,73,1)" fg:x="6457" fg:w="1"/><text x="77.8768%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="77.6389%" y="949" width="0.0120%" height="15" fill="rgb(248,93,19)" fg:x="6458" fg:w="1"/><text x="77.8889%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="77.6389%" y="933" width="0.0120%" height="15" fill="rgb(206,67,5)" fg:x="6458" fg:w="1"/><text x="77.8889%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="77.6389%" y="917" width="0.0120%" height="15" fill="rgb(209,210,4)" fg:x="6458" fg:w="1"/><text x="77.8889%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="77.6389%" y="901" width="0.0120%" height="15" fill="rgb(214,185,36)" fg:x="6458" fg:w="1"/><text x="77.8889%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="77.6389%" y="885" width="0.0120%" height="15" fill="rgb(233,191,26)" fg:x="6458" fg:w="1"/><text x="77.8889%" y="895.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="77.6389%" y="869" width="0.0120%" height="15" fill="rgb(248,94,17)" fg:x="6458" fg:w="1"/><text x="77.8889%" y="879.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="77.6389%" y="853" width="0.0120%" height="15" fill="rgb(250,64,4)" fg:x="6458" fg:w="1"/><text x="77.8889%" y="863.50"></text></g><g><title>smithereens::expand_from (2 samples, 0.02%)</title><rect x="77.6389%" y="965" width="0.0240%" height="15" fill="rgb(218,41,53)" fg:x="6458" fg:w="2"/><text x="77.8889%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.01%)</title><rect x="77.6509%" y="949" width="0.0120%" height="15" fill="rgb(251,176,28)" fg:x="6459" fg:w="1"/><text x="77.9009%" y="959.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="77.6509%" y="933" width="0.0120%" height="15" fill="rgb(247,22,9)" fg:x="6459" fg:w="1"/><text x="77.9009%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.6509%" y="917" width="0.0120%" height="15" fill="rgb(218,201,14)" fg:x="6459" fg:w="1"/><text x="77.9009%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="77.6629%" y="933" width="0.0120%" height="15" fill="rgb(218,94,10)" fg:x="6460" fg:w="1"/><text x="77.9129%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.6629%" y="917" width="0.0120%" height="15" fill="rgb(222,183,52)" fg:x="6460" fg:w="1"/><text x="77.9129%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="77.6629%" y="901" width="0.0120%" height="15" fill="rgb(242,140,25)" fg:x="6460" fg:w="1"/><text x="77.9129%" y="911.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="77.6629%" y="885" width="0.0120%" height="15" fill="rgb(235,197,38)" fg:x="6460" fg:w="1"/><text x="77.9129%" y="895.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="77.6629%" y="869" width="0.0120%" height="15" fill="rgb(237,136,15)" fg:x="6460" fg:w="1"/><text x="77.9129%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="77.6629%" y="965" width="0.0240%" height="15" fill="rgb(223,44,49)" fg:x="6460" fg:w="2"/><text x="77.9129%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="77.6629%" y="949" width="0.0240%" height="15" fill="rgb(227,71,15)" fg:x="6460" fg:w="2"/><text x="77.9129%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="77.6749%" y="933" width="0.0120%" height="15" fill="rgb(225,153,20)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="77.6749%" y="917" width="0.0120%" height="15" fill="rgb(210,190,26)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="77.6749%" y="901" width="0.0120%" height="15" fill="rgb(223,147,5)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="77.6749%" y="885" width="0.0120%" height="15" fill="rgb(207,14,23)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="77.6749%" y="869" width="0.0120%" height="15" fill="rgb(211,195,53)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="77.6749%" y="853" width="0.0120%" height="15" fill="rgb(237,75,46)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="863.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="77.6749%" y="837" width="0.0120%" height="15" fill="rgb(254,55,14)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="77.6749%" y="821" width="0.0120%" height="15" fill="rgb(230,185,30)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.6749%" y="805" width="0.0120%" height="15" fill="rgb(220,14,11)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="77.6749%" y="789" width="0.0120%" height="15" fill="rgb(215,169,44)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="799.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="77.6749%" y="773" width="0.0120%" height="15" fill="rgb(253,203,20)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="783.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="77.6749%" y="757" width="0.0120%" height="15" fill="rgb(229,225,17)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="77.6749%" y="741" width="0.0120%" height="15" fill="rgb(236,76,26)" fg:x="6461" fg:w="1"/><text x="77.9249%" y="751.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6869%" y="917" width="0.0120%" height="15" fill="rgb(234,15,30)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.6869%" y="901" width="0.0120%" height="15" fill="rgb(211,113,48)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.6869%" y="885" width="0.0120%" height="15" fill="rgb(221,31,36)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.6869%" y="869" width="0.0120%" height="15" fill="rgb(215,118,52)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="879.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6869%" y="853" width="0.0120%" height="15" fill="rgb(241,151,27)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.6869%" y="837" width="0.0120%" height="15" fill="rgb(253,51,3)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.6869%" y="821" width="0.0120%" height="15" fill="rgb(216,201,24)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.6869%" y="805" width="0.0120%" height="15" fill="rgb(231,107,4)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.6869%" y="789" width="0.0120%" height="15" fill="rgb(243,97,54)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.6869%" y="773" width="0.0120%" height="15" fill="rgb(221,32,51)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.6869%" y="757" width="0.0120%" height="15" fill="rgb(218,171,35)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="77.6869%" y="741" width="0.0120%" height="15" fill="rgb(214,20,53)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.6869%" y="725" width="0.0120%" height="15" fill="rgb(239,9,52)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.6869%" y="709" width="0.0120%" height="15" fill="rgb(215,114,45)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.6869%" y="693" width="0.0120%" height="15" fill="rgb(208,118,9)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="703.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.6869%" y="677" width="0.0120%" height="15" fill="rgb(235,7,39)" fg:x="6462" fg:w="1"/><text x="77.9369%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="77.6990%" y="741" width="0.0120%" height="15" fill="rgb(243,225,15)" fg:x="6463" fg:w="1"/><text x="77.9490%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="77.6990%" y="725" width="0.0120%" height="15" fill="rgb(225,216,18)" fg:x="6463" fg:w="1"/><text x="77.9490%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="77.6990%" y="709" width="0.0120%" height="15" fill="rgb(233,36,38)" fg:x="6463" fg:w="1"/><text x="77.9490%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.6990%" y="693" width="0.0120%" height="15" fill="rgb(239,88,23)" fg:x="6463" fg:w="1"/><text x="77.9490%" y="703.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="77.7110%" y="709" width="0.0120%" height="15" fill="rgb(219,181,35)" fg:x="6464" fg:w="1"/><text x="77.9610%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="77.7110%" y="693" width="0.0120%" height="15" fill="rgb(215,18,46)" fg:x="6464" fg:w="1"/><text x="77.9610%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="77.7110%" y="677" width="0.0120%" height="15" fill="rgb(241,38,11)" fg:x="6464" fg:w="1"/><text x="77.9610%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="77.6990%" y="789" width="0.0601%" height="15" fill="rgb(248,169,45)" fg:x="6463" fg:w="5"/><text x="77.9490%" y="799.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="77.6990%" y="773" width="0.0601%" height="15" fill="rgb(239,50,49)" fg:x="6463" fg:w="5"/><text x="77.9490%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="77.6990%" y="757" width="0.0601%" height="15" fill="rgb(231,96,31)" fg:x="6463" fg:w="5"/><text x="77.9490%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (4 samples, 0.05%)</title><rect x="77.7110%" y="741" width="0.0481%" height="15" fill="rgb(224,193,37)" fg:x="6464" fg:w="4"/><text x="77.9610%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.05%)</title><rect x="77.7110%" y="725" width="0.0481%" height="15" fill="rgb(227,153,50)" fg:x="6464" fg:w="4"/><text x="77.9610%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="77.7230%" y="709" width="0.0361%" height="15" fill="rgb(249,228,3)" fg:x="6465" fg:w="3"/><text x="77.9730%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="77.7230%" y="693" width="0.0361%" height="15" fill="rgb(219,164,43)" fg:x="6465" fg:w="3"/><text x="77.9730%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="77.7230%" y="677" width="0.0361%" height="15" fill="rgb(216,45,41)" fg:x="6465" fg:w="3"/><text x="77.9730%" y="687.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="77.7230%" y="661" width="0.0361%" height="15" fill="rgb(210,226,51)" fg:x="6465" fg:w="3"/><text x="77.9730%" y="671.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="77.7230%" y="645" width="0.0361%" height="15" fill="rgb(209,117,49)" fg:x="6465" fg:w="3"/><text x="77.9730%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.7471%" y="629" width="0.0120%" height="15" fill="rgb(206,196,24)" fg:x="6467" fg:w="1"/><text x="77.9971%" y="639.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="77.7591%" y="741" width="0.0361%" height="15" fill="rgb(253,218,3)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="751.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="77.7591%" y="725" width="0.0361%" height="15" fill="rgb(252,166,2)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="77.7591%" y="709" width="0.0361%" height="15" fill="rgb(236,218,26)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="77.7591%" y="693" width="0.0361%" height="15" fill="rgb(254,84,19)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="77.7591%" y="677" width="0.0361%" height="15" fill="rgb(219,137,29)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="77.7591%" y="661" width="0.0361%" height="15" fill="rgb(227,47,52)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="77.7591%" y="645" width="0.0361%" height="15" fill="rgb(229,167,24)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="77.7591%" y="629" width="0.0361%" height="15" fill="rgb(233,164,1)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="77.7591%" y="613" width="0.0361%" height="15" fill="rgb(218,88,48)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="77.7591%" y="597" width="0.0361%" height="15" fill="rgb(226,214,24)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="77.7591%" y="581" width="0.0361%" height="15" fill="rgb(233,29,12)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="591.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="77.7591%" y="565" width="0.0361%" height="15" fill="rgb(219,120,34)" fg:x="6468" fg:w="3"/><text x="78.0091%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.7831%" y="549" width="0.0120%" height="15" fill="rgb(226,78,44)" fg:x="6470" fg:w="1"/><text x="78.0331%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.7831%" y="533" width="0.0120%" height="15" fill="rgb(240,15,48)" fg:x="6470" fg:w="1"/><text x="78.0331%" y="543.50"></text></g><g><title>core::clone::Clone::clone (9 samples, 0.11%)</title><rect x="77.6990%" y="821" width="0.1082%" height="15" fill="rgb(253,176,7)" fg:x="6463" fg:w="9"/><text x="77.9490%" y="831.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="77.6990%" y="805" width="0.1082%" height="15" fill="rgb(206,166,28)" fg:x="6463" fg:w="9"/><text x="77.9490%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="77.7591%" y="789" width="0.0481%" height="15" fill="rgb(241,53,51)" fg:x="6468" fg:w="4"/><text x="78.0091%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="77.7591%" y="773" width="0.0481%" height="15" fill="rgb(249,112,30)" fg:x="6468" fg:w="4"/><text x="78.0091%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="77.7591%" y="757" width="0.0481%" height="15" fill="rgb(217,85,30)" fg:x="6468" fg:w="4"/><text x="78.0091%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="77.7951%" y="741" width="0.0120%" height="15" fill="rgb(233,49,7)" fg:x="6471" fg:w="1"/><text x="78.0451%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="77.8072%" y="821" width="0.0120%" height="15" fill="rgb(234,109,9)" fg:x="6472" fg:w="1"/><text x="78.0572%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="77.8072%" y="805" width="0.0120%" height="15" fill="rgb(253,95,22)" fg:x="6472" fg:w="1"/><text x="78.0572%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.8072%" y="789" width="0.0120%" height="15" fill="rgb(233,176,25)" fg:x="6472" fg:w="1"/><text x="78.0572%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="77.8072%" y="773" width="0.0120%" height="15" fill="rgb(236,33,39)" fg:x="6472" fg:w="1"/><text x="78.0572%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (12 samples, 0.14%)</title><rect x="77.6990%" y="853" width="0.1443%" height="15" fill="rgb(223,226,42)" fg:x="6463" fg:w="12"/><text x="77.9490%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (12 samples, 0.14%)</title><rect x="77.6990%" y="837" width="0.1443%" height="15" fill="rgb(216,99,33)" fg:x="6463" fg:w="12"/><text x="77.9490%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="77.8192%" y="821" width="0.0240%" height="15" fill="rgb(235,84,23)" fg:x="6473" fg:w="2"/><text x="78.0692%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="77.8192%" y="805" width="0.0240%" height="15" fill="rgb(232,2,27)" fg:x="6473" fg:w="2"/><text x="78.0692%" y="815.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="77.8192%" y="789" width="0.0240%" height="15" fill="rgb(241,23,22)" fg:x="6473" fg:w="2"/><text x="78.0692%" y="799.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (13 samples, 0.16%)</title><rect x="77.6990%" y="917" width="0.1563%" height="15" fill="rgb(211,73,27)" fg:x="6463" fg:w="13"/><text x="77.9490%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="77.6990%" y="901" width="0.1563%" height="15" fill="rgb(235,109,49)" fg:x="6463" fg:w="13"/><text x="77.9490%" y="911.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="77.6990%" y="885" width="0.1563%" height="15" fill="rgb(230,99,29)" fg:x="6463" fg:w="13"/><text x="77.9490%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="77.6990%" y="869" width="0.1563%" height="15" fill="rgb(245,199,7)" fg:x="6463" fg:w="13"/><text x="77.9490%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="77.8432%" y="853" width="0.0120%" height="15" fill="rgb(217,179,10)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="77.8432%" y="837" width="0.0120%" height="15" fill="rgb(254,99,47)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="847.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="77.8432%" y="821" width="0.0120%" height="15" fill="rgb(251,121,7)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.8432%" y="805" width="0.0120%" height="15" fill="rgb(250,177,26)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.8432%" y="789" width="0.0120%" height="15" fill="rgb(232,88,15)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.8432%" y="773" width="0.0120%" height="15" fill="rgb(251,54,54)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="783.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.8432%" y="757" width="0.0120%" height="15" fill="rgb(208,177,15)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.8432%" y="741" width="0.0120%" height="15" fill="rgb(205,97,32)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.8432%" y="725" width="0.0120%" height="15" fill="rgb(217,192,13)" fg:x="6475" fg:w="1"/><text x="78.0932%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.8553%" y="821" width="0.0120%" height="15" fill="rgb(215,163,41)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="77.8553%" y="805" width="0.0120%" height="15" fill="rgb(246,83,29)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="815.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="77.8553%" y="789" width="0.0120%" height="15" fill="rgb(219,2,45)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="799.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.8553%" y="773" width="0.0120%" height="15" fill="rgb(242,215,33)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="783.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.8553%" y="757" width="0.0120%" height="15" fill="rgb(217,1,6)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="767.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.8553%" y="741" width="0.0120%" height="15" fill="rgb(207,85,52)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="77.8553%" y="725" width="0.0120%" height="15" fill="rgb(231,171,19)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="77.8553%" y="709" width="0.0120%" height="15" fill="rgb(207,128,4)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.8553%" y="693" width="0.0120%" height="15" fill="rgb(219,208,4)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.8553%" y="677" width="0.0120%" height="15" fill="rgb(235,161,42)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="77.8553%" y="661" width="0.0120%" height="15" fill="rgb(247,218,18)" fg:x="6476" fg:w="1"/><text x="78.1053%" y="671.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="77.8553%" y="837" width="0.0240%" height="15" fill="rgb(232,114,51)" fg:x="6476" fg:w="2"/><text x="78.1053%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.8673%" y="821" width="0.0120%" height="15" fill="rgb(222,95,3)" fg:x="6477" fg:w="1"/><text x="78.1173%" y="831.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="77.8673%" y="805" width="0.0120%" height="15" fill="rgb(240,65,29)" fg:x="6477" fg:w="1"/><text x="78.1173%" y="815.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="77.8673%" y="789" width="0.0120%" height="15" fill="rgb(249,209,20)" fg:x="6477" fg:w="1"/><text x="78.1173%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="77.8553%" y="917" width="0.0361%" height="15" fill="rgb(241,48,37)" fg:x="6476" fg:w="3"/><text x="78.1053%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.04%)</title><rect x="77.8553%" y="901" width="0.0361%" height="15" fill="rgb(230,140,42)" fg:x="6476" fg:w="3"/><text x="78.1053%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.04%)</title><rect x="77.8553%" y="885" width="0.0361%" height="15" fill="rgb(230,176,45)" fg:x="6476" fg:w="3"/><text x="78.1053%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="77.8553%" y="869" width="0.0361%" height="15" fill="rgb(245,112,21)" fg:x="6476" fg:w="3"/><text x="78.1053%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="77.8553%" y="853" width="0.0361%" height="15" fill="rgb(207,183,35)" fg:x="6476" fg:w="3"/><text x="78.1053%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.8793%" y="837" width="0.0120%" height="15" fill="rgb(227,44,33)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.8793%" y="821" width="0.0120%" height="15" fill="rgb(246,120,21)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.8793%" y="805" width="0.0120%" height="15" fill="rgb(235,57,52)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.8793%" y="789" width="0.0120%" height="15" fill="rgb(238,84,10)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.8793%" y="773" width="0.0120%" height="15" fill="rgb(251,200,32)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.8793%" y="757" width="0.0120%" height="15" fill="rgb(247,159,13)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="77.8793%" y="741" width="0.0120%" height="15" fill="rgb(238,64,4)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.8793%" y="725" width="0.0120%" height="15" fill="rgb(221,131,51)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.8793%" y="709" width="0.0120%" height="15" fill="rgb(242,5,29)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.8793%" y="693" width="0.0120%" height="15" fill="rgb(214,130,32)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="703.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.8793%" y="677" width="0.0120%" height="15" fill="rgb(244,210,16)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.8793%" y="661" width="0.0120%" height="15" fill="rgb(234,48,26)" fg:x="6478" fg:w="1"/><text x="78.1293%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (461 samples, 5.54%)</title><rect x="72.3611%" y="1125" width="5.5422%" height="15" fill="rgb(231,82,38)" fg:x="6019" fg:w="461"/><text x="72.6111%" y="1135.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (461 samples, 5.54%)</title><rect x="72.3611%" y="1109" width="5.5422%" height="15" fill="rgb(254,128,41)" fg:x="6019" fg:w="461"/><text x="72.6111%" y="1119.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (461 samples, 5.54%)</title><rect x="72.3611%" y="1093" width="5.5422%" height="15" fill="rgb(212,73,49)" fg:x="6019" fg:w="461"/><text x="72.6111%" y="1103.50">&lt;alloc:..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.57%)</title><rect x="77.3383%" y="1077" width="0.5650%" height="15" fill="rgb(205,62,54)" fg:x="6433" fg:w="47"/><text x="77.5883%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.55%)</title><rect x="77.3503%" y="1061" width="0.5530%" height="15" fill="rgb(228,0,8)" fg:x="6434" fg:w="46"/><text x="77.6003%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (46 samples, 0.55%)</title><rect x="77.3503%" y="1045" width="0.5530%" height="15" fill="rgb(251,28,17)" fg:x="6434" fg:w="46"/><text x="77.6003%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.55%)</title><rect x="77.3503%" y="1029" width="0.5530%" height="15" fill="rgb(238,105,27)" fg:x="6434" fg:w="46"/><text x="77.6003%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (46 samples, 0.55%)</title><rect x="77.3503%" y="1013" width="0.5530%" height="15" fill="rgb(237,216,33)" fg:x="6434" fg:w="46"/><text x="77.6003%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (46 samples, 0.55%)</title><rect x="77.3503%" y="997" width="0.5530%" height="15" fill="rgb(229,228,25)" fg:x="6434" fg:w="46"/><text x="77.6003%" y="1007.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (46 samples, 0.55%)</title><rect x="77.3503%" y="981" width="0.5530%" height="15" fill="rgb(233,75,23)" fg:x="6434" fg:w="46"/><text x="77.6003%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.22%)</title><rect x="77.6869%" y="965" width="0.2164%" height="15" fill="rgb(231,207,16)" fg:x="6462" fg:w="18"/><text x="77.9369%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.22%)</title><rect x="77.6869%" y="949" width="0.2164%" height="15" fill="rgb(231,191,45)" fg:x="6462" fg:w="18"/><text x="77.9369%" y="959.50"></text></g><g><title>smithereens::fragment::_{{closure}} (18 samples, 0.22%)</title><rect x="77.6869%" y="933" width="0.2164%" height="15" fill="rgb(224,133,17)" fg:x="6462" fg:w="18"/><text x="77.9369%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="77.8913%" y="917" width="0.0120%" height="15" fill="rgb(209,178,27)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="77.8913%" y="901" width="0.0120%" height="15" fill="rgb(218,37,11)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="77.8913%" y="885" width="0.0120%" height="15" fill="rgb(251,226,25)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.8913%" y="869" width="0.0120%" height="15" fill="rgb(209,222,27)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.8913%" y="853" width="0.0120%" height="15" fill="rgb(238,22,21)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.8913%" y="837" width="0.0120%" height="15" fill="rgb(233,161,25)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.8913%" y="821" width="0.0120%" height="15" fill="rgb(226,122,53)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="831.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.8913%" y="805" width="0.0120%" height="15" fill="rgb(220,123,17)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.8913%" y="789" width="0.0120%" height="15" fill="rgb(230,224,35)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="77.8913%" y="773" width="0.0120%" height="15" fill="rgb(246,83,8)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="77.8913%" y="757" width="0.0120%" height="15" fill="rgb(230,214,17)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="77.8913%" y="741" width="0.0120%" height="15" fill="rgb(222,97,18)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="77.8913%" y="725" width="0.0120%" height="15" fill="rgb(206,79,1)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.8913%" y="709" width="0.0120%" height="15" fill="rgb(214,121,34)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="77.8913%" y="693" width="0.0120%" height="15" fill="rgb(249,199,46)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="77.8913%" y="677" width="0.0120%" height="15" fill="rgb(214,222,46)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="77.8913%" y="661" width="0.0120%" height="15" fill="rgb(248,168,30)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="77.8913%" y="645" width="0.0120%" height="15" fill="rgb(226,14,28)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="77.8913%" y="629" width="0.0120%" height="15" fill="rgb(253,123,1)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="639.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="77.8913%" y="613" width="0.0120%" height="15" fill="rgb(225,24,42)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="77.8913%" y="597" width="0.0120%" height="15" fill="rgb(216,161,37)" fg:x="6479" fg:w="1"/><text x="78.1413%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="77.9033%" y="965" width="0.0120%" height="15" fill="rgb(251,164,26)" fg:x="6480" fg:w="1"/><text x="78.1533%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="77.9033%" y="949" width="0.0120%" height="15" fill="rgb(219,177,3)" fg:x="6480" fg:w="1"/><text x="78.1533%" y="959.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="77.9033%" y="933" width="0.0120%" height="15" fill="rgb(222,65,0)" fg:x="6480" fg:w="1"/><text x="78.1533%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="77.9033%" y="1077" width="0.0240%" height="15" fill="rgb(223,69,54)" fg:x="6480" fg:w="2"/><text x="78.1533%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (2 samples, 0.02%)</title><rect x="77.9033%" y="1061" width="0.0240%" height="15" fill="rgb(235,30,27)" fg:x="6480" fg:w="2"/><text x="78.1533%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="77.9033%" y="1045" width="0.0240%" height="15" fill="rgb(220,183,50)" fg:x="6480" fg:w="2"/><text x="78.1533%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="77.9033%" y="1029" width="0.0240%" height="15" fill="rgb(248,198,15)" fg:x="6480" fg:w="2"/><text x="78.1533%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="77.9033%" y="1013" width="0.0240%" height="15" fill="rgb(222,211,4)" fg:x="6480" fg:w="2"/><text x="78.1533%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="77.9033%" y="997" width="0.0240%" height="15" fill="rgb(214,102,34)" fg:x="6480" fg:w="2"/><text x="78.1533%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="77.9033%" y="981" width="0.0240%" height="15" fill="rgb(245,92,5)" fg:x="6480" fg:w="2"/><text x="78.1533%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="77.9154%" y="965" width="0.0120%" height="15" fill="rgb(252,72,51)" fg:x="6481" fg:w="1"/><text x="78.1654%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (4 samples, 0.05%)</title><rect x="77.9033%" y="1125" width="0.0481%" height="15" fill="rgb(252,208,19)" fg:x="6480" fg:w="4"/><text x="78.1533%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (4 samples, 0.05%)</title><rect x="77.9033%" y="1109" width="0.0481%" height="15" fill="rgb(211,69,7)" fg:x="6480" fg:w="4"/><text x="78.1533%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (4 samples, 0.05%)</title><rect x="77.9033%" y="1093" width="0.0481%" height="15" fill="rgb(211,27,16)" fg:x="6480" fg:w="4"/><text x="78.1533%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="77.9274%" y="1077" width="0.0240%" height="15" fill="rgb(219,216,14)" fg:x="6482" fg:w="2"/><text x="78.1774%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="77.9274%" y="1061" width="0.0240%" height="15" fill="rgb(219,71,8)" fg:x="6482" fg:w="2"/><text x="78.1774%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="77.9274%" y="1045" width="0.0240%" height="15" fill="rgb(223,170,53)" fg:x="6482" fg:w="2"/><text x="78.1774%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="77.9274%" y="1029" width="0.0240%" height="15" fill="rgb(246,21,26)" fg:x="6482" fg:w="2"/><text x="78.1774%" y="1039.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="77.9274%" y="1013" width="0.0240%" height="15" fill="rgb(248,20,46)" fg:x="6482" fg:w="2"/><text x="78.1774%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.01%)</title><rect x="78.0236%" y="1093" width="0.0120%" height="15" fill="rgb(252,94,11)" fg:x="6490" fg:w="1"/><text x="78.2736%" y="1103.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="78.0236%" y="1077" width="0.0120%" height="15" fill="rgb(236,163,8)" fg:x="6490" fg:w="1"/><text x="78.2736%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.01%)</title><rect x="78.0356%" y="1061" width="0.0120%" height="15" fill="rgb(217,221,45)" fg:x="6491" fg:w="1"/><text x="78.2856%" y="1071.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (9 samples, 0.11%)</title><rect x="77.9514%" y="1109" width="0.1082%" height="15" fill="rgb(238,38,17)" fg:x="6484" fg:w="9"/><text x="78.2014%" y="1119.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_edge (2 samples, 0.02%)</title><rect x="78.0356%" y="1093" width="0.0240%" height="15" fill="rgb(242,210,23)" fg:x="6491" fg:w="2"/><text x="78.2856%" y="1103.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_edge_adjust_indices (2 samples, 0.02%)</title><rect x="78.0356%" y="1077" width="0.0240%" height="15" fill="rgb(250,86,53)" fg:x="6491" fg:w="2"/><text x="78.2856%" y="1087.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::change_edge_links (1 samples, 0.01%)</title><rect x="78.0476%" y="1061" width="0.0120%" height="15" fill="rgb(223,168,25)" fg:x="6492" fg:w="1"/><text x="78.2976%" y="1071.50"></text></g><g><title>petgraph::graph_impl::NodeIndex&lt;Ix&gt;::index (1 samples, 0.01%)</title><rect x="78.0476%" y="1045" width="0.0120%" height="15" fill="rgb(251,189,4)" fg:x="6492" fg:w="1"/><text x="78.2976%" y="1055.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1 samples, 0.01%)</title><rect x="78.0476%" y="1029" width="0.0120%" height="15" fill="rgb(245,19,28)" fg:x="6492" fg:w="1"/><text x="78.2976%" y="1039.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (11 samples, 0.13%)</title><rect x="77.9514%" y="1125" width="0.1322%" height="15" fill="rgb(207,10,34)" fg:x="6484" fg:w="11"/><text x="78.2014%" y="1135.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="78.0596%" y="1109" width="0.0240%" height="15" fill="rgb(235,153,31)" fg:x="6493" fg:w="2"/><text x="78.3096%" y="1119.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.02%)</title><rect x="78.0596%" y="1093" width="0.0240%" height="15" fill="rgb(228,72,37)" fg:x="6493" fg:w="2"/><text x="78.3096%" y="1103.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.02%)</title><rect x="78.0596%" y="1077" width="0.0240%" height="15" fill="rgb(215,15,16)" fg:x="6493" fg:w="2"/><text x="78.3096%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.02%)</title><rect x="78.0596%" y="1061" width="0.0240%" height="15" fill="rgb(250,119,29)" fg:x="6493" fg:w="2"/><text x="78.3096%" y="1071.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (1 samples, 0.01%)</title><rect x="78.0717%" y="1045" width="0.0120%" height="15" fill="rgb(214,59,1)" fg:x="6494" fg:w="1"/><text x="78.3217%" y="1055.50"></text></g><g><title>&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="78.0717%" y="1029" width="0.0120%" height="15" fill="rgb(223,109,25)" fg:x="6494" fg:w="1"/><text x="78.3217%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (1 samples, 0.01%)</title><rect x="78.0717%" y="1013" width="0.0120%" height="15" fill="rgb(230,198,22)" fg:x="6494" fg:w="1"/><text x="78.3217%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="78.0837%" y="1109" width="0.0120%" height="15" fill="rgb(245,184,46)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="78.0837%" y="1093" width="0.0120%" height="15" fill="rgb(253,73,16)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="78.0837%" y="1077" width="0.0120%" height="15" fill="rgb(206,94,45)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.0837%" y="1061" width="0.0120%" height="15" fill="rgb(236,83,27)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.01%)</title><rect x="78.0837%" y="1045" width="0.0120%" height="15" fill="rgb(220,196,8)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="78.0837%" y="1029" width="0.0120%" height="15" fill="rgb(254,185,14)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.01%)</title><rect x="78.0837%" y="1013" width="0.0120%" height="15" fill="rgb(226,50,22)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="78.0837%" y="997" width="0.0120%" height="15" fill="rgb(253,147,0)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="1007.50"></text></g><g><title>smithereens::expand_from::_{{closure}} (1 samples, 0.01%)</title><rect x="78.0837%" y="981" width="0.0120%" height="15" fill="rgb(252,46,33)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.01%)</title><rect x="78.0837%" y="965" width="0.0120%" height="15" fill="rgb(242,22,54)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="975.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.01%)</title><rect x="78.0837%" y="949" width="0.0120%" height="15" fill="rgb(223,178,32)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="78.0837%" y="933" width="0.0120%" height="15" fill="rgb(214,106,53)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="943.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (1 samples, 0.01%)</title><rect x="78.0837%" y="917" width="0.0120%" height="15" fill="rgb(232,65,50)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="927.50"></text></g><g><title>&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="78.0837%" y="901" width="0.0120%" height="15" fill="rgb(231,110,28)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (1 samples, 0.01%)</title><rect x="78.0837%" y="885" width="0.0120%" height="15" fill="rgb(216,71,40)" fg:x="6495" fg:w="1"/><text x="78.3337%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="78.0957%" y="1109" width="0.0120%" height="15" fill="rgb(229,89,53)" fg:x="6496" fg:w="1"/><text x="78.3457%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="78.0957%" y="1093" width="0.0120%" height="15" fill="rgb(210,124,14)" fg:x="6496" fg:w="1"/><text x="78.3457%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="78.0957%" y="1077" width="0.0120%" height="15" fill="rgb(236,213,6)" fg:x="6496" fg:w="1"/><text x="78.3457%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="78.0957%" y="1061" width="0.0120%" height="15" fill="rgb(228,41,5)" fg:x="6496" fg:w="1"/><text x="78.3457%" y="1071.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="78.0957%" y="1045" width="0.0120%" height="15" fill="rgb(221,167,25)" fg:x="6496" fg:w="1"/><text x="78.3457%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="78.0957%" y="1029" width="0.0120%" height="15" fill="rgb(228,144,37)" fg:x="6496" fg:w="1"/><text x="78.3457%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="78.1077%" y="1061" width="0.0120%" height="15" fill="rgb(227,189,38)" fg:x="6497" fg:w="1"/><text x="78.3577%" y="1071.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="78.1077%" y="1045" width="0.0120%" height="15" fill="rgb(218,8,2)" fg:x="6497" fg:w="1"/><text x="78.3577%" y="1055.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="78.1077%" y="1029" width="0.0120%" height="15" fill="rgb(209,61,28)" fg:x="6497" fg:w="1"/><text x="78.3577%" y="1039.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="78.1077%" y="1013" width="0.0120%" height="15" fill="rgb(233,140,39)" fg:x="6497" fg:w="1"/><text x="78.3577%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="78.1077%" y="1109" width="0.0240%" height="15" fill="rgb(251,66,48)" fg:x="6497" fg:w="2"/><text x="78.3577%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="78.1077%" y="1093" width="0.0240%" height="15" fill="rgb(210,44,45)" fg:x="6497" fg:w="2"/><text x="78.3577%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="78.1077%" y="1077" width="0.0240%" height="15" fill="rgb(214,136,46)" fg:x="6497" fg:w="2"/><text x="78.3577%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="78.1197%" y="1061" width="0.0120%" height="15" fill="rgb(207,130,50)" fg:x="6498" fg:w="1"/><text x="78.3697%" y="1071.50"></text></g><g><title>smithereens::expand_from (5 samples, 0.06%)</title><rect x="78.0837%" y="1125" width="0.0601%" height="15" fill="rgb(228,102,49)" fg:x="6495" fg:w="5"/><text x="78.3337%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.01%)</title><rect x="78.1318%" y="1109" width="0.0120%" height="15" fill="rgb(253,55,1)" fg:x="6499" fg:w="1"/><text x="78.3818%" y="1119.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="78.1318%" y="1093" width="0.0120%" height="15" fill="rgb(238,222,9)" fg:x="6499" fg:w="1"/><text x="78.3818%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="78.1318%" y="1077" width="0.0120%" height="15" fill="rgb(246,99,6)" fg:x="6499" fg:w="1"/><text x="78.3818%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.1438%" y="1061" width="0.0120%" height="15" fill="rgb(219,110,26)" fg:x="6500" fg:w="1"/><text x="78.3938%" y="1071.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="78.1558%" y="965" width="0.0361%" height="15" fill="rgb(239,160,33)" fg:x="6501" fg:w="3"/><text x="78.4058%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="78.1558%" y="949" width="0.0361%" height="15" fill="rgb(220,202,23)" fg:x="6501" fg:w="3"/><text x="78.4058%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="78.1558%" y="933" width="0.0361%" height="15" fill="rgb(208,80,26)" fg:x="6501" fg:w="3"/><text x="78.4058%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="78.1558%" y="917" width="0.0361%" height="15" fill="rgb(243,85,7)" fg:x="6501" fg:w="3"/><text x="78.4058%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="78.1558%" y="901" width="0.0361%" height="15" fill="rgb(228,77,47)" fg:x="6501" fg:w="3"/><text x="78.4058%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="78.1558%" y="885" width="0.0361%" height="15" fill="rgb(212,226,8)" fg:x="6501" fg:w="3"/><text x="78.4058%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="78.1799%" y="869" width="0.0120%" height="15" fill="rgb(241,120,54)" fg:x="6503" fg:w="1"/><text x="78.4299%" y="879.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="78.1558%" y="981" width="0.0721%" height="15" fill="rgb(226,80,16)" fg:x="6501" fg:w="6"/><text x="78.4058%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="78.1919%" y="965" width="0.0361%" height="15" fill="rgb(240,76,13)" fg:x="6504" fg:w="3"/><text x="78.4419%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="78.1919%" y="949" width="0.0361%" height="15" fill="rgb(252,74,8)" fg:x="6504" fg:w="3"/><text x="78.4419%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="78.1919%" y="933" width="0.0361%" height="15" fill="rgb(244,155,2)" fg:x="6504" fg:w="3"/><text x="78.4419%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="78.1919%" y="917" width="0.0361%" height="15" fill="rgb(215,81,35)" fg:x="6504" fg:w="3"/><text x="78.4419%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="78.1919%" y="901" width="0.0361%" height="15" fill="rgb(206,55,2)" fg:x="6504" fg:w="3"/><text x="78.4419%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="78.2039%" y="885" width="0.0240%" height="15" fill="rgb(231,2,34)" fg:x="6505" fg:w="2"/><text x="78.4539%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="78.2279%" y="933" width="0.0120%" height="15" fill="rgb(242,176,48)" fg:x="6507" fg:w="1"/><text x="78.4779%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="78.2279%" y="917" width="0.0120%" height="15" fill="rgb(249,31,36)" fg:x="6507" fg:w="1"/><text x="78.4779%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="78.2279%" y="901" width="0.0120%" height="15" fill="rgb(205,18,17)" fg:x="6507" fg:w="1"/><text x="78.4779%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="78.1558%" y="1045" width="0.0962%" height="15" fill="rgb(254,130,5)" fg:x="6501" fg:w="8"/><text x="78.4058%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.10%)</title><rect x="78.1558%" y="1029" width="0.0962%" height="15" fill="rgb(229,42,45)" fg:x="6501" fg:w="8"/><text x="78.4058%" y="1039.50"></text></g><g><title>core::hash::Hash::hash_slice (8 samples, 0.10%)</title><rect x="78.1558%" y="1013" width="0.0962%" height="15" fill="rgb(245,95,25)" fg:x="6501" fg:w="8"/><text x="78.4058%" y="1023.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="78.1558%" y="997" width="0.0962%" height="15" fill="rgb(249,193,38)" fg:x="6501" fg:w="8"/><text x="78.4058%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="78.2279%" y="981" width="0.0240%" height="15" fill="rgb(241,140,43)" fg:x="6507" fg:w="2"/><text x="78.4779%" y="991.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="78.2279%" y="965" width="0.0240%" height="15" fill="rgb(245,78,48)" fg:x="6507" fg:w="2"/><text x="78.4779%" y="975.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="78.2279%" y="949" width="0.0240%" height="15" fill="rgb(214,92,39)" fg:x="6507" fg:w="2"/><text x="78.4779%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="78.2400%" y="933" width="0.0120%" height="15" fill="rgb(211,189,14)" fg:x="6508" fg:w="1"/><text x="78.4900%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (6 samples, 0.07%)</title><rect x="78.2520%" y="1013" width="0.0721%" height="15" fill="rgb(218,7,24)" fg:x="6509" fg:w="6"/><text x="78.5020%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u32 (6 samples, 0.07%)</title><rect x="78.2520%" y="997" width="0.0721%" height="15" fill="rgb(224,200,49)" fg:x="6509" fg:w="6"/><text x="78.5020%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="78.2640%" y="981" width="0.0601%" height="15" fill="rgb(218,210,14)" fg:x="6510" fg:w="5"/><text x="78.5140%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="78.2640%" y="965" width="0.0601%" height="15" fill="rgb(234,142,31)" fg:x="6510" fg:w="5"/><text x="78.5140%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="78.2640%" y="949" width="0.0601%" height="15" fill="rgb(227,165,2)" fg:x="6510" fg:w="5"/><text x="78.5140%" y="959.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="78.3121%" y="933" width="0.0120%" height="15" fill="rgb(232,44,46)" fg:x="6514" fg:w="1"/><text x="78.5621%" y="943.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="78.2520%" y="1029" width="0.0842%" height="15" fill="rgb(236,149,47)" fg:x="6509" fg:w="7"/><text x="78.5020%" y="1039.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="78.3241%" y="1013" width="0.0120%" height="15" fill="rgb(227,45,31)" fg:x="6515" fg:w="1"/><text x="78.5741%" y="1023.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="78.2520%" y="1045" width="0.1082%" height="15" fill="rgb(240,176,51)" fg:x="6509" fg:w="9"/><text x="78.5020%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="78.3361%" y="1029" width="0.0240%" height="15" fill="rgb(249,146,41)" fg:x="6516" fg:w="2"/><text x="78.5861%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="78.3361%" y="1013" width="0.0240%" height="15" fill="rgb(213,208,4)" fg:x="6516" fg:w="2"/><text x="78.5861%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="78.3361%" y="997" width="0.0240%" height="15" fill="rgb(245,84,36)" fg:x="6516" fg:w="2"/><text x="78.5861%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="78.3361%" y="981" width="0.0240%" height="15" fill="rgb(254,84,18)" fg:x="6516" fg:w="2"/><text x="78.5861%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="78.3361%" y="965" width="0.0240%" height="15" fill="rgb(225,38,54)" fg:x="6516" fg:w="2"/><text x="78.5861%" y="975.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="78.3361%" y="949" width="0.0240%" height="15" fill="rgb(246,50,30)" fg:x="6516" fg:w="2"/><text x="78.5861%" y="959.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (18 samples, 0.22%)</title><rect x="78.1558%" y="1061" width="0.2164%" height="15" fill="rgb(246,148,9)" fg:x="6501" fg:w="18"/><text x="78.4058%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="78.3602%" y="1045" width="0.0120%" height="15" fill="rgb(223,75,4)" fg:x="6518" fg:w="1"/><text x="78.6102%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="78.3602%" y="1029" width="0.0120%" height="15" fill="rgb(239,148,41)" fg:x="6518" fg:w="1"/><text x="78.6102%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="78.3602%" y="1013" width="0.0120%" height="15" fill="rgb(205,195,3)" fg:x="6518" fg:w="1"/><text x="78.6102%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="78.3602%" y="997" width="0.0120%" height="15" fill="rgb(254,161,1)" fg:x="6518" fg:w="1"/><text x="78.6102%" y="1007.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="78.3602%" y="981" width="0.0120%" height="15" fill="rgb(211,229,8)" fg:x="6518" fg:w="1"/><text x="78.6102%" y="991.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.3722%" y="997" width="0.0120%" height="15" fill="rgb(220,97,9)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="1007.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.3722%" y="981" width="0.0120%" height="15" fill="rgb(240,218,8)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.3722%" y="965" width="0.0120%" height="15" fill="rgb(250,44,0)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="78.3722%" y="949" width="0.0120%" height="15" fill="rgb(236,41,53)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="78.3722%" y="933" width="0.0120%" height="15" fill="rgb(218,227,13)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="78.3722%" y="917" width="0.0120%" height="15" fill="rgb(217,94,32)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.3722%" y="901" width="0.0120%" height="15" fill="rgb(213,217,12)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.3722%" y="885" width="0.0120%" height="15" fill="rgb(229,13,46)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="78.3722%" y="869" width="0.0120%" height="15" fill="rgb(243,139,5)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="78.3722%" y="853" width="0.0120%" height="15" fill="rgb(249,38,45)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="78.3722%" y="837" width="0.0120%" height="15" fill="rgb(216,70,11)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="78.3722%" y="821" width="0.0120%" height="15" fill="rgb(253,101,25)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="831.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="78.3722%" y="805" width="0.0120%" height="15" fill="rgb(207,197,30)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="78.3722%" y="789" width="0.0120%" height="15" fill="rgb(238,87,13)" fg:x="6519" fg:w="1"/><text x="78.6222%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.25%)</title><rect x="78.1438%" y="1093" width="0.2525%" height="15" fill="rgb(215,155,8)" fg:x="6500" fg:w="21"/><text x="78.3938%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.25%)</title><rect x="78.1438%" y="1077" width="0.2525%" height="15" fill="rgb(239,166,38)" fg:x="6500" fg:w="21"/><text x="78.3938%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="78.3722%" y="1061" width="0.0240%" height="15" fill="rgb(240,194,35)" fg:x="6519" fg:w="2"/><text x="78.6222%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="78.3722%" y="1045" width="0.0240%" height="15" fill="rgb(219,10,44)" fg:x="6519" fg:w="2"/><text x="78.6222%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="78.3722%" y="1029" width="0.0240%" height="15" fill="rgb(251,220,35)" fg:x="6519" fg:w="2"/><text x="78.6222%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="78.3722%" y="1013" width="0.0240%" height="15" fill="rgb(218,117,13)" fg:x="6519" fg:w="2"/><text x="78.6222%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="78.3842%" y="997" width="0.0120%" height="15" fill="rgb(221,213,40)" fg:x="6520" fg:w="1"/><text x="78.6342%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="78.3962%" y="965" width="0.0120%" height="15" fill="rgb(251,224,35)" fg:x="6521" fg:w="1"/><text x="78.6462%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="78.3962%" y="949" width="0.0120%" height="15" fill="rgb(241,33,39)" fg:x="6521" fg:w="1"/><text x="78.6462%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="78.3962%" y="933" width="0.0120%" height="15" fill="rgb(222,74,17)" fg:x="6521" fg:w="1"/><text x="78.6462%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="78.3962%" y="917" width="0.0120%" height="15" fill="rgb(225,103,0)" fg:x="6521" fg:w="1"/><text x="78.6462%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.4203%" y="949" width="0.0120%" height="15" fill="rgb(240,0,12)" fg:x="6523" fg:w="1"/><text x="78.6703%" y="959.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="78.4203%" y="933" width="0.0120%" height="15" fill="rgb(233,213,37)" fg:x="6523" fg:w="1"/><text x="78.6703%" y="943.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="78.4323%" y="853" width="0.0361%" height="15" fill="rgb(225,84,52)" fg:x="6524" fg:w="3"/><text x="78.6823%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="78.4323%" y="837" width="0.0361%" height="15" fill="rgb(247,160,51)" fg:x="6524" fg:w="3"/><text x="78.6823%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="78.4323%" y="821" width="0.0361%" height="15" fill="rgb(244,60,51)" fg:x="6524" fg:w="3"/><text x="78.6823%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="78.4323%" y="805" width="0.0361%" height="15" fill="rgb(233,114,7)" fg:x="6524" fg:w="3"/><text x="78.6823%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="78.4323%" y="789" width="0.0361%" height="15" fill="rgb(246,136,16)" fg:x="6524" fg:w="3"/><text x="78.6823%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="78.4323%" y="773" width="0.0361%" height="15" fill="rgb(243,114,45)" fg:x="6524" fg:w="3"/><text x="78.6823%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="78.4443%" y="757" width="0.0240%" height="15" fill="rgb(247,183,43)" fg:x="6525" fg:w="2"/><text x="78.6943%" y="767.50"></text></g><g><title>core::hash::Hash::hash_slice (5 samples, 0.06%)</title><rect x="78.4323%" y="901" width="0.0601%" height="15" fill="rgb(251,210,42)" fg:x="6524" fg:w="5"/><text x="78.6823%" y="911.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="78.4323%" y="885" width="0.0601%" height="15" fill="rgb(221,88,35)" fg:x="6524" fg:w="5"/><text x="78.6823%" y="895.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="78.4323%" y="869" width="0.0601%" height="15" fill="rgb(242,21,20)" fg:x="6524" fg:w="5"/><text x="78.6823%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="78.4684%" y="853" width="0.0240%" height="15" fill="rgb(233,226,36)" fg:x="6527" fg:w="2"/><text x="78.7184%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="78.4684%" y="837" width="0.0240%" height="15" fill="rgb(243,189,34)" fg:x="6527" fg:w="2"/><text x="78.7184%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="78.4684%" y="821" width="0.0240%" height="15" fill="rgb(207,145,50)" fg:x="6527" fg:w="2"/><text x="78.7184%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="78.4684%" y="805" width="0.0240%" height="15" fill="rgb(242,1,50)" fg:x="6527" fg:w="2"/><text x="78.7184%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="78.4684%" y="789" width="0.0240%" height="15" fill="rgb(231,65,32)" fg:x="6527" fg:w="2"/><text x="78.7184%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="78.4804%" y="773" width="0.0120%" height="15" fill="rgb(208,68,49)" fg:x="6528" fg:w="1"/><text x="78.7304%" y="783.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="78.4804%" y="757" width="0.0120%" height="15" fill="rgb(253,54,49)" fg:x="6528" fg:w="1"/><text x="78.7304%" y="767.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="78.4804%" y="741" width="0.0120%" height="15" fill="rgb(245,186,24)" fg:x="6528" fg:w="1"/><text x="78.7304%" y="751.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="78.4804%" y="725" width="0.0120%" height="15" fill="rgb(209,2,41)" fg:x="6528" fg:w="1"/><text x="78.7304%" y="735.50"></text></g><g><title>core::cmp::min (2 samples, 0.02%)</title><rect x="78.5044%" y="837" width="0.0240%" height="15" fill="rgb(242,208,54)" fg:x="6530" fg:w="2"/><text x="78.7544%" y="847.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.02%)</title><rect x="78.5044%" y="821" width="0.0240%" height="15" fill="rgb(225,9,51)" fg:x="6530" fg:w="2"/><text x="78.7544%" y="831.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.02%)</title><rect x="78.5044%" y="805" width="0.0240%" height="15" fill="rgb(207,207,25)" fg:x="6530" fg:w="2"/><text x="78.7544%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="78.4323%" y="933" width="0.1082%" height="15" fill="rgb(253,96,18)" fg:x="6524" fg:w="9"/><text x="78.6823%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.11%)</title><rect x="78.4323%" y="917" width="0.1082%" height="15" fill="rgb(252,215,20)" fg:x="6524" fg:w="9"/><text x="78.6823%" y="927.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (4 samples, 0.05%)</title><rect x="78.4924%" y="901" width="0.0481%" height="15" fill="rgb(245,227,26)" fg:x="6529" fg:w="4"/><text x="78.7424%" y="911.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.05%)</title><rect x="78.4924%" y="885" width="0.0481%" height="15" fill="rgb(241,208,0)" fg:x="6529" fg:w="4"/><text x="78.7424%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="78.4924%" y="869" width="0.0481%" height="15" fill="rgb(224,130,10)" fg:x="6529" fg:w="4"/><text x="78.7424%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="78.4924%" y="853" width="0.0481%" height="15" fill="rgb(237,29,0)" fg:x="6529" fg:w="4"/><text x="78.7424%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="78.5285%" y="837" width="0.0120%" height="15" fill="rgb(219,27,41)" fg:x="6532" fg:w="1"/><text x="78.7785%" y="847.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="78.5405%" y="917" width="0.0842%" height="15" fill="rgb(245,101,19)" fg:x="6533" fg:w="7"/><text x="78.7905%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (7 samples, 0.08%)</title><rect x="78.5405%" y="901" width="0.0842%" height="15" fill="rgb(243,44,37)" fg:x="6533" fg:w="7"/><text x="78.7905%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u32 (7 samples, 0.08%)</title><rect x="78.5405%" y="885" width="0.0842%" height="15" fill="rgb(228,213,43)" fg:x="6533" fg:w="7"/><text x="78.7905%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="78.5405%" y="869" width="0.0842%" height="15" fill="rgb(219,163,21)" fg:x="6533" fg:w="7"/><text x="78.7905%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="78.5525%" y="853" width="0.0721%" height="15" fill="rgb(234,86,24)" fg:x="6534" fg:w="6"/><text x="78.8025%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="78.5525%" y="837" width="0.0721%" height="15" fill="rgb(225,10,24)" fg:x="6534" fg:w="6"/><text x="78.8025%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.04%)</title><rect x="78.5886%" y="821" width="0.0361%" height="15" fill="rgb(218,109,7)" fg:x="6537" fg:w="3"/><text x="78.8386%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="78.6247%" y="837" width="0.0120%" height="15" fill="rgb(210,20,26)" fg:x="6540" fg:w="1"/><text x="78.8747%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="78.6367%" y="837" width="0.0240%" height="15" fill="rgb(216,18,1)" fg:x="6541" fg:w="2"/><text x="78.8867%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="78.6367%" y="821" width="0.0240%" height="15" fill="rgb(206,163,23)" fg:x="6541" fg:w="2"/><text x="78.8867%" y="831.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (20 samples, 0.24%)</title><rect x="78.4323%" y="949" width="0.2404%" height="15" fill="rgb(229,150,31)" fg:x="6524" fg:w="20"/><text x="78.6823%" y="959.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="78.5405%" y="933" width="0.1322%" height="15" fill="rgb(231,10,5)" fg:x="6533" fg:w="11"/><text x="78.7905%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="78.6247%" y="917" width="0.0481%" height="15" fill="rgb(250,40,50)" fg:x="6540" fg:w="4"/><text x="78.8747%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.05%)</title><rect x="78.6247%" y="901" width="0.0481%" height="15" fill="rgb(217,119,7)" fg:x="6540" fg:w="4"/><text x="78.8747%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="78.6247%" y="885" width="0.0481%" height="15" fill="rgb(245,214,40)" fg:x="6540" fg:w="4"/><text x="78.8747%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="78.6247%" y="869" width="0.0481%" height="15" fill="rgb(216,187,1)" fg:x="6540" fg:w="4"/><text x="78.8747%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="78.6247%" y="853" width="0.0481%" height="15" fill="rgb(237,146,21)" fg:x="6540" fg:w="4"/><text x="78.8747%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="78.6607%" y="837" width="0.0120%" height="15" fill="rgb(210,174,47)" fg:x="6543" fg:w="1"/><text x="78.9107%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="78.6607%" y="821" width="0.0120%" height="15" fill="rgb(218,111,39)" fg:x="6543" fg:w="1"/><text x="78.9107%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="78.6728%" y="949" width="0.0120%" height="15" fill="rgb(224,95,19)" fg:x="6544" fg:w="1"/><text x="78.9228%" y="959.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="78.6728%" y="933" width="0.0120%" height="15" fill="rgb(234,15,38)" fg:x="6544" fg:w="1"/><text x="78.9228%" y="943.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="78.6728%" y="917" width="0.0120%" height="15" fill="rgb(246,56,12)" fg:x="6544" fg:w="1"/><text x="78.9228%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="78.6728%" y="901" width="0.0120%" height="15" fill="rgb(247,16,17)" fg:x="6544" fg:w="1"/><text x="78.9228%" y="911.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="78.6728%" y="885" width="0.0120%" height="15" fill="rgb(215,151,11)" fg:x="6544" fg:w="1"/><text x="78.9228%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="78.6728%" y="869" width="0.0120%" height="15" fill="rgb(225,16,24)" fg:x="6544" fg:w="1"/><text x="78.9228%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="78.6848%" y="949" width="0.0120%" height="15" fill="rgb(217,117,5)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="78.6848%" y="933" width="0.0120%" height="15" fill="rgb(246,187,53)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="78.6848%" y="917" width="0.0120%" height="15" fill="rgb(241,71,40)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="78.6848%" y="901" width="0.0120%" height="15" fill="rgb(231,67,39)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="911.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.6848%" y="885" width="0.0120%" height="15" fill="rgb(222,120,24)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="895.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.6848%" y="869" width="0.0120%" height="15" fill="rgb(248,3,3)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.6848%" y="853" width="0.0120%" height="15" fill="rgb(228,218,5)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="78.6848%" y="837" width="0.0120%" height="15" fill="rgb(212,202,43)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="78.6848%" y="821" width="0.0120%" height="15" fill="rgb(235,183,2)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="78.6848%" y="805" width="0.0120%" height="15" fill="rgb(230,165,10)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="78.6848%" y="789" width="0.0120%" height="15" fill="rgb(219,54,40)" fg:x="6545" fg:w="1"/><text x="78.9348%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (47 samples, 0.57%)</title><rect x="78.1438%" y="1125" width="0.5650%" height="15" fill="rgb(244,73,9)" fg:x="6500" fg:w="47"/><text x="78.3938%" y="1135.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (47 samples, 0.57%)</title><rect x="78.1438%" y="1109" width="0.5650%" height="15" fill="rgb(212,32,45)" fg:x="6500" fg:w="47"/><text x="78.3938%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (26 samples, 0.31%)</title><rect x="78.3962%" y="1093" width="0.3126%" height="15" fill="rgb(205,58,31)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (26 samples, 0.31%)</title><rect x="78.3962%" y="1077" width="0.3126%" height="15" fill="rgb(250,120,43)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.31%)</title><rect x="78.3962%" y="1061" width="0.3126%" height="15" fill="rgb(235,13,10)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (26 samples, 0.31%)</title><rect x="78.3962%" y="1045" width="0.3126%" height="15" fill="rgb(232,219,31)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (26 samples, 0.31%)</title><rect x="78.3962%" y="1029" width="0.3126%" height="15" fill="rgb(218,157,51)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (26 samples, 0.31%)</title><rect x="78.3962%" y="1013" width="0.3126%" height="15" fill="rgb(211,91,52)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="1023.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (26 samples, 0.31%)</title><rect x="78.3962%" y="997" width="0.3126%" height="15" fill="rgb(240,173,1)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.31%)</title><rect x="78.3962%" y="981" width="0.3126%" height="15" fill="rgb(248,20,47)" fg:x="6521" fg:w="26"/><text x="78.6462%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (25 samples, 0.30%)</title><rect x="78.4083%" y="965" width="0.3006%" height="15" fill="rgb(217,221,40)" fg:x="6522" fg:w="25"/><text x="78.6583%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="78.6968%" y="949" width="0.0120%" height="15" fill="rgb(226,149,51)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="78.6968%" y="933" width="0.0120%" height="15" fill="rgb(252,193,7)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="78.6968%" y="917" width="0.0120%" height="15" fill="rgb(205,123,0)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="78.6968%" y="901" width="0.0120%" height="15" fill="rgb(233,173,25)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="78.6968%" y="885" width="0.0120%" height="15" fill="rgb(216,63,32)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="78.6968%" y="869" width="0.0120%" height="15" fill="rgb(209,56,45)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="78.6968%" y="853" width="0.0120%" height="15" fill="rgb(226,111,49)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="863.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="78.6968%" y="837" width="0.0120%" height="15" fill="rgb(244,181,21)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="78.6968%" y="821" width="0.0120%" height="15" fill="rgb(222,126,15)" fg:x="6546" fg:w="1"/><text x="78.9468%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="78.7088%" y="1061" width="0.0120%" height="15" fill="rgb(222,95,17)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="78.7088%" y="1045" width="0.0120%" height="15" fill="rgb(254,46,5)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="78.7088%" y="1029" width="0.0120%" height="15" fill="rgb(236,216,35)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="78.7088%" y="1013" width="0.0120%" height="15" fill="rgb(217,187,26)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.7088%" y="997" width="0.0120%" height="15" fill="rgb(207,192,25)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.7088%" y="981" width="0.0120%" height="15" fill="rgb(253,135,27)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="78.7088%" y="965" width="0.0120%" height="15" fill="rgb(211,122,29)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="78.7088%" y="949" width="0.0120%" height="15" fill="rgb(233,162,40)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="78.7088%" y="933" width="0.0120%" height="15" fill="rgb(222,184,47)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="78.7088%" y="917" width="0.0120%" height="15" fill="rgb(249,99,23)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="927.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="78.7088%" y="901" width="0.0120%" height="15" fill="rgb(214,60,12)" fg:x="6547" fg:w="1"/><text x="78.9588%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.01%)</title><rect x="78.7208%" y="1061" width="0.0120%" height="15" fill="rgb(250,229,36)" fg:x="6548" fg:w="1"/><text x="78.9708%" y="1071.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.01%)</title><rect x="78.7208%" y="1045" width="0.0120%" height="15" fill="rgb(232,195,10)" fg:x="6548" fg:w="1"/><text x="78.9708%" y="1055.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (3 samples, 0.04%)</title><rect x="78.7088%" y="1125" width="0.0361%" height="15" fill="rgb(205,213,31)" fg:x="6547" fg:w="3"/><text x="78.9588%" y="1135.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (3 samples, 0.04%)</title><rect x="78.7088%" y="1109" width="0.0361%" height="15" fill="rgb(237,43,8)" fg:x="6547" fg:w="3"/><text x="78.9588%" y="1119.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}} (3 samples, 0.04%)</title><rect x="78.7088%" y="1093" width="0.0361%" height="15" fill="rgb(216,208,3)" fg:x="6547" fg:w="3"/><text x="78.9588%" y="1103.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="78.7088%" y="1077" width="0.0361%" height="15" fill="rgb(228,179,44)" fg:x="6547" fg:w="3"/><text x="78.9588%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.01%)</title><rect x="78.7329%" y="1061" width="0.0120%" height="15" fill="rgb(230,192,27)" fg:x="6549" fg:w="1"/><text x="78.9829%" y="1071.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.01%)</title><rect x="78.7329%" y="1045" width="0.0120%" height="15" fill="rgb(251,30,38)" fg:x="6549" fg:w="1"/><text x="78.9829%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="78.7329%" y="1029" width="0.0120%" height="15" fill="rgb(246,55,52)" fg:x="6549" fg:w="1"/><text x="78.9829%" y="1039.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (1 samples, 0.01%)</title><rect x="78.7329%" y="1013" width="0.0120%" height="15" fill="rgb(249,79,26)" fg:x="6549" fg:w="1"/><text x="78.9829%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.01%)</title><rect x="78.7329%" y="997" width="0.0120%" height="15" fill="rgb(220,202,16)" fg:x="6549" fg:w="1"/><text x="78.9829%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.7569%" y="1061" width="0.0120%" height="15" fill="rgb(250,170,23)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="78.7569%" y="1045" width="0.0120%" height="15" fill="rgb(230,7,37)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="78.7569%" y="1029" width="0.0120%" height="15" fill="rgb(213,71,1)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="78.7569%" y="1013" width="0.0120%" height="15" fill="rgb(227,87,39)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.7569%" y="997" width="0.0120%" height="15" fill="rgb(210,41,29)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.7569%" y="981" width="0.0120%" height="15" fill="rgb(206,191,31)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="78.7569%" y="965" width="0.0120%" height="15" fill="rgb(247,75,54)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="78.7569%" y="949" width="0.0120%" height="15" fill="rgb(208,54,50)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="78.7569%" y="933" width="0.0120%" height="15" fill="rgb(214,90,37)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="78.7569%" y="917" width="0.0120%" height="15" fill="rgb(220,132,6)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="927.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.01%)</title><rect x="78.7569%" y="901" width="0.0120%" height="15" fill="rgb(213,167,7)" fg:x="6551" fg:w="1"/><text x="79.0069%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.7810%" y="933" width="0.0120%" height="15" fill="rgb(243,36,27)" fg:x="6553" fg:w="1"/><text x="79.0310%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.7810%" y="917" width="0.0120%" height="15" fill="rgb(235,147,12)" fg:x="6553" fg:w="1"/><text x="79.0310%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="78.7810%" y="901" width="0.0120%" height="15" fill="rgb(212,198,44)" fg:x="6553" fg:w="1"/><text x="79.0310%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="78.7810%" y="885" width="0.0120%" height="15" fill="rgb(218,68,50)" fg:x="6553" fg:w="1"/><text x="79.0310%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="78.7810%" y="869" width="0.0120%" height="15" fill="rgb(224,79,48)" fg:x="6553" fg:w="1"/><text x="79.0310%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="78.7810%" y="853" width="0.0120%" height="15" fill="rgb(213,191,50)" fg:x="6553" fg:w="1"/><text x="79.0310%" y="863.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="78.7810%" y="837" width="0.0120%" height="15" fill="rgb(254,146,10)" fg:x="6553" fg:w="1"/><text x="79.0310%" y="847.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="78.7810%" y="1013" width="0.0240%" height="15" fill="rgb(215,175,11)" fg:x="6553" fg:w="2"/><text x="79.0310%" y="1023.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="78.7810%" y="997" width="0.0240%" height="15" fill="rgb(207,49,7)" fg:x="6553" fg:w="2"/><text x="79.0310%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="78.7810%" y="981" width="0.0240%" height="15" fill="rgb(234,144,29)" fg:x="6553" fg:w="2"/><text x="79.0310%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="78.7810%" y="965" width="0.0240%" height="15" fill="rgb(213,222,48)" fg:x="6553" fg:w="2"/><text x="79.0310%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="78.7810%" y="949" width="0.0240%" height="15" fill="rgb(222,8,6)" fg:x="6553" fg:w="2"/><text x="79.0310%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="78.7930%" y="933" width="0.0120%" height="15" fill="rgb(221,114,49)" fg:x="6554" fg:w="1"/><text x="79.0430%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="78.8050%" y="1013" width="0.0361%" height="15" fill="rgb(250,140,42)" fg:x="6555" fg:w="3"/><text x="79.0550%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="78.8050%" y="997" width="0.0361%" height="15" fill="rgb(250,150,27)" fg:x="6555" fg:w="3"/><text x="79.0550%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="78.8050%" y="981" width="0.0361%" height="15" fill="rgb(252,159,3)" fg:x="6555" fg:w="3"/><text x="79.0550%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="78.8050%" y="965" width="0.0361%" height="15" fill="rgb(241,182,3)" fg:x="6555" fg:w="3"/><text x="79.0550%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="78.8050%" y="949" width="0.0361%" height="15" fill="rgb(236,3,9)" fg:x="6555" fg:w="3"/><text x="79.0550%" y="959.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="78.8050%" y="933" width="0.0361%" height="15" fill="rgb(223,227,51)" fg:x="6555" fg:w="3"/><text x="79.0550%" y="943.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="78.8050%" y="917" width="0.0361%" height="15" fill="rgb(232,133,30)" fg:x="6555" fg:w="3"/><text x="79.0550%" y="927.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="78.8170%" y="901" width="0.0240%" height="15" fill="rgb(209,93,27)" fg:x="6556" fg:w="2"/><text x="79.0670%" y="911.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="78.7569%" y="1077" width="0.0962%" height="15" fill="rgb(208,108,34)" fg:x="6551" fg:w="8"/><text x="79.0069%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.08%)</title><rect x="78.7689%" y="1061" width="0.0842%" height="15" fill="rgb(215,189,13)" fg:x="6552" fg:w="7"/><text x="79.0189%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.08%)</title><rect x="78.7689%" y="1045" width="0.0842%" height="15" fill="rgb(206,88,23)" fg:x="6552" fg:w="7"/><text x="79.0189%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="78.7689%" y="1029" width="0.0842%" height="15" fill="rgb(240,173,0)" fg:x="6552" fg:w="7"/><text x="79.0189%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="78.8411%" y="1013" width="0.0120%" height="15" fill="rgb(223,106,52)" fg:x="6558" fg:w="1"/><text x="79.0911%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="78.8651%" y="965" width="0.0120%" height="15" fill="rgb(206,130,16)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="78.8651%" y="949" width="0.0120%" height="15" fill="rgb(220,54,25)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="78.8651%" y="933" width="0.0120%" height="15" fill="rgb(210,4,38)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="78.8651%" y="917" width="0.0120%" height="15" fill="rgb(238,94,39)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.8651%" y="901" width="0.0120%" height="15" fill="rgb(234,124,34)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="78.8651%" y="885" width="0.0120%" height="15" fill="rgb(221,91,40)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="78.8651%" y="869" width="0.0120%" height="15" fill="rgb(246,53,28)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="78.8651%" y="853" width="0.0120%" height="15" fill="rgb(229,109,7)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="78.8651%" y="837" width="0.0120%" height="15" fill="rgb(249,117,8)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="78.8651%" y="821" width="0.0120%" height="15" fill="rgb(210,181,1)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="831.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="78.8651%" y="805" width="0.0120%" height="15" fill="rgb(211,66,1)" fg:x="6560" fg:w="1"/><text x="79.1151%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="78.8771%" y="917" width="0.0240%" height="15" fill="rgb(221,90,14)" fg:x="6561" fg:w="2"/><text x="79.1271%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="78.8771%" y="901" width="0.0240%" height="15" fill="rgb(219,222,44)" fg:x="6561" fg:w="2"/><text x="79.1271%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="78.8771%" y="885" width="0.0240%" height="15" fill="rgb(246,34,33)" fg:x="6561" fg:w="2"/><text x="79.1271%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="78.8771%" y="869" width="0.0240%" height="15" fill="rgb(227,135,41)" fg:x="6561" fg:w="2"/><text x="79.1271%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="78.8771%" y="965" width="0.0481%" height="15" fill="rgb(226,15,14)" fg:x="6561" fg:w="4"/><text x="79.1271%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="78.8771%" y="949" width="0.0481%" height="15" fill="rgb(236,148,47)" fg:x="6561" fg:w="4"/><text x="79.1271%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="78.8771%" y="933" width="0.0481%" height="15" fill="rgb(233,162,52)" fg:x="6561" fg:w="4"/><text x="79.1271%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="78.9012%" y="917" width="0.0240%" height="15" fill="rgb(244,35,28)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="78.9012%" y="901" width="0.0240%" height="15" fill="rgb(205,121,10)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="911.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="78.9012%" y="885" width="0.0240%" height="15" fill="rgb(250,58,18)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="78.9012%" y="869" width="0.0240%" height="15" fill="rgb(216,37,13)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="78.9012%" y="853" width="0.0240%" height="15" fill="rgb(221,215,42)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="863.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="78.9012%" y="837" width="0.0240%" height="15" fill="rgb(217,214,19)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="847.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="78.9012%" y="821" width="0.0240%" height="15" fill="rgb(233,139,13)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="831.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="78.9012%" y="805" width="0.0240%" height="15" fill="rgb(247,168,23)" fg:x="6563" fg:w="2"/><text x="79.1512%" y="815.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="78.9252%" y="917" width="0.0481%" height="15" fill="rgb(207,202,1)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="927.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="78.9252%" y="901" width="0.0481%" height="15" fill="rgb(220,155,48)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="78.9252%" y="885" width="0.0481%" height="15" fill="rgb(250,43,26)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="78.9252%" y="869" width="0.0481%" height="15" fill="rgb(212,190,23)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="78.9252%" y="853" width="0.0481%" height="15" fill="rgb(216,39,24)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="78.9252%" y="837" width="0.0481%" height="15" fill="rgb(252,113,16)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="78.9252%" y="821" width="0.0481%" height="15" fill="rgb(208,113,19)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="78.9252%" y="805" width="0.0481%" height="15" fill="rgb(234,107,25)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="78.9252%" y="789" width="0.0481%" height="15" fill="rgb(234,217,51)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="78.9252%" y="773" width="0.0481%" height="15" fill="rgb(251,29,42)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="783.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="78.9252%" y="757" width="0.0481%" height="15" fill="rgb(221,62,51)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="767.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="78.9252%" y="741" width="0.0481%" height="15" fill="rgb(240,192,43)" fg:x="6565" fg:w="4"/><text x="79.1752%" y="751.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="78.9493%" y="725" width="0.0240%" height="15" fill="rgb(224,157,47)" fg:x="6567" fg:w="2"/><text x="79.1993%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="78.9733%" y="917" width="0.0361%" height="15" fill="rgb(226,84,45)" fg:x="6569" fg:w="3"/><text x="79.2233%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="78.9733%" y="901" width="0.0361%" height="15" fill="rgb(208,207,23)" fg:x="6569" fg:w="3"/><text x="79.2233%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="78.9733%" y="885" width="0.0361%" height="15" fill="rgb(253,34,51)" fg:x="6569" fg:w="3"/><text x="79.2233%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="78.9853%" y="869" width="0.0240%" height="15" fill="rgb(227,26,34)" fg:x="6570" fg:w="2"/><text x="79.2353%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="78.9853%" y="853" width="0.0240%" height="15" fill="rgb(245,75,19)" fg:x="6570" fg:w="2"/><text x="79.2353%" y="863.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="78.9853%" y="837" width="0.0240%" height="15" fill="rgb(250,191,31)" fg:x="6570" fg:w="2"/><text x="79.2353%" y="847.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="78.9974%" y="821" width="0.0120%" height="15" fill="rgb(224,11,50)" fg:x="6571" fg:w="1"/><text x="79.2474%" y="831.50"></text></g><g><title>core::clone::Clone::clone (16 samples, 0.19%)</title><rect x="78.8531%" y="997" width="0.1924%" height="15" fill="rgb(231,171,7)" fg:x="6559" fg:w="16"/><text x="79.1031%" y="1007.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (16 samples, 0.19%)</title><rect x="78.8531%" y="981" width="0.1924%" height="15" fill="rgb(252,214,10)" fg:x="6559" fg:w="16"/><text x="79.1031%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.12%)</title><rect x="78.9252%" y="965" width="0.1202%" height="15" fill="rgb(249,45,46)" fg:x="6565" fg:w="10"/><text x="79.1752%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.12%)</title><rect x="78.9252%" y="949" width="0.1202%" height="15" fill="rgb(240,173,7)" fg:x="6565" fg:w="10"/><text x="79.1752%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.12%)</title><rect x="78.9252%" y="933" width="0.1202%" height="15" fill="rgb(235,214,13)" fg:x="6565" fg:w="10"/><text x="79.1752%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="79.0094%" y="917" width="0.0361%" height="15" fill="rgb(245,156,8)" fg:x="6572" fg:w="3"/><text x="79.2594%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="79.0454%" y="981" width="0.0240%" height="15" fill="rgb(235,46,12)" fg:x="6575" fg:w="2"/><text x="79.2954%" y="991.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="79.0454%" y="965" width="0.0240%" height="15" fill="rgb(221,81,14)" fg:x="6575" fg:w="2"/><text x="79.2954%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (19 samples, 0.23%)</title><rect x="78.8531%" y="1029" width="0.2284%" height="15" fill="rgb(238,207,9)" fg:x="6559" fg:w="19"/><text x="79.1031%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (19 samples, 0.23%)</title><rect x="78.8531%" y="1013" width="0.2284%" height="15" fill="rgb(224,129,35)" fg:x="6559" fg:w="19"/><text x="79.1031%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="79.0454%" y="997" width="0.0361%" height="15" fill="rgb(243,218,34)" fg:x="6575" fg:w="3"/><text x="79.2954%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="79.0695%" y="981" width="0.0120%" height="15" fill="rgb(220,166,13)" fg:x="6577" fg:w="1"/><text x="79.3195%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="79.0695%" y="965" width="0.0120%" height="15" fill="rgb(227,167,49)" fg:x="6577" fg:w="1"/><text x="79.3195%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="79.0695%" y="949" width="0.0120%" height="15" fill="rgb(234,142,12)" fg:x="6577" fg:w="1"/><text x="79.3195%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (31 samples, 0.37%)</title><rect x="78.8531%" y="1077" width="0.3727%" height="15" fill="rgb(207,100,48)" fg:x="6559" fg:w="31"/><text x="79.1031%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.37%)</title><rect x="78.8531%" y="1061" width="0.3727%" height="15" fill="rgb(210,25,14)" fg:x="6559" fg:w="31"/><text x="79.1031%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.37%)</title><rect x="78.8531%" y="1045" width="0.3727%" height="15" fill="rgb(246,116,27)" fg:x="6559" fg:w="31"/><text x="79.1031%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (12 samples, 0.14%)</title><rect x="79.0815%" y="1029" width="0.1443%" height="15" fill="rgb(214,193,42)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (12 samples, 0.14%)</title><rect x="79.0815%" y="1013" width="0.1443%" height="15" fill="rgb(214,122,8)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="1023.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (12 samples, 0.14%)</title><rect x="79.0815%" y="997" width="0.1443%" height="15" fill="rgb(244,173,18)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.14%)</title><rect x="79.0815%" y="981" width="0.1443%" height="15" fill="rgb(232,68,19)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.14%)</title><rect x="79.0815%" y="965" width="0.1443%" height="15" fill="rgb(236,224,1)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="975.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.14%)</title><rect x="79.0815%" y="949" width="0.1443%" height="15" fill="rgb(240,11,8)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="959.50"></text></g><g><title>malloc (12 samples, 0.14%)</title><rect x="79.0815%" y="933" width="0.1443%" height="15" fill="rgb(244,159,20)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="943.50"></text></g><g><title>[libc.so.6] (12 samples, 0.14%)</title><rect x="79.0815%" y="917" width="0.1443%" height="15" fill="rgb(240,223,54)" fg:x="6578" fg:w="12"/><text x="79.3315%" y="927.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="79.0935%" y="901" width="0.1322%" height="15" fill="rgb(237,146,5)" fg:x="6579" fg:w="11"/><text x="79.3435%" y="911.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="79.1536%" y="885" width="0.0721%" height="15" fill="rgb(218,221,32)" fg:x="6584" fg:w="6"/><text x="79.4036%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.10%)</title><rect x="79.3821%" y="885" width="0.0962%" height="15" fill="rgb(244,96,26)" fg:x="6603" fg:w="8"/><text x="79.6321%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.10%)</title><rect x="79.3821%" y="869" width="0.0962%" height="15" fill="rgb(245,184,37)" fg:x="6603" fg:w="8"/><text x="79.6321%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.10%)</title><rect x="79.3821%" y="853" width="0.0962%" height="15" fill="rgb(248,91,47)" fg:x="6603" fg:w="8"/><text x="79.6321%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="79.4061%" y="837" width="0.0721%" height="15" fill="rgb(243,199,8)" fg:x="6605" fg:w="6"/><text x="79.6561%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="79.4061%" y="821" width="0.0721%" height="15" fill="rgb(249,12,15)" fg:x="6605" fg:w="6"/><text x="79.6561%" y="831.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="79.4061%" y="805" width="0.0721%" height="15" fill="rgb(245,97,12)" fg:x="6605" fg:w="6"/><text x="79.6561%" y="815.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="79.4061%" y="789" width="0.0721%" height="15" fill="rgb(244,61,1)" fg:x="6605" fg:w="6"/><text x="79.6561%" y="799.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="79.4302%" y="773" width="0.0481%" height="15" fill="rgb(222,194,10)" fg:x="6607" fg:w="4"/><text x="79.6802%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="79.3821%" y="949" width="0.1082%" height="15" fill="rgb(226,178,8)" fg:x="6603" fg:w="9"/><text x="79.6321%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="79.3821%" y="933" width="0.1082%" height="15" fill="rgb(241,32,34)" fg:x="6603" fg:w="9"/><text x="79.6321%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="79.3821%" y="917" width="0.1082%" height="15" fill="rgb(254,26,6)" fg:x="6603" fg:w="9"/><text x="79.6321%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="79.3821%" y="901" width="0.1082%" height="15" fill="rgb(249,71,11)" fg:x="6603" fg:w="9"/><text x="79.6321%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="79.4782%" y="885" width="0.0120%" height="15" fill="rgb(232,170,27)" fg:x="6611" fg:w="1"/><text x="79.7282%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="79.5023%" y="901" width="0.0240%" height="15" fill="rgb(214,223,17)" fg:x="6613" fg:w="2"/><text x="79.7523%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="79.5023%" y="885" width="0.0240%" height="15" fill="rgb(250,18,15)" fg:x="6613" fg:w="2"/><text x="79.7523%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="79.5023%" y="869" width="0.0240%" height="15" fill="rgb(212,153,51)" fg:x="6613" fg:w="2"/><text x="79.7523%" y="879.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="79.5023%" y="853" width="0.0240%" height="15" fill="rgb(219,194,12)" fg:x="6613" fg:w="2"/><text x="79.7523%" y="863.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="79.5263%" y="869" width="0.0120%" height="15" fill="rgb(212,58,17)" fg:x="6615" fg:w="1"/><text x="79.7763%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="79.5263%" y="853" width="0.0120%" height="15" fill="rgb(254,5,10)" fg:x="6615" fg:w="1"/><text x="79.7763%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="79.5263%" y="837" width="0.0120%" height="15" fill="rgb(246,91,7)" fg:x="6615" fg:w="1"/><text x="79.7763%" y="847.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (43 samples, 0.52%)</title><rect x="79.4903%" y="949" width="0.5170%" height="15" fill="rgb(218,108,49)" fg:x="6612" fg:w="43"/><text x="79.7403%" y="959.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.52%)</title><rect x="79.4903%" y="933" width="0.5170%" height="15" fill="rgb(238,123,20)" fg:x="6612" fg:w="43"/><text x="79.7403%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (43 samples, 0.52%)</title><rect x="79.4903%" y="917" width="0.5170%" height="15" fill="rgb(231,69,23)" fg:x="6612" fg:w="43"/><text x="79.7403%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (40 samples, 0.48%)</title><rect x="79.5263%" y="901" width="0.4809%" height="15" fill="rgb(230,209,3)" fg:x="6615" fg:w="40"/><text x="79.7763%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (40 samples, 0.48%)</title><rect x="79.5263%" y="885" width="0.4809%" height="15" fill="rgb(231,19,0)" fg:x="6615" fg:w="40"/><text x="79.7763%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (39 samples, 0.47%)</title><rect x="79.5384%" y="869" width="0.4689%" height="15" fill="rgb(226,192,25)" fg:x="6616" fg:w="39"/><text x="79.7884%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.47%)</title><rect x="79.5384%" y="853" width="0.4689%" height="15" fill="rgb(223,175,53)" fg:x="6616" fg:w="39"/><text x="79.7884%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.47%)</title><rect x="79.5384%" y="837" width="0.4689%" height="15" fill="rgb(248,35,51)" fg:x="6616" fg:w="39"/><text x="79.7884%" y="847.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.46%)</title><rect x="79.5504%" y="821" width="0.4568%" height="15" fill="rgb(230,37,26)" fg:x="6617" fg:w="38"/><text x="79.8004%" y="831.50"></text></g><g><title>malloc (38 samples, 0.46%)</title><rect x="79.5504%" y="805" width="0.4568%" height="15" fill="rgb(206,120,22)" fg:x="6617" fg:w="38"/><text x="79.8004%" y="815.50"></text></g><g><title>[libc.so.6] (18 samples, 0.22%)</title><rect x="79.7908%" y="789" width="0.2164%" height="15" fill="rgb(207,165,28)" fg:x="6637" fg:w="18"/><text x="80.0408%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="79.9952%" y="773" width="0.0120%" height="15" fill="rgb(226,23,46)" fg:x="6654" fg:w="1"/><text x="80.2452%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="80.0313%" y="901" width="0.0120%" height="15" fill="rgb(208,130,44)" fg:x="6657" fg:w="1"/><text x="80.2813%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="80.0313%" y="885" width="0.0120%" height="15" fill="rgb(231,67,8)" fg:x="6657" fg:w="1"/><text x="80.2813%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="80.0433%" y="869" width="0.0120%" height="15" fill="rgb(205,183,22)" fg:x="6658" fg:w="1"/><text x="80.2933%" y="879.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="80.0553%" y="821" width="0.0361%" height="15" fill="rgb(224,47,9)" fg:x="6659" fg:w="3"/><text x="80.3053%" y="831.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="80.0553%" y="805" width="0.0361%" height="15" fill="rgb(250,183,49)" fg:x="6659" fg:w="3"/><text x="80.3053%" y="815.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (38 samples, 0.46%)</title><rect x="80.0433%" y="901" width="0.4568%" height="15" fill="rgb(220,151,39)" fg:x="6658" fg:w="38"/><text x="80.2933%" y="911.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (38 samples, 0.46%)</title><rect x="80.0433%" y="885" width="0.4568%" height="15" fill="rgb(220,118,20)" fg:x="6658" fg:w="38"/><text x="80.2933%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.44%)</title><rect x="80.0553%" y="869" width="0.4448%" height="15" fill="rgb(231,65,51)" fg:x="6659" fg:w="37"/><text x="80.3053%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.44%)</title><rect x="80.0553%" y="853" width="0.4448%" height="15" fill="rgb(253,125,37)" fg:x="6659" fg:w="37"/><text x="80.3053%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.44%)</title><rect x="80.0553%" y="837" width="0.4448%" height="15" fill="rgb(232,102,6)" fg:x="6659" fg:w="37"/><text x="80.3053%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (34 samples, 0.41%)</title><rect x="80.0914%" y="821" width="0.4088%" height="15" fill="rgb(251,105,13)" fg:x="6662" fg:w="34"/><text x="80.3414%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (34 samples, 0.41%)</title><rect x="80.0914%" y="805" width="0.4088%" height="15" fill="rgb(222,179,29)" fg:x="6662" fg:w="34"/><text x="80.3414%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (34 samples, 0.41%)</title><rect x="80.0914%" y="789" width="0.4088%" height="15" fill="rgb(229,180,53)" fg:x="6662" fg:w="34"/><text x="80.3414%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.38%)</title><rect x="80.1154%" y="773" width="0.3847%" height="15" fill="rgb(238,104,13)" fg:x="6664" fg:w="32"/><text x="80.3654%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.38%)</title><rect x="80.1154%" y="757" width="0.3847%" height="15" fill="rgb(210,130,5)" fg:x="6664" fg:w="32"/><text x="80.3654%" y="767.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.38%)</title><rect x="80.1154%" y="741" width="0.3847%" height="15" fill="rgb(233,87,49)" fg:x="6664" fg:w="32"/><text x="80.3654%" y="751.50"></text></g><g><title>malloc (30 samples, 0.36%)</title><rect x="80.1395%" y="725" width="0.3607%" height="15" fill="rgb(243,34,9)" fg:x="6666" fg:w="30"/><text x="80.3895%" y="735.50"></text></g><g><title>[libc.so.6] (15 samples, 0.18%)</title><rect x="80.3198%" y="709" width="0.1803%" height="15" fill="rgb(235,225,10)" fg:x="6681" fg:w="15"/><text x="80.5698%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40 samples, 0.48%)</title><rect x="80.5001%" y="901" width="0.4809%" height="15" fill="rgb(212,0,30)" fg:x="6696" fg:w="40"/><text x="80.7501%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (40 samples, 0.48%)</title><rect x="80.5001%" y="885" width="0.4809%" height="15" fill="rgb(211,177,0)" fg:x="6696" fg:w="40"/><text x="80.7501%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (40 samples, 0.48%)</title><rect x="80.5001%" y="869" width="0.4809%" height="15" fill="rgb(225,220,11)" fg:x="6696" fg:w="40"/><text x="80.7501%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.46%)</title><rect x="80.5242%" y="853" width="0.4568%" height="15" fill="rgb(215,10,13)" fg:x="6698" fg:w="38"/><text x="80.7742%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.46%)</title><rect x="80.5242%" y="837" width="0.4568%" height="15" fill="rgb(240,177,14)" fg:x="6698" fg:w="38"/><text x="80.7742%" y="847.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.46%)</title><rect x="80.5242%" y="821" width="0.4568%" height="15" fill="rgb(243,7,39)" fg:x="6698" fg:w="38"/><text x="80.7742%" y="831.50"></text></g><g><title>malloc (37 samples, 0.44%)</title><rect x="80.5362%" y="805" width="0.4448%" height="15" fill="rgb(212,99,0)" fg:x="6699" fg:w="37"/><text x="80.7862%" y="815.50"></text></g><g><title>[libc.so.6] (24 samples, 0.29%)</title><rect x="80.6925%" y="789" width="0.2885%" height="15" fill="rgb(225,162,48)" fg:x="6712" fg:w="24"/><text x="80.9425%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="80.9690%" y="773" width="0.0120%" height="15" fill="rgb(246,16,25)" fg:x="6735" fg:w="1"/><text x="81.2190%" y="783.50"></text></g><g><title>core::clone::Clone::clone (146 samples, 1.76%)</title><rect x="79.2618%" y="981" width="1.7552%" height="15" fill="rgb(220,150,2)" fg:x="6593" fg:w="146"/><text x="79.5118%" y="991.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (146 samples, 1.76%)</title><rect x="79.2618%" y="965" width="1.7552%" height="15" fill="rgb(237,113,11)" fg:x="6593" fg:w="146"/><text x="79.5118%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (84 samples, 1.01%)</title><rect x="80.0072%" y="949" width="1.0099%" height="15" fill="rgb(236,70,20)" fg:x="6655" fg:w="84"/><text x="80.2572%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (84 samples, 1.01%)</title><rect x="80.0072%" y="933" width="1.0099%" height="15" fill="rgb(234,94,7)" fg:x="6655" fg:w="84"/><text x="80.2572%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (84 samples, 1.01%)</title><rect x="80.0072%" y="917" width="1.0099%" height="15" fill="rgb(250,221,0)" fg:x="6655" fg:w="84"/><text x="80.2572%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="80.9810%" y="901" width="0.0361%" height="15" fill="rgb(245,149,46)" fg:x="6736" fg:w="3"/><text x="81.2310%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (149 samples, 1.79%)</title><rect x="79.2618%" y="1013" width="1.7913%" height="15" fill="rgb(215,37,27)" fg:x="6593" fg:w="149"/><text x="79.5118%" y="1023.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (149 samples, 1.79%)</title><rect x="79.2618%" y="997" width="1.7913%" height="15" fill="rgb(232,65,3)" fg:x="6593" fg:w="149"/><text x="79.5118%" y="1007.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="81.0171%" y="981" width="0.0361%" height="15" fill="rgb(214,2,16)" fg:x="6739" fg:w="3"/><text x="81.2671%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.04%)</title><rect x="81.0171%" y="965" width="0.0361%" height="15" fill="rgb(227,131,50)" fg:x="6739" fg:w="3"/><text x="81.2671%" y="975.50"></text></g><g><title>core::ptr::write (3 samples, 0.04%)</title><rect x="81.0171%" y="949" width="0.0361%" height="15" fill="rgb(247,131,45)" fg:x="6739" fg:w="3"/><text x="81.2671%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="81.0291%" y="933" width="0.0240%" height="15" fill="rgb(215,97,47)" fg:x="6740" fg:w="2"/><text x="81.2791%" y="943.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.01%)</title><rect x="81.0531%" y="981" width="0.0120%" height="15" fill="rgb(233,143,12)" fg:x="6742" fg:w="1"/><text x="81.3031%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="81.0531%" y="965" width="0.0120%" height="15" fill="rgb(222,57,17)" fg:x="6742" fg:w="1"/><text x="81.3031%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="81.0531%" y="949" width="0.0120%" height="15" fill="rgb(214,119,38)" fg:x="6742" fg:w="1"/><text x="81.3031%" y="959.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (155 samples, 1.86%)</title><rect x="79.2258%" y="1077" width="1.8634%" height="15" fill="rgb(217,28,47)" fg:x="6590" fg:w="155"/><text x="79.4758%" y="1087.50">c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (153 samples, 1.84%)</title><rect x="79.2498%" y="1061" width="1.8394%" height="15" fill="rgb(231,14,52)" fg:x="6592" fg:w="153"/><text x="79.4998%" y="1071.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (153 samples, 1.84%)</title><rect x="79.2498%" y="1045" width="1.8394%" height="15" fill="rgb(220,158,18)" fg:x="6592" fg:w="153"/><text x="79.4998%" y="1055.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (153 samples, 1.84%)</title><rect x="79.2498%" y="1029" width="1.8394%" height="15" fill="rgb(222,143,46)" fg:x="6592" fg:w="153"/><text x="79.4998%" y="1039.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="81.0531%" y="1013" width="0.0361%" height="15" fill="rgb(227,165,5)" fg:x="6742" fg:w="3"/><text x="81.3031%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.04%)</title><rect x="81.0531%" y="997" width="0.0361%" height="15" fill="rgb(216,222,49)" fg:x="6742" fg:w="3"/><text x="81.3031%" y="1007.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="81.0652%" y="981" width="0.0240%" height="15" fill="rgb(238,73,39)" fg:x="6743" fg:w="2"/><text x="81.3152%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="81.0652%" y="965" width="0.0240%" height="15" fill="rgb(252,115,9)" fg:x="6743" fg:w="2"/><text x="81.3152%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="81.0652%" y="949" width="0.0240%" height="15" fill="rgb(238,202,4)" fg:x="6743" fg:w="2"/><text x="81.3152%" y="959.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="81.0652%" y="933" width="0.0240%" height="15" fill="rgb(252,153,44)" fg:x="6743" fg:w="2"/><text x="81.3152%" y="943.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="81.0652%" y="917" width="0.0240%" height="15" fill="rgb(235,128,27)" fg:x="6743" fg:w="2"/><text x="81.3152%" y="927.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="81.0652%" y="901" width="0.0240%" height="15" fill="rgb(221,121,47)" fg:x="6743" fg:w="2"/><text x="81.3152%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="81.0772%" y="885" width="0.0120%" height="15" fill="rgb(247,211,47)" fg:x="6744" fg:w="1"/><text x="81.3272%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="1077" width="0.0120%" height="15" fill="rgb(252,47,49)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="1061" width="0.0120%" height="15" fill="rgb(219,119,53)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="1045" width="0.0120%" height="15" fill="rgb(243,165,53)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="81.0892%" y="1029" width="0.0120%" height="15" fill="rgb(230,12,35)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="1013" width="0.0120%" height="15" fill="rgb(239,57,49)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="997" width="0.0120%" height="15" fill="rgb(231,154,7)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="981" width="0.0120%" height="15" fill="rgb(248,81,34)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="965" width="0.0120%" height="15" fill="rgb(247,9,5)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="81.0892%" y="949" width="0.0120%" height="15" fill="rgb(228,172,27)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="81.0892%" y="933" width="0.0120%" height="15" fill="rgb(230,57,44)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="81.0892%" y="917" width="0.0120%" height="15" fill="rgb(249,35,22)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="81.0892%" y="901" width="0.0120%" height="15" fill="rgb(250,137,27)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="911.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="81.0892%" y="885" width="0.0120%" height="15" fill="rgb(251,57,31)" fg:x="6745" fg:w="1"/><text x="81.3392%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="81.1132%" y="997" width="0.0120%" height="15" fill="rgb(238,60,0)" fg:x="6747" fg:w="1"/><text x="81.3632%" y="1007.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="81.1132%" y="981" width="0.0120%" height="15" fill="rgb(242,185,39)" fg:x="6747" fg:w="1"/><text x="81.3632%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4 samples, 0.05%)</title><rect x="81.1253%" y="885" width="0.0481%" height="15" fill="rgb(240,63,43)" fg:x="6748" fg:w="4"/><text x="81.3753%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u32 (4 samples, 0.05%)</title><rect x="81.1253%" y="869" width="0.0481%" height="15" fill="rgb(236,155,6)" fg:x="6748" fg:w="4"/><text x="81.3753%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="81.1373%" y="853" width="0.0361%" height="15" fill="rgb(215,11,29)" fg:x="6749" fg:w="3"/><text x="81.3873%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="81.1373%" y="837" width="0.0361%" height="15" fill="rgb(228,180,48)" fg:x="6749" fg:w="3"/><text x="81.3873%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="81.1373%" y="821" width="0.0361%" height="15" fill="rgb(241,102,12)" fg:x="6749" fg:w="3"/><text x="81.3873%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="81.1493%" y="805" width="0.0240%" height="15" fill="rgb(246,213,4)" fg:x="6750" fg:w="2"/><text x="81.3993%" y="815.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="81.1253%" y="901" width="0.0721%" height="15" fill="rgb(218,134,35)" fg:x="6748" fg:w="6"/><text x="81.3753%" y="911.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (2 samples, 0.02%)</title><rect x="81.1734%" y="885" width="0.0240%" height="15" fill="rgb(251,117,35)" fg:x="6752" fg:w="2"/><text x="81.4234%" y="895.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (2 samples, 0.02%)</title><rect x="81.1734%" y="869" width="0.0240%" height="15" fill="rgb(206,156,45)" fg:x="6752" fg:w="2"/><text x="81.4234%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="81.1974%" y="821" width="0.0120%" height="15" fill="rgb(218,52,27)" fg:x="6754" fg:w="1"/><text x="81.4474%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="81.2094%" y="821" width="0.0120%" height="15" fill="rgb(238,83,36)" fg:x="6755" fg:w="1"/><text x="81.4594%" y="831.50"></text></g><g><title>core::hash::Hash::hash_slice (9 samples, 0.11%)</title><rect x="81.1253%" y="949" width="0.1082%" height="15" fill="rgb(218,53,43)" fg:x="6748" fg:w="9"/><text x="81.3753%" y="959.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="81.1253%" y="933" width="0.1082%" height="15" fill="rgb(239,54,39)" fg:x="6748" fg:w="9"/><text x="81.3753%" y="943.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="81.1253%" y="917" width="0.1082%" height="15" fill="rgb(212,198,13)" fg:x="6748" fg:w="9"/><text x="81.3753%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="81.1974%" y="901" width="0.0361%" height="15" fill="rgb(234,54,46)" fg:x="6754" fg:w="3"/><text x="81.4474%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="81.1974%" y="885" width="0.0361%" height="15" fill="rgb(217,120,7)" fg:x="6754" fg:w="3"/><text x="81.4474%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="81.1974%" y="869" width="0.0361%" height="15" fill="rgb(246,39,15)" fg:x="6754" fg:w="3"/><text x="81.4474%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="81.1974%" y="853" width="0.0361%" height="15" fill="rgb(242,143,31)" fg:x="6754" fg:w="3"/><text x="81.4474%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="81.1974%" y="837" width="0.0361%" height="15" fill="rgb(252,60,24)" fg:x="6754" fg:w="3"/><text x="81.4474%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="81.2214%" y="821" width="0.0120%" height="15" fill="rgb(249,220,7)" fg:x="6756" fg:w="1"/><text x="81.4714%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.12%)</title><rect x="81.1253%" y="981" width="0.1202%" height="15" fill="rgb(236,67,13)" fg:x="6748" fg:w="10"/><text x="81.3753%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.12%)</title><rect x="81.1253%" y="965" width="0.1202%" height="15" fill="rgb(210,62,39)" fg:x="6748" fg:w="10"/><text x="81.3753%" y="975.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="81.2335%" y="949" width="0.0120%" height="15" fill="rgb(219,122,53)" fg:x="6757" fg:w="1"/><text x="81.4835%" y="959.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="81.2335%" y="933" width="0.0120%" height="15" fill="rgb(218,87,25)" fg:x="6757" fg:w="1"/><text x="81.4835%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.2335%" y="917" width="0.0120%" height="15" fill="rgb(234,179,48)" fg:x="6757" fg:w="1"/><text x="81.4835%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.2335%" y="901" width="0.0120%" height="15" fill="rgb(248,90,0)" fg:x="6757" fg:w="1"/><text x="81.4835%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="81.2335%" y="885" width="0.0120%" height="15" fill="rgb(207,228,37)" fg:x="6757" fg:w="1"/><text x="81.4835%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="81.2816%" y="869" width="0.0120%" height="15" fill="rgb(235,214,15)" fg:x="6761" fg:w="1"/><text x="81.5316%" y="879.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="81.2936%" y="869" width="0.0120%" height="15" fill="rgb(210,144,39)" fg:x="6762" fg:w="1"/><text x="81.5436%" y="879.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="81.2936%" y="853" width="0.0120%" height="15" fill="rgb(222,67,41)" fg:x="6762" fg:w="1"/><text x="81.5436%" y="863.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="81.2936%" y="837" width="0.0120%" height="15" fill="rgb(205,35,37)" fg:x="6762" fg:w="1"/><text x="81.5436%" y="847.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="81.2455%" y="965" width="0.0962%" height="15" fill="rgb(216,125,40)" fg:x="6758" fg:w="8"/><text x="81.4955%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (7 samples, 0.08%)</title><rect x="81.2575%" y="949" width="0.0842%" height="15" fill="rgb(228,227,20)" fg:x="6759" fg:w="7"/><text x="81.5075%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u32 (7 samples, 0.08%)</title><rect x="81.2575%" y="933" width="0.0842%" height="15" fill="rgb(242,173,45)" fg:x="6759" fg:w="7"/><text x="81.5075%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="81.2575%" y="917" width="0.0842%" height="15" fill="rgb(215,79,24)" fg:x="6759" fg:w="7"/><text x="81.5075%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="81.2575%" y="901" width="0.0842%" height="15" fill="rgb(238,164,38)" fg:x="6759" fg:w="7"/><text x="81.5075%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="81.2575%" y="885" width="0.0842%" height="15" fill="rgb(245,196,38)" fg:x="6759" fg:w="7"/><text x="81.5075%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.04%)</title><rect x="81.3056%" y="869" width="0.0361%" height="15" fill="rgb(231,217,29)" fg:x="6763" fg:w="3"/><text x="81.5556%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="81.3296%" y="853" width="0.0120%" height="15" fill="rgb(245,6,4)" fg:x="6765" fg:w="1"/><text x="81.5796%" y="863.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="81.2455%" y="981" width="0.1082%" height="15" fill="rgb(214,76,49)" fg:x="6758" fg:w="9"/><text x="81.4955%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="81.3417%" y="965" width="0.0120%" height="15" fill="rgb(205,96,12)" fg:x="6766" fg:w="1"/><text x="81.5917%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="81.3417%" y="949" width="0.0120%" height="15" fill="rgb(243,131,4)" fg:x="6766" fg:w="1"/><text x="81.5917%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="81.3417%" y="933" width="0.0120%" height="15" fill="rgb(214,114,4)" fg:x="6766" fg:w="1"/><text x="81.5917%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="81.3417%" y="917" width="0.0120%" height="15" fill="rgb(234,215,15)" fg:x="6766" fg:w="1"/><text x="81.5917%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="81.3417%" y="901" width="0.0120%" height="15" fill="rgb(250,216,45)" fg:x="6766" fg:w="1"/><text x="81.5917%" y="911.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (21 samples, 0.25%)</title><rect x="81.1253%" y="997" width="0.2525%" height="15" fill="rgb(236,128,4)" fg:x="6748" fg:w="21"/><text x="81.3753%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="81.3537%" y="981" width="0.0240%" height="15" fill="rgb(234,50,33)" fg:x="6767" fg:w="2"/><text x="81.6037%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="81.3537%" y="965" width="0.0240%" height="15" fill="rgb(253,131,37)" fg:x="6767" fg:w="2"/><text x="81.6037%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="81.3537%" y="949" width="0.0240%" height="15" fill="rgb(218,55,27)" fg:x="6767" fg:w="2"/><text x="81.6037%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="81.3537%" y="933" width="0.0240%" height="15" fill="rgb(241,220,28)" fg:x="6767" fg:w="2"/><text x="81.6037%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="81.3657%" y="917" width="0.0120%" height="15" fill="rgb(241,90,48)" fg:x="6768" fg:w="1"/><text x="81.6157%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="81.3657%" y="901" width="0.0120%" height="15" fill="rgb(216,43,37)" fg:x="6768" fg:w="1"/><text x="81.6157%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="81.3777%" y="997" width="0.0120%" height="15" fill="rgb(207,173,9)" fg:x="6769" fg:w="1"/><text x="81.6277%" y="1007.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="81.3777%" y="981" width="0.0120%" height="15" fill="rgb(240,126,30)" fg:x="6769" fg:w="1"/><text x="81.6277%" y="991.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="81.3777%" y="965" width="0.0120%" height="15" fill="rgb(228,178,53)" fg:x="6769" fg:w="1"/><text x="81.6277%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="81.3777%" y="949" width="0.0120%" height="15" fill="rgb(217,33,4)" fg:x="6769" fg:w="1"/><text x="81.6277%" y="959.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="81.3898%" y="933" width="0.0120%" height="15" fill="rgb(206,124,34)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="943.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="81.3898%" y="917" width="0.0120%" height="15" fill="rgb(208,122,53)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="81.3898%" y="901" width="0.0120%" height="15" fill="rgb(215,202,26)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="81.3898%" y="885" width="0.0120%" height="15" fill="rgb(232,198,31)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="81.3898%" y="869" width="0.0120%" height="15" fill="rgb(222,23,35)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="81.3898%" y="853" width="0.0120%" height="15" fill="rgb(242,27,53)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="81.3898%" y="837" width="0.0120%" height="15" fill="rgb(210,216,42)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="81.3898%" y="821" width="0.0120%" height="15" fill="rgb(234,39,38)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="81.3898%" y="805" width="0.0120%" height="15" fill="rgb(235,126,54)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="81.3898%" y="789" width="0.0120%" height="15" fill="rgb(235,150,33)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="81.3898%" y="773" width="0.0120%" height="15" fill="rgb(249,49,53)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="81.3898%" y="757" width="0.0120%" height="15" fill="rgb(238,60,50)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="767.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="81.3898%" y="741" width="0.0120%" height="15" fill="rgb(210,5,2)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="81.3898%" y="725" width="0.0120%" height="15" fill="rgb(214,207,24)" fg:x="6770" fg:w="1"/><text x="81.6398%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.32%)</title><rect x="81.1012%" y="1029" width="0.3246%" height="15" fill="rgb(228,173,2)" fg:x="6746" fg:w="27"/><text x="81.3512%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.32%)</title><rect x="81.1012%" y="1013" width="0.3246%" height="15" fill="rgb(244,26,8)" fg:x="6746" fg:w="27"/><text x="81.3512%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.04%)</title><rect x="81.3898%" y="997" width="0.0361%" height="15" fill="rgb(249,153,35)" fg:x="6770" fg:w="3"/><text x="81.6398%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="81.3898%" y="981" width="0.0361%" height="15" fill="rgb(221,215,40)" fg:x="6770" fg:w="3"/><text x="81.6398%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="81.3898%" y="965" width="0.0361%" height="15" fill="rgb(238,106,35)" fg:x="6770" fg:w="3"/><text x="81.6398%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="81.3898%" y="949" width="0.0361%" height="15" fill="rgb(207,195,21)" fg:x="6770" fg:w="3"/><text x="81.6398%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="81.4018%" y="933" width="0.0240%" height="15" fill="rgb(205,43,29)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="81.4018%" y="917" width="0.0240%" height="15" fill="rgb(236,35,21)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="81.4018%" y="901" width="0.0240%" height="15" fill="rgb(244,74,8)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="81.4018%" y="885" width="0.0240%" height="15" fill="rgb(241,229,7)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="81.4018%" y="869" width="0.0240%" height="15" fill="rgb(212,223,25)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="81.4018%" y="853" width="0.0240%" height="15" fill="rgb(234,58,53)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="863.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="81.4018%" y="837" width="0.0240%" height="15" fill="rgb(244,36,1)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="847.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="81.4018%" y="821" width="0.0240%" height="15" fill="rgb(222,40,54)" fg:x="6771" fg:w="2"/><text x="81.6518%" y="831.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="81.4258%" y="757" width="0.0240%" height="15" fill="rgb(210,207,39)" fg:x="6773" fg:w="2"/><text x="81.6758%" y="767.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (1 samples, 0.01%)</title><rect x="81.4378%" y="741" width="0.0120%" height="15" fill="rgb(234,52,14)" fg:x="6774" fg:w="1"/><text x="81.6878%" y="751.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="81.4258%" y="773" width="0.0361%" height="15" fill="rgb(239,108,46)" fg:x="6773" fg:w="3"/><text x="81.6758%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="81.4499%" y="757" width="0.0120%" height="15" fill="rgb(252,223,5)" fg:x="6775" fg:w="1"/><text x="81.6999%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="81.4499%" y="741" width="0.0120%" height="15" fill="rgb(227,181,11)" fg:x="6775" fg:w="1"/><text x="81.6999%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="81.4499%" y="725" width="0.0120%" height="15" fill="rgb(248,126,40)" fg:x="6775" fg:w="1"/><text x="81.6999%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="81.4499%" y="709" width="0.0120%" height="15" fill="rgb(243,1,18)" fg:x="6775" fg:w="1"/><text x="81.6999%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="81.4499%" y="693" width="0.0120%" height="15" fill="rgb(214,145,23)" fg:x="6775" fg:w="1"/><text x="81.6999%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="81.4499%" y="677" width="0.0120%" height="15" fill="rgb(241,218,11)" fg:x="6775" fg:w="1"/><text x="81.6999%" y="687.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (5 samples, 0.06%)</title><rect x="81.4258%" y="917" width="0.0601%" height="15" fill="rgb(214,219,24)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.06%)</title><rect x="81.4258%" y="901" width="0.0601%" height="15" fill="rgb(235,32,7)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.06%)</title><rect x="81.4258%" y="885" width="0.0601%" height="15" fill="rgb(227,121,28)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.06%)</title><rect x="81.4258%" y="869" width="0.0601%" height="15" fill="rgb(216,129,49)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.06%)</title><rect x="81.4258%" y="853" width="0.0601%" height="15" fill="rgb(207,194,50)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (5 samples, 0.06%)</title><rect x="81.4258%" y="837" width="0.0601%" height="15" fill="rgb(207,4,18)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (5 samples, 0.06%)</title><rect x="81.4258%" y="821" width="0.0601%" height="15" fill="rgb(213,50,30)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.06%)</title><rect x="81.4258%" y="805" width="0.0601%" height="15" fill="rgb(208,77,22)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (5 samples, 0.06%)</title><rect x="81.4258%" y="789" width="0.0601%" height="15" fill="rgb(244,204,34)" fg:x="6773" fg:w="5"/><text x="81.6758%" y="799.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="773" width="0.0240%" height="15" fill="rgb(230,20,17)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="757" width="0.0240%" height="15" fill="rgb(237,83,15)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="81.4619%" y="741" width="0.0240%" height="15" fill="rgb(221,109,25)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="81.4619%" y="725" width="0.0240%" height="15" fill="rgb(205,194,52)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="81.4619%" y="709" width="0.0240%" height="15" fill="rgb(244,173,54)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.02%)</title><rect x="81.4619%" y="693" width="0.0240%" height="15" fill="rgb(227,181,18)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.02%)</title><rect x="81.4619%" y="677" width="0.0240%" height="15" fill="rgb(238,36,30)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="661" width="0.0240%" height="15" fill="rgb(254,85,0)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="671.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="645" width="0.0240%" height="15" fill="rgb(247,63,33)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="629" width="0.0240%" height="15" fill="rgb(220,7,54)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="613" width="0.0240%" height="15" fill="rgb(238,227,21)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="597" width="0.0240%" height="15" fill="rgb(237,29,31)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="581" width="0.0240%" height="15" fill="rgb(211,21,50)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="81.4619%" y="565" width="0.0240%" height="15" fill="rgb(239,119,2)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="81.4619%" y="549" width="0.0240%" height="15" fill="rgb(250,2,39)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="559.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="81.4619%" y="533" width="0.0240%" height="15" fill="rgb(244,46,53)" fg:x="6776" fg:w="2"/><text x="81.7119%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="81.4859%" y="741" width="0.0240%" height="15" fill="rgb(209,21,19)" fg:x="6778" fg:w="2"/><text x="81.7359%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="81.5100%" y="693" width="0.0120%" height="15" fill="rgb(236,145,4)" fg:x="6780" fg:w="1"/><text x="81.7600%" y="703.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (7 samples, 0.08%)</title><rect x="81.4859%" y="789" width="0.0842%" height="15" fill="rgb(220,133,36)" fg:x="6778" fg:w="7"/><text x="81.7359%" y="799.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="81.4859%" y="773" width="0.0842%" height="15" fill="rgb(244,18,3)" fg:x="6778" fg:w="7"/><text x="81.7359%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="81.4859%" y="757" width="0.0842%" height="15" fill="rgb(232,171,48)" fg:x="6778" fg:w="7"/><text x="81.7359%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="81.5100%" y="741" width="0.0601%" height="15" fill="rgb(223,223,53)" fg:x="6780" fg:w="5"/><text x="81.7600%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="81.5100%" y="725" width="0.0601%" height="15" fill="rgb(246,92,13)" fg:x="6780" fg:w="5"/><text x="81.7600%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="81.5100%" y="709" width="0.0601%" height="15" fill="rgb(229,171,10)" fg:x="6780" fg:w="5"/><text x="81.7600%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="81.5220%" y="693" width="0.0481%" height="15" fill="rgb(213,131,26)" fg:x="6781" fg:w="4"/><text x="81.7720%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="81.5220%" y="677" width="0.0481%" height="15" fill="rgb(242,87,54)" fg:x="6781" fg:w="4"/><text x="81.7720%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="81.5220%" y="661" width="0.0481%" height="15" fill="rgb(237,21,35)" fg:x="6781" fg:w="4"/><text x="81.7720%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="81.5220%" y="645" width="0.0481%" height="15" fill="rgb(253,13,47)" fg:x="6781" fg:w="4"/><text x="81.7720%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="81.5220%" y="629" width="0.0481%" height="15" fill="rgb(215,122,49)" fg:x="6781" fg:w="4"/><text x="81.7720%" y="639.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="81.5220%" y="613" width="0.0481%" height="15" fill="rgb(209,179,30)" fg:x="6781" fg:w="4"/><text x="81.7720%" y="623.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="81.5220%" y="597" width="0.0481%" height="15" fill="rgb(235,100,24)" fg:x="6781" fg:w="4"/><text x="81.7720%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="81.5581%" y="581" width="0.0120%" height="15" fill="rgb(209,67,24)" fg:x="6784" fg:w="1"/><text x="81.8081%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.10%)</title><rect x="81.4859%" y="821" width="0.0962%" height="15" fill="rgb(206,74,32)" fg:x="6778" fg:w="8"/><text x="81.7359%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8 samples, 0.10%)</title><rect x="81.4859%" y="805" width="0.0962%" height="15" fill="rgb(212,45,25)" fg:x="6778" fg:w="8"/><text x="81.7359%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="81.5701%" y="789" width="0.0120%" height="15" fill="rgb(239,26,3)" fg:x="6785" fg:w="1"/><text x="81.8201%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="81.5701%" y="773" width="0.0120%" height="15" fill="rgb(218,36,15)" fg:x="6785" fg:w="1"/><text x="81.8201%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="81.5701%" y="757" width="0.0120%" height="15" fill="rgb(206,108,24)" fg:x="6785" fg:w="1"/><text x="81.8201%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.11%)</title><rect x="81.4859%" y="917" width="0.1082%" height="15" fill="rgb(234,204,42)" fg:x="6778" fg:w="9"/><text x="81.7359%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.11%)</title><rect x="81.4859%" y="901" width="0.1082%" height="15" fill="rgb(229,2,11)" fg:x="6778" fg:w="9"/><text x="81.7359%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.11%)</title><rect x="81.4859%" y="885" width="0.1082%" height="15" fill="rgb(221,20,48)" fg:x="6778" fg:w="9"/><text x="81.7359%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.11%)</title><rect x="81.4859%" y="869" width="0.1082%" height="15" fill="rgb(244,164,10)" fg:x="6778" fg:w="9"/><text x="81.7359%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (9 samples, 0.11%)</title><rect x="81.4859%" y="853" width="0.1082%" height="15" fill="rgb(243,229,2)" fg:x="6778" fg:w="9"/><text x="81.7359%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.11%)</title><rect x="81.4859%" y="837" width="0.1082%" height="15" fill="rgb(232,131,37)" fg:x="6778" fg:w="9"/><text x="81.7359%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (1 samples, 0.01%)</title><rect x="81.5821%" y="821" width="0.0120%" height="15" fill="rgb(217,156,11)" fg:x="6786" fg:w="1"/><text x="81.8321%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="81.5941%" y="901" width="0.0120%" height="15" fill="rgb(239,99,48)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="81.5941%" y="885" width="0.0120%" height="15" fill="rgb(231,209,9)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="81.5941%" y="869" width="0.0120%" height="15" fill="rgb(254,97,27)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="81.5941%" y="853" width="0.0120%" height="15" fill="rgb(223,151,38)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="81.5941%" y="837" width="0.0120%" height="15" fill="rgb(219,206,35)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="81.5941%" y="821" width="0.0120%" height="15" fill="rgb(216,130,31)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="81.5941%" y="805" width="0.0120%" height="15" fill="rgb(251,97,34)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="81.5941%" y="789" width="0.0120%" height="15" fill="rgb(246,159,47)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="799.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="81.5941%" y="773" width="0.0120%" height="15" fill="rgb(232,87,10)" fg:x="6787" fg:w="1"/><text x="81.8441%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.04%)</title><rect x="81.6062%" y="869" width="0.0361%" height="15" fill="rgb(249,1,37)" fg:x="6788" fg:w="3"/><text x="81.8562%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.04%)</title><rect x="81.6062%" y="853" width="0.0361%" height="15" fill="rgb(239,135,14)" fg:x="6788" fg:w="3"/><text x="81.8562%" y="863.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="81.6302%" y="837" width="0.0120%" height="15" fill="rgb(253,116,46)" fg:x="6790" fg:w="1"/><text x="81.8802%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (5 samples, 0.06%)</title><rect x="81.5941%" y="917" width="0.0601%" height="15" fill="rgb(222,217,37)" fg:x="6787" fg:w="5"/><text x="81.8441%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (4 samples, 0.05%)</title><rect x="81.6062%" y="901" width="0.0481%" height="15" fill="rgb(252,96,8)" fg:x="6788" fg:w="4"/><text x="81.8562%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="81.6062%" y="885" width="0.0481%" height="15" fill="rgb(254,103,41)" fg:x="6788" fg:w="4"/><text x="81.8562%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="81.6422%" y="869" width="0.0120%" height="15" fill="rgb(218,213,19)" fg:x="6791" fg:w="1"/><text x="81.8922%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (47 samples, 0.57%)</title><rect x="81.1012%" y="1077" width="0.5650%" height="15" fill="rgb(253,95,21)" fg:x="6746" fg:w="47"/><text x="81.3512%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (47 samples, 0.57%)</title><rect x="81.1012%" y="1061" width="0.5650%" height="15" fill="rgb(229,26,28)" fg:x="6746" fg:w="47"/><text x="81.3512%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (47 samples, 0.57%)</title><rect x="81.1012%" y="1045" width="0.5650%" height="15" fill="rgb(230,129,16)" fg:x="6746" fg:w="47"/><text x="81.3512%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.24%)</title><rect x="81.4258%" y="1029" width="0.2404%" height="15" fill="rgb(236,126,17)" fg:x="6773" fg:w="20"/><text x="81.6758%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.24%)</title><rect x="81.4258%" y="1013" width="0.2404%" height="15" fill="rgb(209,33,33)" fg:x="6773" fg:w="20"/><text x="81.6758%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (20 samples, 0.24%)</title><rect x="81.4258%" y="997" width="0.2404%" height="15" fill="rgb(227,85,29)" fg:x="6773" fg:w="20"/><text x="81.6758%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (20 samples, 0.24%)</title><rect x="81.4258%" y="981" width="0.2404%" height="15" fill="rgb(241,53,46)" fg:x="6773" fg:w="20"/><text x="81.6758%" y="991.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (20 samples, 0.24%)</title><rect x="81.4258%" y="965" width="0.2404%" height="15" fill="rgb(228,167,53)" fg:x="6773" fg:w="20"/><text x="81.6758%" y="975.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (20 samples, 0.24%)</title><rect x="81.4258%" y="949" width="0.2404%" height="15" fill="rgb(238,195,45)" fg:x="6773" fg:w="20"/><text x="81.6758%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.24%)</title><rect x="81.4258%" y="933" width="0.2404%" height="15" fill="rgb(252,124,45)" fg:x="6773" fg:w="20"/><text x="81.6758%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="81.6542%" y="917" width="0.0120%" height="15" fill="rgb(251,38,35)" fg:x="6792" fg:w="1"/><text x="81.9042%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="81.6542%" y="901" width="0.0120%" height="15" fill="rgb(227,33,2)" fg:x="6792" fg:w="1"/><text x="81.9042%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="81.6542%" y="885" width="0.0120%" height="15" fill="rgb(223,157,46)" fg:x="6792" fg:w="1"/><text x="81.9042%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="81.6663%" y="1013" width="0.0120%" height="15" fill="rgb(222,78,41)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="81.6663%" y="997" width="0.0120%" height="15" fill="rgb(248,176,11)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="1007.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="81.6663%" y="981" width="0.0120%" height="15" fill="rgb(241,221,18)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="991.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="81.6663%" y="965" width="0.0120%" height="15" fill="rgb(218,85,22)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="975.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="81.6663%" y="949" width="0.0120%" height="15" fill="rgb(222,223,7)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="959.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="81.6663%" y="933" width="0.0120%" height="15" fill="rgb(254,59,39)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="81.6663%" y="917" width="0.0120%" height="15" fill="rgb(247,100,27)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="81.6663%" y="901" width="0.0120%" height="15" fill="rgb(237,207,10)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.6663%" y="885" width="0.0120%" height="15" fill="rgb(220,121,28)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.6663%" y="869" width="0.0120%" height="15" fill="rgb(213,223,20)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.6663%" y="853" width="0.0120%" height="15" fill="rgb(205,121,27)" fg:x="6793" fg:w="1"/><text x="81.9163%" y="863.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="81.6783%" y="997" width="0.0120%" height="15" fill="rgb(253,24,53)" fg:x="6794" fg:w="1"/><text x="81.9283%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="81.6783%" y="981" width="0.0120%" height="15" fill="rgb(224,224,47)" fg:x="6794" fg:w="1"/><text x="81.9283%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="81.6783%" y="965" width="0.0120%" height="15" fill="rgb(250,125,36)" fg:x="6794" fg:w="1"/><text x="81.9283%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.6783%" y="949" width="0.0120%" height="15" fill="rgb(240,144,38)" fg:x="6794" fg:w="1"/><text x="81.9283%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.6783%" y="933" width="0.0120%" height="15" fill="rgb(250,15,50)" fg:x="6794" fg:w="1"/><text x="81.9283%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.6783%" y="917" width="0.0120%" height="15" fill="rgb(210,24,26)" fg:x="6794" fg:w="1"/><text x="81.9283%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="81.6783%" y="901" width="0.0120%" height="15" fill="rgb(234,53,53)" fg:x="6794" fg:w="1"/><text x="81.9283%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="81.6663%" y="1061" width="0.0361%" height="15" fill="rgb(208,108,28)" fg:x="6793" fg:w="3"/><text x="81.9163%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="81.6663%" y="1045" width="0.0361%" height="15" fill="rgb(227,143,7)" fg:x="6793" fg:w="3"/><text x="81.9163%" y="1055.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="81.6663%" y="1029" width="0.0361%" height="15" fill="rgb(238,189,38)" fg:x="6793" fg:w="3"/><text x="81.9163%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="81.6783%" y="1013" width="0.0240%" height="15" fill="rgb(222,69,15)" fg:x="6794" fg:w="2"/><text x="81.9283%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="81.6903%" y="997" width="0.0120%" height="15" fill="rgb(213,169,7)" fg:x="6795" fg:w="1"/><text x="81.9403%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="81.6903%" y="981" width="0.0120%" height="15" fill="rgb(251,219,4)" fg:x="6795" fg:w="1"/><text x="81.9403%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="81.6903%" y="965" width="0.0120%" height="15" fill="rgb(241,55,40)" fg:x="6795" fg:w="1"/><text x="81.9403%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="81.6903%" y="949" width="0.0120%" height="15" fill="rgb(243,57,30)" fg:x="6795" fg:w="1"/><text x="81.9403%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="81.6903%" y="933" width="0.0120%" height="15" fill="rgb(234,50,30)" fg:x="6795" fg:w="1"/><text x="81.9403%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="81.6903%" y="917" width="0.0120%" height="15" fill="rgb(239,23,42)" fg:x="6795" fg:w="1"/><text x="81.9403%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="81.7144%" y="901" width="0.0120%" height="15" fill="rgb(217,38,19)" fg:x="6797" fg:w="1"/><text x="81.9644%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="81.7144%" y="885" width="0.0120%" height="15" fill="rgb(215,179,16)" fg:x="6797" fg:w="1"/><text x="81.9644%" y="895.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="81.7144%" y="869" width="0.0120%" height="15" fill="rgb(254,21,37)" fg:x="6797" fg:w="1"/><text x="81.9644%" y="879.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="81.7144%" y="853" width="0.0120%" height="15" fill="rgb(219,207,48)" fg:x="6797" fg:w="1"/><text x="81.9644%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.7144%" y="837" width="0.0120%" height="15" fill="rgb(227,225,41)" fg:x="6797" fg:w="1"/><text x="81.9644%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.7144%" y="821" width="0.0120%" height="15" fill="rgb(223,130,1)" fg:x="6797" fg:w="1"/><text x="81.9644%" y="831.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="81.7264%" y="885" width="0.0120%" height="15" fill="rgb(249,54,42)" fg:x="6798" fg:w="1"/><text x="81.9764%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="81.7264%" y="869" width="0.0120%" height="15" fill="rgb(248,69,25)" fg:x="6798" fg:w="1"/><text x="81.9764%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="81.7264%" y="853" width="0.0120%" height="15" fill="rgb(234,21,32)" fg:x="6798" fg:w="1"/><text x="81.9764%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.7264%" y="837" width="0.0120%" height="15" fill="rgb(252,136,6)" fg:x="6798" fg:w="1"/><text x="81.9764%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.7264%" y="821" width="0.0120%" height="15" fill="rgb(245,87,12)" fg:x="6798" fg:w="1"/><text x="81.9764%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="81.7264%" y="805" width="0.0120%" height="15" fill="rgb(208,12,15)" fg:x="6798" fg:w="1"/><text x="81.9764%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="81.7144%" y="917" width="0.0481%" height="15" fill="rgb(250,98,2)" fg:x="6797" fg:w="4"/><text x="81.9644%" y="927.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="81.7264%" y="901" width="0.0361%" height="15" fill="rgb(205,213,15)" fg:x="6798" fg:w="3"/><text x="81.9764%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="81.7384%" y="885" width="0.0240%" height="15" fill="rgb(248,192,44)" fg:x="6799" fg:w="2"/><text x="81.9884%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="81.7384%" y="869" width="0.0240%" height="15" fill="rgb(221,89,17)" fg:x="6799" fg:w="2"/><text x="81.9884%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="81.7384%" y="853" width="0.0240%" height="15" fill="rgb(209,55,3)" fg:x="6799" fg:w="2"/><text x="81.9884%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="81.7384%" y="837" width="0.0240%" height="15" fill="rgb(247,23,45)" fg:x="6799" fg:w="2"/><text x="81.9884%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="81.7384%" y="821" width="0.0240%" height="15" fill="rgb(235,152,23)" fg:x="6799" fg:w="2"/><text x="81.9884%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="81.7384%" y="805" width="0.0240%" height="15" fill="rgb(244,63,13)" fg:x="6799" fg:w="2"/><text x="81.9884%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="81.7504%" y="789" width="0.0120%" height="15" fill="rgb(227,30,37)" fg:x="6800" fg:w="1"/><text x="82.0004%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="81.7624%" y="869" width="0.0120%" height="15" fill="rgb(224,49,42)" fg:x="6801" fg:w="1"/><text x="82.0124%" y="879.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="81.7624%" y="853" width="0.0120%" height="15" fill="rgb(218,129,5)" fg:x="6801" fg:w="1"/><text x="82.0124%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="81.7624%" y="837" width="0.0120%" height="15" fill="rgb(240,199,54)" fg:x="6801" fg:w="1"/><text x="82.0124%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="81.7624%" y="821" width="0.0120%" height="15" fill="rgb(234,31,13)" fg:x="6801" fg:w="1"/><text x="82.0124%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="81.7745%" y="869" width="0.0120%" height="15" fill="rgb(219,73,54)" fg:x="6802" fg:w="1"/><text x="82.0245%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (3 samples, 0.04%)</title><rect x="81.7624%" y="917" width="0.0361%" height="15" fill="rgb(251,162,10)" fg:x="6801" fg:w="3"/><text x="82.0124%" y="927.50"></text></g><g><title>alloc::slice::stable_sort (3 samples, 0.04%)</title><rect x="81.7624%" y="901" width="0.0361%" height="15" fill="rgb(240,138,47)" fg:x="6801" fg:w="3"/><text x="82.0124%" y="911.50"></text></g><g><title>core::slice::sort::insert_tail (3 samples, 0.04%)</title><rect x="81.7624%" y="885" width="0.0361%" height="15" fill="rgb(216,138,26)" fg:x="6801" fg:w="3"/><text x="82.0124%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="81.7865%" y="869" width="0.0120%" height="15" fill="rgb(243,17,35)" fg:x="6803" fg:w="1"/><text x="82.0365%" y="879.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="81.7865%" y="853" width="0.0120%" height="15" fill="rgb(241,60,18)" fg:x="6803" fg:w="1"/><text x="82.0365%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="81.7865%" y="837" width="0.0120%" height="15" fill="rgb(234,2,44)" fg:x="6803" fg:w="1"/><text x="82.0365%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="81.7985%" y="853" width="0.0120%" height="15" fill="rgb(225,225,33)" fg:x="6804" fg:w="1"/><text x="82.0485%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="81.7985%" y="837" width="0.0120%" height="15" fill="rgb(234,50,31)" fg:x="6804" fg:w="1"/><text x="82.0485%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="81.7985%" y="821" width="0.0120%" height="15" fill="rgb(249,6,25)" fg:x="6804" fg:w="1"/><text x="82.0485%" y="831.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="81.7985%" y="805" width="0.0120%" height="15" fill="rgb(241,5,17)" fg:x="6804" fg:w="1"/><text x="82.0485%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.01%)</title><rect x="81.7985%" y="789" width="0.0120%" height="15" fill="rgb(207,116,10)" fg:x="6804" fg:w="1"/><text x="82.0485%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="81.7985%" y="773" width="0.0120%" height="15" fill="rgb(222,128,18)" fg:x="6804" fg:w="1"/><text x="82.0485%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="81.8105%" y="805" width="0.0120%" height="15" fill="rgb(229,109,25)" fg:x="6805" fg:w="1"/><text x="82.0605%" y="815.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="81.8226%" y="757" width="0.0481%" height="15" fill="rgb(222,102,25)" fg:x="6806" fg:w="4"/><text x="82.0726%" y="767.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="81.8226%" y="741" width="0.0481%" height="15" fill="rgb(239,211,5)" fg:x="6806" fg:w="4"/><text x="82.0726%" y="751.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="81.8105%" y="853" width="0.0962%" height="15" fill="rgb(223,136,26)" fg:x="6805" fg:w="8"/><text x="82.0605%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="81.8105%" y="837" width="0.0962%" height="15" fill="rgb(227,30,15)" fg:x="6805" fg:w="8"/><text x="82.0605%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="81.8105%" y="821" width="0.0962%" height="15" fill="rgb(247,76,4)" fg:x="6805" fg:w="8"/><text x="82.0605%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.08%)</title><rect x="81.8226%" y="805" width="0.0842%" height="15" fill="rgb(245,38,48)" fg:x="6806" fg:w="7"/><text x="82.0726%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.08%)</title><rect x="81.8226%" y="789" width="0.0842%" height="15" fill="rgb(210,220,14)" fg:x="6806" fg:w="7"/><text x="82.0726%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="81.8226%" y="773" width="0.0842%" height="15" fill="rgb(224,60,51)" fg:x="6806" fg:w="7"/><text x="82.0726%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="81.8706%" y="757" width="0.0361%" height="15" fill="rgb(212,133,49)" fg:x="6810" fg:w="3"/><text x="82.1206%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="81.8706%" y="741" width="0.0361%" height="15" fill="rgb(231,39,22)" fg:x="6810" fg:w="3"/><text x="82.1206%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="81.8706%" y="725" width="0.0361%" height="15" fill="rgb(236,173,22)" fg:x="6810" fg:w="3"/><text x="82.1206%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="81.8706%" y="709" width="0.0361%" height="15" fill="rgb(210,70,0)" fg:x="6810" fg:w="3"/><text x="82.1206%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="81.8706%" y="693" width="0.0361%" height="15" fill="rgb(215,170,11)" fg:x="6810" fg:w="3"/><text x="82.1206%" y="703.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="81.8706%" y="677" width="0.0361%" height="15" fill="rgb(220,154,28)" fg:x="6810" fg:w="3"/><text x="82.1206%" y="687.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="81.8827%" y="661" width="0.0240%" height="15" fill="rgb(240,160,41)" fg:x="6811" fg:w="2"/><text x="82.1327%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,088 samples, 13.08%)</title><rect x="68.8387%" y="1221" width="13.0801%" height="15" fill="rgb(243,215,41)" fg:x="5726" fg:w="1088"/><text x="69.0887%" y="1231.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1,088 samples, 13.08%)</title><rect x="68.8387%" y="1205" width="13.0801%" height="15" fill="rgb(214,208,31)" fg:x="5726" fg:w="1088"/><text x="69.0887%" y="1215.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,088 samples, 13.08%)</title><rect x="68.8387%" y="1189" width="13.0801%" height="15" fill="rgb(247,57,22)" fg:x="5726" fg:w="1088"/><text x="69.0887%" y="1199.50">&lt;core::iter::adapter..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,088 samples, 13.08%)</title><rect x="68.8387%" y="1173" width="13.0801%" height="15" fill="rgb(228,73,52)" fg:x="5726" fg:w="1088"/><text x="69.0887%" y="1183.50">core::option::Option..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,088 samples, 13.08%)</title><rect x="68.8387%" y="1157" width="13.0801%" height="15" fill="rgb(252,60,9)" fg:x="5726" fg:w="1088"/><text x="69.0887%" y="1167.50">core::ops::function:..</text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1,088 samples, 13.08%)</title><rect x="68.8387%" y="1141" width="13.0801%" height="15" fill="rgb(233,9,51)" fg:x="5726" fg:w="1088"/><text x="69.0887%" y="1151.50">smithereens::memoize..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (264 samples, 3.17%)</title><rect x="78.7449%" y="1125" width="3.1738%" height="15" fill="rgb(223,67,14)" fg:x="6550" fg:w="264"/><text x="78.9949%" y="1135.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (264 samples, 3.17%)</title><rect x="78.7449%" y="1109" width="3.1738%" height="15" fill="rgb(222,86,2)" fg:x="6550" fg:w="264"/><text x="78.9949%" y="1119.50">std..</text></g><g><title>smithereens::fragment::_{{closure}} (264 samples, 3.17%)</title><rect x="78.7449%" y="1093" width="3.1738%" height="15" fill="rgb(243,58,54)" fg:x="6550" fg:w="264"/><text x="78.9949%" y="1103.50">smi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (21 samples, 0.25%)</title><rect x="81.6663%" y="1077" width="0.2525%" height="15" fill="rgb(210,200,39)" fg:x="6793" fg:w="21"/><text x="81.9163%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (18 samples, 0.22%)</title><rect x="81.7023%" y="1061" width="0.2164%" height="15" fill="rgb(238,135,9)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (18 samples, 0.22%)</title><rect x="81.7023%" y="1045" width="0.2164%" height="15" fill="rgb(232,179,7)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.22%)</title><rect x="81.7023%" y="1029" width="0.2164%" height="15" fill="rgb(245,65,41)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (18 samples, 0.22%)</title><rect x="81.7023%" y="1013" width="0.2164%" height="15" fill="rgb(227,43,8)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (18 samples, 0.22%)</title><rect x="81.7023%" y="997" width="0.2164%" height="15" fill="rgb(235,91,14)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (18 samples, 0.22%)</title><rect x="81.7023%" y="981" width="0.2164%" height="15" fill="rgb(235,219,31)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="991.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (18 samples, 0.22%)</title><rect x="81.7023%" y="965" width="0.2164%" height="15" fill="rgb(227,121,25)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.22%)</title><rect x="81.7023%" y="949" width="0.2164%" height="15" fill="rgb(254,129,24)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (18 samples, 0.22%)</title><rect x="81.7023%" y="933" width="0.2164%" height="15" fill="rgb(226,144,49)" fg:x="6796" fg:w="18"/><text x="81.9523%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.12%)</title><rect x="81.7985%" y="917" width="0.1202%" height="15" fill="rgb(214,187,32)" fg:x="6804" fg:w="10"/><text x="82.0485%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.12%)</title><rect x="81.7985%" y="901" width="0.1202%" height="15" fill="rgb(243,129,46)" fg:x="6804" fg:w="10"/><text x="82.0485%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.12%)</title><rect x="81.7985%" y="885" width="0.1202%" height="15" fill="rgb(221,185,35)" fg:x="6804" fg:w="10"/><text x="82.0485%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.12%)</title><rect x="81.7985%" y="869" width="0.1202%" height="15" fill="rgb(205,0,32)" fg:x="6804" fg:w="10"/><text x="82.0485%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="81.9067%" y="853" width="0.0120%" height="15" fill="rgb(229,179,12)" fg:x="6813" fg:w="1"/><text x="82.1567%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,089 samples, 13.09%)</title><rect x="68.8387%" y="1237" width="13.0921%" height="15" fill="rgb(252,107,19)" fg:x="5726" fg:w="1089"/><text x="69.0887%" y="1247.50">&lt;core::iter::adapter..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="81.9187%" y="1221" width="0.0120%" height="15" fill="rgb(220,95,27)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1231.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="81.9187%" y="1205" width="0.0120%" height="15" fill="rgb(240,113,40)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1215.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="81.9187%" y="1189" width="0.0120%" height="15" fill="rgb(208,4,43)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="81.9187%" y="1173" width="0.0120%" height="15" fill="rgb(247,189,30)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="81.9187%" y="1157" width="0.0120%" height="15" fill="rgb(231,157,17)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1 samples, 0.01%)</title><rect x="81.9187%" y="1141" width="0.0120%" height="15" fill="rgb(224,139,6)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="81.9187%" y="1125" width="0.0120%" height="15" fill="rgb(223,83,16)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="81.9187%" y="1109" width="0.0120%" height="15" fill="rgb(232,211,20)" fg:x="6814" fg:w="1"/><text x="82.1687%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="81.9308%" y="1189" width="0.0120%" height="15" fill="rgb(225,203,35)" fg:x="6815" fg:w="1"/><text x="82.1808%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="81.9788%" y="1077" width="0.0120%" height="15" fill="rgb(215,211,44)" fg:x="6819" fg:w="1"/><text x="82.2288%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,115 samples, 13.40%)</title><rect x="68.6463%" y="1269" width="13.4047%" height="15" fill="rgb(248,213,26)" fg:x="5710" fg:w="1115"/><text x="68.8963%" y="1279.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,115 samples, 13.40%)</title><rect x="68.6463%" y="1253" width="13.4047%" height="15" fill="rgb(214,23,52)" fg:x="5710" fg:w="1115"/><text x="68.8963%" y="1263.50">alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.12%)</title><rect x="81.9308%" y="1237" width="0.1202%" height="15" fill="rgb(225,173,50)" fg:x="6815" fg:w="10"/><text x="82.1808%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.12%)</title><rect x="81.9308%" y="1221" width="0.1202%" height="15" fill="rgb(206,150,22)" fg:x="6815" fg:w="10"/><text x="82.1808%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.12%)</title><rect x="81.9308%" y="1205" width="0.1202%" height="15" fill="rgb(239,64,23)" fg:x="6815" fg:w="10"/><text x="82.1808%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.11%)</title><rect x="81.9428%" y="1189" width="0.1082%" height="15" fill="rgb(242,50,38)" fg:x="6816" fg:w="9"/><text x="82.1928%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.11%)</title><rect x="81.9428%" y="1173" width="0.1082%" height="15" fill="rgb(217,91,15)" fg:x="6816" fg:w="9"/><text x="82.1928%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.11%)</title><rect x="81.9428%" y="1157" width="0.1082%" height="15" fill="rgb(230,172,6)" fg:x="6816" fg:w="9"/><text x="82.1928%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.11%)</title><rect x="81.9428%" y="1141" width="0.1082%" height="15" fill="rgb(221,98,26)" fg:x="6816" fg:w="9"/><text x="82.1928%" y="1151.50"></text></g><g><title>realloc (9 samples, 0.11%)</title><rect x="81.9428%" y="1125" width="0.1082%" height="15" fill="rgb(227,210,45)" fg:x="6816" fg:w="9"/><text x="82.1928%" y="1135.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="81.9548%" y="1109" width="0.0962%" height="15" fill="rgb(206,8,30)" fg:x="6817" fg:w="8"/><text x="82.2048%" y="1119.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="81.9548%" y="1093" width="0.0962%" height="15" fill="rgb(241,219,17)" fg:x="6817" fg:w="8"/><text x="82.2048%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="81.9909%" y="1077" width="0.0601%" height="15" fill="rgb(247,121,29)" fg:x="6820" fg:w="5"/><text x="82.2409%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="82.0149%" y="1061" width="0.0361%" height="15" fill="rgb(219,169,49)" fg:x="6822" fg:w="3"/><text x="82.2649%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.0630%" y="1029" width="0.0120%" height="15" fill="rgb(253,49,49)" fg:x="6826" fg:w="1"/><text x="82.3130%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.0630%" y="1013" width="0.0120%" height="15" fill="rgb(217,178,3)" fg:x="6826" fg:w="1"/><text x="82.3130%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.0630%" y="997" width="0.0120%" height="15" fill="rgb(234,73,37)" fg:x="6826" fg:w="1"/><text x="82.3130%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="82.0630%" y="981" width="0.0120%" height="15" fill="rgb(250,98,22)" fg:x="6826" fg:w="1"/><text x="82.3130%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="82.0630%" y="965" width="0.0120%" height="15" fill="rgb(220,108,37)" fg:x="6826" fg:w="1"/><text x="82.3130%" y="975.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="82.0630%" y="949" width="0.0120%" height="15" fill="rgb(225,168,10)" fg:x="6826" fg:w="1"/><text x="82.3130%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (3 samples, 0.04%)</title><rect x="82.0630%" y="1061" width="0.0361%" height="15" fill="rgb(247,215,21)" fg:x="6826" fg:w="3"/><text x="82.3130%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (3 samples, 0.04%)</title><rect x="82.0630%" y="1045" width="0.0361%" height="15" fill="rgb(253,189,31)" fg:x="6826" fg:w="3"/><text x="82.3130%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="82.0750%" y="1029" width="0.0240%" height="15" fill="rgb(241,54,22)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="82.0750%" y="1013" width="0.0240%" height="15" fill="rgb(211,87,4)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (2 samples, 0.02%)</title><rect x="82.0750%" y="997" width="0.0240%" height="15" fill="rgb(245,112,24)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="82.0750%" y="981" width="0.0240%" height="15" fill="rgb(235,190,41)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="82.0750%" y="965" width="0.0240%" height="15" fill="rgb(214,89,8)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="82.0750%" y="949" width="0.0240%" height="15" fill="rgb(249,155,35)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="82.0750%" y="933" width="0.0240%" height="15" fill="rgb(249,88,26)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="82.0750%" y="917" width="0.0240%" height="15" fill="rgb(232,56,8)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="82.0750%" y="901" width="0.0240%" height="15" fill="rgb(240,95,3)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="82.0750%" y="885" width="0.0240%" height="15" fill="rgb(222,44,28)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="895.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="82.0750%" y="869" width="0.0240%" height="15" fill="rgb(234,16,30)" fg:x="6827" fg:w="2"/><text x="82.3250%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.0870%" y="853" width="0.0120%" height="15" fill="rgb(223,26,17)" fg:x="6828" fg:w="1"/><text x="82.3370%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="82.0991%" y="1045" width="0.0240%" height="15" fill="rgb(239,187,47)" fg:x="6829" fg:w="2"/><text x="82.3491%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="82.0991%" y="1029" width="0.0240%" height="15" fill="rgb(247,102,50)" fg:x="6829" fg:w="2"/><text x="82.3491%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="82.0991%" y="1013" width="0.0240%" height="15" fill="rgb(231,216,22)" fg:x="6829" fg:w="2"/><text x="82.3491%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="82.1111%" y="997" width="0.0120%" height="15" fill="rgb(216,201,26)" fg:x="6830" fg:w="1"/><text x="82.3611%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="82.1111%" y="981" width="0.0120%" height="15" fill="rgb(214,186,23)" fg:x="6830" fg:w="1"/><text x="82.3611%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="82.1231%" y="917" width="0.0120%" height="15" fill="rgb(235,184,4)" fg:x="6831" fg:w="1"/><text x="82.3731%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="82.1231%" y="901" width="0.0120%" height="15" fill="rgb(244,46,17)" fg:x="6831" fg:w="1"/><text x="82.3731%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="82.1231%" y="885" width="0.0120%" height="15" fill="rgb(248,74,46)" fg:x="6831" fg:w="1"/><text x="82.3731%" y="895.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="82.1231%" y="933" width="0.0240%" height="15" fill="rgb(243,79,5)" fg:x="6831" fg:w="2"/><text x="82.3731%" y="943.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="82.1351%" y="917" width="0.0120%" height="15" fill="rgb(213,148,1)" fg:x="6832" fg:w="1"/><text x="82.3851%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="82.1472%" y="853" width="0.0120%" height="15" fill="rgb(221,30,0)" fg:x="6833" fg:w="1"/><text x="82.3972%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="82.1472%" y="837" width="0.0120%" height="15" fill="rgb(207,85,29)" fg:x="6833" fg:w="1"/><text x="82.3972%" y="847.50"></text></g><g><title>core::hash::Hash::hash_slice (4 samples, 0.05%)</title><rect x="82.1231%" y="981" width="0.0481%" height="15" fill="rgb(239,31,46)" fg:x="6831" fg:w="4"/><text x="82.3731%" y="991.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="82.1231%" y="965" width="0.0481%" height="15" fill="rgb(219,6,1)" fg:x="6831" fg:w="4"/><text x="82.3731%" y="975.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="82.1231%" y="949" width="0.0481%" height="15" fill="rgb(229,90,29)" fg:x="6831" fg:w="4"/><text x="82.3731%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="82.1472%" y="933" width="0.0240%" height="15" fill="rgb(242,201,42)" fg:x="6833" fg:w="2"/><text x="82.3972%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="82.1472%" y="917" width="0.0240%" height="15" fill="rgb(243,80,54)" fg:x="6833" fg:w="2"/><text x="82.3972%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="82.1472%" y="901" width="0.0240%" height="15" fill="rgb(223,166,15)" fg:x="6833" fg:w="2"/><text x="82.3972%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="82.1472%" y="885" width="0.0240%" height="15" fill="rgb(238,78,27)" fg:x="6833" fg:w="2"/><text x="82.3972%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="82.1472%" y="869" width="0.0240%" height="15" fill="rgb(235,28,43)" fg:x="6833" fg:w="2"/><text x="82.3972%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="82.1592%" y="853" width="0.0120%" height="15" fill="rgb(240,210,28)" fg:x="6834" fg:w="1"/><text x="82.4092%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="82.1592%" y="837" width="0.0120%" height="15" fill="rgb(253,6,46)" fg:x="6834" fg:w="1"/><text x="82.4092%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="82.1231%" y="1013" width="0.0601%" height="15" fill="rgb(250,159,47)" fg:x="6831" fg:w="5"/><text x="82.3731%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.06%)</title><rect x="82.1231%" y="997" width="0.0601%" height="15" fill="rgb(216,139,2)" fg:x="6831" fg:w="5"/><text x="82.3731%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="82.1712%" y="981" width="0.0120%" height="15" fill="rgb(221,124,44)" fg:x="6835" fg:w="1"/><text x="82.4212%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="82.1712%" y="965" width="0.0120%" height="15" fill="rgb(205,37,22)" fg:x="6835" fg:w="1"/><text x="82.4212%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.1712%" y="949" width="0.0120%" height="15" fill="rgb(250,55,8)" fg:x="6835" fg:w="1"/><text x="82.4212%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.1712%" y="933" width="0.0120%" height="15" fill="rgb(215,83,48)" fg:x="6835" fg:w="1"/><text x="82.4212%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.16%)</title><rect x="82.0991%" y="1061" width="0.1563%" height="15" fill="rgb(253,2,32)" fg:x="6829" fg:w="13"/><text x="82.3491%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.13%)</title><rect x="82.1231%" y="1045" width="0.1322%" height="15" fill="rgb(236,67,28)" fg:x="6831" fg:w="11"/><text x="82.3731%" y="1055.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="82.1231%" y="1029" width="0.1322%" height="15" fill="rgb(252,55,15)" fg:x="6831" fg:w="11"/><text x="82.3731%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="82.1832%" y="1013" width="0.0721%" height="15" fill="rgb(243,173,17)" fg:x="6836" fg:w="6"/><text x="82.4332%" y="1023.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="82.1832%" y="997" width="0.0721%" height="15" fill="rgb(215,212,13)" fg:x="6836" fg:w="6"/><text x="82.4332%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4 samples, 0.05%)</title><rect x="82.2073%" y="981" width="0.0481%" height="15" fill="rgb(253,176,6)" fg:x="6838" fg:w="4"/><text x="82.4573%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u32 (4 samples, 0.05%)</title><rect x="82.2073%" y="965" width="0.0481%" height="15" fill="rgb(236,105,26)" fg:x="6838" fg:w="4"/><text x="82.4573%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="82.2073%" y="949" width="0.0481%" height="15" fill="rgb(239,226,32)" fg:x="6838" fg:w="4"/><text x="82.4573%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="82.2073%" y="933" width="0.0481%" height="15" fill="rgb(236,104,51)" fg:x="6838" fg:w="4"/><text x="82.4573%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="82.2073%" y="917" width="0.0481%" height="15" fill="rgb(220,172,33)" fg:x="6838" fg:w="4"/><text x="82.4573%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.04%)</title><rect x="82.2193%" y="901" width="0.0361%" height="15" fill="rgb(224,182,25)" fg:x="6839" fg:w="3"/><text x="82.4693%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="82.2553%" y="965" width="0.0120%" height="15" fill="rgb(236,184,24)" fg:x="6842" fg:w="1"/><text x="82.5053%" y="975.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="82.2553%" y="949" width="0.0120%" height="15" fill="rgb(241,221,14)" fg:x="6842" fg:w="1"/><text x="82.5053%" y="959.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="82.2553%" y="933" width="0.0120%" height="15" fill="rgb(227,146,5)" fg:x="6842" fg:w="1"/><text x="82.5053%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="82.2553%" y="917" width="0.0120%" height="15" fill="rgb(214,15,23)" fg:x="6842" fg:w="1"/><text x="82.5053%" y="927.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="965" width="0.0120%" height="15" fill="rgb(233,157,31)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="949" width="0.0120%" height="15" fill="rgb(211,27,52)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="82.2674%" y="933" width="0.0120%" height="15" fill="rgb(212,223,15)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="82.2674%" y="917" width="0.0120%" height="15" fill="rgb(254,211,0)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="82.2674%" y="901" width="0.0120%" height="15" fill="rgb(205,43,38)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="82.2674%" y="885" width="0.0120%" height="15" fill="rgb(242,206,46)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="82.2674%" y="869" width="0.0120%" height="15" fill="rgb(220,221,12)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="853" width="0.0120%" height="15" fill="rgb(217,156,35)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="837" width="0.0120%" height="15" fill="rgb(207,181,49)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="847.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="821" width="0.0120%" height="15" fill="rgb(235,103,47)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="805" width="0.0120%" height="15" fill="rgb(222,63,28)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="82.2674%" y="789" width="0.0120%" height="15" fill="rgb(244,137,21)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="82.2674%" y="773" width="0.0120%" height="15" fill="rgb(228,35,27)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="82.2674%" y="757" width="0.0120%" height="15" fill="rgb(226,191,41)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="82.2674%" y="741" width="0.0120%" height="15" fill="rgb(210,154,3)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="82.2674%" y="725" width="0.0120%" height="15" fill="rgb(216,60,49)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="709" width="0.0120%" height="15" fill="rgb(226,17,20)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="719.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="693" width="0.0120%" height="15" fill="rgb(206,115,35)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="677" width="0.0120%" height="15" fill="rgb(227,88,1)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="661" width="0.0120%" height="15" fill="rgb(230,222,24)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="645" width="0.0120%" height="15" fill="rgb(214,124,32)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="629" width="0.0120%" height="15" fill="rgb(240,41,36)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="82.2674%" y="613" width="0.0120%" height="15" fill="rgb(221,17,52)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="82.2674%" y="597" width="0.0120%" height="15" fill="rgb(252,70,16)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.2674%" y="581" width="0.0120%" height="15" fill="rgb(250,177,4)" fg:x="6843" fg:w="1"/><text x="82.5174%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="82.2794%" y="917" width="0.0240%" height="15" fill="rgb(240,188,47)" fg:x="6844" fg:w="2"/><text x="82.5294%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.02%)</title><rect x="82.2794%" y="901" width="0.0240%" height="15" fill="rgb(215,92,12)" fg:x="6844" fg:w="2"/><text x="82.5294%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="82.2794%" y="885" width="0.0240%" height="15" fill="rgb(242,110,29)" fg:x="6844" fg:w="2"/><text x="82.5294%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.2914%" y="869" width="0.0120%" height="15" fill="rgb(208,211,26)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="82.2914%" y="853" width="0.0120%" height="15" fill="rgb(244,147,6)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="863.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.01%)</title><rect x="82.2914%" y="837" width="0.0120%" height="15" fill="rgb(211,130,42)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="847.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.2914%" y="821" width="0.0120%" height="15" fill="rgb(220,63,1)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.2914%" y="805" width="0.0120%" height="15" fill="rgb(241,212,30)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.2914%" y="789" width="0.0120%" height="15" fill="rgb(233,153,17)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.2914%" y="773" width="0.0120%" height="15" fill="rgb(236,3,10)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.2914%" y="757" width="0.0120%" height="15" fill="rgb(232,41,21)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.2914%" y="741" width="0.0120%" height="15" fill="rgb(206,63,51)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.2914%" y="725" width="0.0120%" height="15" fill="rgb(250,214,3)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="82.2914%" y="709" width="0.0120%" height="15" fill="rgb(254,89,27)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.2914%" y="693" width="0.0120%" height="15" fill="rgb(249,41,14)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.2914%" y="677" width="0.0120%" height="15" fill="rgb(221,196,51)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.2914%" y="661" width="0.0120%" height="15" fill="rgb(214,116,26)" fg:x="6845" fg:w="1"/><text x="82.5414%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 0.25%)</title><rect x="82.0630%" y="1125" width="0.2525%" height="15" fill="rgb(236,67,7)" fg:x="6826" fg:w="21"/><text x="82.3130%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (21 samples, 0.25%)</title><rect x="82.0630%" y="1109" width="0.2525%" height="15" fill="rgb(253,179,32)" fg:x="6826" fg:w="21"/><text x="82.3130%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (21 samples, 0.25%)</title><rect x="82.0630%" y="1093" width="0.2525%" height="15" fill="rgb(218,33,15)" fg:x="6826" fg:w="21"/><text x="82.3130%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (21 samples, 0.25%)</title><rect x="82.0630%" y="1077" width="0.2525%" height="15" fill="rgb(217,202,41)" fg:x="6826" fg:w="21"/><text x="82.3130%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (5 samples, 0.06%)</title><rect x="82.2553%" y="1061" width="0.0601%" height="15" fill="rgb(234,133,5)" fg:x="6842" fg:w="5"/><text x="82.5053%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (5 samples, 0.06%)</title><rect x="82.2553%" y="1045" width="0.0601%" height="15" fill="rgb(240,47,40)" fg:x="6842" fg:w="5"/><text x="82.5053%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (5 samples, 0.06%)</title><rect x="82.2553%" y="1029" width="0.0601%" height="15" fill="rgb(234,166,26)" fg:x="6842" fg:w="5"/><text x="82.5053%" y="1039.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (5 samples, 0.06%)</title><rect x="82.2553%" y="1013" width="0.0601%" height="15" fill="rgb(244,125,51)" fg:x="6842" fg:w="5"/><text x="82.5053%" y="1023.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.06%)</title><rect x="82.2553%" y="997" width="0.0601%" height="15" fill="rgb(229,171,11)" fg:x="6842" fg:w="5"/><text x="82.5053%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.06%)</title><rect x="82.2553%" y="981" width="0.0601%" height="15" fill="rgb(224,38,45)" fg:x="6842" fg:w="5"/><text x="82.5053%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="82.2794%" y="965" width="0.0361%" height="15" fill="rgb(237,27,7)" fg:x="6844" fg:w="3"/><text x="82.5294%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="82.2794%" y="949" width="0.0361%" height="15" fill="rgb(216,52,7)" fg:x="6844" fg:w="3"/><text x="82.5294%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="82.2794%" y="933" width="0.0361%" height="15" fill="rgb(243,11,11)" fg:x="6844" fg:w="3"/><text x="82.5294%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="82.3034%" y="917" width="0.0120%" height="15" fill="rgb(253,167,20)" fg:x="6846" fg:w="1"/><text x="82.5534%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.3034%" y="901" width="0.0120%" height="15" fill="rgb(215,207,5)" fg:x="6846" fg:w="1"/><text x="82.5534%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.3034%" y="885" width="0.0120%" height="15" fill="rgb(252,127,31)" fg:x="6846" fg:w="1"/><text x="82.5534%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="82.3034%" y="869" width="0.0120%" height="15" fill="rgb(209,106,27)" fg:x="6846" fg:w="1"/><text x="82.5534%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.3034%" y="853" width="0.0120%" height="15" fill="rgb(214,220,18)" fg:x="6846" fg:w="1"/><text x="82.5534%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.3034%" y="837" width="0.0120%" height="15" fill="rgb(237,89,12)" fg:x="6846" fg:w="1"/><text x="82.5534%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.3034%" y="821" width="0.0120%" height="15" fill="rgb(209,167,36)" fg:x="6846" fg:w="1"/><text x="82.5534%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.3155%" y="981" width="0.0120%" height="15" fill="rgb(243,45,22)" fg:x="6847" fg:w="1"/><text x="82.5655%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.3275%" y="965" width="0.0120%" height="15" fill="rgb(239,2,46)" fg:x="6848" fg:w="1"/><text x="82.5775%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="82.3275%" y="949" width="0.0120%" height="15" fill="rgb(241,101,0)" fg:x="6848" fg:w="1"/><text x="82.5775%" y="959.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="82.3275%" y="933" width="0.0120%" height="15" fill="rgb(244,34,31)" fg:x="6848" fg:w="1"/><text x="82.5775%" y="943.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.3275%" y="917" width="0.0120%" height="15" fill="rgb(248,23,22)" fg:x="6848" fg:w="1"/><text x="82.5775%" y="927.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.3275%" y="901" width="0.0120%" height="15" fill="rgb(218,27,48)" fg:x="6848" fg:w="1"/><text x="82.5775%" y="911.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.3275%" y="885" width="0.0120%" height="15" fill="rgb(232,78,1)" fg:x="6848" fg:w="1"/><text x="82.5775%" y="895.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (25 samples, 0.30%)</title><rect x="82.0630%" y="1157" width="0.3006%" height="15" fill="rgb(233,169,12)" fg:x="6826" fg:w="25"/><text x="82.3130%" y="1167.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (25 samples, 0.30%)</title><rect x="82.0630%" y="1141" width="0.3006%" height="15" fill="rgb(225,222,54)" fg:x="6826" fg:w="25"/><text x="82.3130%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4 samples, 0.05%)</title><rect x="82.3155%" y="1125" width="0.0481%" height="15" fill="rgb(245,126,29)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.05%)</title><rect x="82.3155%" y="1109" width="0.0481%" height="15" fill="rgb(241,63,48)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.05%)</title><rect x="82.3155%" y="1093" width="0.0481%" height="15" fill="rgb(235,126,38)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4 samples, 0.05%)</title><rect x="82.3155%" y="1077" width="0.0481%" height="15" fill="rgb(232,96,49)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4 samples, 0.05%)</title><rect x="82.3155%" y="1061" width="0.0481%" height="15" fill="rgb(211,146,40)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (4 samples, 0.05%)</title><rect x="82.3155%" y="1045" width="0.0481%" height="15" fill="rgb(247,93,44)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1055.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (4 samples, 0.05%)</title><rect x="82.3155%" y="1029" width="0.0481%" height="15" fill="rgb(251,41,49)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.05%)</title><rect x="82.3155%" y="1013" width="0.0481%" height="15" fill="rgb(218,155,12)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="82.3155%" y="997" width="0.0481%" height="15" fill="rgb(221,161,30)" fg:x="6847" fg:w="4"/><text x="82.5655%" y="1007.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="82.3275%" y="981" width="0.0361%" height="15" fill="rgb(221,179,11)" fg:x="6848" fg:w="3"/><text x="82.5775%" y="991.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="82.3395%" y="965" width="0.0240%" height="15" fill="rgb(224,170,48)" fg:x="6849" fg:w="2"/><text x="82.5895%" y="975.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="82.3395%" y="949" width="0.0240%" height="15" fill="rgb(223,117,5)" fg:x="6849" fg:w="2"/><text x="82.5895%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="82.3395%" y="933" width="0.0240%" height="15" fill="rgb(209,52,20)" fg:x="6849" fg:w="2"/><text x="82.5895%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="82.3395%" y="917" width="0.0240%" height="15" fill="rgb(209,19,41)" fg:x="6849" fg:w="2"/><text x="82.5895%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="82.3395%" y="901" width="0.0240%" height="15" fill="rgb(210,177,12)" fg:x="6849" fg:w="2"/><text x="82.5895%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="82.3395%" y="885" width="0.0240%" height="15" fill="rgb(211,159,37)" fg:x="6849" fg:w="2"/><text x="82.5895%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="82.3395%" y="869" width="0.0240%" height="15" fill="rgb(209,20,2)" fg:x="6849" fg:w="2"/><text x="82.5895%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="82.3515%" y="853" width="0.0120%" height="15" fill="rgb(244,3,46)" fg:x="6850" fg:w="1"/><text x="82.6015%" y="863.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="82.3876%" y="869" width="0.0120%" height="15" fill="rgb(220,94,38)" fg:x="6853" fg:w="1"/><text x="82.6376%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.3996%" y="837" width="0.0120%" height="15" fill="rgb(253,14,31)" fg:x="6854" fg:w="1"/><text x="82.6496%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.3996%" y="821" width="0.0120%" height="15" fill="rgb(234,176,13)" fg:x="6854" fg:w="1"/><text x="82.6496%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.3996%" y="805" width="0.0120%" height="15" fill="rgb(218,62,25)" fg:x="6854" fg:w="1"/><text x="82.6496%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="82.3996%" y="789" width="0.0120%" height="15" fill="rgb(216,124,40)" fg:x="6854" fg:w="1"/><text x="82.6496%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="82.3996%" y="773" width="0.0120%" height="15" fill="rgb(228,170,12)" fg:x="6854" fg:w="1"/><text x="82.6496%" y="783.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="82.3996%" y="757" width="0.0120%" height="15" fill="rgb(231,226,5)" fg:x="6854" fg:w="1"/><text x="82.6496%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.3996%" y="741" width="0.0120%" height="15" fill="rgb(237,122,22)" fg:x="6854" fg:w="1"/><text x="82.6496%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (2 samples, 0.02%)</title><rect x="82.3996%" y="869" width="0.0240%" height="15" fill="rgb(209,185,25)" fg:x="6854" fg:w="2"/><text x="82.6496%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (2 samples, 0.02%)</title><rect x="82.3996%" y="853" width="0.0240%" height="15" fill="rgb(228,200,32)" fg:x="6854" fg:w="2"/><text x="82.6496%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.4116%" y="837" width="0.0120%" height="15" fill="rgb(217,140,10)" fg:x="6855" fg:w="1"/><text x="82.6616%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.4116%" y="821" width="0.0120%" height="15" fill="rgb(253,17,24)" fg:x="6855" fg:w="1"/><text x="82.6616%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.4116%" y="805" width="0.0120%" height="15" fill="rgb(212,61,6)" fg:x="6855" fg:w="1"/><text x="82.6616%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="82.4116%" y="789" width="0.0120%" height="15" fill="rgb(205,14,25)" fg:x="6855" fg:w="1"/><text x="82.6616%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="82.4116%" y="773" width="0.0120%" height="15" fill="rgb(232,69,41)" fg:x="6855" fg:w="1"/><text x="82.6616%" y="783.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="82.4116%" y="757" width="0.0120%" height="15" fill="rgb(241,106,47)" fg:x="6855" fg:w="1"/><text x="82.6616%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.4116%" y="741" width="0.0120%" height="15" fill="rgb(210,213,53)" fg:x="6855" fg:w="1"/><text x="82.6616%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="82.4237%" y="853" width="0.0120%" height="15" fill="rgb(253,175,27)" fg:x="6856" fg:w="1"/><text x="82.6737%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="82.4237%" y="837" width="0.0120%" height="15" fill="rgb(211,171,24)" fg:x="6856" fg:w="1"/><text x="82.6737%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="82.4237%" y="821" width="0.0120%" height="15" fill="rgb(229,80,7)" fg:x="6856" fg:w="1"/><text x="82.6737%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="82.4237%" y="805" width="0.0120%" height="15" fill="rgb(212,46,39)" fg:x="6856" fg:w="1"/><text x="82.6737%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="82.4237%" y="789" width="0.0120%" height="15" fill="rgb(240,80,45)" fg:x="6856" fg:w="1"/><text x="82.6737%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.4357%" y="837" width="0.0120%" height="15" fill="rgb(253,177,40)" fg:x="6857" fg:w="1"/><text x="82.6857%" y="847.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="82.4357%" y="821" width="0.0120%" height="15" fill="rgb(249,200,15)" fg:x="6857" fg:w="1"/><text x="82.6857%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.4477%" y="821" width="0.0120%" height="15" fill="rgb(217,78,26)" fg:x="6858" fg:w="1"/><text x="82.6977%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="82.4477%" y="805" width="0.0120%" height="15" fill="rgb(254,151,32)" fg:x="6858" fg:w="1"/><text x="82.6977%" y="815.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="82.4477%" y="789" width="0.0120%" height="15" fill="rgb(226,165,27)" fg:x="6858" fg:w="1"/><text x="82.6977%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="82.4477%" y="773" width="0.0120%" height="15" fill="rgb(250,206,4)" fg:x="6858" fg:w="1"/><text x="82.6977%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.4477%" y="757" width="0.0120%" height="15" fill="rgb(231,229,27)" fg:x="6858" fg:w="1"/><text x="82.6977%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.4477%" y="741" width="0.0120%" height="15" fill="rgb(239,217,8)" fg:x="6858" fg:w="1"/><text x="82.6977%" y="751.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="82.4597%" y="805" width="0.0361%" height="15" fill="rgb(225,204,27)" fg:x="6859" fg:w="3"/><text x="82.7097%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="82.4597%" y="789" width="0.0361%" height="15" fill="rgb(230,56,32)" fg:x="6859" fg:w="3"/><text x="82.7097%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="82.4597%" y="773" width="0.0361%" height="15" fill="rgb(222,56,27)" fg:x="6859" fg:w="3"/><text x="82.7097%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="82.4597%" y="757" width="0.0361%" height="15" fill="rgb(253,108,27)" fg:x="6859" fg:w="3"/><text x="82.7097%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="82.4597%" y="741" width="0.0361%" height="15" fill="rgb(212,87,36)" fg:x="6859" fg:w="3"/><text x="82.7097%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="82.4597%" y="725" width="0.0361%" height="15" fill="rgb(247,82,36)" fg:x="6859" fg:w="3"/><text x="82.7097%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="82.4717%" y="709" width="0.0240%" height="15" fill="rgb(222,143,9)" fg:x="6860" fg:w="2"/><text x="82.7217%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="82.4717%" y="693" width="0.0240%" height="15" fill="rgb(238,162,48)" fg:x="6860" fg:w="2"/><text x="82.7217%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="82.4597%" y="821" width="0.0481%" height="15" fill="rgb(221,59,43)" fg:x="6859" fg:w="4"/><text x="82.7097%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="82.4958%" y="805" width="0.0120%" height="15" fill="rgb(205,166,41)" fg:x="6862" fg:w="1"/><text x="82.7458%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="82.4958%" y="789" width="0.0120%" height="15" fill="rgb(241,186,40)" fg:x="6862" fg:w="1"/><text x="82.7458%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.4958%" y="773" width="0.0120%" height="15" fill="rgb(216,119,35)" fg:x="6862" fg:w="1"/><text x="82.7458%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.4958%" y="757" width="0.0120%" height="15" fill="rgb(208,68,38)" fg:x="6862" fg:w="1"/><text x="82.7458%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.4958%" y="741" width="0.0120%" height="15" fill="rgb(217,113,1)" fg:x="6862" fg:w="1"/><text x="82.7458%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="82.4958%" y="725" width="0.0120%" height="15" fill="rgb(242,153,3)" fg:x="6862" fg:w="1"/><text x="82.7458%" y="735.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="82.4477%" y="837" width="0.0721%" height="15" fill="rgb(229,76,35)" fg:x="6858" fg:w="6"/><text x="82.6977%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="82.5078%" y="821" width="0.0120%" height="15" fill="rgb(229,125,34)" fg:x="6863" fg:w="1"/><text x="82.7578%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="82.5078%" y="805" width="0.0120%" height="15" fill="rgb(238,179,36)" fg:x="6863" fg:w="1"/><text x="82.7578%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.5078%" y="789" width="0.0120%" height="15" fill="rgb(244,183,19)" fg:x="6863" fg:w="1"/><text x="82.7578%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.5078%" y="773" width="0.0120%" height="15" fill="rgb(216,85,49)" fg:x="6863" fg:w="1"/><text x="82.7578%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.11%)</title><rect x="82.4237%" y="869" width="0.1082%" height="15" fill="rgb(208,161,47)" fg:x="6856" fg:w="9"/><text x="82.6737%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.10%)</title><rect x="82.4357%" y="853" width="0.0962%" height="15" fill="rgb(233,210,18)" fg:x="6857" fg:w="8"/><text x="82.6857%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.5198%" y="837" width="0.0120%" height="15" fill="rgb(205,104,42)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.5198%" y="821" width="0.0120%" height="15" fill="rgb(248,90,43)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.5198%" y="805" width="0.0120%" height="15" fill="rgb(206,198,11)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.5198%" y="789" width="0.0120%" height="15" fill="rgb(239,165,27)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.5198%" y="773" width="0.0120%" height="15" fill="rgb(246,44,32)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.5198%" y="757" width="0.0120%" height="15" fill="rgb(252,65,42)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="82.5198%" y="741" width="0.0120%" height="15" fill="rgb(246,197,18)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.5198%" y="725" width="0.0120%" height="15" fill="rgb(216,192,4)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.5198%" y="709" width="0.0120%" height="15" fill="rgb(208,117,10)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.5198%" y="693" width="0.0120%" height="15" fill="rgb(240,61,47)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="703.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="82.5198%" y="677" width="0.0120%" height="15" fill="rgb(228,178,21)" fg:x="6864" fg:w="1"/><text x="82.7698%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (2 samples, 0.02%)</title><rect x="82.5319%" y="773" width="0.0240%" height="15" fill="rgb(219,96,54)" fg:x="6865" fg:w="2"/><text x="82.7819%" y="783.50"></text></g><g><title>alloc::slice::stable_sort (2 samples, 0.02%)</title><rect x="82.5319%" y="757" width="0.0240%" height="15" fill="rgb(250,177,24)" fg:x="6865" fg:w="2"/><text x="82.7819%" y="767.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="82.5439%" y="741" width="0.0120%" height="15" fill="rgb(242,154,46)" fg:x="6866" fg:w="1"/><text x="82.7939%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="82.5439%" y="725" width="0.0120%" height="15" fill="rgb(226,176,29)" fg:x="6866" fg:w="1"/><text x="82.7939%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="82.5559%" y="773" width="0.0120%" height="15" fill="rgb(226,29,2)" fg:x="6867" fg:w="1"/><text x="82.8059%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.5559%" y="757" width="0.0120%" height="15" fill="rgb(237,104,14)" fg:x="6867" fg:w="1"/><text x="82.8059%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.5679%" y="757" width="0.0120%" height="15" fill="rgb(245,207,31)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="82.5679%" y="741" width="0.0120%" height="15" fill="rgb(229,211,45)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="82.5679%" y="725" width="0.0120%" height="15" fill="rgb(229,113,15)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="82.5679%" y="709" width="0.0120%" height="15" fill="rgb(237,147,15)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="82.5679%" y="693" width="0.0120%" height="15" fill="rgb(244,120,12)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.5679%" y="677" width="0.0120%" height="15" fill="rgb(205,120,12)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="82.5679%" y="661" width="0.0120%" height="15" fill="rgb(231,26,45)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="82.5679%" y="645" width="0.0120%" height="15" fill="rgb(246,98,1)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="655.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="82.5679%" y="629" width="0.0120%" height="15" fill="rgb(207,68,45)" fg:x="6868" fg:w="1"/><text x="82.8179%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (5 samples, 0.06%)</title><rect x="82.5319%" y="837" width="0.0601%" height="15" fill="rgb(231,27,38)" fg:x="6865" fg:w="5"/><text x="82.7819%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (5 samples, 0.06%)</title><rect x="82.5319%" y="821" width="0.0601%" height="15" fill="rgb(214,223,3)" fg:x="6865" fg:w="5"/><text x="82.7819%" y="831.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.06%)</title><rect x="82.5319%" y="805" width="0.0601%" height="15" fill="rgb(228,195,46)" fg:x="6865" fg:w="5"/><text x="82.7819%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.06%)</title><rect x="82.5319%" y="789" width="0.0601%" height="15" fill="rgb(231,100,42)" fg:x="6865" fg:w="5"/><text x="82.7819%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="82.5679%" y="773" width="0.0240%" height="15" fill="rgb(236,53,4)" fg:x="6868" fg:w="2"/><text x="82.8179%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="82.5799%" y="757" width="0.0120%" height="15" fill="rgb(230,152,12)" fg:x="6869" fg:w="1"/><text x="82.8299%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.5799%" y="741" width="0.0120%" height="15" fill="rgb(226,101,19)" fg:x="6869" fg:w="1"/><text x="82.8299%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="82.5799%" y="725" width="0.0120%" height="15" fill="rgb(250,149,32)" fg:x="6869" fg:w="1"/><text x="82.8299%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="82.5799%" y="709" width="0.0120%" height="15" fill="rgb(232,178,12)" fg:x="6869" fg:w="1"/><text x="82.8299%" y="719.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="82.5799%" y="693" width="0.0120%" height="15" fill="rgb(246,151,17)" fg:x="6869" fg:w="1"/><text x="82.8299%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.5799%" y="677" width="0.0120%" height="15" fill="rgb(252,17,51)" fg:x="6869" fg:w="1"/><text x="82.8299%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 0.22%)</title><rect x="82.3876%" y="965" width="0.2164%" height="15" fill="rgb(250,207,23)" fg:x="6853" fg:w="18"/><text x="82.6376%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 0.22%)</title><rect x="82.3876%" y="949" width="0.2164%" height="15" fill="rgb(205,27,5)" fg:x="6853" fg:w="18"/><text x="82.6376%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.22%)</title><rect x="82.3876%" y="933" width="0.2164%" height="15" fill="rgb(224,32,19)" fg:x="6853" fg:w="18"/><text x="82.6376%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (18 samples, 0.22%)</title><rect x="82.3876%" y="917" width="0.2164%" height="15" fill="rgb(247,214,40)" fg:x="6853" fg:w="18"/><text x="82.6376%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (18 samples, 0.22%)</title><rect x="82.3876%" y="901" width="0.2164%" height="15" fill="rgb(239,199,17)" fg:x="6853" fg:w="18"/><text x="82.6376%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (18 samples, 0.22%)</title><rect x="82.3876%" y="885" width="0.2164%" height="15" fill="rgb(251,159,9)" fg:x="6853" fg:w="18"/><text x="82.6376%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6 samples, 0.07%)</title><rect x="82.5319%" y="869" width="0.0721%" height="15" fill="rgb(225,78,32)" fg:x="6865" fg:w="6"/><text x="82.7819%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (6 samples, 0.07%)</title><rect x="82.5319%" y="853" width="0.0721%" height="15" fill="rgb(206,97,47)" fg:x="6865" fg:w="6"/><text x="82.7819%" y="863.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="82.5920%" y="837" width="0.0120%" height="15" fill="rgb(227,107,4)" fg:x="6870" fg:w="1"/><text x="82.8420%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.6040%" y="965" width="0.0120%" height="15" fill="rgb(241,146,50)" fg:x="6871" fg:w="1"/><text x="82.8540%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.6040%" y="949" width="0.0120%" height="15" fill="rgb(232,92,30)" fg:x="6871" fg:w="1"/><text x="82.8540%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.6040%" y="933" width="0.0120%" height="15" fill="rgb(222,0,40)" fg:x="6871" fg:w="1"/><text x="82.8540%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="82.6040%" y="917" width="0.0120%" height="15" fill="rgb(219,54,33)" fg:x="6871" fg:w="1"/><text x="82.8540%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="82.6040%" y="901" width="0.0120%" height="15" fill="rgb(226,209,28)" fg:x="6871" fg:w="1"/><text x="82.8540%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="82.6040%" y="885" width="0.0120%" height="15" fill="rgb(254,205,35)" fg:x="6871" fg:w="1"/><text x="82.8540%" y="895.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.6280%" y="773" width="0.0120%" height="15" fill="rgb(230,159,3)" fg:x="6873" fg:w="1"/><text x="82.8780%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="82.6401%" y="773" width="0.0120%" height="15" fill="rgb(232,190,24)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="82.6401%" y="757" width="0.0120%" height="15" fill="rgb(217,227,44)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="82.6401%" y="741" width="0.0120%" height="15" fill="rgb(236,211,1)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="82.6401%" y="725" width="0.0120%" height="15" fill="rgb(250,127,46)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="82.6401%" y="709" width="0.0120%" height="15" fill="rgb(229,213,6)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="82.6401%" y="693" width="0.0120%" height="15" fill="rgb(237,15,36)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="82.6401%" y="677" width="0.0120%" height="15" fill="rgb(213,131,41)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="82.6401%" y="661" width="0.0120%" height="15" fill="rgb(225,82,44)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="82.6401%" y="645" width="0.0120%" height="15" fill="rgb(249,42,11)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="82.6401%" y="629" width="0.0120%" height="15" fill="rgb(253,11,29)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="82.6401%" y="613" width="0.0120%" height="15" fill="rgb(206,8,54)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="623.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.6401%" y="597" width="0.0120%" height="15" fill="rgb(222,186,2)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="607.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.6401%" y="581" width="0.0120%" height="15" fill="rgb(221,206,53)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="591.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.6401%" y="565" width="0.0120%" height="15" fill="rgb(230,150,21)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="82.6401%" y="549" width="0.0120%" height="15" fill="rgb(253,202,10)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="82.6401%" y="533" width="0.0120%" height="15" fill="rgb(238,109,40)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.6401%" y="517" width="0.0120%" height="15" fill="rgb(247,120,22)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.6401%" y="501" width="0.0120%" height="15" fill="rgb(207,43,30)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="82.6401%" y="485" width="0.0120%" height="15" fill="rgb(213,211,24)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="82.6401%" y="469" width="0.0120%" height="15" fill="rgb(239,73,39)" fg:x="6874" fg:w="1"/><text x="82.8901%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="581" width="0.0120%" height="15" fill="rgb(245,182,19)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="565" width="0.0120%" height="15" fill="rgb(247,143,26)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="549" width="0.0120%" height="15" fill="rgb(228,191,23)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.6521%" y="533" width="0.0120%" height="15" fill="rgb(253,165,31)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="517" width="0.0120%" height="15" fill="rgb(234,138,20)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="501" width="0.0120%" height="15" fill="rgb(218,191,29)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="485" width="0.0120%" height="15" fill="rgb(221,157,19)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="469" width="0.0120%" height="15" fill="rgb(237,26,42)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="82.6521%" y="453" width="0.0120%" height="15" fill="rgb(220,163,24)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.6521%" y="437" width="0.0120%" height="15" fill="rgb(242,115,20)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="82.6521%" y="421" width="0.0120%" height="15" fill="rgb(210,206,9)" fg:x="6875" fg:w="1"/><text x="82.9021%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="82.6641%" y="581" width="0.0120%" height="15" fill="rgb(208,71,17)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="82.6641%" y="565" width="0.0120%" height="15" fill="rgb(233,7,5)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="82.6641%" y="549" width="0.0120%" height="15" fill="rgb(207,92,33)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="82.6641%" y="533" width="0.0120%" height="15" fill="rgb(218,87,9)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.6641%" y="517" width="0.0120%" height="15" fill="rgb(219,47,37)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.6641%" y="501" width="0.0120%" height="15" fill="rgb(221,152,34)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.6641%" y="485" width="0.0120%" height="15" fill="rgb(235,176,21)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.6641%" y="469" width="0.0120%" height="15" fill="rgb(232,212,21)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.6641%" y="453" width="0.0120%" height="15" fill="rgb(245,82,39)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.6641%" y="437" width="0.0120%" height="15" fill="rgb(241,52,51)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="82.6641%" y="421" width="0.0120%" height="15" fill="rgb(219,91,24)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.6641%" y="405" width="0.0120%" height="15" fill="rgb(241,142,12)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.6641%" y="389" width="0.0120%" height="15" fill="rgb(230,27,9)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.6641%" y="373" width="0.0120%" height="15" fill="rgb(249,181,32)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="383.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="82.6641%" y="357" width="0.0120%" height="15" fill="rgb(230,107,3)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.6641%" y="341" width="0.0120%" height="15" fill="rgb(246,204,14)" fg:x="6876" fg:w="1"/><text x="82.9141%" y="351.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.6761%" y="405" width="0.0120%" height="15" fill="rgb(213,192,47)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="415.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.6761%" y="389" width="0.0120%" height="15" fill="rgb(240,44,36)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.6761%" y="373" width="0.0120%" height="15" fill="rgb(244,209,38)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="82.6761%" y="357" width="0.0120%" height="15" fill="rgb(219,34,37)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="82.6761%" y="341" width="0.0120%" height="15" fill="rgb(210,28,6)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="351.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="82.6761%" y="325" width="0.0120%" height="15" fill="rgb(244,110,52)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.6761%" y="309" width="0.0120%" height="15" fill="rgb(254,124,47)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.6761%" y="293" width="0.0120%" height="15" fill="rgb(254,110,13)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.6761%" y="277" width="0.0120%" height="15" fill="rgb(252,57,21)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="287.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="82.6761%" y="261" width="0.0120%" height="15" fill="rgb(242,60,45)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.6761%" y="245" width="0.0120%" height="15" fill="rgb(234,49,30)" fg:x="6877" fg:w="1"/><text x="82.9261%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.05%)</title><rect x="82.6521%" y="773" width="0.0481%" height="15" fill="rgb(218,98,6)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="82.6521%" y="757" width="0.0481%" height="15" fill="rgb(220,174,29)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="82.6521%" y="741" width="0.0481%" height="15" fill="rgb(236,163,23)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.05%)</title><rect x="82.6521%" y="725" width="0.0481%" height="15" fill="rgb(242,114,45)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.05%)</title><rect x="82.6521%" y="709" width="0.0481%" height="15" fill="rgb(232,10,53)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="82.6521%" y="693" width="0.0481%" height="15" fill="rgb(245,108,29)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="82.6521%" y="677" width="0.0481%" height="15" fill="rgb(240,89,53)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (4 samples, 0.05%)</title><rect x="82.6521%" y="661" width="0.0481%" height="15" fill="rgb(226,60,45)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="82.6521%" y="645" width="0.0481%" height="15" fill="rgb(230,41,44)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="82.6521%" y="629" width="0.0481%" height="15" fill="rgb(230,26,20)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.05%)</title><rect x="82.6521%" y="613" width="0.0481%" height="15" fill="rgb(237,170,32)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="623.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (4 samples, 0.05%)</title><rect x="82.6521%" y="597" width="0.0481%" height="15" fill="rgb(212,35,42)" fg:x="6875" fg:w="4"/><text x="82.9021%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="82.6761%" y="581" width="0.0240%" height="15" fill="rgb(227,31,34)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="82.6761%" y="565" width="0.0240%" height="15" fill="rgb(216,19,18)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="575.50"></text></g><g><title>smithereens::fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="82.6761%" y="549" width="0.0240%" height="15" fill="rgb(211,133,42)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="82.6761%" y="533" width="0.0240%" height="15" fill="rgb(244,66,13)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="82.6761%" y="517" width="0.0240%" height="15" fill="rgb(218,185,50)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="527.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="82.6761%" y="501" width="0.0240%" height="15" fill="rgb(219,149,13)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="82.6761%" y="485" width="0.0240%" height="15" fill="rgb(221,125,0)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="82.6761%" y="469" width="0.0240%" height="15" fill="rgb(247,126,27)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="82.6761%" y="453" width="0.0240%" height="15" fill="rgb(250,138,30)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="463.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="82.6761%" y="437" width="0.0240%" height="15" fill="rgb(230,151,9)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="447.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="82.6761%" y="421" width="0.0240%" height="15" fill="rgb(233,80,38)" fg:x="6877" fg:w="2"/><text x="82.9261%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.6881%" y="405" width="0.0120%" height="15" fill="rgb(232,68,43)" fg:x="6878" fg:w="1"/><text x="82.9381%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.6881%" y="389" width="0.0120%" height="15" fill="rgb(254,5,50)" fg:x="6878" fg:w="1"/><text x="82.9381%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.6881%" y="373" width="0.0120%" height="15" fill="rgb(225,45,5)" fg:x="6878" fg:w="1"/><text x="82.9381%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="82.6881%" y="357" width="0.0120%" height="15" fill="rgb(239,22,3)" fg:x="6878" fg:w="1"/><text x="82.9381%" y="367.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (2 samples, 0.02%)</title><rect x="82.7002%" y="773" width="0.0240%" height="15" fill="rgb(243,129,0)" fg:x="6879" fg:w="2"/><text x="82.9502%" y="783.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (2 samples, 0.02%)</title><rect x="82.7002%" y="757" width="0.0240%" height="15" fill="rgb(223,164,0)" fg:x="6879" fg:w="2"/><text x="82.9502%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.7242%" y="597" width="0.0120%" height="15" fill="rgb(221,46,29)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.7242%" y="581" width="0.0120%" height="15" fill="rgb(205,97,47)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.7242%" y="565" width="0.0120%" height="15" fill="rgb(249,14,8)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="82.7242%" y="549" width="0.0120%" height="15" fill="rgb(216,77,3)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="82.7242%" y="533" width="0.0120%" height="15" fill="rgb(206,168,54)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="543.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="82.7242%" y="517" width="0.0120%" height="15" fill="rgb(236,3,41)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.7242%" y="501" width="0.0120%" height="15" fill="rgb(231,132,24)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.7242%" y="485" width="0.0120%" height="15" fill="rgb(227,221,40)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.7242%" y="469" width="0.0120%" height="15" fill="rgb(233,151,11)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="479.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="82.7242%" y="453" width="0.0120%" height="15" fill="rgb(247,81,35)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.7242%" y="437" width="0.0120%" height="15" fill="rgb(243,128,48)" fg:x="6881" fg:w="1"/><text x="82.9742%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.7362%" y="421" width="0.0120%" height="15" fill="rgb(253,16,10)" fg:x="6882" fg:w="1"/><text x="82.9862%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.7362%" y="405" width="0.0120%" height="15" fill="rgb(228,67,27)" fg:x="6882" fg:w="1"/><text x="82.9862%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.7362%" y="389" width="0.0120%" height="15" fill="rgb(231,105,25)" fg:x="6882" fg:w="1"/><text x="82.9862%" y="399.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="82.7362%" y="373" width="0.0120%" height="15" fill="rgb(213,166,47)" fg:x="6882" fg:w="1"/><text x="82.9862%" y="383.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="82.7362%" y="549" width="0.0240%" height="15" fill="rgb(209,27,10)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="559.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="82.7362%" y="533" width="0.0240%" height="15" fill="rgb(241,44,30)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="82.7362%" y="517" width="0.0240%" height="15" fill="rgb(223,216,15)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="82.7362%" y="501" width="0.0240%" height="15" fill="rgb(227,14,7)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="82.7362%" y="485" width="0.0240%" height="15" fill="rgb(237,14,5)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="82.7362%" y="469" width="0.0240%" height="15" fill="rgb(232,14,36)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="82.7362%" y="453" width="0.0240%" height="15" fill="rgb(234,0,38)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="82.7362%" y="437" width="0.0240%" height="15" fill="rgb(207,170,14)" fg:x="6882" fg:w="2"/><text x="82.9862%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="82.7483%" y="421" width="0.0120%" height="15" fill="rgb(252,45,13)" fg:x="6883" fg:w="1"/><text x="82.9983%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="82.7483%" y="405" width="0.0120%" height="15" fill="rgb(213,142,7)" fg:x="6883" fg:w="1"/><text x="82.9983%" y="415.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.05%)</title><rect x="82.7242%" y="725" width="0.0481%" height="15" fill="rgb(216,157,23)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="82.7242%" y="709" width="0.0481%" height="15" fill="rgb(212,145,33)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="719.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="82.7242%" y="693" width="0.0481%" height="15" fill="rgb(233,26,13)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="82.7242%" y="677" width="0.0481%" height="15" fill="rgb(219,196,19)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.05%)</title><rect x="82.7242%" y="661" width="0.0481%" height="15" fill="rgb(246,56,21)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4 samples, 0.05%)</title><rect x="82.7242%" y="645" width="0.0481%" height="15" fill="rgb(222,28,53)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="655.50"></text></g><g><title>core::clone::Clone::clone (4 samples, 0.05%)</title><rect x="82.7242%" y="629" width="0.0481%" height="15" fill="rgb(224,5,27)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="639.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="82.7242%" y="613" width="0.0481%" height="15" fill="rgb(220,153,33)" fg:x="6881" fg:w="4"/><text x="82.9742%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="82.7362%" y="597" width="0.0361%" height="15" fill="rgb(226,58,19)" fg:x="6882" fg:w="3"/><text x="82.9862%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="82.7362%" y="581" width="0.0361%" height="15" fill="rgb(239,112,23)" fg:x="6882" fg:w="3"/><text x="82.9862%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="82.7362%" y="565" width="0.0361%" height="15" fill="rgb(251,213,20)" fg:x="6882" fg:w="3"/><text x="82.9862%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.7603%" y="549" width="0.0120%" height="15" fill="rgb(215,181,21)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.7603%" y="533" width="0.0120%" height="15" fill="rgb(240,8,35)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="82.7603%" y="517" width="0.0120%" height="15" fill="rgb(232,203,3)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.7603%" y="501" width="0.0120%" height="15" fill="rgb(214,202,43)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.7603%" y="485" width="0.0120%" height="15" fill="rgb(254,35,11)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.7603%" y="469" width="0.0120%" height="15" fill="rgb(239,173,13)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="479.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="82.7603%" y="453" width="0.0120%" height="15" fill="rgb(220,141,0)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.7603%" y="437" width="0.0120%" height="15" fill="rgb(210,98,12)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.7603%" y="421" width="0.0120%" height="15" fill="rgb(254,153,22)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="82.7603%" y="405" width="0.0120%" height="15" fill="rgb(247,223,17)" fg:x="6884" fg:w="1"/><text x="83.0103%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="82.7723%" y="677" width="0.0120%" height="15" fill="rgb(246,56,7)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="82.7723%" y="661" width="0.0120%" height="15" fill="rgb(240,226,12)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="671.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.7723%" y="645" width="0.0120%" height="15" fill="rgb(205,87,46)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.7723%" y="629" width="0.0120%" height="15" fill="rgb(245,214,51)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="82.7723%" y="613" width="0.0120%" height="15" fill="rgb(223,172,33)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="82.7723%" y="597" width="0.0120%" height="15" fill="rgb(227,203,34)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.7723%" y="581" width="0.0120%" height="15" fill="rgb(248,143,44)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.7723%" y="565" width="0.0120%" height="15" fill="rgb(226,162,5)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.7723%" y="549" width="0.0120%" height="15" fill="rgb(211,143,1)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="82.7723%" y="533" width="0.0120%" height="15" fill="rgb(224,96,15)" fg:x="6885" fg:w="1"/><text x="83.0223%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.18%)</title><rect x="82.6160%" y="917" width="0.1803%" height="15" fill="rgb(222,4,38)" fg:x="6872" fg:w="15"/><text x="82.8660%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.18%)</title><rect x="82.6160%" y="901" width="0.1803%" height="15" fill="rgb(253,228,15)" fg:x="6872" fg:w="15"/><text x="82.8660%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="82.6280%" y="885" width="0.1683%" height="15" fill="rgb(242,194,12)" fg:x="6873" fg:w="14"/><text x="82.8780%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="82.6280%" y="869" width="0.1683%" height="15" fill="rgb(214,177,31)" fg:x="6873" fg:w="14"/><text x="82.8780%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (14 samples, 0.17%)</title><rect x="82.6280%" y="853" width="0.1683%" height="15" fill="rgb(226,58,51)" fg:x="6873" fg:w="14"/><text x="82.8780%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="82.6280%" y="837" width="0.1683%" height="15" fill="rgb(250,119,16)" fg:x="6873" fg:w="14"/><text x="82.8780%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.17%)</title><rect x="82.6280%" y="821" width="0.1683%" height="15" fill="rgb(223,128,53)" fg:x="6873" fg:w="14"/><text x="82.8780%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (14 samples, 0.17%)</title><rect x="82.6280%" y="805" width="0.1683%" height="15" fill="rgb(251,199,15)" fg:x="6873" fg:w="14"/><text x="82.8780%" y="815.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (14 samples, 0.17%)</title><rect x="82.6280%" y="789" width="0.1683%" height="15" fill="rgb(235,168,42)" fg:x="6873" fg:w="14"/><text x="82.8780%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.07%)</title><rect x="82.7242%" y="773" width="0.0721%" height="15" fill="rgb(250,210,17)" fg:x="6881" fg:w="6"/><text x="82.9742%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.07%)</title><rect x="82.7242%" y="757" width="0.0721%" height="15" fill="rgb(226,36,41)" fg:x="6881" fg:w="6"/><text x="82.9742%" y="767.50"></text></g><g><title>smithereens::fragment::_{{closure}} (6 samples, 0.07%)</title><rect x="82.7242%" y="741" width="0.0721%" height="15" fill="rgb(225,87,10)" fg:x="6881" fg:w="6"/><text x="82.9742%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="82.7723%" y="725" width="0.0240%" height="15" fill="rgb(228,83,9)" fg:x="6885" fg:w="2"/><text x="83.0223%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="82.7723%" y="709" width="0.0240%" height="15" fill="rgb(225,16,36)" fg:x="6885" fg:w="2"/><text x="83.0223%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="82.7723%" y="693" width="0.0240%" height="15" fill="rgb(242,198,13)" fg:x="6885" fg:w="2"/><text x="83.0223%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="82.7843%" y="677" width="0.0120%" height="15" fill="rgb(239,25,51)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="82.7843%" y="661" width="0.0120%" height="15" fill="rgb(239,28,37)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="82.7843%" y="645" width="0.0120%" height="15" fill="rgb(234,70,17)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="82.7843%" y="629" width="0.0120%" height="15" fill="rgb(231,215,53)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="82.7843%" y="613" width="0.0120%" height="15" fill="rgb(218,140,42)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="623.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="82.7843%" y="597" width="0.0120%" height="15" fill="rgb(233,227,45)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="82.7843%" y="581" width="0.0120%" height="15" fill="rgb(225,189,21)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="82.7843%" y="565" width="0.0120%" height="15" fill="rgb(237,176,54)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="82.7843%" y="549" width="0.0120%" height="15" fill="rgb(215,131,46)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.7843%" y="533" width="0.0120%" height="15" fill="rgb(218,95,20)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="82.7843%" y="517" width="0.0120%" height="15" fill="rgb(208,198,12)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="82.7843%" y="501" width="0.0120%" height="15" fill="rgb(239,107,50)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="511.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="82.7843%" y="485" width="0.0120%" height="15" fill="rgb(240,217,37)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.7843%" y="469" width="0.0120%" height="15" fill="rgb(242,197,49)" fg:x="6886" fg:w="1"/><text x="83.0343%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="82.7963%" y="805" width="0.0120%" height="15" fill="rgb(219,171,17)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.7963%" y="789" width="0.0120%" height="15" fill="rgb(209,81,40)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.7963%" y="773" width="0.0120%" height="15" fill="rgb(237,156,30)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="82.7963%" y="757" width="0.0120%" height="15" fill="rgb(212,127,16)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="82.7963%" y="741" width="0.0120%" height="15" fill="rgb(226,66,32)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.7963%" y="725" width="0.0120%" height="15" fill="rgb(245,22,46)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.7963%" y="709" width="0.0120%" height="15" fill="rgb(210,112,21)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="82.7963%" y="693" width="0.0120%" height="15" fill="rgb(207,118,39)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.7963%" y="677" width="0.0120%" height="15" fill="rgb(205,206,35)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="82.7963%" y="661" width="0.0120%" height="15" fill="rgb(222,120,2)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="82.7963%" y="645" width="0.0120%" height="15" fill="rgb(205,38,18)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="655.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="82.7963%" y="629" width="0.0120%" height="15" fill="rgb(226,61,2)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="82.7963%" y="613" width="0.0120%" height="15" fill="rgb(242,161,23)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.7963%" y="597" width="0.0120%" height="15" fill="rgb(213,13,52)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.7963%" y="581" width="0.0120%" height="15" fill="rgb(246,209,47)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="82.7963%" y="565" width="0.0120%" height="15" fill="rgb(214,41,3)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="82.7963%" y="549" width="0.0120%" height="15" fill="rgb(236,119,38)" fg:x="6887" fg:w="1"/><text x="83.0463%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.20%)</title><rect x="82.6160%" y="965" width="0.2044%" height="15" fill="rgb(218,50,11)" fg:x="6872" fg:w="17"/><text x="82.8660%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.20%)</title><rect x="82.6160%" y="949" width="0.2044%" height="15" fill="rgb(228,38,11)" fg:x="6872" fg:w="17"/><text x="82.8660%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.20%)</title><rect x="82.6160%" y="933" width="0.2044%" height="15" fill="rgb(212,13,9)" fg:x="6872" fg:w="17"/><text x="82.8660%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="82.7963%" y="917" width="0.0240%" height="15" fill="rgb(208,211,9)" fg:x="6887" fg:w="2"/><text x="83.0463%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="82.7963%" y="901" width="0.0240%" height="15" fill="rgb(239,39,32)" fg:x="6887" fg:w="2"/><text x="83.0463%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="82.7963%" y="885" width="0.0240%" height="15" fill="rgb(254,179,26)" fg:x="6887" fg:w="2"/><text x="83.0463%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="82.7963%" y="869" width="0.0240%" height="15" fill="rgb(249,165,28)" fg:x="6887" fg:w="2"/><text x="83.0463%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="82.7963%" y="853" width="0.0240%" height="15" fill="rgb(225,59,50)" fg:x="6887" fg:w="2"/><text x="83.0463%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="82.7963%" y="837" width="0.0240%" height="15" fill="rgb(209,122,5)" fg:x="6887" fg:w="2"/><text x="83.0463%" y="847.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="82.7963%" y="821" width="0.0240%" height="15" fill="rgb(214,65,34)" fg:x="6887" fg:w="2"/><text x="83.0463%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="82.8084%" y="805" width="0.0120%" height="15" fill="rgb(249,183,32)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="82.8084%" y="789" width="0.0120%" height="15" fill="rgb(218,122,24)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="799.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="82.8084%" y="773" width="0.0120%" height="15" fill="rgb(224,109,18)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="82.8084%" y="757" width="0.0120%" height="15" fill="rgb(210,68,50)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="741" width="0.0120%" height="15" fill="rgb(212,184,34)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="725" width="0.0120%" height="15" fill="rgb(238,105,48)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="709" width="0.0120%" height="15" fill="rgb(222,134,54)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="82.8084%" y="693" width="0.0120%" height="15" fill="rgb(246,24,43)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="82.8084%" y="677" width="0.0120%" height="15" fill="rgb(227,169,22)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="687.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="661" width="0.0120%" height="15" fill="rgb(253,152,4)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="671.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="645" width="0.0120%" height="15" fill="rgb(219,158,36)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.8084%" y="629" width="0.0120%" height="15" fill="rgb(251,128,40)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.8084%" y="613" width="0.0120%" height="15" fill="rgb(254,101,39)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.8084%" y="597" width="0.0120%" height="15" fill="rgb(221,168,40)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="607.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="581" width="0.0120%" height="15" fill="rgb(221,14,27)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="591.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="565" width="0.0120%" height="15" fill="rgb(207,36,43)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.8084%" y="549" width="0.0120%" height="15" fill="rgb(240,172,53)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.8084%" y="533" width="0.0120%" height="15" fill="rgb(241,138,43)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.8084%" y="517" width="0.0120%" height="15" fill="rgb(227,78,19)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="527.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="501" width="0.0120%" height="15" fill="rgb(215,127,44)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="511.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8084%" y="485" width="0.0120%" height="15" fill="rgb(227,13,10)" fg:x="6888" fg:w="1"/><text x="83.0584%" y="495.50"></text></g><g><title>smithereens::expand_from (1 samples, 0.01%)</title><rect x="82.8204%" y="965" width="0.0120%" height="15" fill="rgb(249,177,6)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="82.8204%" y="949" width="0.0120%" height="15" fill="rgb(215,154,26)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="82.8204%" y="933" width="0.0120%" height="15" fill="rgb(250,168,20)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="82.8204%" y="917" width="0.0120%" height="15" fill="rgb(222,53,38)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.8204%" y="901" width="0.0120%" height="15" fill="rgb(245,154,5)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.01%)</title><rect x="82.8204%" y="885" width="0.0120%" height="15" fill="rgb(214,89,50)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="82.8204%" y="869" width="0.0120%" height="15" fill="rgb(232,73,14)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="879.50"></text></g><g><title>&lt;petgraph::graph_impl::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.8204%" y="853" width="0.0120%" height="15" fill="rgb(230,101,20)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="82.8204%" y="837" width="0.0120%" height="15" fill="rgb(208,56,28)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="82.8204%" y="821" width="0.0120%" height="15" fill="rgb(247,205,22)" fg:x="6889" fg:w="1"/><text x="83.0704%" y="831.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="82.8324%" y="965" width="0.0120%" height="15" fill="rgb(252,109,51)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="82.8324%" y="949" width="0.0120%" height="15" fill="rgb(220,40,24)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="82.8324%" y="933" width="0.0120%" height="15" fill="rgb(251,108,7)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="82.8324%" y="917" width="0.0120%" height="15" fill="rgb(238,102,51)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="82.8324%" y="901" width="0.0120%" height="15" fill="rgb(219,149,34)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="82.8324%" y="885" width="0.0120%" height="15" fill="rgb(239,70,0)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="82.8324%" y="869" width="0.0120%" height="15" fill="rgb(246,214,23)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="82.8324%" y="853" width="0.0120%" height="15" fill="rgb(239,221,51)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="863.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="82.8324%" y="837" width="0.0120%" height="15" fill="rgb(254,62,14)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="82.8324%" y="821" width="0.0120%" height="15" fill="rgb(253,57,33)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="82.8324%" y="805" width="0.0120%" height="15" fill="rgb(229,34,6)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.8324%" y="789" width="0.0120%" height="15" fill="rgb(235,191,23)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="799.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="82.8324%" y="773" width="0.0120%" height="15" fill="rgb(217,207,27)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="82.8324%" y="757" width="0.0120%" height="15" fill="rgb(232,41,44)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="82.8324%" y="741" width="0.0120%" height="15" fill="rgb(221,188,19)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.8324%" y="725" width="0.0120%" height="15" fill="rgb(245,180,45)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.8324%" y="709" width="0.0120%" height="15" fill="rgb(250,220,42)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="82.8324%" y="693" width="0.0120%" height="15" fill="rgb(234,16,34)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="82.8324%" y="677" width="0.0120%" height="15" fill="rgb(233,217,23)" fg:x="6890" fg:w="1"/><text x="83.0824%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="82.8444%" y="869" width="0.0120%" height="15" fill="rgb(209,22,46)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="82.8444%" y="853" width="0.0120%" height="15" fill="rgb(213,101,18)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="863.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="82.8444%" y="837" width="0.0120%" height="15" fill="rgb(215,179,52)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="847.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8444%" y="821" width="0.0120%" height="15" fill="rgb(223,50,25)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.8444%" y="805" width="0.0120%" height="15" fill="rgb(224,51,44)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.8444%" y="789" width="0.0120%" height="15" fill="rgb(224,13,54)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.8444%" y="773" width="0.0120%" height="15" fill="rgb(219,58,47)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="82.8444%" y="757" width="0.0120%" height="15" fill="rgb(246,124,34)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="82.8444%" y="741" width="0.0120%" height="15" fill="rgb(245,109,25)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="82.8444%" y="725" width="0.0120%" height="15" fill="rgb(235,48,23)" fg:x="6891" fg:w="1"/><text x="83.0944%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="82.8444%" y="917" width="0.0481%" height="15" fill="rgb(229,203,36)" fg:x="6891" fg:w="4"/><text x="83.0944%" y="927.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="82.8444%" y="901" width="0.0481%" height="15" fill="rgb(234,180,9)" fg:x="6891" fg:w="4"/><text x="83.0944%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="82.8444%" y="885" width="0.0481%" height="15" fill="rgb(228,98,45)" fg:x="6891" fg:w="4"/><text x="83.0944%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="82.8565%" y="869" width="0.0361%" height="15" fill="rgb(240,24,36)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.04%)</title><rect x="82.8565%" y="853" width="0.0361%" height="15" fill="rgb(227,154,19)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="863.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="82.8565%" y="837" width="0.0361%" height="15" fill="rgb(231,2,48)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="82.8565%" y="821" width="0.0361%" height="15" fill="rgb(219,216,0)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="82.8565%" y="805" width="0.0361%" height="15" fill="rgb(251,88,0)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="815.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="82.8565%" y="789" width="0.0361%" height="15" fill="rgb(242,45,45)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="799.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="82.8565%" y="773" width="0.0361%" height="15" fill="rgb(218,149,45)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="783.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="82.8565%" y="757" width="0.0361%" height="15" fill="rgb(247,194,10)" fg:x="6892" fg:w="3"/><text x="83.1065%" y="767.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="82.8685%" y="741" width="0.0240%" height="15" fill="rgb(234,33,37)" fg:x="6893" fg:w="2"/><text x="83.1185%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="82.8805%" y="725" width="0.0120%" height="15" fill="rgb(218,61,13)" fg:x="6894" fg:w="1"/><text x="83.1305%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="82.8925%" y="789" width="0.0120%" height="15" fill="rgb(210,80,52)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="82.8925%" y="773" width="0.0120%" height="15" fill="rgb(218,203,27)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="82.8925%" y="757" width="0.0120%" height="15" fill="rgb(209,126,33)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="82.8925%" y="741" width="0.0120%" height="15" fill="rgb(234,173,41)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.8925%" y="725" width="0.0120%" height="15" fill="rgb(228,166,9)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="82.8925%" y="709" width="0.0120%" height="15" fill="rgb(208,124,43)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="82.8925%" y="693" width="0.0120%" height="15" fill="rgb(212,154,38)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="82.8925%" y="677" width="0.0120%" height="15" fill="rgb(246,179,35)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="82.8925%" y="661" width="0.0120%" height="15" fill="rgb(251,3,50)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="82.8925%" y="645" width="0.0120%" height="15" fill="rgb(219,96,8)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="655.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="82.8925%" y="629" width="0.0120%" height="15" fill="rgb(251,216,33)" fg:x="6895" fg:w="1"/><text x="83.1425%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="82.9045%" y="789" width="0.0361%" height="15" fill="rgb(243,145,29)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="799.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="82.9045%" y="773" width="0.0361%" height="15" fill="rgb(210,75,20)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="82.9045%" y="757" width="0.0361%" height="15" fill="rgb(235,56,8)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="82.9045%" y="741" width="0.0361%" height="15" fill="rgb(226,175,49)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.04%)</title><rect x="82.9045%" y="725" width="0.0361%" height="15" fill="rgb(242,204,23)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="82.9045%" y="709" width="0.0361%" height="15" fill="rgb(225,104,24)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="82.9045%" y="693" width="0.0361%" height="15" fill="rgb(253,34,1)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="82.9045%" y="677" width="0.0361%" height="15" fill="rgb(233,199,23)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="687.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="82.9045%" y="661" width="0.0361%" height="15" fill="rgb(247,7,51)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="671.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="82.9045%" y="645" width="0.0361%" height="15" fill="rgb(214,146,12)" fg:x="6896" fg:w="3"/><text x="83.1545%" y="655.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="82.9166%" y="629" width="0.0240%" height="15" fill="rgb(234,181,43)" fg:x="6897" fg:w="2"/><text x="83.1666%" y="639.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="82.9406%" y="741" width="0.0361%" height="15" fill="rgb(239,148,6)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="751.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="82.9406%" y="725" width="0.0361%" height="15" fill="rgb(206,151,17)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="82.9406%" y="709" width="0.0361%" height="15" fill="rgb(213,215,10)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="82.9406%" y="693" width="0.0361%" height="15" fill="rgb(215,220,44)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="82.9406%" y="677" width="0.0361%" height="15" fill="rgb(245,205,37)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="82.9406%" y="661" width="0.0361%" height="15" fill="rgb(245,130,43)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="82.9406%" y="645" width="0.0361%" height="15" fill="rgb(231,227,38)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="82.9406%" y="629" width="0.0361%" height="15" fill="rgb(233,185,4)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="82.9406%" y="613" width="0.0361%" height="15" fill="rgb(224,154,43)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="82.9406%" y="597" width="0.0361%" height="15" fill="rgb(235,156,15)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="607.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="82.9406%" y="581" width="0.0361%" height="15" fill="rgb(211,55,43)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="591.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="82.9406%" y="565" width="0.0361%" height="15" fill="rgb(247,149,40)" fg:x="6899" fg:w="3"/><text x="83.1906%" y="575.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="82.9526%" y="549" width="0.0240%" height="15" fill="rgb(232,171,16)" fg:x="6900" fg:w="2"/><text x="83.2026%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (10 samples, 0.12%)</title><rect x="82.8925%" y="917" width="0.1202%" height="15" fill="rgb(215,117,49)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="82.8925%" y="901" width="0.1202%" height="15" fill="rgb(246,194,11)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="911.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="82.8925%" y="885" width="0.1202%" height="15" fill="rgb(242,101,44)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="82.8925%" y="869" width="0.1202%" height="15" fill="rgb(226,174,6)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (10 samples, 0.12%)</title><rect x="82.8925%" y="853" width="0.1202%" height="15" fill="rgb(213,150,20)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (10 samples, 0.12%)</title><rect x="82.8925%" y="837" width="0.1202%" height="15" fill="rgb(222,124,42)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="847.50"></text></g><g><title>core::clone::Clone::clone (10 samples, 0.12%)</title><rect x="82.8925%" y="821" width="0.1202%" height="15" fill="rgb(250,19,47)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="831.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="82.8925%" y="805" width="0.1202%" height="15" fill="rgb(241,217,19)" fg:x="6895" fg:w="10"/><text x="83.1425%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="82.9406%" y="789" width="0.0721%" height="15" fill="rgb(207,210,34)" fg:x="6899" fg:w="6"/><text x="83.1906%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="82.9406%" y="773" width="0.0721%" height="15" fill="rgb(244,45,4)" fg:x="6899" fg:w="6"/><text x="83.1906%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="82.9406%" y="757" width="0.0721%" height="15" fill="rgb(252,134,50)" fg:x="6899" fg:w="6"/><text x="83.1906%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="82.9767%" y="741" width="0.0361%" height="15" fill="rgb(238,74,2)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="82.9767%" y="725" width="0.0361%" height="15" fill="rgb(226,58,46)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="82.9767%" y="709" width="0.0361%" height="15" fill="rgb(232,83,35)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="82.9767%" y="693" width="0.0361%" height="15" fill="rgb(212,148,47)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="82.9767%" y="677" width="0.0361%" height="15" fill="rgb(235,29,1)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="687.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="82.9767%" y="661" width="0.0361%" height="15" fill="rgb(247,55,37)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="671.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="82.9767%" y="645" width="0.0361%" height="15" fill="rgb(222,48,3)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="655.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="82.9767%" y="629" width="0.0361%" height="15" fill="rgb(234,21,33)" fg:x="6902" fg:w="3"/><text x="83.2267%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (55 samples, 0.66%)</title><rect x="82.3635%" y="1109" width="0.6612%" height="15" fill="rgb(247,178,53)" fg:x="6851" fg:w="55"/><text x="82.6135%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (55 samples, 0.66%)</title><rect x="82.3635%" y="1093" width="0.6612%" height="15" fill="rgb(225,75,7)" fg:x="6851" fg:w="55"/><text x="82.6135%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.64%)</title><rect x="82.3876%" y="1077" width="0.6372%" height="15" fill="rgb(219,199,7)" fg:x="6853" fg:w="53"/><text x="82.6376%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.64%)</title><rect x="82.3876%" y="1061" width="0.6372%" height="15" fill="rgb(209,93,42)" fg:x="6853" fg:w="53"/><text x="82.6376%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (53 samples, 0.64%)</title><rect x="82.3876%" y="1045" width="0.6372%" height="15" fill="rgb(240,175,17)" fg:x="6853" fg:w="53"/><text x="82.6376%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.64%)</title><rect x="82.3876%" y="1029" width="0.6372%" height="15" fill="rgb(232,106,7)" fg:x="6853" fg:w="53"/><text x="82.6376%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.64%)</title><rect x="82.3876%" y="1013" width="0.6372%" height="15" fill="rgb(242,106,43)" fg:x="6853" fg:w="53"/><text x="82.6376%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (53 samples, 0.64%)</title><rect x="82.3876%" y="997" width="0.6372%" height="15" fill="rgb(242,61,37)" fg:x="6853" fg:w="53"/><text x="82.6376%" y="1007.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (53 samples, 0.64%)</title><rect x="82.3876%" y="981" width="0.6372%" height="15" fill="rgb(205,72,10)" fg:x="6853" fg:w="53"/><text x="82.6376%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.18%)</title><rect x="82.8444%" y="965" width="0.1803%" height="15" fill="rgb(214,184,36)" fg:x="6891" fg:w="15"/><text x="83.0944%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.18%)</title><rect x="82.8444%" y="949" width="0.1803%" height="15" fill="rgb(206,107,18)" fg:x="6891" fg:w="15"/><text x="83.0944%" y="959.50"></text></g><g><title>smithereens::fragment::_{{closure}} (15 samples, 0.18%)</title><rect x="82.8444%" y="933" width="0.1803%" height="15" fill="rgb(210,75,5)" fg:x="6891" fg:w="15"/><text x="83.0944%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="83.0127%" y="917" width="0.0120%" height="15" fill="rgb(205,3,19)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="83.0127%" y="901" width="0.0120%" height="15" fill="rgb(207,181,42)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="83.0127%" y="885" width="0.0120%" height="15" fill="rgb(229,179,43)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="83.0127%" y="869" width="0.0120%" height="15" fill="rgb(246,95,30)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="83.0127%" y="853" width="0.0120%" height="15" fill="rgb(234,144,45)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="83.0127%" y="837" width="0.0120%" height="15" fill="rgb(250,54,25)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="83.0127%" y="821" width="0.0120%" height="15" fill="rgb(215,195,40)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="83.0127%" y="805" width="0.0120%" height="15" fill="rgb(233,188,42)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="83.0127%" y="789" width="0.0120%" height="15" fill="rgb(247,227,35)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="83.0127%" y="773" width="0.0120%" height="15" fill="rgb(249,124,27)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="83.0127%" y="757" width="0.0120%" height="15" fill="rgb(219,207,25)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="83.0127%" y="741" width="0.0120%" height="15" fill="rgb(241,216,47)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="83.0127%" y="725" width="0.0120%" height="15" fill="rgb(233,82,50)" fg:x="6905" fg:w="1"/><text x="83.2627%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="83.0248%" y="709" width="0.0120%" height="15" fill="rgb(232,63,2)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="83.0248%" y="693" width="0.0120%" height="15" fill="rgb(236,184,28)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="83.0248%" y="677" width="0.0120%" height="15" fill="rgb(254,63,27)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="83.0248%" y="661" width="0.0120%" height="15" fill="rgb(253,106,28)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="83.0248%" y="645" width="0.0120%" height="15" fill="rgb(225,141,39)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="83.0248%" y="629" width="0.0120%" height="15" fill="rgb(222,157,20)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="83.0248%" y="613" width="0.0120%" height="15" fill="rgb(210,190,9)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="83.0248%" y="597" width="0.0120%" height="15" fill="rgb(242,167,7)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="83.0248%" y="581" width="0.0120%" height="15" fill="rgb(227,82,41)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.0248%" y="565" width="0.0120%" height="15" fill="rgb(222,131,13)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.0248%" y="549" width="0.0120%" height="15" fill="rgb(221,98,26)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.0248%" y="533" width="0.0120%" height="15" fill="rgb(251,63,52)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="543.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.0248%" y="517" width="0.0120%" height="15" fill="rgb(246,25,43)" fg:x="6906" fg:w="1"/><text x="83.2748%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="83.0248%" y="949" width="0.0240%" height="15" fill="rgb(247,167,15)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="83.0248%" y="933" width="0.0240%" height="15" fill="rgb(240,104,42)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="83.0248%" y="917" width="0.0240%" height="15" fill="rgb(224,54,6)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="83.0248%" y="901" width="0.0240%" height="15" fill="rgb(244,108,35)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="83.0248%" y="885" width="0.0240%" height="15" fill="rgb(216,154,2)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="83.0248%" y="869" width="0.0240%" height="15" fill="rgb(222,8,47)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="83.0248%" y="853" width="0.0240%" height="15" fill="rgb(252,93,1)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="83.0248%" y="837" width="0.0240%" height="15" fill="rgb(223,226,51)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="847.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="83.0248%" y="821" width="0.0240%" height="15" fill="rgb(206,147,9)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="831.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="83.0248%" y="805" width="0.0240%" height="15" fill="rgb(248,180,41)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="815.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="83.0248%" y="789" width="0.0240%" height="15" fill="rgb(209,47,50)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="83.0248%" y="773" width="0.0240%" height="15" fill="rgb(243,65,31)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2 samples, 0.02%)</title><rect x="83.0248%" y="757" width="0.0240%" height="15" fill="rgb(228,128,1)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.02%)</title><rect x="83.0248%" y="741" width="0.0240%" height="15" fill="rgb(231,192,16)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2 samples, 0.02%)</title><rect x="83.0248%" y="725" width="0.0240%" height="15" fill="rgb(224,26,40)" fg:x="6906" fg:w="2"/><text x="83.2748%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="83.0368%" y="709" width="0.0120%" height="15" fill="rgb(214,192,17)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="83.0368%" y="693" width="0.0120%" height="15" fill="rgb(225,147,18)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0368%" y="677" width="0.0120%" height="15" fill="rgb(205,35,11)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0368%" y="661" width="0.0120%" height="15" fill="rgb(242,40,42)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="671.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="83.0368%" y="645" width="0.0120%" height="15" fill="rgb(250,170,13)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="629" width="0.0120%" height="15" fill="rgb(240,161,28)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="639.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="613" width="0.0120%" height="15" fill="rgb(245,179,12)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="597" width="0.0120%" height="15" fill="rgb(250,92,32)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="83.0368%" y="581" width="0.0120%" height="15" fill="rgb(233,10,40)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="83.0368%" y="565" width="0.0120%" height="15" fill="rgb(217,98,1)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="83.0368%" y="549" width="0.0120%" height="15" fill="rgb(238,202,7)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0368%" y="533" width="0.0120%" height="15" fill="rgb(222,91,3)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0368%" y="517" width="0.0120%" height="15" fill="rgb(211,170,49)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="501" width="0.0120%" height="15" fill="rgb(253,139,18)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="511.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="485" width="0.0120%" height="15" fill="rgb(222,4,43)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="495.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="469" width="0.0120%" height="15" fill="rgb(207,205,12)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="453" width="0.0120%" height="15" fill="rgb(216,159,46)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="83.0368%" y="437" width="0.0120%" height="15" fill="rgb(236,115,1)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="83.0368%" y="421" width="0.0120%" height="15" fill="rgb(251,35,33)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="83.0368%" y="405" width="0.0120%" height="15" fill="rgb(248,62,51)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0368%" y="389" width="0.0120%" height="15" fill="rgb(254,180,19)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0368%" y="373" width="0.0120%" height="15" fill="rgb(217,100,32)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="357" width="0.0120%" height="15" fill="rgb(224,71,22)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="367.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="341" width="0.0120%" height="15" fill="rgb(251,185,33)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="351.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="325" width="0.0120%" height="15" fill="rgb(209,75,48)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="309" width="0.0120%" height="15" fill="rgb(253,190,16)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="293" width="0.0120%" height="15" fill="rgb(226,140,1)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="277" width="0.0120%" height="15" fill="rgb(206,75,30)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="83.0368%" y="261" width="0.0120%" height="15" fill="rgb(231,208,37)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="83.0368%" y="245" width="0.0120%" height="15" fill="rgb(238,136,40)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.0368%" y="229" width="0.0120%" height="15" fill="rgb(247,137,17)" fg:x="6907" fg:w="1"/><text x="83.2868%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="83.0248%" y="997" width="0.0361%" height="15" fill="rgb(240,60,40)" fg:x="6906" fg:w="3"/><text x="83.2748%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="83.0248%" y="981" width="0.0361%" height="15" fill="rgb(236,68,50)" fg:x="6906" fg:w="3"/><text x="83.2748%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="83.0248%" y="965" width="0.0361%" height="15" fill="rgb(230,42,12)" fg:x="6906" fg:w="3"/><text x="83.2748%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.0488%" y="949" width="0.0120%" height="15" fill="rgb(219,16,16)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.0488%" y="933" width="0.0120%" height="15" fill="rgb(220,38,35)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="83.0488%" y="917" width="0.0120%" height="15" fill="rgb(228,33,1)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.0488%" y="901" width="0.0120%" height="15" fill="rgb(241,46,31)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="83.0488%" y="885" width="0.0120%" height="15" fill="rgb(232,58,20)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="83.0488%" y="869" width="0.0120%" height="15" fill="rgb(206,228,53)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="879.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0488%" y="853" width="0.0120%" height="15" fill="rgb(206,88,33)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="83.0488%" y="837" width="0.0120%" height="15" fill="rgb(238,69,7)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="83.0488%" y="821" width="0.0120%" height="15" fill="rgb(250,21,46)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="831.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0488%" y="805" width="0.0120%" height="15" fill="rgb(215,212,21)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0488%" y="789" width="0.0120%" height="15" fill="rgb(211,35,12)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="799.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0488%" y="773" width="0.0120%" height="15" fill="rgb(231,184,16)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0488%" y="757" width="0.0120%" height="15" fill="rgb(242,140,15)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="83.0488%" y="741" width="0.0120%" height="15" fill="rgb(220,37,14)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="83.0488%" y="725" width="0.0120%" height="15" fill="rgb(223,146,22)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="83.0488%" y="709" width="0.0120%" height="15" fill="rgb(216,132,15)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.0488%" y="693" width="0.0120%" height="15" fill="rgb(248,83,5)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.0488%" y="677" width="0.0120%" height="15" fill="rgb(231,206,48)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.0488%" y="661" width="0.0120%" height="15" fill="rgb(253,185,37)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="671.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.0488%" y="645" width="0.0120%" height="15" fill="rgb(208,21,44)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.0488%" y="629" width="0.0120%" height="15" fill="rgb(236,125,4)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.0488%" y="613" width="0.0120%" height="15" fill="rgb(226,134,25)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="623.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.0488%" y="597" width="0.0120%" height="15" fill="rgb(250,201,12)" fg:x="6908" fg:w="1"/><text x="83.2988%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (1 samples, 0.01%)</title><rect x="83.0608%" y="997" width="0.0120%" height="15" fill="rgb(225,92,18)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (1 samples, 0.01%)</title><rect x="83.0608%" y="981" width="0.0120%" height="15" fill="rgb(227,35,22)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="991.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0608%" y="965" width="0.0120%" height="15" fill="rgb(214,180,52)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="975.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0608%" y="949" width="0.0120%" height="15" fill="rgb(233,55,38)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="83.0608%" y="933" width="0.0120%" height="15" fill="rgb(249,171,43)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="83.0608%" y="917" width="0.0120%" height="15" fill="rgb(239,87,2)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="83.0608%" y="901" width="0.0120%" height="15" fill="rgb(248,141,5)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="83.0608%" y="885" width="0.0120%" height="15" fill="rgb(238,33,42)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="83.0608%" y="869" width="0.0120%" height="15" fill="rgb(231,57,19)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="83.0608%" y="853" width="0.0120%" height="15" fill="rgb(214,78,53)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="83.0608%" y="837" width="0.0120%" height="15" fill="rgb(206,132,29)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="83.0608%" y="821" width="0.0120%" height="15" fill="rgb(248,174,31)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0608%" y="805" width="0.0120%" height="15" fill="rgb(221,87,13)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0608%" y="789" width="0.0120%" height="15" fill="rgb(223,197,17)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0608%" y="773" width="0.0120%" height="15" fill="rgb(220,144,50)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="83.0608%" y="757" width="0.0120%" height="15" fill="rgb(244,201,11)" fg:x="6909" fg:w="1"/><text x="83.3108%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (60 samples, 0.72%)</title><rect x="82.3635%" y="1157" width="0.7213%" height="15" fill="rgb(249,81,34)" fg:x="6851" fg:w="60"/><text x="82.6135%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (60 samples, 0.72%)</title><rect x="82.3635%" y="1141" width="0.7213%" height="15" fill="rgb(205,161,12)" fg:x="6851" fg:w="60"/><text x="82.6135%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (60 samples, 0.72%)</title><rect x="82.3635%" y="1125" width="0.7213%" height="15" fill="rgb(252,139,50)" fg:x="6851" fg:w="60"/><text x="82.6135%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="83.0248%" y="1109" width="0.0601%" height="15" fill="rgb(205,169,14)" fg:x="6906" fg:w="5"/><text x="83.2748%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="83.0248%" y="1093" width="0.0601%" height="15" fill="rgb(248,198,33)" fg:x="6906" fg:w="5"/><text x="83.2748%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (5 samples, 0.06%)</title><rect x="83.0248%" y="1077" width="0.0601%" height="15" fill="rgb(236,23,21)" fg:x="6906" fg:w="5"/><text x="83.2748%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="83.0248%" y="1061" width="0.0601%" height="15" fill="rgb(231,13,38)" fg:x="6906" fg:w="5"/><text x="83.2748%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="83.0248%" y="1045" width="0.0601%" height="15" fill="rgb(239,139,21)" fg:x="6906" fg:w="5"/><text x="83.2748%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.06%)</title><rect x="83.0248%" y="1029" width="0.0601%" height="15" fill="rgb(222,164,45)" fg:x="6906" fg:w="5"/><text x="83.2748%" y="1039.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (5 samples, 0.06%)</title><rect x="83.0248%" y="1013" width="0.0601%" height="15" fill="rgb(230,52,27)" fg:x="6906" fg:w="5"/><text x="83.2748%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="83.0729%" y="997" width="0.0120%" height="15" fill="rgb(227,143,42)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="83.0729%" y="981" width="0.0120%" height="15" fill="rgb(249,127,1)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="991.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="83.0729%" y="965" width="0.0120%" height="15" fill="rgb(243,107,26)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="975.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="83.0729%" y="949" width="0.0120%" height="15" fill="rgb(225,7,45)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="933" width="0.0120%" height="15" fill="rgb(241,88,38)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="943.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="917" width="0.0120%" height="15" fill="rgb(226,121,9)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="927.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="901" width="0.0120%" height="15" fill="rgb(253,60,29)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="83.0729%" y="885" width="0.0120%" height="15" fill="rgb(244,181,39)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="83.0729%" y="869" width="0.0120%" height="15" fill="rgb(252,203,31)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="879.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="853" width="0.0120%" height="15" fill="rgb(224,120,8)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="863.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="837" width="0.0120%" height="15" fill="rgb(205,171,54)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="847.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="821" width="0.0120%" height="15" fill="rgb(235,89,11)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="831.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="805" width="0.0120%" height="15" fill="rgb(212,180,28)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.0729%" y="789" width="0.0120%" height="15" fill="rgb(247,84,49)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="83.0729%" y="773" width="0.0120%" height="15" fill="rgb(236,187,52)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="83.0729%" y="757" width="0.0120%" height="15" fill="rgb(227,24,15)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="767.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="83.0729%" y="741" width="0.0120%" height="15" fill="rgb(227,211,13)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.0729%" y="725" width="0.0120%" height="15" fill="rgb(245,52,14)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.0729%" y="709" width="0.0120%" height="15" fill="rgb(225,185,13)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.0729%" y="693" width="0.0120%" height="15" fill="rgb(217,160,29)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="703.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.0729%" y="677" width="0.0120%" height="15" fill="rgb(216,115,53)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.0729%" y="661" width="0.0120%" height="15" fill="rgb(236,99,5)" fg:x="6910" fg:w="1"/><text x="83.3229%" y="671.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (1 samples, 0.01%)</title><rect x="83.0849%" y="1157" width="0.0120%" height="15" fill="rgb(222,60,38)" fg:x="6911" fg:w="1"/><text x="83.3349%" y="1167.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (1 samples, 0.01%)</title><rect x="83.0849%" y="1141" width="0.0120%" height="15" fill="rgb(212,82,22)" fg:x="6911" fg:w="1"/><text x="83.3349%" y="1151.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next_edge (1 samples, 0.01%)</title><rect x="83.0849%" y="1125" width="0.0120%" height="15" fill="rgb(214,48,28)" fg:x="6911" fg:w="1"/><text x="83.3349%" y="1135.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next (1 samples, 0.01%)</title><rect x="83.0849%" y="1109" width="0.0120%" height="15" fill="rgb(245,196,50)" fg:x="6911" fg:w="1"/><text x="83.3349%" y="1119.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (1 samples, 0.01%)</title><rect x="83.0849%" y="1093" width="0.0120%" height="15" fill="rgb(225,159,46)" fg:x="6911" fg:w="1"/><text x="83.3349%" y="1103.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1 samples, 0.01%)</title><rect x="83.0849%" y="1077" width="0.0120%" height="15" fill="rgb(207,195,48)" fg:x="6911" fg:w="1"/><text x="83.3349%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="83.0969%" y="1141" width="0.0120%" height="15" fill="rgb(240,73,3)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="83.0969%" y="1125" width="0.0120%" height="15" fill="rgb(245,57,23)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="83.0969%" y="1109" width="0.0120%" height="15" fill="rgb(240,75,18)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.0969%" y="1093" width="0.0120%" height="15" fill="rgb(238,168,12)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.01%)</title><rect x="83.0969%" y="1077" width="0.0120%" height="15" fill="rgb(226,20,40)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="83.0969%" y="1061" width="0.0120%" height="15" fill="rgb(224,130,35)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1071.50"></text></g><g><title>&lt;petgraph::graph_impl::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.0969%" y="1045" width="0.0120%" height="15" fill="rgb(225,63,41)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1055.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.01%)</title><rect x="83.0969%" y="1029" width="0.0120%" height="15" fill="rgb(219,3,3)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1039.50"></text></g><g><title>&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="83.0969%" y="1013" width="0.0120%" height="15" fill="rgb(218,157,4)" fg:x="6912" fg:w="1"/><text x="83.3469%" y="1023.50"></text></g><g><title>smithereens::expand_from (2 samples, 0.02%)</title><rect x="83.0969%" y="1157" width="0.0240%" height="15" fill="rgb(232,76,36)" fg:x="6912" fg:w="2"/><text x="83.3469%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="83.1089%" y="1141" width="0.0120%" height="15" fill="rgb(247,36,0)" fg:x="6913" fg:w="1"/><text x="83.3589%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="83.1089%" y="1125" width="0.0120%" height="15" fill="rgb(205,2,34)" fg:x="6913" fg:w="1"/><text x="83.3589%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="83.1089%" y="1109" width="0.0120%" height="15" fill="rgb(239,136,13)" fg:x="6913" fg:w="1"/><text x="83.3589%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="83.1089%" y="1093" width="0.0120%" height="15" fill="rgb(253,122,12)" fg:x="6913" fg:w="1"/><text x="83.3589%" y="1103.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="83.1089%" y="1077" width="0.0120%" height="15" fill="rgb(222,174,7)" fg:x="6913" fg:w="1"/><text x="83.3589%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="83.1089%" y="1061" width="0.0120%" height="15" fill="rgb(208,191,42)" fg:x="6913" fg:w="1"/><text x="83.3589%" y="1071.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="83.1089%" y="1045" width="0.0120%" height="15" fill="rgb(237,212,15)" fg:x="6913" fg:w="1"/><text x="83.3589%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="83.1209%" y="1125" width="0.0120%" height="15" fill="rgb(215,65,20)" fg:x="6914" fg:w="1"/><text x="83.3709%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.1209%" y="1109" width="0.0120%" height="15" fill="rgb(232,103,11)" fg:x="6914" fg:w="1"/><text x="83.3709%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.1209%" y="1093" width="0.0120%" height="15" fill="rgb(235,148,18)" fg:x="6914" fg:w="1"/><text x="83.3709%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.1209%" y="1077" width="0.0120%" height="15" fill="rgb(240,173,7)" fg:x="6914" fg:w="1"/><text x="83.3709%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="83.1209%" y="1061" width="0.0120%" height="15" fill="rgb(228,182,25)" fg:x="6914" fg:w="1"/><text x="83.3709%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2 samples, 0.02%)</title><rect x="83.1330%" y="1045" width="0.0240%" height="15" fill="rgb(247,3,52)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="1055.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (2 samples, 0.02%)</title><rect x="83.1330%" y="1029" width="0.0240%" height="15" fill="rgb(226,155,8)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="83.1330%" y="1013" width="0.0240%" height="15" fill="rgb(243,195,38)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="83.1330%" y="997" width="0.0240%" height="15" fill="rgb(254,181,33)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="1007.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="83.1330%" y="981" width="0.0240%" height="15" fill="rgb(232,98,23)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="991.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="83.1330%" y="965" width="0.0240%" height="15" fill="rgb(205,23,10)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="975.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="83.1330%" y="949" width="0.0240%" height="15" fill="rgb(212,124,38)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="83.1330%" y="933" width="0.0240%" height="15" fill="rgb(228,207,2)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="83.1330%" y="917" width="0.0240%" height="15" fill="rgb(215,120,22)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="83.1330%" y="901" width="0.0240%" height="15" fill="rgb(251,172,33)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="83.1330%" y="885" width="0.0240%" height="15" fill="rgb(250,83,2)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="83.1330%" y="869" width="0.0240%" height="15" fill="rgb(210,132,53)" fg:x="6915" fg:w="2"/><text x="83.3830%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="83.1450%" y="853" width="0.0120%" height="15" fill="rgb(221,208,36)" fg:x="6916" fg:w="1"/><text x="83.3950%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="83.1450%" y="837" width="0.0120%" height="15" fill="rgb(205,192,46)" fg:x="6916" fg:w="1"/><text x="83.3950%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.04%)</title><rect x="83.1330%" y="1125" width="0.0361%" height="15" fill="rgb(223,163,14)" fg:x="6915" fg:w="3"/><text x="83.3830%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="83.1330%" y="1109" width="0.0361%" height="15" fill="rgb(218,41,28)" fg:x="6915" fg:w="3"/><text x="83.3830%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="83.1330%" y="1093" width="0.0361%" height="15" fill="rgb(235,104,10)" fg:x="6915" fg:w="3"/><text x="83.3830%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.04%)</title><rect x="83.1330%" y="1077" width="0.0361%" height="15" fill="rgb(246,17,4)" fg:x="6915" fg:w="3"/><text x="83.3830%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.04%)</title><rect x="83.1330%" y="1061" width="0.0361%" height="15" fill="rgb(240,7,16)" fg:x="6915" fg:w="3"/><text x="83.3830%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.01%)</title><rect x="83.1570%" y="1045" width="0.0120%" height="15" fill="rgb(213,160,23)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.01%)</title><rect x="83.1570%" y="1029" width="0.0120%" height="15" fill="rgb(251,179,49)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="83.1570%" y="1013" width="0.0120%" height="15" fill="rgb(247,198,10)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="1023.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="83.1570%" y="997" width="0.0120%" height="15" fill="rgb(220,65,29)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.1570%" y="981" width="0.0120%" height="15" fill="rgb(237,171,28)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.1570%" y="965" width="0.0120%" height="15" fill="rgb(228,44,26)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.1570%" y="949" width="0.0120%" height="15" fill="rgb(216,210,27)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="959.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.1570%" y="933" width="0.0120%" height="15" fill="rgb(252,10,17)" fg:x="6917" fg:w="1"/><text x="83.4070%" y="943.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.06%)</title><rect x="83.1209%" y="1157" width="0.0601%" height="15" fill="rgb(214,172,30)" fg:x="6914" fg:w="5"/><text x="83.3709%" y="1167.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.06%)</title><rect x="83.1209%" y="1141" width="0.0601%" height="15" fill="rgb(253,130,48)" fg:x="6914" fg:w="5"/><text x="83.3709%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (1 samples, 0.01%)</title><rect x="83.1690%" y="1125" width="0.0120%" height="15" fill="rgb(226,99,43)" fg:x="6918" fg:w="1"/><text x="83.4190%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (1 samples, 0.01%)</title><rect x="83.1690%" y="1109" width="0.0120%" height="15" fill="rgb(239,111,26)" fg:x="6918" fg:w="1"/><text x="83.4190%" y="1119.50"></text></g><g><title>hashbrown::raw::special_is_empty (1 samples, 0.01%)</title><rect x="83.1690%" y="1093" width="0.0120%" height="15" fill="rgb(240,27,53)" fg:x="6918" fg:w="1"/><text x="83.4190%" y="1103.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="83.1811%" y="1109" width="0.0240%" height="15" fill="rgb(254,163,12)" fg:x="6919" fg:w="2"/><text x="83.4311%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="83.1811%" y="1093" width="0.0240%" height="15" fill="rgb(225,51,48)" fg:x="6919" fg:w="2"/><text x="83.4311%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="83.1811%" y="1077" width="0.0240%" height="15" fill="rgb(205,19,32)" fg:x="6919" fg:w="2"/><text x="83.4311%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="83.1811%" y="1061" width="0.0240%" height="15" fill="rgb(218,119,26)" fg:x="6919" fg:w="2"/><text x="83.4311%" y="1071.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.1931%" y="1045" width="0.0120%" height="15" fill="rgb(231,173,33)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="1055.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.1931%" y="1029" width="0.0120%" height="15" fill="rgb(241,100,29)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="83.1931%" y="1013" width="0.0120%" height="15" fill="rgb(250,194,34)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="83.1931%" y="997" width="0.0120%" height="15" fill="rgb(215,23,50)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="83.1931%" y="981" width="0.0120%" height="15" fill="rgb(206,49,37)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="83.1931%" y="965" width="0.0120%" height="15" fill="rgb(247,39,21)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="83.1931%" y="949" width="0.0120%" height="15" fill="rgb(209,220,15)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="83.1931%" y="933" width="0.0120%" height="15" fill="rgb(206,41,33)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.1931%" y="917" width="0.0120%" height="15" fill="rgb(221,225,45)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.1931%" y="901" width="0.0120%" height="15" fill="rgb(216,27,18)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.1931%" y="885" width="0.0120%" height="15" fill="rgb(250,193,34)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="895.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.1931%" y="869" width="0.0120%" height="15" fill="rgb(227,215,20)" fg:x="6920" fg:w="1"/><text x="83.4431%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.2051%" y="1109" width="0.0120%" height="15" fill="rgb(242,211,27)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1119.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.2051%" y="1093" width="0.0120%" height="15" fill="rgb(229,190,30)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.2051%" y="1077" width="0.0120%" height="15" fill="rgb(253,31,29)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="83.2051%" y="1061" width="0.0120%" height="15" fill="rgb(229,177,52)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="83.2051%" y="1045" width="0.0120%" height="15" fill="rgb(226,88,8)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1055.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="83.2051%" y="1029" width="0.0120%" height="15" fill="rgb(214,55,27)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.2051%" y="1013" width="0.0120%" height="15" fill="rgb(233,202,5)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.2051%" y="997" width="0.0120%" height="15" fill="rgb(251,49,30)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.2051%" y="981" width="0.0120%" height="15" fill="rgb(235,18,52)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="991.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.2051%" y="965" width="0.0120%" height="15" fill="rgb(250,111,51)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.2051%" y="949" width="0.0120%" height="15" fill="rgb(218,13,25)" fg:x="6921" fg:w="1"/><text x="83.4551%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="83.2171%" y="981" width="0.0240%" height="15" fill="rgb(248,96,7)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="83.2171%" y="965" width="0.0240%" height="15" fill="rgb(217,31,15)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="83.2171%" y="949" width="0.0240%" height="15" fill="rgb(228,59,49)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="83.2171%" y="933" width="0.0240%" height="15" fill="rgb(210,152,38)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="83.2171%" y="917" width="0.0240%" height="15" fill="rgb(206,71,11)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="927.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="83.2171%" y="901" width="0.0240%" height="15" fill="rgb(244,199,5)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="83.2171%" y="885" width="0.0240%" height="15" fill="rgb(253,49,1)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="83.2171%" y="869" width="0.0240%" height="15" fill="rgb(225,206,40)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="83.2171%" y="853" width="0.0240%" height="15" fill="rgb(243,116,47)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="863.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="83.2171%" y="837" width="0.0240%" height="15" fill="rgb(219,225,16)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="847.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="83.2171%" y="821" width="0.0240%" height="15" fill="rgb(233,29,47)" fg:x="6922" fg:w="2"/><text x="83.4671%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="83.2412%" y="901" width="0.0240%" height="15" fill="rgb(250,179,18)" fg:x="6924" fg:w="2"/><text x="83.4912%" y="911.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="83.2412%" y="933" width="0.0481%" height="15" fill="rgb(215,176,6)" fg:x="6924" fg:w="4"/><text x="83.4912%" y="943.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="83.2412%" y="917" width="0.0481%" height="15" fill="rgb(214,117,39)" fg:x="6924" fg:w="4"/><text x="83.4912%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="83.2652%" y="901" width="0.0240%" height="15" fill="rgb(247,183,36)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="83.2652%" y="885" width="0.0240%" height="15" fill="rgb(237,200,3)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="83.2652%" y="869" width="0.0240%" height="15" fill="rgb(212,220,24)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="83.2652%" y="853" width="0.0240%" height="15" fill="rgb(245,216,20)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="83.2652%" y="837" width="0.0240%" height="15" fill="rgb(219,124,7)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="83.2652%" y="821" width="0.0240%" height="15" fill="rgb(227,167,8)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="83.2652%" y="805" width="0.0240%" height="15" fill="rgb(241,37,2)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="83.2652%" y="789" width="0.0240%" height="15" fill="rgb(238,134,33)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="83.2652%" y="773" width="0.0240%" height="15" fill="rgb(248,48,27)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="783.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="83.2652%" y="757" width="0.0240%" height="15" fill="rgb(212,14,16)" fg:x="6926" fg:w="2"/><text x="83.5152%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13 samples, 0.16%)</title><rect x="83.2171%" y="1045" width="0.1563%" height="15" fill="rgb(217,205,37)" fg:x="6922" fg:w="13"/><text x="83.4671%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (13 samples, 0.16%)</title><rect x="83.2171%" y="1029" width="0.1563%" height="15" fill="rgb(233,185,47)" fg:x="6922" fg:w="13"/><text x="83.4671%" y="1039.50"></text></g><g><title>core::clone::Clone::clone (13 samples, 0.16%)</title><rect x="83.2171%" y="1013" width="0.1563%" height="15" fill="rgb(244,88,8)" fg:x="6922" fg:w="13"/><text x="83.4671%" y="1023.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="83.2171%" y="997" width="0.1563%" height="15" fill="rgb(213,0,20)" fg:x="6922" fg:w="13"/><text x="83.4671%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.13%)</title><rect x="83.2412%" y="981" width="0.1322%" height="15" fill="rgb(238,159,36)" fg:x="6924" fg:w="11"/><text x="83.4912%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.13%)</title><rect x="83.2412%" y="965" width="0.1322%" height="15" fill="rgb(253,173,17)" fg:x="6924" fg:w="11"/><text x="83.4912%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.13%)</title><rect x="83.2412%" y="949" width="0.1322%" height="15" fill="rgb(221,23,28)" fg:x="6924" fg:w="11"/><text x="83.4912%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="83.2893%" y="933" width="0.0842%" height="15" fill="rgb(218,113,15)" fg:x="6928" fg:w="7"/><text x="83.5393%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="83.2893%" y="917" width="0.0842%" height="15" fill="rgb(233,58,3)" fg:x="6928" fg:w="7"/><text x="83.5393%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="83.2893%" y="901" width="0.0842%" height="15" fill="rgb(250,46,35)" fg:x="6928" fg:w="7"/><text x="83.5393%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="83.2893%" y="885" width="0.0842%" height="15" fill="rgb(210,169,11)" fg:x="6928" fg:w="7"/><text x="83.5393%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="83.2893%" y="869" width="0.0842%" height="15" fill="rgb(246,88,19)" fg:x="6928" fg:w="7"/><text x="83.5393%" y="879.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="83.2893%" y="853" width="0.0842%" height="15" fill="rgb(206,81,49)" fg:x="6928" fg:w="7"/><text x="83.5393%" y="863.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="83.2893%" y="837" width="0.0842%" height="15" fill="rgb(232,144,18)" fg:x="6928" fg:w="7"/><text x="83.5393%" y="847.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="83.3373%" y="821" width="0.0361%" height="15" fill="rgb(235,2,27)" fg:x="6932" fg:w="3"/><text x="83.5873%" y="831.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (14 samples, 0.17%)</title><rect x="83.2171%" y="1109" width="0.1683%" height="15" fill="rgb(239,157,39)" fg:x="6922" fg:w="14"/><text x="83.4671%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="83.2171%" y="1093" width="0.1683%" height="15" fill="rgb(220,11,17)" fg:x="6922" fg:w="14"/><text x="83.4671%" y="1103.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="83.2171%" y="1077" width="0.1683%" height="15" fill="rgb(243,94,50)" fg:x="6922" fg:w="14"/><text x="83.4671%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="83.2171%" y="1061" width="0.1683%" height="15" fill="rgb(218,22,0)" fg:x="6922" fg:w="14"/><text x="83.4671%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="83.3734%" y="1045" width="0.0120%" height="15" fill="rgb(249,70,21)" fg:x="6935" fg:w="1"/><text x="83.6234%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="83.3734%" y="1029" width="0.0120%" height="15" fill="rgb(245,111,46)" fg:x="6935" fg:w="1"/><text x="83.6234%" y="1039.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="83.3734%" y="1013" width="0.0120%" height="15" fill="rgb(244,183,12)" fg:x="6935" fg:w="1"/><text x="83.6234%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.3734%" y="997" width="0.0120%" height="15" fill="rgb(207,117,0)" fg:x="6935" fg:w="1"/><text x="83.6234%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.3734%" y="981" width="0.0120%" height="15" fill="rgb(206,20,43)" fg:x="6935" fg:w="1"/><text x="83.6234%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.3734%" y="965" width="0.0120%" height="15" fill="rgb(221,104,11)" fg:x="6935" fg:w="1"/><text x="83.6234%" y="975.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.3734%" y="949" width="0.0120%" height="15" fill="rgb(254,36,50)" fg:x="6935" fg:w="1"/><text x="83.6234%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="83.3854%" y="1109" width="0.0120%" height="15" fill="rgb(252,17,15)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="83.3854%" y="1093" width="0.0120%" height="15" fill="rgb(219,129,43)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.3854%" y="1077" width="0.0120%" height="15" fill="rgb(205,34,45)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.3854%" y="1061" width="0.0120%" height="15" fill="rgb(251,201,32)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.3854%" y="1045" width="0.0120%" height="15" fill="rgb(205,56,0)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.3854%" y="1029" width="0.0120%" height="15" fill="rgb(211,193,27)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.3854%" y="1013" width="0.0120%" height="15" fill="rgb(231,100,42)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1023.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="83.3854%" y="997" width="0.0120%" height="15" fill="rgb(245,85,27)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.3854%" y="981" width="0.0120%" height="15" fill="rgb(241,76,24)" fg:x="6936" fg:w="1"/><text x="83.6354%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.3975%" y="1045" width="0.0120%" height="15" fill="rgb(249,157,15)" fg:x="6937" fg:w="1"/><text x="83.6475%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.3975%" y="1029" width="0.0120%" height="15" fill="rgb(222,218,25)" fg:x="6937" fg:w="1"/><text x="83.6475%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.3975%" y="1013" width="0.0120%" height="15" fill="rgb(252,156,52)" fg:x="6937" fg:w="1"/><text x="83.6475%" y="1023.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="83.4095%" y="981" width="0.0120%" height="15" fill="rgb(211,185,7)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="991.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="83.4095%" y="965" width="0.0120%" height="15" fill="rgb(234,108,24)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="975.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="83.4095%" y="949" width="0.0120%" height="15" fill="rgb(227,218,2)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="959.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="83.4095%" y="933" width="0.0120%" height="15" fill="rgb(224,0,36)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="83.4095%" y="917" width="0.0120%" height="15" fill="rgb(233,201,10)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="83.4095%" y="901" width="0.0120%" height="15" fill="rgb(252,209,14)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="83.4095%" y="885" width="0.0120%" height="15" fill="rgb(205,93,49)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="83.4095%" y="869" width="0.0120%" height="15" fill="rgb(234,116,45)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="83.4095%" y="853" width="0.0120%" height="15" fill="rgb(248,89,35)" fg:x="6938" fg:w="1"/><text x="83.6595%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="83.4095%" y="1013" width="0.0240%" height="15" fill="rgb(233,167,45)" fg:x="6938" fg:w="2"/><text x="83.6595%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="83.4095%" y="997" width="0.0240%" height="15" fill="rgb(248,228,14)" fg:x="6938" fg:w="2"/><text x="83.6595%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="83.4215%" y="981" width="0.0120%" height="15" fill="rgb(246,91,14)" fg:x="6939" fg:w="1"/><text x="83.6715%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="83.4215%" y="965" width="0.0120%" height="15" fill="rgb(227,142,5)" fg:x="6939" fg:w="1"/><text x="83.6715%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="83.4215%" y="949" width="0.0120%" height="15" fill="rgb(221,63,33)" fg:x="6939" fg:w="1"/><text x="83.6715%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="83.4215%" y="933" width="0.0120%" height="15" fill="rgb(233,49,0)" fg:x="6939" fg:w="1"/><text x="83.6715%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="83.4215%" y="917" width="0.0120%" height="15" fill="rgb(251,115,38)" fg:x="6939" fg:w="1"/><text x="83.6715%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="83.4335%" y="981" width="0.0240%" height="15" fill="rgb(231,214,32)" fg:x="6940" fg:w="2"/><text x="83.6835%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="83.4335%" y="965" width="0.0240%" height="15" fill="rgb(248,73,46)" fg:x="6940" fg:w="2"/><text x="83.6835%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="83.4335%" y="949" width="0.0240%" height="15" fill="rgb(237,156,4)" fg:x="6940" fg:w="2"/><text x="83.6835%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="83.4335%" y="933" width="0.0240%" height="15" fill="rgb(227,132,2)" fg:x="6940" fg:w="2"/><text x="83.6835%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="83.4335%" y="917" width="0.0240%" height="15" fill="rgb(248,161,9)" fg:x="6940" fg:w="2"/><text x="83.6835%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="83.4335%" y="901" width="0.0240%" height="15" fill="rgb(238,77,38)" fg:x="6940" fg:w="2"/><text x="83.6835%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="83.4455%" y="885" width="0.0120%" height="15" fill="rgb(222,166,40)" fg:x="6941" fg:w="1"/><text x="83.6955%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.07%)</title><rect x="83.3975%" y="1061" width="0.0721%" height="15" fill="rgb(214,168,45)" fg:x="6937" fg:w="6"/><text x="83.6475%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.06%)</title><rect x="83.4095%" y="1045" width="0.0601%" height="15" fill="rgb(226,64,37)" fg:x="6938" fg:w="5"/><text x="83.6595%" y="1055.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="83.4095%" y="1029" width="0.0601%" height="15" fill="rgb(232,210,43)" fg:x="6938" fg:w="5"/><text x="83.6595%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="83.4335%" y="1013" width="0.0361%" height="15" fill="rgb(214,76,33)" fg:x="6940" fg:w="3"/><text x="83.6835%" y="1023.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="83.4335%" y="997" width="0.0361%" height="15" fill="rgb(210,78,5)" fg:x="6940" fg:w="3"/><text x="83.6835%" y="1007.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="83.4576%" y="981" width="0.0120%" height="15" fill="rgb(211,107,37)" fg:x="6942" fg:w="1"/><text x="83.7076%" y="991.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="83.4696%" y="949" width="0.0120%" height="15" fill="rgb(249,67,16)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="83.4696%" y="933" width="0.0120%" height="15" fill="rgb(222,114,31)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="83.4696%" y="917" width="0.0120%" height="15" fill="rgb(242,118,19)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="83.4696%" y="901" width="0.0120%" height="15" fill="rgb(223,115,1)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="83.4696%" y="885" width="0.0120%" height="15" fill="rgb(241,182,54)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="83.4696%" y="869" width="0.0120%" height="15" fill="rgb(244,166,36)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="83.4696%" y="853" width="0.0120%" height="15" fill="rgb(241,52,43)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="83.4696%" y="837" width="0.0120%" height="15" fill="rgb(236,82,9)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="847.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="83.4696%" y="821" width="0.0120%" height="15" fill="rgb(241,119,0)" fg:x="6943" fg:w="1"/><text x="83.7196%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="83.4816%" y="949" width="0.0120%" height="15" fill="rgb(221,19,22)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="83.4816%" y="933" width="0.0120%" height="15" fill="rgb(254,144,35)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="83.4816%" y="917" width="0.0120%" height="15" fill="rgb(246,132,30)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="83.4816%" y="901" width="0.0120%" height="15" fill="rgb(234,69,28)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="83.4816%" y="885" width="0.0120%" height="15" fill="rgb(219,106,47)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="83.4816%" y="869" width="0.0120%" height="15" fill="rgb(218,79,24)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="83.4816%" y="853" width="0.0120%" height="15" fill="rgb(225,26,21)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="83.4816%" y="837" width="0.0120%" height="15" fill="rgb(217,68,49)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="847.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.01%)</title><rect x="83.4816%" y="821" width="0.0120%" height="15" fill="rgb(220,204,28)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="831.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.4816%" y="805" width="0.0120%" height="15" fill="rgb(237,208,43)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.4816%" y="789" width="0.0120%" height="15" fill="rgb(213,97,42)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="83.4816%" y="773" width="0.0120%" height="15" fill="rgb(238,96,52)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="83.4816%" y="757" width="0.0120%" height="15" fill="rgb(228,14,13)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="83.4816%" y="741" width="0.0120%" height="15" fill="rgb(219,123,13)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="83.4816%" y="725" width="0.0120%" height="15" fill="rgb(216,144,17)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="83.4816%" y="709" width="0.0120%" height="15" fill="rgb(230,228,29)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="83.4816%" y="693" width="0.0120%" height="15" fill="rgb(233,18,5)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.4816%" y="677" width="0.0120%" height="15" fill="rgb(233,197,12)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.4816%" y="661" width="0.0120%" height="15" fill="rgb(234,140,29)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="83.4816%" y="645" width="0.0120%" height="15" fill="rgb(233,113,19)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="655.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="83.4816%" y="629" width="0.0120%" height="15" fill="rgb(246,209,13)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.4816%" y="613" width="0.0120%" height="15" fill="rgb(242,79,54)" fg:x="6944" fg:w="1"/><text x="83.7316%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,236 samples, 14.86%)</title><rect x="68.6463%" y="1317" width="14.8593%" height="15" fill="rgb(219,73,16)" fg:x="5710" fg:w="1236"/><text x="68.8963%" y="1327.50">core::iter::traits::ite..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,236 samples, 14.86%)</title><rect x="68.6463%" y="1301" width="14.8593%" height="15" fill="rgb(224,52,10)" fg:x="5710" fg:w="1236"/><text x="68.8963%" y="1311.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,236 samples, 14.86%)</title><rect x="68.6463%" y="1285" width="14.8593%" height="15" fill="rgb(237,179,5)" fg:x="5710" fg:w="1236"/><text x="68.8963%" y="1295.50">&lt;alloc::vec::Vec&lt;T&gt; as ..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 1.45%)</title><rect x="82.0510%" y="1269" width="1.4547%" height="15" fill="rgb(231,20,6)" fg:x="6825" fg:w="121"/><text x="82.3010%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 1.45%)</title><rect x="82.0510%" y="1253" width="1.4547%" height="15" fill="rgb(253,171,45)" fg:x="6825" fg:w="121"/><text x="82.3010%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (121 samples, 1.45%)</title><rect x="82.0510%" y="1237" width="1.4547%" height="15" fill="rgb(230,75,49)" fg:x="6825" fg:w="121"/><text x="82.3010%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 1.45%)</title><rect x="82.0510%" y="1221" width="1.4547%" height="15" fill="rgb(216,83,46)" fg:x="6825" fg:w="121"/><text x="82.3010%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (121 samples, 1.45%)</title><rect x="82.0510%" y="1205" width="1.4547%" height="15" fill="rgb(236,56,9)" fg:x="6825" fg:w="121"/><text x="82.3010%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (121 samples, 1.45%)</title><rect x="82.0510%" y="1189" width="1.4547%" height="15" fill="rgb(215,28,34)" fg:x="6825" fg:w="121"/><text x="82.3010%" y="1199.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (121 samples, 1.45%)</title><rect x="82.0510%" y="1173" width="1.4547%" height="15" fill="rgb(230,222,20)" fg:x="6825" fg:w="121"/><text x="82.3010%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.32%)</title><rect x="83.1811%" y="1157" width="0.3246%" height="15" fill="rgb(235,209,51)" fg:x="6919" fg:w="27"/><text x="83.4311%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.32%)</title><rect x="83.1811%" y="1141" width="0.3246%" height="15" fill="rgb(235,167,1)" fg:x="6919" fg:w="27"/><text x="83.4311%" y="1151.50"></text></g><g><title>smithereens::fragment::_{{closure}} (27 samples, 0.32%)</title><rect x="83.1811%" y="1125" width="0.3246%" height="15" fill="rgb(248,220,0)" fg:x="6919" fg:w="27"/><text x="83.4311%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.11%)</title><rect x="83.3975%" y="1109" width="0.1082%" height="15" fill="rgb(239,0,18)" fg:x="6937" fg:w="9"/><text x="83.6475%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.11%)</title><rect x="83.3975%" y="1093" width="0.1082%" height="15" fill="rgb(229,179,11)" fg:x="6937" fg:w="9"/><text x="83.6475%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.11%)</title><rect x="83.3975%" y="1077" width="0.1082%" height="15" fill="rgb(226,116,53)" fg:x="6937" fg:w="9"/><text x="83.6475%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="83.4696%" y="1061" width="0.0361%" height="15" fill="rgb(218,1,49)" fg:x="6943" fg:w="3"/><text x="83.7196%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="83.4696%" y="1045" width="0.0361%" height="15" fill="rgb(208,184,47)" fg:x="6943" fg:w="3"/><text x="83.7196%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.04%)</title><rect x="83.4696%" y="1029" width="0.0361%" height="15" fill="rgb(238,174,3)" fg:x="6943" fg:w="3"/><text x="83.7196%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3 samples, 0.04%)</title><rect x="83.4696%" y="1013" width="0.0361%" height="15" fill="rgb(247,188,6)" fg:x="6943" fg:w="3"/><text x="83.7196%" y="1023.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3 samples, 0.04%)</title><rect x="83.4696%" y="997" width="0.0361%" height="15" fill="rgb(211,165,46)" fg:x="6943" fg:w="3"/><text x="83.7196%" y="1007.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.04%)</title><rect x="83.4696%" y="981" width="0.0361%" height="15" fill="rgb(222,190,10)" fg:x="6943" fg:w="3"/><text x="83.7196%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="83.4696%" y="965" width="0.0361%" height="15" fill="rgb(206,185,3)" fg:x="6943" fg:w="3"/><text x="83.7196%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="83.4936%" y="949" width="0.0120%" height="15" fill="rgb(244,125,37)" fg:x="6945" fg:w="1"/><text x="83.7436%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="83.4936%" y="933" width="0.0120%" height="15" fill="rgb(211,43,7)" fg:x="6945" fg:w="1"/><text x="83.7436%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.4936%" y="917" width="0.0120%" height="15" fill="rgb(250,41,42)" fg:x="6945" fg:w="1"/><text x="83.7436%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.4936%" y="901" width="0.0120%" height="15" fill="rgb(254,54,42)" fg:x="6945" fg:w="1"/><text x="83.7436%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.4936%" y="885" width="0.0120%" height="15" fill="rgb(213,71,43)" fg:x="6945" fg:w="1"/><text x="83.7436%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5057%" y="1317" width="0.0120%" height="15" fill="rgb(249,3,44)" fg:x="6946" fg:w="1"/><text x="83.7557%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5057%" y="1301" width="0.0120%" height="15" fill="rgb(229,80,41)" fg:x="6946" fg:w="1"/><text x="83.7557%" y="1311.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5057%" y="1285" width="0.0120%" height="15" fill="rgb(231,25,28)" fg:x="6946" fg:w="1"/><text x="83.7557%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.5057%" y="1269" width="0.0120%" height="15" fill="rgb(208,79,48)" fg:x="6946" fg:w="1"/><text x="83.7557%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.5057%" y="1253" width="0.0120%" height="15" fill="rgb(207,196,38)" fg:x="6946" fg:w="1"/><text x="83.7557%" y="1263.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="83.5057%" y="1237" width="0.0120%" height="15" fill="rgb(228,105,49)" fg:x="6946" fg:w="1"/><text x="83.7557%" y="1247.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.5057%" y="1221" width="0.0120%" height="15" fill="rgb(237,99,15)" fg:x="6946" fg:w="1"/><text x="83.7557%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5177%" y="1301" width="0.0120%" height="15" fill="rgb(224,207,46)" fg:x="6947" fg:w="1"/><text x="83.7677%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5177%" y="1285" width="0.0120%" height="15" fill="rgb(249,117,50)" fg:x="6947" fg:w="1"/><text x="83.7677%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5177%" y="1269" width="0.0120%" height="15" fill="rgb(248,17,13)" fg:x="6947" fg:w="1"/><text x="83.7677%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.5177%" y="1253" width="0.0120%" height="15" fill="rgb(228,187,36)" fg:x="6947" fg:w="1"/><text x="83.7677%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.5177%" y="1237" width="0.0120%" height="15" fill="rgb(234,132,20)" fg:x="6947" fg:w="1"/><text x="83.7677%" y="1247.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="83.5177%" y="1221" width="0.0120%" height="15" fill="rgb(209,170,46)" fg:x="6947" fg:w="1"/><text x="83.7677%" y="1231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.5177%" y="1205" width="0.0120%" height="15" fill="rgb(237,23,19)" fg:x="6947" fg:w="1"/><text x="83.7677%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="83.5297%" y="1173" width="0.0240%" height="15" fill="rgb(227,21,26)" fg:x="6948" fg:w="2"/><text x="83.7797%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="83.5297%" y="1157" width="0.0240%" height="15" fill="rgb(222,220,48)" fg:x="6948" fg:w="2"/><text x="83.7797%" y="1167.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="83.5297%" y="1141" width="0.0240%" height="15" fill="rgb(214,9,16)" fg:x="6948" fg:w="2"/><text x="83.7797%" y="1151.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="83.5297%" y="1125" width="0.0240%" height="15" fill="rgb(209,73,30)" fg:x="6948" fg:w="2"/><text x="83.7797%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="83.5297%" y="1285" width="0.0361%" height="15" fill="rgb(207,20,33)" fg:x="6948" fg:w="3"/><text x="83.7797%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (3 samples, 0.04%)</title><rect x="83.5297%" y="1269" width="0.0361%" height="15" fill="rgb(219,153,12)" fg:x="6948" fg:w="3"/><text x="83.7797%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (3 samples, 0.04%)</title><rect x="83.5297%" y="1253" width="0.0361%" height="15" fill="rgb(235,97,25)" fg:x="6948" fg:w="3"/><text x="83.7797%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (3 samples, 0.04%)</title><rect x="83.5297%" y="1237" width="0.0361%" height="15" fill="rgb(244,30,34)" fg:x="6948" fg:w="3"/><text x="83.7797%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (3 samples, 0.04%)</title><rect x="83.5297%" y="1221" width="0.0361%" height="15" fill="rgb(214,106,45)" fg:x="6948" fg:w="3"/><text x="83.7797%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (3 samples, 0.04%)</title><rect x="83.5297%" y="1205" width="0.0361%" height="15" fill="rgb(226,41,9)" fg:x="6948" fg:w="3"/><text x="83.7797%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="83.5297%" y="1189" width="0.0361%" height="15" fill="rgb(253,139,29)" fg:x="6948" fg:w="3"/><text x="83.7797%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="83.5537%" y="1173" width="0.0120%" height="15" fill="rgb(213,205,39)" fg:x="6950" fg:w="1"/><text x="83.8037%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (5 samples, 0.06%)</title><rect x="83.5177%" y="1317" width="0.0601%" height="15" fill="rgb(209,27,10)" fg:x="6947" fg:w="5"/><text x="83.7677%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (4 samples, 0.05%)</title><rect x="83.5297%" y="1301" width="0.0481%" height="15" fill="rgb(249,142,16)" fg:x="6948" fg:w="4"/><text x="83.7797%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5658%" y="1285" width="0.0120%" height="15" fill="rgb(242,65,12)" fg:x="6951" fg:w="1"/><text x="83.8158%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5658%" y="1269" width="0.0120%" height="15" fill="rgb(232,48,10)" fg:x="6951" fg:w="1"/><text x="83.8158%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.5658%" y="1253" width="0.0120%" height="15" fill="rgb(253,67,19)" fg:x="6951" fg:w="1"/><text x="83.8158%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.5658%" y="1237" width="0.0120%" height="15" fill="rgb(227,93,29)" fg:x="6951" fg:w="1"/><text x="83.8158%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5778%" y="1269" width="0.0120%" height="15" fill="rgb(226,189,53)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="83.5778%" y="1253" width="0.0120%" height="15" fill="rgb(223,224,1)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5778%" y="1237" width="0.0120%" height="15" fill="rgb(221,84,32)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="83.5778%" y="1221" width="0.0120%" height="15" fill="rgb(214,189,28)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5778%" y="1205" width="0.0120%" height="15" fill="rgb(234,7,52)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5778%" y="1189" width="0.0120%" height="15" fill="rgb(249,73,31)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5778%" y="1173" width="0.0120%" height="15" fill="rgb(253,153,41)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.5778%" y="1157" width="0.0120%" height="15" fill="rgb(249,52,34)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.5778%" y="1141" width="0.0120%" height="15" fill="rgb(236,177,47)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1151.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="83.5778%" y="1125" width="0.0120%" height="15" fill="rgb(252,185,45)" fg:x="6952" fg:w="1"/><text x="83.8278%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (2 samples, 0.02%)</title><rect x="83.5778%" y="1301" width="0.0240%" height="15" fill="rgb(251,15,30)" fg:x="6952" fg:w="2"/><text x="83.8278%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="83.5778%" y="1285" width="0.0240%" height="15" fill="rgb(233,31,4)" fg:x="6952" fg:w="2"/><text x="83.8278%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5898%" y="1269" width="0.0120%" height="15" fill="rgb(254,44,24)" fg:x="6953" fg:w="1"/><text x="83.8398%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5898%" y="1253" width="0.0120%" height="15" fill="rgb(218,54,1)" fg:x="6953" fg:w="1"/><text x="83.8398%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.5898%" y="1237" width="0.0120%" height="15" fill="rgb(243,209,39)" fg:x="6953" fg:w="1"/><text x="83.8398%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.5898%" y="1221" width="0.0120%" height="15" fill="rgb(206,75,33)" fg:x="6953" fg:w="1"/><text x="83.8398%" y="1231.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="83.5898%" y="1205" width="0.0120%" height="15" fill="rgb(223,108,18)" fg:x="6953" fg:w="1"/><text x="83.8398%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (3 samples, 0.04%)</title><rect x="83.5778%" y="1317" width="0.0361%" height="15" fill="rgb(244,89,31)" fg:x="6952" fg:w="3"/><text x="83.8278%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (1 samples, 0.01%)</title><rect x="83.6018%" y="1301" width="0.0120%" height="15" fill="rgb(222,167,27)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="83.6018%" y="1285" width="0.0120%" height="15" fill="rgb(247,41,16)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="83.6018%" y="1269" width="0.0120%" height="15" fill="rgb(233,168,40)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (1 samples, 0.01%)</title><rect x="83.6018%" y="1253" width="0.0120%" height="15" fill="rgb(205,211,8)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.6018%" y="1237" width="0.0120%" height="15" fill="rgb(238,105,11)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.01%)</title><rect x="83.6018%" y="1221" width="0.0120%" height="15" fill="rgb(223,142,52)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.01%)</title><rect x="83.6018%" y="1205" width="0.0120%" height="15" fill="rgb(238,51,33)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="83.6018%" y="1189" width="0.0120%" height="15" fill="rgb(231,188,43)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="83.6018%" y="1173" width="0.0120%" height="15" fill="rgb(216,92,17)" fg:x="6954" fg:w="1"/><text x="83.8518%" y="1183.50"></text></g><g><title>&lt;petgraph::graph_impl::EdgeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="83.6379%" y="1285" width="0.0481%" height="15" fill="rgb(228,2,40)" fg:x="6957" fg:w="4"/><text x="83.8879%" y="1295.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (4 samples, 0.05%)</title><rect x="83.6379%" y="1269" width="0.0481%" height="15" fill="rgb(226,73,15)" fg:x="6957" fg:w="4"/><text x="83.8879%" y="1279.50"></text></g><g><title>core::intrinsics::copy (3 samples, 0.04%)</title><rect x="83.6860%" y="1269" width="0.0361%" height="15" fill="rgb(227,66,46)" fg:x="6961" fg:w="3"/><text x="83.9360%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (6 samples, 0.07%)</title><rect x="83.6860%" y="1285" width="0.0721%" height="15" fill="rgb(209,71,6)" fg:x="6961" fg:w="6"/><text x="83.9360%" y="1295.50"></text></g><g><title>core::ptr::read (3 samples, 0.04%)</title><rect x="83.7220%" y="1269" width="0.0361%" height="15" fill="rgb(246,100,25)" fg:x="6964" fg:w="3"/><text x="83.9720%" y="1279.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next_edge (3 samples, 0.04%)</title><rect x="83.7581%" y="1285" width="0.0361%" height="15" fill="rgb(248,185,27)" fg:x="6967" fg:w="3"/><text x="84.0081%" y="1295.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next (3 samples, 0.04%)</title><rect x="83.7581%" y="1269" width="0.0361%" height="15" fill="rgb(225,118,47)" fg:x="6967" fg:w="3"/><text x="84.0081%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="83.7942%" y="1269" width="0.0120%" height="15" fill="rgb(220,185,44)" fg:x="6970" fg:w="1"/><text x="84.0442%" y="1279.50"></text></g><g><title>&lt;petgraph::graph_impl::EdgeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="83.8062%" y="1253" width="0.0120%" height="15" fill="rgb(227,95,24)" fg:x="6971" fg:w="1"/><text x="84.0562%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (1 samples, 0.01%)</title><rect x="83.8062%" y="1237" width="0.0120%" height="15" fill="rgb(252,84,24)" fg:x="6971" fg:w="1"/><text x="84.0562%" y="1247.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_edge (3 samples, 0.04%)</title><rect x="83.7942%" y="1285" width="0.0361%" height="15" fill="rgb(240,34,44)" fg:x="6970" fg:w="3"/><text x="84.0442%" y="1295.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::change_edge_links (2 samples, 0.02%)</title><rect x="83.8062%" y="1269" width="0.0240%" height="15" fill="rgb(209,72,54)" fg:x="6971" fg:w="2"/><text x="84.0562%" y="1279.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (1 samples, 0.01%)</title><rect x="83.8182%" y="1253" width="0.0120%" height="15" fill="rgb(226,19,45)" fg:x="6972" fg:w="1"/><text x="84.0682%" y="1263.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (1 samples, 0.01%)</title><rect x="83.8182%" y="1237" width="0.0120%" height="15" fill="rgb(246,7,45)" fg:x="6972" fg:w="1"/><text x="84.0682%" y="1247.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (19 samples, 0.23%)</title><rect x="83.6138%" y="1317" width="0.2284%" height="15" fill="rgb(225,45,2)" fg:x="6955" fg:w="19"/><text x="83.8638%" y="1327.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (19 samples, 0.23%)</title><rect x="83.6138%" y="1301" width="0.2284%" height="15" fill="rgb(221,80,29)" fg:x="6955" fg:w="19"/><text x="83.8638%" y="1311.50"></text></g><g><title>petgraph::graph_impl::NodeIndex&lt;Ix&gt;::index (1 samples, 0.01%)</title><rect x="83.8302%" y="1285" width="0.0120%" height="15" fill="rgb(228,11,19)" fg:x="6973" fg:w="1"/><text x="84.0802%" y="1295.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1 samples, 0.01%)</title><rect x="83.8302%" y="1269" width="0.0120%" height="15" fill="rgb(243,17,21)" fg:x="6973" fg:w="1"/><text x="84.0802%" y="1279.50"></text></g><g><title>&lt;petgraph::graph_impl::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.8543%" y="1205" width="0.0120%" height="15" fill="rgb(243,88,8)" fg:x="6975" fg:w="1"/><text x="84.1043%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="83.8543%" y="1189" width="0.0120%" height="15" fill="rgb(214,17,9)" fg:x="6975" fg:w="1"/><text x="84.1043%" y="1199.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="83.8543%" y="1173" width="0.0120%" height="15" fill="rgb(232,169,15)" fg:x="6975" fg:w="1"/><text x="84.1043%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.05%)</title><rect x="83.8423%" y="1301" width="0.0481%" height="15" fill="rgb(232,86,53)" fg:x="6974" fg:w="4"/><text x="84.0923%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.05%)</title><rect x="83.8423%" y="1285" width="0.0481%" height="15" fill="rgb(222,100,4)" fg:x="6974" fg:w="4"/><text x="84.0923%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.05%)</title><rect x="83.8423%" y="1269" width="0.0481%" height="15" fill="rgb(253,151,38)" fg:x="6974" fg:w="4"/><text x="84.0923%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="83.8543%" y="1253" width="0.0361%" height="15" fill="rgb(238,215,29)" fg:x="6975" fg:w="3"/><text x="84.1043%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.04%)</title><rect x="83.8543%" y="1237" width="0.0361%" height="15" fill="rgb(205,128,53)" fg:x="6975" fg:w="3"/><text x="84.1043%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="83.8543%" y="1221" width="0.0361%" height="15" fill="rgb(248,183,14)" fg:x="6975" fg:w="3"/><text x="84.1043%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2 samples, 0.02%)</title><rect x="83.8663%" y="1205" width="0.0240%" height="15" fill="rgb(244,172,35)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="83.8663%" y="1189" width="0.0240%" height="15" fill="rgb(234,93,19)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1199.50"></text></g><g><title>smithereens::expand_from::_{{closure}} (2 samples, 0.02%)</title><rect x="83.8663%" y="1173" width="0.0240%" height="15" fill="rgb(227,109,7)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.02%)</title><rect x="83.8663%" y="1157" width="0.0240%" height="15" fill="rgb(233,136,54)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1167.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.02%)</title><rect x="83.8663%" y="1141" width="0.0240%" height="15" fill="rgb(233,19,40)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.02%)</title><rect x="83.8663%" y="1125" width="0.0240%" height="15" fill="rgb(247,41,18)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1135.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (2 samples, 0.02%)</title><rect x="83.8663%" y="1109" width="0.0240%" height="15" fill="rgb(220,34,34)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1119.50"></text></g><g><title>&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="83.8663%" y="1093" width="0.0240%" height="15" fill="rgb(222,135,32)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (2 samples, 0.02%)</title><rect x="83.8663%" y="1077" width="0.0240%" height="15" fill="rgb(214,80,19)" fg:x="6976" fg:w="2"/><text x="84.1163%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="83.9024%" y="1269" width="0.0120%" height="15" fill="rgb(234,54,46)" fg:x="6979" fg:w="1"/><text x="84.1524%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="83.8904%" y="1301" width="0.0361%" height="15" fill="rgb(251,48,23)" fg:x="6978" fg:w="3"/><text x="84.1404%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="83.9024%" y="1285" width="0.0240%" height="15" fill="rgb(254,109,52)" fg:x="6979" fg:w="2"/><text x="84.1524%" y="1295.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="83.9144%" y="1269" width="0.0120%" height="15" fill="rgb(240,186,19)" fg:x="6980" fg:w="1"/><text x="84.1644%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="83.9144%" y="1253" width="0.0120%" height="15" fill="rgb(246,187,17)" fg:x="6980" fg:w="1"/><text x="84.1644%" y="1263.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="83.9144%" y="1237" width="0.0120%" height="15" fill="rgb(212,21,5)" fg:x="6980" fg:w="1"/><text x="84.1644%" y="1247.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="83.9144%" y="1221" width="0.0120%" height="15" fill="rgb(225,185,18)" fg:x="6980" fg:w="1"/><text x="84.1644%" y="1231.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="83.9144%" y="1205" width="0.0120%" height="15" fill="rgb(245,114,17)" fg:x="6980" fg:w="1"/><text x="84.1644%" y="1215.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.9144%" y="1189" width="0.0120%" height="15" fill="rgb(223,164,24)" fg:x="6980" fg:w="1"/><text x="84.1644%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.9144%" y="1173" width="0.0120%" height="15" fill="rgb(211,228,3)" fg:x="6980" fg:w="1"/><text x="84.1644%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (4 samples, 0.05%)</title><rect x="83.9264%" y="1301" width="0.0481%" height="15" fill="rgb(223,16,38)" fg:x="6981" fg:w="4"/><text x="84.1764%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (4 samples, 0.05%)</title><rect x="83.9264%" y="1285" width="0.0481%" height="15" fill="rgb(207,31,54)" fg:x="6981" fg:w="4"/><text x="84.1764%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="83.9264%" y="1269" width="0.0481%" height="15" fill="rgb(220,39,11)" fg:x="6981" fg:w="4"/><text x="84.1764%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="83.9264%" y="1253" width="0.0481%" height="15" fill="rgb(235,185,0)" fg:x="6981" fg:w="4"/><text x="84.1764%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="83.9264%" y="1237" width="0.0481%" height="15" fill="rgb(249,39,18)" fg:x="6981" fg:w="4"/><text x="84.1764%" y="1247.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="83.9264%" y="1221" width="0.0481%" height="15" fill="rgb(240,110,33)" fg:x="6981" fg:w="4"/><text x="84.1764%" y="1231.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="83.9625%" y="1205" width="0.0120%" height="15" fill="rgb(210,92,42)" fg:x="6984" fg:w="1"/><text x="84.2125%" y="1215.50"></text></g><g><title>smithereens::expand_from (12 samples, 0.14%)</title><rect x="83.8423%" y="1317" width="0.1443%" height="15" fill="rgb(218,215,28)" fg:x="6974" fg:w="12"/><text x="84.0923%" y="1327.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::neighbors_undirected (1 samples, 0.01%)</title><rect x="83.9745%" y="1301" width="0.0120%" height="15" fill="rgb(238,215,36)" fg:x="6985" fg:w="1"/><text x="84.2245%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="83.9865%" y="1269" width="0.0481%" height="15" fill="rgb(220,31,10)" fg:x="6986" fg:w="4"/><text x="84.2365%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="83.9865%" y="1253" width="0.0481%" height="15" fill="rgb(212,93,14)" fg:x="6986" fg:w="4"/><text x="84.2365%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.05%)</title><rect x="83.9865%" y="1237" width="0.0481%" height="15" fill="rgb(254,207,2)" fg:x="6986" fg:w="4"/><text x="84.2365%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="84.0226%" y="1221" width="0.0120%" height="15" fill="rgb(205,57,44)" fg:x="6989" fg:w="1"/><text x="84.2726%" y="1231.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="84.0346%" y="1253" width="0.0240%" height="15" fill="rgb(226,151,19)" fg:x="6990" fg:w="2"/><text x="84.2846%" y="1263.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="84.0346%" y="1237" width="0.0240%" height="15" fill="rgb(230,72,30)" fg:x="6990" fg:w="2"/><text x="84.2846%" y="1247.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="84.0947%" y="1061" width="0.0120%" height="15" fill="rgb(244,0,8)" fg:x="6995" fg:w="1"/><text x="84.3447%" y="1071.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="84.0947%" y="1045" width="0.0120%" height="15" fill="rgb(230,192,6)" fg:x="6995" fg:w="1"/><text x="84.3447%" y="1055.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="84.0947%" y="1029" width="0.0120%" height="15" fill="rgb(233,207,13)" fg:x="6995" fg:w="1"/><text x="84.3447%" y="1039.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="84.0587%" y="1157" width="0.0842%" height="15" fill="rgb(206,227,7)" fg:x="6992" fg:w="7"/><text x="84.3087%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (7 samples, 0.08%)</title><rect x="84.0587%" y="1141" width="0.0842%" height="15" fill="rgb(213,217,25)" fg:x="6992" fg:w="7"/><text x="84.3087%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_u32 (7 samples, 0.08%)</title><rect x="84.0587%" y="1125" width="0.0842%" height="15" fill="rgb(249,75,4)" fg:x="6992" fg:w="7"/><text x="84.3087%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="84.0587%" y="1109" width="0.0842%" height="15" fill="rgb(225,114,18)" fg:x="6992" fg:w="7"/><text x="84.3087%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="84.0587%" y="1093" width="0.0842%" height="15" fill="rgb(211,162,40)" fg:x="6992" fg:w="7"/><text x="84.3087%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="84.0587%" y="1077" width="0.0842%" height="15" fill="rgb(206,49,29)" fg:x="6992" fg:w="7"/><text x="84.3087%" y="1087.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.04%)</title><rect x="84.1068%" y="1061" width="0.0361%" height="15" fill="rgb(244,8,6)" fg:x="6996" fg:w="3"/><text x="84.3568%" y="1071.50"></text></g><g><title>core::hash::Hash::hash_slice (9 samples, 0.11%)</title><rect x="84.0587%" y="1205" width="0.1082%" height="15" fill="rgb(231,194,28)" fg:x="6992" fg:w="9"/><text x="84.3087%" y="1215.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="84.0587%" y="1189" width="0.1082%" height="15" fill="rgb(210,69,5)" fg:x="6992" fg:w="9"/><text x="84.3087%" y="1199.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="84.0587%" y="1173" width="0.1082%" height="15" fill="rgb(216,186,12)" fg:x="6992" fg:w="9"/><text x="84.3087%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="84.1428%" y="1157" width="0.0240%" height="15" fill="rgb(238,61,15)" fg:x="6999" fg:w="2"/><text x="84.3928%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="84.1428%" y="1141" width="0.0240%" height="15" fill="rgb(226,104,1)" fg:x="6999" fg:w="2"/><text x="84.3928%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="84.1428%" y="1125" width="0.0240%" height="15" fill="rgb(229,128,15)" fg:x="6999" fg:w="2"/><text x="84.3928%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="84.1428%" y="1109" width="0.0240%" height="15" fill="rgb(247,110,15)" fg:x="6999" fg:w="2"/><text x="84.3928%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="84.1428%" y="1093" width="0.0240%" height="15" fill="rgb(210,74,48)" fg:x="6999" fg:w="2"/><text x="84.3928%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="84.1548%" y="1077" width="0.0120%" height="15" fill="rgb(246,121,10)" fg:x="7000" fg:w="1"/><text x="84.4048%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.1548%" y="1061" width="0.0120%" height="15" fill="rgb(214,156,37)" fg:x="7000" fg:w="1"/><text x="84.4048%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.12%)</title><rect x="84.0587%" y="1237" width="0.1202%" height="15" fill="rgb(214,210,34)" fg:x="6992" fg:w="10"/><text x="84.3087%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.12%)</title><rect x="84.0587%" y="1221" width="0.1202%" height="15" fill="rgb(237,93,35)" fg:x="6992" fg:w="10"/><text x="84.3087%" y="1231.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="84.1669%" y="1205" width="0.0120%" height="15" fill="rgb(206,36,8)" fg:x="7001" fg:w="1"/><text x="84.4169%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="84.1669%" y="1189" width="0.0120%" height="15" fill="rgb(208,151,12)" fg:x="7001" fg:w="1"/><text x="84.4169%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.1669%" y="1173" width="0.0120%" height="15" fill="rgb(225,133,52)" fg:x="7001" fg:w="1"/><text x="84.4169%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.1669%" y="1157" width="0.0120%" height="15" fill="rgb(231,71,53)" fg:x="7001" fg:w="1"/><text x="84.4169%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.1669%" y="1141" width="0.0120%" height="15" fill="rgb(243,76,21)" fg:x="7001" fg:w="1"/><text x="84.4169%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="84.1669%" y="1125" width="0.0120%" height="15" fill="rgb(252,144,3)" fg:x="7001" fg:w="1"/><text x="84.4169%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.2270%" y="1125" width="0.0120%" height="15" fill="rgb(231,199,10)" fg:x="7006" fg:w="1"/><text x="84.4770%" y="1135.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="84.1789%" y="1221" width="0.0721%" height="15" fill="rgb(215,18,11)" fg:x="7002" fg:w="6"/><text x="84.4289%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (5 samples, 0.06%)</title><rect x="84.1909%" y="1205" width="0.0601%" height="15" fill="rgb(241,65,24)" fg:x="7003" fg:w="5"/><text x="84.4409%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_u32 (5 samples, 0.06%)</title><rect x="84.1909%" y="1189" width="0.0601%" height="15" fill="rgb(251,192,38)" fg:x="7003" fg:w="5"/><text x="84.4409%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="84.1909%" y="1173" width="0.0601%" height="15" fill="rgb(205,9,35)" fg:x="7003" fg:w="5"/><text x="84.4409%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="84.1909%" y="1157" width="0.0601%" height="15" fill="rgb(229,225,49)" fg:x="7003" fg:w="5"/><text x="84.4409%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="84.1909%" y="1141" width="0.0601%" height="15" fill="rgb(207,125,39)" fg:x="7003" fg:w="5"/><text x="84.4409%" y="1151.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="84.2390%" y="1125" width="0.0120%" height="15" fill="rgb(222,78,19)" fg:x="7007" fg:w="1"/><text x="84.4890%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="84.2390%" y="1109" width="0.0120%" height="15" fill="rgb(248,207,20)" fg:x="7007" fg:w="1"/><text x="84.4890%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.2510%" y="1141" width="0.0120%" height="15" fill="rgb(205,103,49)" fg:x="7008" fg:w="1"/><text x="84.5010%" y="1151.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="84.2871%" y="1125" width="0.0120%" height="15" fill="rgb(216,42,28)" fg:x="7011" fg:w="1"/><text x="84.5371%" y="1135.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="84.2871%" y="1109" width="0.0120%" height="15" fill="rgb(213,205,53)" fg:x="7011" fg:w="1"/><text x="84.5371%" y="1119.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="84.2871%" y="1093" width="0.0120%" height="15" fill="rgb(239,140,53)" fg:x="7011" fg:w="1"/><text x="84.5371%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.05%)</title><rect x="84.2630%" y="1141" width="0.0481%" height="15" fill="rgb(248,95,9)" fg:x="7009" fg:w="4"/><text x="84.5130%" y="1151.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="84.2991%" y="1125" width="0.0120%" height="15" fill="rgb(254,58,47)" fg:x="7012" fg:w="1"/><text x="84.5491%" y="1135.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (12 samples, 0.14%)</title><rect x="84.1789%" y="1237" width="0.1443%" height="15" fill="rgb(234,227,14)" fg:x="7002" fg:w="12"/><text x="84.4289%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.07%)</title><rect x="84.2510%" y="1221" width="0.0721%" height="15" fill="rgb(205,192,45)" fg:x="7008" fg:w="6"/><text x="84.5010%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.07%)</title><rect x="84.2510%" y="1205" width="0.0721%" height="15" fill="rgb(253,187,31)" fg:x="7008" fg:w="6"/><text x="84.5010%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (6 samples, 0.07%)</title><rect x="84.2510%" y="1189" width="0.0721%" height="15" fill="rgb(222,6,32)" fg:x="7008" fg:w="6"/><text x="84.5010%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (6 samples, 0.07%)</title><rect x="84.2510%" y="1173" width="0.0721%" height="15" fill="rgb(249,190,19)" fg:x="7008" fg:w="6"/><text x="84.5010%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (6 samples, 0.07%)</title><rect x="84.2510%" y="1157" width="0.0721%" height="15" fill="rgb(251,28,20)" fg:x="7008" fg:w="6"/><text x="84.5010%" y="1167.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="84.3111%" y="1141" width="0.0120%" height="15" fill="rgb(210,223,40)" fg:x="7013" fg:w="1"/><text x="84.5611%" y="1151.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (23 samples, 0.28%)</title><rect x="84.0587%" y="1253" width="0.2765%" height="15" fill="rgb(216,137,22)" fg:x="6992" fg:w="23"/><text x="84.3087%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="84.3232%" y="1237" width="0.0120%" height="15" fill="rgb(247,39,34)" fg:x="7014" fg:w="1"/><text x="84.5732%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="84.3232%" y="1221" width="0.0120%" height="15" fill="rgb(239,43,50)" fg:x="7014" fg:w="1"/><text x="84.5732%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.3232%" y="1205" width="0.0120%" height="15" fill="rgb(241,212,9)" fg:x="7014" fg:w="1"/><text x="84.5732%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.3232%" y="1189" width="0.0120%" height="15" fill="rgb(205,8,2)" fg:x="7014" fg:w="1"/><text x="84.5732%" y="1199.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="84.3232%" y="1173" width="0.0120%" height="15" fill="rgb(217,173,54)" fg:x="7014" fg:w="1"/><text x="84.5732%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (3 samples, 0.04%)</title><rect x="84.3352%" y="1253" width="0.0361%" height="15" fill="rgb(208,149,52)" fg:x="7015" fg:w="3"/><text x="84.5852%" y="1263.50"></text></g><g><title>alloc::slice::stable_sort (3 samples, 0.04%)</title><rect x="84.3352%" y="1237" width="0.0361%" height="15" fill="rgb(239,99,40)" fg:x="7015" fg:w="3"/><text x="84.5852%" y="1247.50"></text></g><g><title>core::slice::sort::insert_tail (2 samples, 0.02%)</title><rect x="84.3472%" y="1221" width="0.0240%" height="15" fill="rgb(233,214,26)" fg:x="7016" fg:w="2"/><text x="84.5972%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="84.3472%" y="1205" width="0.0240%" height="15" fill="rgb(231,225,37)" fg:x="7016" fg:w="2"/><text x="84.5972%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.11%)</title><rect x="84.3712%" y="1253" width="0.1082%" height="15" fill="rgb(252,55,35)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="84.3712%" y="1237" width="0.1082%" height="15" fill="rgb(239,43,18)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="84.3712%" y="1221" width="0.1082%" height="15" fill="rgb(251,125,49)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="84.3712%" y="1205" width="0.1082%" height="15" fill="rgb(212,83,54)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1215.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="84.3712%" y="1189" width="0.1082%" height="15" fill="rgb(250,75,6)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1199.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="84.3712%" y="1173" width="0.1082%" height="15" fill="rgb(252,36,40)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="84.3712%" y="1157" width="0.1082%" height="15" fill="rgb(230,91,51)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="84.3712%" y="1141" width="0.1082%" height="15" fill="rgb(212,92,28)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="84.3712%" y="1125" width="0.1082%" height="15" fill="rgb(227,13,22)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="84.3712%" y="1109" width="0.1082%" height="15" fill="rgb(239,204,32)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="84.3712%" y="1093" width="0.1082%" height="15" fill="rgb(228,49,41)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="84.3712%" y="1077" width="0.1082%" height="15" fill="rgb(206,95,6)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.11%)</title><rect x="84.3712%" y="1061" width="0.1082%" height="15" fill="rgb(251,20,14)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.11%)</title><rect x="84.3712%" y="1045" width="0.1082%" height="15" fill="rgb(214,99,28)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.11%)</title><rect x="84.3712%" y="1029" width="0.1082%" height="15" fill="rgb(239,122,54)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.11%)</title><rect x="84.3712%" y="1013" width="0.1082%" height="15" fill="rgb(218,217,46)" fg:x="7018" fg:w="9"/><text x="84.6212%" y="1023.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="84.4073%" y="997" width="0.0721%" height="15" fill="rgb(249,106,28)" fg:x="7021" fg:w="6"/><text x="84.6573%" y="1007.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="84.4434%" y="981" width="0.0361%" height="15" fill="rgb(250,158,18)" fg:x="7024" fg:w="3"/><text x="84.6934%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1 samples, 0.01%)</title><rect x="84.4794%" y="1253" width="0.0120%" height="15" fill="rgb(226,137,29)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1263.50"></text></g><g><title>&lt;smithereens::TerminalIon as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="84.4794%" y="1237" width="0.0120%" height="15" fill="rgb(210,188,1)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="84.4794%" y="1221" width="0.0120%" height="15" fill="rgb(227,84,42)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1231.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="84.4794%" y="1205" width="0.0120%" height="15" fill="rgb(222,147,48)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="84.4794%" y="1189" width="0.0120%" height="15" fill="rgb(241,150,43)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.4794%" y="1173" width="0.0120%" height="15" fill="rgb(206,139,52)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.4794%" y="1157" width="0.0120%" height="15" fill="rgb(230,63,14)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.4794%" y="1141" width="0.0120%" height="15" fill="rgb(247,8,20)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.4794%" y="1125" width="0.0120%" height="15" fill="rgb(213,115,4)" fg:x="7027" fg:w="1"/><text x="84.7294%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (43 samples, 0.52%)</title><rect x="83.9865%" y="1285" width="0.5170%" height="15" fill="rgb(241,79,49)" fg:x="6986" fg:w="43"/><text x="84.2365%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (39 samples, 0.47%)</title><rect x="84.0346%" y="1269" width="0.4689%" height="15" fill="rgb(222,42,35)" fg:x="6990" fg:w="39"/><text x="84.2846%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="84.4915%" y="1253" width="0.0120%" height="15" fill="rgb(247,59,23)" fg:x="7028" fg:w="1"/><text x="84.7415%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="84.4915%" y="1237" width="0.0120%" height="15" fill="rgb(247,93,18)" fg:x="7028" fg:w="1"/><text x="84.7415%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="84.4915%" y="1221" width="0.0120%" height="15" fill="rgb(249,107,47)" fg:x="7028" fg:w="1"/><text x="84.7415%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="84.4915%" y="1205" width="0.0120%" height="15" fill="rgb(219,27,1)" fg:x="7028" fg:w="1"/><text x="84.7415%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="84.4915%" y="1189" width="0.0120%" height="15" fill="rgb(217,82,32)" fg:x="7028" fg:w="1"/><text x="84.7415%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="84.4915%" y="1173" width="0.0120%" height="15" fill="rgb(250,129,47)" fg:x="7028" fg:w="1"/><text x="84.7415%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::FullBucketsIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.5035%" y="1205" width="0.0120%" height="15" fill="rgb(253,88,35)" fg:x="7029" fg:w="1"/><text x="84.7535%" y="1215.50"></text></g><g><title>hashbrown::raw::FullBucketsIndices::next_impl (1 samples, 0.01%)</title><rect x="84.5035%" y="1189" width="0.0120%" height="15" fill="rgb(245,221,14)" fg:x="7029" fg:w="1"/><text x="84.7535%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.5035%" y="1173" width="0.0120%" height="15" fill="rgb(217,119,54)" fg:x="7029" fg:w="1"/><text x="84.7535%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="84.5155%" y="1157" width="0.0361%" height="15" fill="rgb(247,128,31)" fg:x="7030" fg:w="3"/><text x="84.7655%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="84.5155%" y="1141" width="0.0361%" height="15" fill="rgb(211,99,22)" fg:x="7030" fg:w="3"/><text x="84.7655%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="84.5155%" y="1125" width="0.0361%" height="15" fill="rgb(212,20,17)" fg:x="7030" fg:w="3"/><text x="84.7655%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="84.5396%" y="1109" width="0.0120%" height="15" fill="rgb(209,159,29)" fg:x="7032" fg:w="1"/><text x="84.7896%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.5516%" y="1141" width="0.0120%" height="15" fill="rgb(222,177,53)" fg:x="7033" fg:w="1"/><text x="84.8016%" y="1151.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="84.5516%" y="1125" width="0.0120%" height="15" fill="rgb(234,46,43)" fg:x="7033" fg:w="1"/><text x="84.8016%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (5 samples, 0.06%)</title><rect x="84.5636%" y="1029" width="0.0601%" height="15" fill="rgb(208,108,14)" fg:x="7034" fg:w="5"/><text x="84.8136%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_u32 (5 samples, 0.06%)</title><rect x="84.5636%" y="1013" width="0.0601%" height="15" fill="rgb(226,78,53)" fg:x="7034" fg:w="5"/><text x="84.8136%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="84.5636%" y="997" width="0.0601%" height="15" fill="rgb(230,20,41)" fg:x="7034" fg:w="5"/><text x="84.8136%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="84.5636%" y="981" width="0.0601%" height="15" fill="rgb(213,195,35)" fg:x="7034" fg:w="5"/><text x="84.8136%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="84.5636%" y="965" width="0.0601%" height="15" fill="rgb(242,62,36)" fg:x="7034" fg:w="5"/><text x="84.8136%" y="975.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="84.5997%" y="949" width="0.0240%" height="15" fill="rgb(222,210,37)" fg:x="7037" fg:w="2"/><text x="84.8497%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="84.6117%" y="933" width="0.0120%" height="15" fill="rgb(232,107,19)" fg:x="7038" fg:w="1"/><text x="84.8617%" y="943.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="84.5636%" y="1045" width="0.0721%" height="15" fill="rgb(235,85,17)" fg:x="7034" fg:w="6"/><text x="84.8136%" y="1055.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="84.6237%" y="1029" width="0.0120%" height="15" fill="rgb(219,195,31)" fg:x="7039" fg:w="1"/><text x="84.8737%" y="1039.50"></text></g><g><title>rust_decimal::decimal::flags (1 samples, 0.01%)</title><rect x="84.6237%" y="1013" width="0.0120%" height="15" fill="rgb(231,183,30)" fg:x="7039" fg:w="1"/><text x="84.8737%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.6357%" y="965" width="0.0120%" height="15" fill="rgb(212,0,11)" fg:x="7040" fg:w="1"/><text x="84.8857%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="84.6357%" y="949" width="0.0120%" height="15" fill="rgb(249,53,54)" fg:x="7040" fg:w="1"/><text x="84.8857%" y="959.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="84.6478%" y="965" width="0.0120%" height="15" fill="rgb(211,118,13)" fg:x="7041" fg:w="1"/><text x="84.8978%" y="975.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="84.6478%" y="949" width="0.0120%" height="15" fill="rgb(237,42,9)" fg:x="7041" fg:w="1"/><text x="84.8978%" y="959.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="84.6478%" y="933" width="0.0120%" height="15" fill="rgb(227,68,32)" fg:x="7041" fg:w="1"/><text x="84.8978%" y="943.50"></text></g><g><title>core::hash::Hash::hash_slice (9 samples, 0.11%)</title><rect x="84.5636%" y="1093" width="0.1082%" height="15" fill="rgb(238,10,7)" fg:x="7034" fg:w="9"/><text x="84.8136%" y="1103.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="84.5636%" y="1077" width="0.1082%" height="15" fill="rgb(224,42,12)" fg:x="7034" fg:w="9"/><text x="84.8136%" y="1087.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="84.5636%" y="1061" width="0.1082%" height="15" fill="rgb(252,190,5)" fg:x="7034" fg:w="9"/><text x="84.8136%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="84.6357%" y="1045" width="0.0361%" height="15" fill="rgb(220,214,39)" fg:x="7040" fg:w="3"/><text x="84.8857%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="84.6357%" y="1029" width="0.0361%" height="15" fill="rgb(247,98,4)" fg:x="7040" fg:w="3"/><text x="84.8857%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="84.6357%" y="1013" width="0.0361%" height="15" fill="rgb(211,60,12)" fg:x="7040" fg:w="3"/><text x="84.8857%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="84.6357%" y="997" width="0.0361%" height="15" fill="rgb(224,42,10)" fg:x="7040" fg:w="3"/><text x="84.8857%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="84.6357%" y="981" width="0.0361%" height="15" fill="rgb(217,167,4)" fg:x="7040" fg:w="3"/><text x="84.8857%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="84.6598%" y="965" width="0.0120%" height="15" fill="rgb(253,18,17)" fg:x="7042" fg:w="1"/><text x="84.9098%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="84.5636%" y="1125" width="0.1322%" height="15" fill="rgb(249,186,44)" fg:x="7034" fg:w="11"/><text x="84.8136%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.13%)</title><rect x="84.5636%" y="1109" width="0.1322%" height="15" fill="rgb(254,124,54)" fg:x="7034" fg:w="11"/><text x="84.8136%" y="1119.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.02%)</title><rect x="84.6718%" y="1093" width="0.0240%" height="15" fill="rgb(220,124,39)" fg:x="7043" fg:w="2"/><text x="84.9218%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="84.6718%" y="1077" width="0.0240%" height="15" fill="rgb(225,96,46)" fg:x="7043" fg:w="2"/><text x="84.9218%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="84.6718%" y="1061" width="0.0240%" height="15" fill="rgb(221,106,12)" fg:x="7043" fg:w="2"/><text x="84.9218%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="84.6718%" y="1045" width="0.0240%" height="15" fill="rgb(227,133,23)" fg:x="7043" fg:w="2"/><text x="84.9218%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.7319%" y="1013" width="0.0120%" height="15" fill="rgb(216,44,52)" fg:x="7048" fg:w="1"/><text x="84.9819%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="84.7319%" y="997" width="0.0120%" height="15" fill="rgb(239,149,7)" fg:x="7048" fg:w="1"/><text x="84.9819%" y="1007.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="84.7439%" y="1013" width="0.0120%" height="15" fill="rgb(211,157,31)" fg:x="7049" fg:w="1"/><text x="84.9939%" y="1023.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="84.7439%" y="997" width="0.0120%" height="15" fill="rgb(206,215,22)" fg:x="7049" fg:w="1"/><text x="84.9939%" y="1007.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="84.7439%" y="981" width="0.0120%" height="15" fill="rgb(208,113,15)" fg:x="7049" fg:w="1"/><text x="84.9939%" y="991.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="84.6958%" y="1109" width="0.1082%" height="15" fill="rgb(207,189,15)" fg:x="7045" fg:w="9"/><text x="84.9458%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8 samples, 0.10%)</title><rect x="84.7079%" y="1093" width="0.0962%" height="15" fill="rgb(231,115,4)" fg:x="7046" fg:w="8"/><text x="84.9579%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u32 (8 samples, 0.10%)</title><rect x="84.7079%" y="1077" width="0.0962%" height="15" fill="rgb(253,117,2)" fg:x="7046" fg:w="8"/><text x="84.9579%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="84.7079%" y="1061" width="0.0962%" height="15" fill="rgb(248,48,24)" fg:x="7046" fg:w="8"/><text x="84.9579%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="84.7079%" y="1045" width="0.0962%" height="15" fill="rgb(241,28,46)" fg:x="7046" fg:w="8"/><text x="84.9579%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="84.7079%" y="1029" width="0.0962%" height="15" fill="rgb(216,165,52)" fg:x="7046" fg:w="8"/><text x="84.9579%" y="1039.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.05%)</title><rect x="84.7560%" y="1013" width="0.0481%" height="15" fill="rgb(220,222,34)" fg:x="7050" fg:w="4"/><text x="85.0060%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="84.7920%" y="997" width="0.0120%" height="15" fill="rgb(247,222,49)" fg:x="7053" fg:w="1"/><text x="85.0420%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.8040%" y="1029" width="0.0120%" height="15" fill="rgb(240,10,31)" fg:x="7054" fg:w="1"/><text x="85.0540%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="84.8040%" y="1013" width="0.0120%" height="15" fill="rgb(221,199,35)" fg:x="7054" fg:w="1"/><text x="85.0540%" y="1023.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (13 samples, 0.16%)</title><rect x="84.6958%" y="1125" width="0.1563%" height="15" fill="rgb(230,223,11)" fg:x="7045" fg:w="13"/><text x="84.9458%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="84.8040%" y="1109" width="0.0481%" height="15" fill="rgb(218,82,45)" fg:x="7054" fg:w="4"/><text x="85.0540%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.05%)</title><rect x="84.8040%" y="1093" width="0.0481%" height="15" fill="rgb(233,213,33)" fg:x="7054" fg:w="4"/><text x="85.0540%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="84.8040%" y="1077" width="0.0481%" height="15" fill="rgb(210,143,52)" fg:x="7054" fg:w="4"/><text x="85.0540%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="84.8040%" y="1061" width="0.0481%" height="15" fill="rgb(206,95,4)" fg:x="7054" fg:w="4"/><text x="85.0540%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="84.8040%" y="1045" width="0.0481%" height="15" fill="rgb(246,164,46)" fg:x="7054" fg:w="4"/><text x="85.0540%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.04%)</title><rect x="84.8161%" y="1029" width="0.0361%" height="15" fill="rgb(213,210,47)" fg:x="7055" fg:w="3"/><text x="85.0661%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="84.8401%" y="1013" width="0.0120%" height="15" fill="rgb(210,12,38)" fg:x="7057" fg:w="1"/><text x="85.0901%" y="1023.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (25 samples, 0.30%)</title><rect x="84.5636%" y="1141" width="0.3006%" height="15" fill="rgb(252,192,54)" fg:x="7034" fg:w="25"/><text x="84.8136%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="84.8521%" y="1125" width="0.0120%" height="15" fill="rgb(242,92,6)" fg:x="7058" fg:w="1"/><text x="85.1021%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="84.8521%" y="1109" width="0.0120%" height="15" fill="rgb(253,154,15)" fg:x="7058" fg:w="1"/><text x="85.1021%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.8521%" y="1093" width="0.0120%" height="15" fill="rgb(209,20,43)" fg:x="7058" fg:w="1"/><text x="85.1021%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.8521%" y="1077" width="0.0120%" height="15" fill="rgb(232,28,49)" fg:x="7058" fg:w="1"/><text x="85.1021%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (2 samples, 0.02%)</title><rect x="84.8642%" y="1141" width="0.0240%" height="15" fill="rgb(248,131,53)" fg:x="7059" fg:w="2"/><text x="85.1142%" y="1151.50"></text></g><g><title>alloc::slice::stable_sort (2 samples, 0.02%)</title><rect x="84.8642%" y="1125" width="0.0240%" height="15" fill="rgb(214,16,30)" fg:x="7059" fg:w="2"/><text x="85.1142%" y="1135.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="84.8762%" y="1109" width="0.0120%" height="15" fill="rgb(245,16,0)" fg:x="7060" fg:w="1"/><text x="85.1262%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="84.8882%" y="1077" width="0.0120%" height="15" fill="rgb(245,17,35)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="84.8882%" y="1061" width="0.0120%" height="15" fill="rgb(249,27,53)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="84.8882%" y="1045" width="0.0120%" height="15" fill="rgb(214,73,24)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="84.8882%" y="1029" width="0.0120%" height="15" fill="rgb(223,84,37)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="84.8882%" y="1013" width="0.0120%" height="15" fill="rgb(210,109,28)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="84.8882%" y="997" width="0.0120%" height="15" fill="rgb(208,186,6)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="84.8882%" y="981" width="0.0120%" height="15" fill="rgb(235,201,30)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="84.8882%" y="965" width="0.0120%" height="15" fill="rgb(216,198,48)" fg:x="7061" fg:w="1"/><text x="85.1382%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="84.8882%" y="1141" width="0.0240%" height="15" fill="rgb(254,186,25)" fg:x="7061" fg:w="2"/><text x="85.1382%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="84.8882%" y="1125" width="0.0240%" height="15" fill="rgb(227,87,5)" fg:x="7061" fg:w="2"/><text x="85.1382%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="84.8882%" y="1109" width="0.0240%" height="15" fill="rgb(236,205,25)" fg:x="7061" fg:w="2"/><text x="85.1382%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="84.8882%" y="1093" width="0.0240%" height="15" fill="rgb(229,99,32)" fg:x="7061" fg:w="2"/><text x="85.1382%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="84.9002%" y="1077" width="0.0120%" height="15" fill="rgb(231,177,31)" fg:x="7062" fg:w="1"/><text x="85.1502%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (35 samples, 0.42%)</title><rect x="84.5155%" y="1205" width="0.4208%" height="15" fill="rgb(246,15,2)" fg:x="7030" fg:w="35"/><text x="84.7655%" y="1215.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (35 samples, 0.42%)</title><rect x="84.5155%" y="1189" width="0.4208%" height="15" fill="rgb(207,39,15)" fg:x="7030" fg:w="35"/><text x="84.7655%" y="1199.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.42%)</title><rect x="84.5155%" y="1173" width="0.4208%" height="15" fill="rgb(207,44,9)" fg:x="7030" fg:w="35"/><text x="84.7655%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.38%)</title><rect x="84.5516%" y="1157" width="0.3847%" height="15" fill="rgb(225,224,33)" fg:x="7033" fg:w="32"/><text x="84.8016%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="84.9122%" y="1141" width="0.0240%" height="15" fill="rgb(252,151,3)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="84.9122%" y="1125" width="0.0240%" height="15" fill="rgb(211,140,13)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="84.9122%" y="1109" width="0.0240%" height="15" fill="rgb(239,225,17)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="84.9122%" y="1093" width="0.0240%" height="15" fill="rgb(223,170,52)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="84.9122%" y="1077" width="0.0240%" height="15" fill="rgb(212,64,21)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="84.9122%" y="1061" width="0.0240%" height="15" fill="rgb(236,126,48)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="84.9122%" y="1045" width="0.0240%" height="15" fill="rgb(209,135,11)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1055.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="84.9122%" y="1029" width="0.0240%" height="15" fill="rgb(228,126,40)" fg:x="7063" fg:w="2"/><text x="85.1622%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="84.9243%" y="1013" width="0.0120%" height="15" fill="rgb(205,196,36)" fg:x="7064" fg:w="1"/><text x="85.1743%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::bucket_ptr (1 samples, 0.01%)</title><rect x="84.9363%" y="1205" width="0.0120%" height="15" fill="rgb(243,160,33)" fg:x="7065" fg:w="1"/><text x="85.1863%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.01%)</title><rect x="84.9483%" y="1205" width="0.0120%" height="15" fill="rgb(210,84,20)" fg:x="7066" fg:w="1"/><text x="85.1983%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.01%)</title><rect x="84.9483%" y="1189" width="0.0120%" height="15" fill="rgb(228,213,30)" fg:x="7066" fg:w="1"/><text x="85.1983%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.01%)</title><rect x="84.9483%" y="1173" width="0.0120%" height="15" fill="rgb(252,33,45)" fg:x="7066" fg:w="1"/><text x="85.1983%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1 samples, 0.01%)</title><rect x="84.9483%" y="1157" width="0.0120%" height="15" fill="rgb(254,227,20)" fg:x="7066" fg:w="1"/><text x="85.1983%" y="1167.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.01%)</title><rect x="84.9483%" y="1141" width="0.0120%" height="15" fill="rgb(228,192,2)" fg:x="7066" fg:w="1"/><text x="85.1983%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (39 samples, 0.47%)</title><rect x="84.5035%" y="1269" width="0.4689%" height="15" fill="rgb(233,32,8)" fg:x="7029" fg:w="39"/><text x="84.7535%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (39 samples, 0.47%)</title><rect x="84.5035%" y="1253" width="0.4689%" height="15" fill="rgb(220,146,47)" fg:x="7029" fg:w="39"/><text x="84.7535%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (39 samples, 0.47%)</title><rect x="84.5035%" y="1237" width="0.4689%" height="15" fill="rgb(246,194,1)" fg:x="7029" fg:w="39"/><text x="84.7535%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (39 samples, 0.47%)</title><rect x="84.5035%" y="1221" width="0.4689%" height="15" fill="rgb(218,203,9)" fg:x="7029" fg:w="39"/><text x="84.7535%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 0.01%)</title><rect x="84.9603%" y="1205" width="0.0120%" height="15" fill="rgb(237,97,14)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.01%)</title><rect x="84.9603%" y="1189" width="0.0120%" height="15" fill="rgb(239,76,15)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="84.9603%" y="1173" width="0.0120%" height="15" fill="rgb(222,53,45)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1183.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="84.9603%" y="1157" width="0.0120%" height="15" fill="rgb(237,88,5)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="84.9603%" y="1141" width="0.0120%" height="15" fill="rgb(218,223,35)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="84.9603%" y="1125" width="0.0120%" height="15" fill="rgb(243,229,38)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="84.9603%" y="1109" width="0.0120%" height="15" fill="rgb(240,75,41)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1119.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="84.9603%" y="1093" width="0.0120%" height="15" fill="rgb(209,110,37)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="84.9603%" y="1077" width="0.0120%" height="15" fill="rgb(221,130,46)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="84.9603%" y="1061" width="0.0120%" height="15" fill="rgb(237,160,20)" fg:x="7067" fg:w="1"/><text x="85.2103%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="84.9723%" y="1253" width="0.0120%" height="15" fill="rgb(234,126,24)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1263.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="84.9723%" y="1237" width="0.0120%" height="15" fill="rgb(207,177,9)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1247.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="84.9723%" y="1221" width="0.0120%" height="15" fill="rgb(231,191,33)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="84.9723%" y="1205" width="0.0120%" height="15" fill="rgb(207,42,1)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="84.9723%" y="1189" width="0.0120%" height="15" fill="rgb(218,34,50)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="84.9723%" y="1173" width="0.0120%" height="15" fill="rgb(254,126,39)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="84.9723%" y="1157" width="0.0120%" height="15" fill="rgb(251,17,26)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="84.9723%" y="1141" width="0.0120%" height="15" fill="rgb(252,215,34)" fg:x="7068" fg:w="1"/><text x="85.2223%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.01%)</title><rect x="84.9844%" y="1253" width="0.0120%" height="15" fill="rgb(217,120,44)" fg:x="7069" fg:w="1"/><text x="85.2344%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (1 samples, 0.01%)</title><rect x="84.9844%" y="1237" width="0.0120%" height="15" fill="rgb(211,31,11)" fg:x="7069" fg:w="1"/><text x="85.2344%" y="1247.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.01%)</title><rect x="84.9844%" y="1221" width="0.0120%" height="15" fill="rgb(222,69,51)" fg:x="7069" fg:w="1"/><text x="85.2344%" y="1231.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (85 samples, 1.02%)</title><rect x="83.9865%" y="1317" width="1.0219%" height="15" fill="rgb(215,229,42)" fg:x="6986" fg:w="85"/><text x="84.2365%" y="1327.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (85 samples, 1.02%)</title><rect x="83.9865%" y="1301" width="1.0219%" height="15" fill="rgb(212,102,15)" fg:x="6986" fg:w="85"/><text x="84.2365%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (42 samples, 0.50%)</title><rect x="84.5035%" y="1285" width="0.5049%" height="15" fill="rgb(205,179,41)" fg:x="7029" fg:w="42"/><text x="84.7535%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (3 samples, 0.04%)</title><rect x="84.9723%" y="1269" width="0.0361%" height="15" fill="rgb(219,148,46)" fg:x="7068" fg:w="3"/><text x="85.2223%" y="1279.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="84.9964%" y="1253" width="0.0120%" height="15" fill="rgb(243,40,19)" fg:x="7070" fg:w="1"/><text x="85.2464%" y="1263.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="84.9964%" y="1237" width="0.0120%" height="15" fill="rgb(208,206,34)" fg:x="7070" fg:w="1"/><text x="85.2464%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="84.9964%" y="1221" width="0.0120%" height="15" fill="rgb(244,184,38)" fg:x="7070" fg:w="1"/><text x="85.2464%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="85.0084%" y="1253" width="0.0120%" height="15" fill="rgb(244,151,47)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="85.0084%" y="1237" width="0.0120%" height="15" fill="rgb(236,134,42)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="85.0084%" y="1221" width="0.0120%" height="15" fill="rgb(233,93,22)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="85.0084%" y="1205" width="0.0120%" height="15" fill="rgb(211,202,10)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="85.0084%" y="1189" width="0.0120%" height="15" fill="rgb(240,63,8)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="85.0084%" y="1173" width="0.0120%" height="15" fill="rgb(214,9,4)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="85.0084%" y="1157" width="0.0120%" height="15" fill="rgb(243,66,45)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="85.0084%" y="1141" width="0.0120%" height="15" fill="rgb(220,50,42)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="85.0084%" y="1125" width="0.0120%" height="15" fill="rgb(220,134,27)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="85.0084%" y="1109" width="0.0120%" height="15" fill="rgb(246,151,50)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1119.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="85.0084%" y="1093" width="0.0120%" height="15" fill="rgb(238,216,27)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.0084%" y="1077" width="0.0120%" height="15" fill="rgb(250,92,11)" fg:x="7071" fg:w="1"/><text x="85.2584%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.01%)</title><rect x="85.0204%" y="1253" width="0.0120%" height="15" fill="rgb(248,183,6)" fg:x="7072" fg:w="1"/><text x="85.2704%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.01%)</title><rect x="85.0204%" y="1237" width="0.0120%" height="15" fill="rgb(211,204,50)" fg:x="7072" fg:w="1"/><text x="85.2704%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.0204%" y="1221" width="0.0120%" height="15" fill="rgb(252,55,47)" fg:x="7072" fg:w="1"/><text x="85.2704%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="85.0204%" y="1205" width="0.0120%" height="15" fill="rgb(240,198,32)" fg:x="7072" fg:w="1"/><text x="85.2704%" y="1215.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (3 samples, 0.04%)</title><rect x="85.0084%" y="1317" width="0.0361%" height="15" fill="rgb(224,203,19)" fg:x="7071" fg:w="3"/><text x="85.2584%" y="1327.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (3 samples, 0.04%)</title><rect x="85.0084%" y="1301" width="0.0361%" height="15" fill="rgb(205,27,16)" fg:x="7071" fg:w="3"/><text x="85.2584%" y="1311.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}} (3 samples, 0.04%)</title><rect x="85.0084%" y="1285" width="0.0361%" height="15" fill="rgb(224,226,17)" fg:x="7071" fg:w="3"/><text x="85.2584%" y="1295.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="85.0084%" y="1269" width="0.0361%" height="15" fill="rgb(205,216,54)" fg:x="7071" fg:w="3"/><text x="85.2584%" y="1279.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.01%)</title><rect x="85.0325%" y="1253" width="0.0120%" height="15" fill="rgb(248,168,46)" fg:x="7073" fg:w="1"/><text x="85.2825%" y="1263.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.01%)</title><rect x="85.0325%" y="1237" width="0.0120%" height="15" fill="rgb(226,111,45)" fg:x="7073" fg:w="1"/><text x="85.2825%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="85.0325%" y="1221" width="0.0120%" height="15" fill="rgb(231,15,9)" fg:x="7073" fg:w="1"/><text x="85.2825%" y="1231.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (1 samples, 0.01%)</title><rect x="85.0325%" y="1205" width="0.0120%" height="15" fill="rgb(243,168,3)" fg:x="7073" fg:w="1"/><text x="85.2825%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.01%)</title><rect x="85.0325%" y="1189" width="0.0120%" height="15" fill="rgb(221,220,54)" fg:x="7073" fg:w="1"/><text x="85.2825%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="85.0565%" y="1189" width="0.0361%" height="15" fill="rgb(232,174,38)" fg:x="7075" fg:w="3"/><text x="85.3065%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="85.0565%" y="1173" width="0.0361%" height="15" fill="rgb(205,14,38)" fg:x="7075" fg:w="3"/><text x="85.3065%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="85.0565%" y="1157" width="0.0361%" height="15" fill="rgb(234,89,19)" fg:x="7075" fg:w="3"/><text x="85.3065%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="85.0565%" y="1141" width="0.0361%" height="15" fill="rgb(216,68,51)" fg:x="7075" fg:w="3"/><text x="85.3065%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="85.0565%" y="1125" width="0.0361%" height="15" fill="rgb(213,49,2)" fg:x="7075" fg:w="3"/><text x="85.3065%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="85.0565%" y="1109" width="0.0361%" height="15" fill="rgb(242,146,30)" fg:x="7075" fg:w="3"/><text x="85.3065%" y="1119.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="85.0685%" y="1093" width="0.0240%" height="15" fill="rgb(224,188,11)" fg:x="7076" fg:w="2"/><text x="85.3185%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.0805%" y="1077" width="0.0120%" height="15" fill="rgb(213,159,11)" fg:x="7077" fg:w="1"/><text x="85.3305%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="85.0565%" y="1253" width="0.0481%" height="15" fill="rgb(229,13,31)" fg:x="7075" fg:w="4"/><text x="85.3065%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="85.0565%" y="1237" width="0.0481%" height="15" fill="rgb(209,103,11)" fg:x="7075" fg:w="4"/><text x="85.3065%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="85.0565%" y="1221" width="0.0481%" height="15" fill="rgb(206,3,4)" fg:x="7075" fg:w="4"/><text x="85.3065%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="85.0565%" y="1205" width="0.0481%" height="15" fill="rgb(252,10,49)" fg:x="7075" fg:w="4"/><text x="85.3065%" y="1215.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="85.0926%" y="1189" width="0.0120%" height="15" fill="rgb(217,160,32)" fg:x="7078" fg:w="1"/><text x="85.3426%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="85.1046%" y="1253" width="0.0361%" height="15" fill="rgb(249,196,0)" fg:x="7079" fg:w="3"/><text x="85.3546%" y="1263.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="85.1046%" y="1237" width="0.0361%" height="15" fill="rgb(213,17,48)" fg:x="7079" fg:w="3"/><text x="85.3546%" y="1247.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="85.1046%" y="1221" width="0.0361%" height="15" fill="rgb(206,42,46)" fg:x="7079" fg:w="3"/><text x="85.3546%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="85.1166%" y="1205" width="0.0240%" height="15" fill="rgb(212,105,24)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="85.1166%" y="1189" width="0.0240%" height="15" fill="rgb(243,216,30)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="85.1166%" y="1173" width="0.0240%" height="15" fill="rgb(207,121,3)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1183.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="85.1166%" y="1157" width="0.0240%" height="15" fill="rgb(249,78,0)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="85.1166%" y="1141" width="0.0240%" height="15" fill="rgb(244,151,32)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="85.1166%" y="1125" width="0.0240%" height="15" fill="rgb(228,63,25)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="85.1166%" y="1109" width="0.0240%" height="15" fill="rgb(231,158,23)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1119.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="85.1166%" y="1093" width="0.0240%" height="15" fill="rgb(248,107,23)" fg:x="7080" fg:w="2"/><text x="85.3666%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.1286%" y="1077" width="0.0120%" height="15" fill="rgb(215,168,21)" fg:x="7081" fg:w="1"/><text x="85.3786%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.1286%" y="1061" width="0.0120%" height="15" fill="rgb(227,83,22)" fg:x="7081" fg:w="1"/><text x="85.3786%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="85.1407%" y="1205" width="0.0120%" height="15" fill="rgb(217,118,43)" fg:x="7082" fg:w="1"/><text x="85.3907%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="85.1407%" y="1189" width="0.0120%" height="15" fill="rgb(229,220,41)" fg:x="7082" fg:w="1"/><text x="85.3907%" y="1199.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="85.1527%" y="1205" width="0.0120%" height="15" fill="rgb(254,146,46)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1215.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="85.1527%" y="1189" width="0.0120%" height="15" fill="rgb(233,208,31)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="85.1527%" y="1173" width="0.0120%" height="15" fill="rgb(222,162,7)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="85.1527%" y="1157" width="0.0120%" height="15" fill="rgb(230,117,45)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="85.1527%" y="1141" width="0.0120%" height="15" fill="rgb(239,163,6)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="85.1527%" y="1125" width="0.0120%" height="15" fill="rgb(246,130,17)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="85.1527%" y="1109" width="0.0120%" height="15" fill="rgb(216,84,5)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="85.1527%" y="1093" width="0.0120%" height="15" fill="rgb(230,200,21)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="85.1527%" y="1077" width="0.0120%" height="15" fill="rgb(224,2,8)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="85.1527%" y="1061" width="0.0120%" height="15" fill="rgb(238,178,10)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="85.1527%" y="1045" width="0.0120%" height="15" fill="rgb(242,153,24)" fg:x="7083" fg:w="1"/><text x="85.4027%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="85.1647%" y="1205" width="0.0120%" height="15" fill="rgb(242,32,48)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="85.1647%" y="1189" width="0.0120%" height="15" fill="rgb(227,36,0)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="85.1647%" y="1173" width="0.0120%" height="15" fill="rgb(251,33,35)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="85.1647%" y="1157" width="0.0120%" height="15" fill="rgb(232,168,51)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="85.1647%" y="1141" width="0.0120%" height="15" fill="rgb(228,56,10)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="85.1647%" y="1125" width="0.0120%" height="15" fill="rgb(231,10,26)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1135.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="85.1647%" y="1109" width="0.0120%" height="15" fill="rgb(226,202,12)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.1647%" y="1093" width="0.0120%" height="15" fill="rgb(251,49,21)" fg:x="7084" fg:w="1"/><text x="85.4147%" y="1103.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="85.0445%" y="1269" width="0.1443%" height="15" fill="rgb(206,228,28)" fg:x="7074" fg:w="12"/><text x="85.2945%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="85.1407%" y="1253" width="0.0481%" height="15" fill="rgb(205,198,31)" fg:x="7082" fg:w="4"/><text x="85.3907%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="85.1407%" y="1237" width="0.0481%" height="15" fill="rgb(213,69,1)" fg:x="7082" fg:w="4"/><text x="85.3907%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="85.1407%" y="1221" width="0.0481%" height="15" fill="rgb(209,177,9)" fg:x="7082" fg:w="4"/><text x="85.3907%" y="1231.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="85.1767%" y="1205" width="0.0120%" height="15" fill="rgb(227,119,30)" fg:x="7085" fg:w="1"/><text x="85.4267%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="85.2368%" y="1093" width="0.0120%" height="15" fill="rgb(234,106,41)" fg:x="7090" fg:w="1"/><text x="85.4868%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="85.2368%" y="1077" width="0.0120%" height="15" fill="rgb(244,103,47)" fg:x="7090" fg:w="1"/><text x="85.4868%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="85.2368%" y="1061" width="0.0120%" height="15" fill="rgb(212,211,25)" fg:x="7090" fg:w="1"/><text x="85.4868%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="85.2368%" y="1045" width="0.0120%" height="15" fill="rgb(208,63,53)" fg:x="7090" fg:w="1"/><text x="85.4868%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="85.2489%" y="1093" width="0.0361%" height="15" fill="rgb(213,176,21)" fg:x="7091" fg:w="3"/><text x="85.4989%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="85.2489%" y="1077" width="0.0361%" height="15" fill="rgb(243,124,12)" fg:x="7091" fg:w="3"/><text x="85.4989%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="85.2489%" y="1061" width="0.0361%" height="15" fill="rgb(239,2,35)" fg:x="7091" fg:w="3"/><text x="85.4989%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="85.2489%" y="1045" width="0.0361%" height="15" fill="rgb(253,169,22)" fg:x="7091" fg:w="3"/><text x="85.4989%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="85.2489%" y="1029" width="0.0361%" height="15" fill="rgb(254,51,12)" fg:x="7091" fg:w="3"/><text x="85.4989%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="85.2489%" y="1013" width="0.0361%" height="15" fill="rgb(244,17,47)" fg:x="7091" fg:w="3"/><text x="85.4989%" y="1023.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="85.2609%" y="997" width="0.0240%" height="15" fill="rgb(251,45,46)" fg:x="7092" fg:w="2"/><text x="85.5109%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.2729%" y="981" width="0.0120%" height="15" fill="rgb(223,87,43)" fg:x="7093" fg:w="1"/><text x="85.5229%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="85.2368%" y="1157" width="0.0601%" height="15" fill="rgb(230,132,31)" fg:x="7090" fg:w="5"/><text x="85.4868%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="85.2368%" y="1141" width="0.0601%" height="15" fill="rgb(206,99,1)" fg:x="7090" fg:w="5"/><text x="85.4868%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="85.2368%" y="1125" width="0.0601%" height="15" fill="rgb(227,110,25)" fg:x="7090" fg:w="5"/><text x="85.4868%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="85.2368%" y="1109" width="0.0601%" height="15" fill="rgb(217,182,7)" fg:x="7090" fg:w="5"/><text x="85.4868%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="85.2849%" y="1093" width="0.0120%" height="15" fill="rgb(250,176,4)" fg:x="7094" fg:w="1"/><text x="85.5349%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="85.2969%" y="1109" width="0.0120%" height="15" fill="rgb(244,98,30)" fg:x="7095" fg:w="1"/><text x="85.5469%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="85.2969%" y="1093" width="0.0120%" height="15" fill="rgb(228,150,42)" fg:x="7095" fg:w="1"/><text x="85.5469%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="85.2969%" y="1077" width="0.0120%" height="15" fill="rgb(231,91,46)" fg:x="7095" fg:w="1"/><text x="85.5469%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.2969%" y="1061" width="0.0120%" height="15" fill="rgb(252,161,32)" fg:x="7095" fg:w="1"/><text x="85.5469%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="85.2969%" y="1157" width="0.0481%" height="15" fill="rgb(236,69,41)" fg:x="7095" fg:w="4"/><text x="85.5469%" y="1167.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="85.2969%" y="1141" width="0.0481%" height="15" fill="rgb(212,160,3)" fg:x="7095" fg:w="4"/><text x="85.5469%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="85.2969%" y="1125" width="0.0481%" height="15" fill="rgb(216,5,50)" fg:x="7095" fg:w="4"/><text x="85.5469%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="85.3090%" y="1109" width="0.0361%" height="15" fill="rgb(241,138,25)" fg:x="7096" fg:w="3"/><text x="85.5590%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.04%)</title><rect x="85.3090%" y="1093" width="0.0361%" height="15" fill="rgb(239,42,18)" fg:x="7096" fg:w="3"/><text x="85.5590%" y="1103.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="85.3090%" y="1077" width="0.0361%" height="15" fill="rgb(239,40,7)" fg:x="7096" fg:w="3"/><text x="85.5590%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="85.3090%" y="1061" width="0.0361%" height="15" fill="rgb(239,11,31)" fg:x="7096" fg:w="3"/><text x="85.5590%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="85.3090%" y="1045" width="0.0361%" height="15" fill="rgb(224,77,40)" fg:x="7096" fg:w="3"/><text x="85.5590%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="85.3090%" y="1029" width="0.0361%" height="15" fill="rgb(226,15,5)" fg:x="7096" fg:w="3"/><text x="85.5590%" y="1039.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="85.3090%" y="1013" width="0.0361%" height="15" fill="rgb(254,188,5)" fg:x="7096" fg:w="3"/><text x="85.5590%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.3330%" y="997" width="0.0120%" height="15" fill="rgb(241,148,52)" fg:x="7098" fg:w="1"/><text x="85.5830%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="85.3450%" y="1029" width="0.0120%" height="15" fill="rgb(251,48,36)" fg:x="7099" fg:w="1"/><text x="85.5950%" y="1039.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="85.3571%" y="1029" width="0.0120%" height="15" fill="rgb(243,83,13)" fg:x="7100" fg:w="1"/><text x="85.6071%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="85.3571%" y="1013" width="0.0120%" height="15" fill="rgb(210,105,0)" fg:x="7100" fg:w="1"/><text x="85.6071%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="85.3691%" y="981" width="0.0721%" height="15" fill="rgb(239,60,36)" fg:x="7101" fg:w="6"/><text x="85.6191%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="85.3691%" y="965" width="0.0721%" height="15" fill="rgb(210,20,0)" fg:x="7101" fg:w="6"/><text x="85.6191%" y="975.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="85.3691%" y="949" width="0.0721%" height="15" fill="rgb(244,26,53)" fg:x="7101" fg:w="6"/><text x="85.6191%" y="959.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="85.3691%" y="933" width="0.0721%" height="15" fill="rgb(240,100,49)" fg:x="7101" fg:w="6"/><text x="85.6191%" y="943.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="85.3931%" y="917" width="0.0481%" height="15" fill="rgb(250,46,45)" fg:x="7103" fg:w="4"/><text x="85.6431%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.4292%" y="901" width="0.0120%" height="15" fill="rgb(220,181,29)" fg:x="7106" fg:w="1"/><text x="85.6792%" y="911.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="85.3450%" y="1109" width="0.1082%" height="15" fill="rgb(213,137,33)" fg:x="7099" fg:w="9"/><text x="85.5950%" y="1119.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="85.3450%" y="1093" width="0.1082%" height="15" fill="rgb(213,27,48)" fg:x="7099" fg:w="9"/><text x="85.5950%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="85.3450%" y="1077" width="0.1082%" height="15" fill="rgb(245,180,39)" fg:x="7099" fg:w="9"/><text x="85.5950%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="85.3450%" y="1061" width="0.1082%" height="15" fill="rgb(212,158,42)" fg:x="7099" fg:w="9"/><text x="85.5950%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="85.3450%" y="1045" width="0.1082%" height="15" fill="rgb(228,193,18)" fg:x="7099" fg:w="9"/><text x="85.5950%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="85.3691%" y="1029" width="0.0842%" height="15" fill="rgb(245,172,29)" fg:x="7101" fg:w="7"/><text x="85.6191%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="85.3691%" y="1013" width="0.0842%" height="15" fill="rgb(207,98,24)" fg:x="7101" fg:w="7"/><text x="85.6191%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="85.3691%" y="997" width="0.0842%" height="15" fill="rgb(249,92,26)" fg:x="7101" fg:w="7"/><text x="85.6191%" y="1007.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="85.4412%" y="981" width="0.0120%" height="15" fill="rgb(217,176,26)" fg:x="7107" fg:w="1"/><text x="85.6912%" y="991.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="85.4412%" y="965" width="0.0120%" height="15" fill="rgb(221,8,39)" fg:x="7107" fg:w="1"/><text x="85.6912%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="85.4532%" y="1109" width="0.0481%" height="15" fill="rgb(208,90,18)" fg:x="7108" fg:w="4"/><text x="85.7032%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="85.4532%" y="1093" width="0.0481%" height="15" fill="rgb(207,202,30)" fg:x="7108" fg:w="4"/><text x="85.7032%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="85.4532%" y="1077" width="0.0481%" height="15" fill="rgb(231,124,22)" fg:x="7108" fg:w="4"/><text x="85.7032%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="85.4532%" y="1061" width="0.0481%" height="15" fill="rgb(206,15,5)" fg:x="7108" fg:w="4"/><text x="85.7032%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="85.4532%" y="1045" width="0.0481%" height="15" fill="rgb(239,16,52)" fg:x="7108" fg:w="4"/><text x="85.7032%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="85.4532%" y="1029" width="0.0481%" height="15" fill="rgb(245,213,29)" fg:x="7108" fg:w="4"/><text x="85.7032%" y="1039.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="85.4532%" y="1013" width="0.0481%" height="15" fill="rgb(213,203,36)" fg:x="7108" fg:w="4"/><text x="85.7032%" y="1023.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="85.4653%" y="997" width="0.0361%" height="15" fill="rgb(209,55,18)" fg:x="7109" fg:w="3"/><text x="85.7153%" y="1007.50"></text></g><g><title>core::clone::Clone::clone (28 samples, 0.34%)</title><rect x="85.1887%" y="1189" width="0.3366%" height="15" fill="rgb(207,133,49)" fg:x="7086" fg:w="28"/><text x="85.4387%" y="1199.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (28 samples, 0.34%)</title><rect x="85.1887%" y="1173" width="0.3366%" height="15" fill="rgb(240,33,46)" fg:x="7086" fg:w="28"/><text x="85.4387%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.18%)</title><rect x="85.3450%" y="1157" width="0.1803%" height="15" fill="rgb(212,35,2)" fg:x="7099" fg:w="15"/><text x="85.5950%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.18%)</title><rect x="85.3450%" y="1141" width="0.1803%" height="15" fill="rgb(231,119,28)" fg:x="7099" fg:w="15"/><text x="85.5950%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.18%)</title><rect x="85.3450%" y="1125" width="0.1803%" height="15" fill="rgb(252,178,7)" fg:x="7099" fg:w="15"/><text x="85.5950%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="85.5013%" y="1109" width="0.0240%" height="15" fill="rgb(251,91,4)" fg:x="7112" fg:w="2"/><text x="85.7513%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (29 samples, 0.35%)</title><rect x="85.1887%" y="1221" width="0.3486%" height="15" fill="rgb(233,122,19)" fg:x="7086" fg:w="29"/><text x="85.4387%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (29 samples, 0.35%)</title><rect x="85.1887%" y="1205" width="0.3486%" height="15" fill="rgb(231,208,46)" fg:x="7086" fg:w="29"/><text x="85.4387%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="85.5254%" y="1189" width="0.0120%" height="15" fill="rgb(243,15,41)" fg:x="7114" fg:w="1"/><text x="85.7754%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="85.5254%" y="1173" width="0.0120%" height="15" fill="rgb(210,32,43)" fg:x="7114" fg:w="1"/><text x="85.7754%" y="1183.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="85.5254%" y="1157" width="0.0120%" height="15" fill="rgb(222,177,15)" fg:x="7114" fg:w="1"/><text x="85.7754%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (60 samples, 0.72%)</title><rect x="85.1887%" y="1269" width="0.7213%" height="15" fill="rgb(244,121,34)" fg:x="7086" fg:w="60"/><text x="85.4387%" y="1279.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.72%)</title><rect x="85.1887%" y="1253" width="0.7213%" height="15" fill="rgb(234,138,4)" fg:x="7086" fg:w="60"/><text x="85.4387%" y="1263.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.72%)</title><rect x="85.1887%" y="1237" width="0.7213%" height="15" fill="rgb(240,97,48)" fg:x="7086" fg:w="60"/><text x="85.4387%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (31 samples, 0.37%)</title><rect x="85.5374%" y="1221" width="0.3727%" height="15" fill="rgb(237,65,54)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (31 samples, 0.37%)</title><rect x="85.5374%" y="1205" width="0.3727%" height="15" fill="rgb(214,25,24)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1215.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (31 samples, 0.37%)</title><rect x="85.5374%" y="1189" width="0.3727%" height="15" fill="rgb(213,5,3)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.37%)</title><rect x="85.5374%" y="1173" width="0.3727%" height="15" fill="rgb(219,81,29)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.37%)</title><rect x="85.5374%" y="1157" width="0.3727%" height="15" fill="rgb(220,43,48)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.37%)</title><rect x="85.5374%" y="1141" width="0.3727%" height="15" fill="rgb(239,157,2)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1151.50"></text></g><g><title>malloc (31 samples, 0.37%)</title><rect x="85.5374%" y="1125" width="0.3727%" height="15" fill="rgb(213,104,43)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1135.50"></text></g><g><title>[libc.so.6] (31 samples, 0.37%)</title><rect x="85.5374%" y="1109" width="0.3727%" height="15" fill="rgb(237,84,9)" fg:x="7115" fg:w="31"/><text x="85.7874%" y="1119.50"></text></g><g><title>[libc.so.6] (26 samples, 0.31%)</title><rect x="85.5975%" y="1093" width="0.3126%" height="15" fill="rgb(252,6,33)" fg:x="7120" fg:w="26"/><text x="85.8475%" y="1103.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="85.7778%" y="1077" width="0.1322%" height="15" fill="rgb(251,172,22)" fg:x="7135" fg:w="11"/><text x="86.0278%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.13%)</title><rect x="85.9822%" y="1077" width="0.1322%" height="15" fill="rgb(244,91,53)" fg:x="7152" fg:w="11"/><text x="86.2322%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.13%)</title><rect x="85.9822%" y="1061" width="0.1322%" height="15" fill="rgb(219,29,30)" fg:x="7152" fg:w="11"/><text x="86.2322%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.13%)</title><rect x="85.9822%" y="1045" width="0.1322%" height="15" fill="rgb(213,3,15)" fg:x="7152" fg:w="11"/><text x="86.2322%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.13%)</title><rect x="85.9822%" y="1029" width="0.1322%" height="15" fill="rgb(208,25,28)" fg:x="7152" fg:w="11"/><text x="86.2322%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.13%)</title><rect x="85.9822%" y="1013" width="0.1322%" height="15" fill="rgb(252,144,25)" fg:x="7152" fg:w="11"/><text x="86.2322%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.13%)</title><rect x="85.9822%" y="997" width="0.1322%" height="15" fill="rgb(226,220,25)" fg:x="7152" fg:w="11"/><text x="86.2322%" y="1007.50"></text></g><g><title>malloc (10 samples, 0.12%)</title><rect x="85.9942%" y="981" width="0.1202%" height="15" fill="rgb(212,131,28)" fg:x="7153" fg:w="10"/><text x="86.2442%" y="991.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="86.0303%" y="965" width="0.0842%" height="15" fill="rgb(219,143,52)" fg:x="7156" fg:w="7"/><text x="86.2803%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="85.9822%" y="1141" width="0.1443%" height="15" fill="rgb(215,56,7)" fg:x="7152" fg:w="12"/><text x="86.2322%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.14%)</title><rect x="85.9822%" y="1125" width="0.1443%" height="15" fill="rgb(239,59,51)" fg:x="7152" fg:w="12"/><text x="86.2322%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.14%)</title><rect x="85.9822%" y="1109" width="0.1443%" height="15" fill="rgb(209,215,4)" fg:x="7152" fg:w="12"/><text x="86.2322%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.14%)</title><rect x="85.9822%" y="1093" width="0.1443%" height="15" fill="rgb(221,118,39)" fg:x="7152" fg:w="12"/><text x="86.2322%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="86.1145%" y="1077" width="0.0120%" height="15" fill="rgb(236,6,44)" fg:x="7163" fg:w="1"/><text x="86.3645%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="86.1265%" y="1093" width="0.0120%" height="15" fill="rgb(216,122,9)" fg:x="7164" fg:w="1"/><text x="86.3765%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="86.1265%" y="1077" width="0.0120%" height="15" fill="rgb(244,134,42)" fg:x="7164" fg:w="1"/><text x="86.3765%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="86.1265%" y="1061" width="0.0120%" height="15" fill="rgb(209,189,35)" fg:x="7164" fg:w="1"/><text x="86.3765%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="86.1265%" y="1045" width="0.0120%" height="15" fill="rgb(250,47,36)" fg:x="7164" fg:w="1"/><text x="86.3765%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (23 samples, 0.28%)</title><rect x="86.1265%" y="1141" width="0.2765%" height="15" fill="rgb(252,112,4)" fg:x="7164" fg:w="23"/><text x="86.3765%" y="1151.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.28%)</title><rect x="86.1265%" y="1125" width="0.2765%" height="15" fill="rgb(221,79,51)" fg:x="7164" fg:w="23"/><text x="86.3765%" y="1135.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.28%)</title><rect x="86.1265%" y="1109" width="0.2765%" height="15" fill="rgb(232,65,53)" fg:x="7164" fg:w="23"/><text x="86.3765%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (22 samples, 0.26%)</title><rect x="86.1385%" y="1093" width="0.2645%" height="15" fill="rgb(211,37,7)" fg:x="7165" fg:w="22"/><text x="86.3885%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (22 samples, 0.26%)</title><rect x="86.1385%" y="1077" width="0.2645%" height="15" fill="rgb(234,221,18)" fg:x="7165" fg:w="22"/><text x="86.3885%" y="1087.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (22 samples, 0.26%)</title><rect x="86.1385%" y="1061" width="0.2645%" height="15" fill="rgb(220,158,26)" fg:x="7165" fg:w="22"/><text x="86.3885%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.26%)</title><rect x="86.1385%" y="1045" width="0.2645%" height="15" fill="rgb(220,70,6)" fg:x="7165" fg:w="22"/><text x="86.3885%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.26%)</title><rect x="86.1385%" y="1029" width="0.2645%" height="15" fill="rgb(250,39,48)" fg:x="7165" fg:w="22"/><text x="86.3885%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.26%)</title><rect x="86.1385%" y="1013" width="0.2645%" height="15" fill="rgb(206,40,27)" fg:x="7165" fg:w="22"/><text x="86.3885%" y="1023.50"></text></g><g><title>malloc (22 samples, 0.26%)</title><rect x="86.1385%" y="997" width="0.2645%" height="15" fill="rgb(247,80,36)" fg:x="7165" fg:w="22"/><text x="86.3885%" y="1007.50"></text></g><g><title>[libc.so.6] (10 samples, 0.12%)</title><rect x="86.2828%" y="981" width="0.1202%" height="15" fill="rgb(222,9,20)" fg:x="7177" fg:w="10"/><text x="86.5328%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4030%" y="1093" width="0.0120%" height="15" fill="rgb(217,26,45)" fg:x="7187" fg:w="1"/><text x="86.6530%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4030%" y="1077" width="0.0120%" height="15" fill="rgb(221,67,14)" fg:x="7187" fg:w="1"/><text x="86.6530%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4030%" y="1061" width="0.0120%" height="15" fill="rgb(248,100,24)" fg:x="7187" fg:w="1"/><text x="86.6530%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.11%)</title><rect x="86.4150%" y="1061" width="0.1082%" height="15" fill="rgb(230,187,16)" fg:x="7188" fg:w="9"/><text x="86.6650%" y="1071.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="86.5232%" y="1013" width="0.0842%" height="15" fill="rgb(205,108,13)" fg:x="7197" fg:w="7"/><text x="86.7732%" y="1023.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="86.5232%" y="997" width="0.0842%" height="15" fill="rgb(235,71,51)" fg:x="7197" fg:w="7"/><text x="86.7732%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.41%)</title><rect x="86.6074%" y="965" width="0.4088%" height="15" fill="rgb(251,172,48)" fg:x="7204" fg:w="34"/><text x="86.8574%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.41%)</title><rect x="86.6074%" y="949" width="0.4088%" height="15" fill="rgb(240,96,49)" fg:x="7204" fg:w="34"/><text x="86.8574%" y="959.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.41%)</title><rect x="86.6074%" y="933" width="0.4088%" height="15" fill="rgb(235,46,36)" fg:x="7204" fg:w="34"/><text x="86.8574%" y="943.50"></text></g><g><title>malloc (34 samples, 0.41%)</title><rect x="86.6074%" y="917" width="0.4088%" height="15" fill="rgb(244,3,49)" fg:x="7204" fg:w="34"/><text x="86.8574%" y="927.50"></text></g><g><title>[libc.so.6] (15 samples, 0.18%)</title><rect x="86.8358%" y="901" width="0.1803%" height="15" fill="rgb(206,78,54)" fg:x="7223" fg:w="15"/><text x="87.0858%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="87.0041%" y="885" width="0.0120%" height="15" fill="rgb(208,85,42)" fg:x="7237" fg:w="1"/><text x="87.2541%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.42%)</title><rect x="86.6074%" y="1013" width="0.4208%" height="15" fill="rgb(219,196,21)" fg:x="7204" fg:w="35"/><text x="86.8574%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.42%)</title><rect x="86.6074%" y="997" width="0.4208%" height="15" fill="rgb(238,19,9)" fg:x="7204" fg:w="35"/><text x="86.8574%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.42%)</title><rect x="86.6074%" y="981" width="0.4208%" height="15" fill="rgb(206,86,13)" fg:x="7204" fg:w="35"/><text x="86.8574%" y="991.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="87.0161%" y="965" width="0.0120%" height="15" fill="rgb(214,123,40)" fg:x="7238" fg:w="1"/><text x="87.2661%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="87.0161%" y="949" width="0.0120%" height="15" fill="rgb(243,53,5)" fg:x="7238" fg:w="1"/><text x="87.2661%" y="959.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (52 samples, 0.63%)</title><rect x="86.4150%" y="1093" width="0.6252%" height="15" fill="rgb(254,186,31)" fg:x="7188" fg:w="52"/><text x="86.6650%" y="1103.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (52 samples, 0.63%)</title><rect x="86.4150%" y="1077" width="0.6252%" height="15" fill="rgb(221,216,25)" fg:x="7188" fg:w="52"/><text x="86.6650%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.52%)</title><rect x="86.5232%" y="1061" width="0.5170%" height="15" fill="rgb(248,107,42)" fg:x="7197" fg:w="43"/><text x="86.7732%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.52%)</title><rect x="86.5232%" y="1045" width="0.5170%" height="15" fill="rgb(221,85,43)" fg:x="7197" fg:w="43"/><text x="86.7732%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.52%)</title><rect x="86.5232%" y="1029" width="0.5170%" height="15" fill="rgb(225,34,24)" fg:x="7197" fg:w="43"/><text x="86.7732%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="87.0281%" y="1013" width="0.0120%" height="15" fill="rgb(211,119,1)" fg:x="7239" fg:w="1"/><text x="87.2781%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (34 samples, 0.41%)</title><rect x="87.0402%" y="1093" width="0.4088%" height="15" fill="rgb(254,216,46)" fg:x="7240" fg:w="34"/><text x="87.2902%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (34 samples, 0.41%)</title><rect x="87.0402%" y="1077" width="0.4088%" height="15" fill="rgb(238,11,38)" fg:x="7240" fg:w="34"/><text x="87.2902%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (34 samples, 0.41%)</title><rect x="87.0402%" y="1061" width="0.4088%" height="15" fill="rgb(233,50,15)" fg:x="7240" fg:w="34"/><text x="87.2902%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.36%)</title><rect x="87.0882%" y="1045" width="0.3607%" height="15" fill="rgb(217,181,29)" fg:x="7244" fg:w="30"/><text x="87.3382%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.36%)</title><rect x="87.0882%" y="1029" width="0.3607%" height="15" fill="rgb(214,56,3)" fg:x="7244" fg:w="30"/><text x="87.3382%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.36%)</title><rect x="87.0882%" y="1013" width="0.3607%" height="15" fill="rgb(230,69,45)" fg:x="7244" fg:w="30"/><text x="87.3382%" y="1023.50"></text></g><g><title>malloc (30 samples, 0.36%)</title><rect x="87.0882%" y="997" width="0.3607%" height="15" fill="rgb(224,201,50)" fg:x="7244" fg:w="30"/><text x="87.3382%" y="1007.50"></text></g><g><title>[libc.so.6] (17 samples, 0.20%)</title><rect x="87.2445%" y="981" width="0.2044%" height="15" fill="rgb(217,228,18)" fg:x="7257" fg:w="17"/><text x="87.4945%" y="991.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="87.4249%" y="965" width="0.0240%" height="15" fill="rgb(239,33,44)" fg:x="7272" fg:w="2"/><text x="87.6749%" y="975.50"></text></g><g><title>core::clone::Clone::clone (132 samples, 1.59%)</title><rect x="85.9101%" y="1173" width="1.5869%" height="15" fill="rgb(248,210,23)" fg:x="7146" fg:w="132"/><text x="86.1601%" y="1183.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (132 samples, 1.59%)</title><rect x="85.9101%" y="1157" width="1.5869%" height="15" fill="rgb(253,135,8)" fg:x="7146" fg:w="132"/><text x="86.1601%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (91 samples, 1.09%)</title><rect x="86.4030%" y="1141" width="1.0940%" height="15" fill="rgb(217,98,21)" fg:x="7187" fg:w="91"/><text x="86.6530%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (91 samples, 1.09%)</title><rect x="86.4030%" y="1125" width="1.0940%" height="15" fill="rgb(253,130,21)" fg:x="7187" fg:w="91"/><text x="86.6530%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (91 samples, 1.09%)</title><rect x="86.4030%" y="1109" width="1.0940%" height="15" fill="rgb(207,81,54)" fg:x="7187" fg:w="91"/><text x="86.6530%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.05%)</title><rect x="87.4489%" y="1093" width="0.0481%" height="15" fill="rgb(232,48,33)" fg:x="7274" fg:w="4"/><text x="87.6989%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="87.4970%" y="1173" width="0.0120%" height="15" fill="rgb(211,9,35)" fg:x="7278" fg:w="1"/><text x="87.7470%" y="1183.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="87.4970%" y="1157" width="0.0120%" height="15" fill="rgb(205,152,21)" fg:x="7278" fg:w="1"/><text x="87.7470%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="87.4970%" y="1141" width="0.0120%" height="15" fill="rgb(249,21,27)" fg:x="7278" fg:w="1"/><text x="87.7470%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="87.4970%" y="1125" width="0.0120%" height="15" fill="rgb(252,29,24)" fg:x="7278" fg:w="1"/><text x="87.7470%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (135 samples, 1.62%)</title><rect x="85.9101%" y="1205" width="1.6230%" height="15" fill="rgb(230,130,50)" fg:x="7146" fg:w="135"/><text x="86.1601%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (135 samples, 1.62%)</title><rect x="85.9101%" y="1189" width="1.6230%" height="15" fill="rgb(239,144,14)" fg:x="7146" fg:w="135"/><text x="86.1601%" y="1199.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="87.5090%" y="1173" width="0.0240%" height="15" fill="rgb(227,111,50)" fg:x="7279" fg:w="2"/><text x="87.7590%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="87.5090%" y="1157" width="0.0240%" height="15" fill="rgb(254,84,20)" fg:x="7279" fg:w="2"/><text x="87.7590%" y="1167.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="87.5090%" y="1141" width="0.0240%" height="15" fill="rgb(232,90,48)" fg:x="7279" fg:w="2"/><text x="87.7590%" y="1151.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (138 samples, 1.66%)</title><rect x="85.9101%" y="1269" width="1.6591%" height="15" fill="rgb(253,63,47)" fg:x="7146" fg:w="138"/><text x="86.1601%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (138 samples, 1.66%)</title><rect x="85.9101%" y="1253" width="1.6591%" height="15" fill="rgb(251,146,35)" fg:x="7146" fg:w="138"/><text x="86.1601%" y="1263.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (138 samples, 1.66%)</title><rect x="85.9101%" y="1237" width="1.6591%" height="15" fill="rgb(229,192,35)" fg:x="7146" fg:w="138"/><text x="86.1601%" y="1247.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (138 samples, 1.66%)</title><rect x="85.9101%" y="1221" width="1.6591%" height="15" fill="rgb(225,68,9)" fg:x="7146" fg:w="138"/><text x="86.1601%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="87.5331%" y="1205" width="0.0361%" height="15" fill="rgb(214,97,34)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.04%)</title><rect x="87.5331%" y="1189" width="0.0361%" height="15" fill="rgb(253,31,26)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1199.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="87.5331%" y="1173" width="0.0361%" height="15" fill="rgb(225,151,47)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="87.5331%" y="1157" width="0.0361%" height="15" fill="rgb(206,185,9)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="87.5331%" y="1141" width="0.0361%" height="15" fill="rgb(249,65,17)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="87.5331%" y="1125" width="0.0361%" height="15" fill="rgb(220,110,10)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1135.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="87.5331%" y="1109" width="0.0361%" height="15" fill="rgb(222,198,49)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1119.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="87.5331%" y="1093" width="0.0361%" height="15" fill="rgb(239,81,13)" fg:x="7281" fg:w="3"/><text x="87.7831%" y="1103.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="87.5451%" y="1077" width="0.0240%" height="15" fill="rgb(216,128,11)" fg:x="7282" fg:w="2"/><text x="87.7951%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.5691%" y="1237" width="0.0120%" height="15" fill="rgb(247,156,8)" fg:x="7284" fg:w="1"/><text x="87.8191%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.5691%" y="1221" width="0.0120%" height="15" fill="rgb(219,173,1)" fg:x="7284" fg:w="1"/><text x="87.8191%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.5691%" y="1205" width="0.0120%" height="15" fill="rgb(227,42,24)" fg:x="7284" fg:w="1"/><text x="87.8191%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="87.5691%" y="1189" width="0.0120%" height="15" fill="rgb(253,219,50)" fg:x="7284" fg:w="1"/><text x="87.8191%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="87.5691%" y="1173" width="0.0120%" height="15" fill="rgb(215,191,54)" fg:x="7284" fg:w="1"/><text x="87.8191%" y="1183.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="87.5691%" y="1157" width="0.0120%" height="15" fill="rgb(238,83,12)" fg:x="7284" fg:w="1"/><text x="87.8191%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (3 samples, 0.04%)</title><rect x="87.5691%" y="1269" width="0.0361%" height="15" fill="rgb(205,124,9)" fg:x="7284" fg:w="3"/><text x="87.8191%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (3 samples, 0.04%)</title><rect x="87.5691%" y="1253" width="0.0361%" height="15" fill="rgb(253,174,7)" fg:x="7284" fg:w="3"/><text x="87.8191%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="87.5811%" y="1237" width="0.0240%" height="15" fill="rgb(206,134,49)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="87.5811%" y="1221" width="0.0240%" height="15" fill="rgb(221,89,20)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (2 samples, 0.02%)</title><rect x="87.5811%" y="1205" width="0.0240%" height="15" fill="rgb(240,205,13)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="87.5811%" y="1189" width="0.0240%" height="15" fill="rgb(237,174,32)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="87.5811%" y="1173" width="0.0240%" height="15" fill="rgb(226,12,15)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="87.5811%" y="1157" width="0.0240%" height="15" fill="rgb(245,160,52)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="87.5811%" y="1141" width="0.0240%" height="15" fill="rgb(253,80,21)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="87.5811%" y="1125" width="0.0240%" height="15" fill="rgb(231,225,22)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="87.5811%" y="1109" width="0.0240%" height="15" fill="rgb(253,185,12)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="87.5811%" y="1093" width="0.0240%" height="15" fill="rgb(234,197,21)" fg:x="7285" fg:w="2"/><text x="87.8311%" y="1103.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="87.5932%" y="1077" width="0.0120%" height="15" fill="rgb(210,47,30)" fg:x="7286" fg:w="1"/><text x="87.8432%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="87.5932%" y="1061" width="0.0120%" height="15" fill="rgb(246,139,27)" fg:x="7286" fg:w="1"/><text x="87.8432%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="87.6172%" y="1077" width="0.0361%" height="15" fill="rgb(226,130,16)" fg:x="7288" fg:w="3"/><text x="87.8672%" y="1087.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="87.6172%" y="1061" width="0.0361%" height="15" fill="rgb(237,208,20)" fg:x="7288" fg:w="3"/><text x="87.8672%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="87.6172%" y="1045" width="0.0361%" height="15" fill="rgb(245,186,28)" fg:x="7288" fg:w="3"/><text x="87.8672%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="87.6172%" y="1029" width="0.0361%" height="15" fill="rgb(238,105,39)" fg:x="7288" fg:w="3"/><text x="87.8672%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="87.6172%" y="1013" width="0.0361%" height="15" fill="rgb(253,228,11)" fg:x="7288" fg:w="3"/><text x="87.8672%" y="1023.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="87.6292%" y="997" width="0.0240%" height="15" fill="rgb(224,136,38)" fg:x="7289" fg:w="2"/><text x="87.8792%" y="1007.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="87.6172%" y="1093" width="0.0481%" height="15" fill="rgb(211,3,25)" fg:x="7288" fg:w="4"/><text x="87.8672%" y="1103.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="87.6533%" y="1077" width="0.0120%" height="15" fill="rgb(238,66,34)" fg:x="7291" fg:w="1"/><text x="87.9033%" y="1087.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="87.6533%" y="1061" width="0.0120%" height="15" fill="rgb(223,188,11)" fg:x="7291" fg:w="1"/><text x="87.9033%" y="1071.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="87.6773%" y="1013" width="0.0120%" height="15" fill="rgb(221,10,35)" fg:x="7293" fg:w="1"/><text x="87.9273%" y="1023.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="87.6773%" y="997" width="0.0120%" height="15" fill="rgb(223,18,44)" fg:x="7293" fg:w="1"/><text x="87.9273%" y="1007.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="87.6172%" y="1109" width="0.0842%" height="15" fill="rgb(220,97,41)" fg:x="7288" fg:w="7"/><text x="87.8672%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="87.6653%" y="1093" width="0.0361%" height="15" fill="rgb(206,95,45)" fg:x="7292" fg:w="3"/><text x="87.9153%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="87.6653%" y="1077" width="0.0361%" height="15" fill="rgb(209,96,13)" fg:x="7292" fg:w="3"/><text x="87.9153%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="87.6653%" y="1061" width="0.0361%" height="15" fill="rgb(237,39,34)" fg:x="7292" fg:w="3"/><text x="87.9153%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="87.6653%" y="1045" width="0.0361%" height="15" fill="rgb(213,49,47)" fg:x="7292" fg:w="3"/><text x="87.9153%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="87.6653%" y="1029" width="0.0361%" height="15" fill="rgb(205,107,27)" fg:x="7292" fg:w="3"/><text x="87.9153%" y="1039.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="87.6893%" y="1013" width="0.0120%" height="15" fill="rgb(212,142,9)" fg:x="7294" fg:w="1"/><text x="87.9393%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="87.6172%" y="1173" width="0.0962%" height="15" fill="rgb(226,182,0)" fg:x="7288" fg:w="8"/><text x="87.8672%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.10%)</title><rect x="87.6172%" y="1157" width="0.0962%" height="15" fill="rgb(231,3,53)" fg:x="7288" fg:w="8"/><text x="87.8672%" y="1167.50"></text></g><g><title>core::hash::Hash::hash_slice (8 samples, 0.10%)</title><rect x="87.6172%" y="1141" width="0.0962%" height="15" fill="rgb(246,111,28)" fg:x="7288" fg:w="8"/><text x="87.8672%" y="1151.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="87.6172%" y="1125" width="0.0962%" height="15" fill="rgb(254,183,7)" fg:x="7288" fg:w="8"/><text x="87.8672%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="87.7014%" y="1109" width="0.0120%" height="15" fill="rgb(247,177,28)" fg:x="7295" fg:w="1"/><text x="87.9514%" y="1119.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="87.7014%" y="1093" width="0.0120%" height="15" fill="rgb(244,43,1)" fg:x="7295" fg:w="1"/><text x="87.9514%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="87.7014%" y="1077" width="0.0120%" height="15" fill="rgb(207,2,35)" fg:x="7295" fg:w="1"/><text x="87.9514%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="87.7014%" y="1061" width="0.0120%" height="15" fill="rgb(213,83,22)" fg:x="7295" fg:w="1"/><text x="87.9514%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="87.7014%" y="1045" width="0.0120%" height="15" fill="rgb(246,212,13)" fg:x="7295" fg:w="1"/><text x="87.9514%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="87.7134%" y="1141" width="0.0240%" height="15" fill="rgb(213,127,46)" fg:x="7296" fg:w="2"/><text x="87.9634%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="87.7134%" y="1125" width="0.0240%" height="15" fill="rgb(219,215,39)" fg:x="7296" fg:w="2"/><text x="87.9634%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="87.7134%" y="1109" width="0.0240%" height="15" fill="rgb(227,99,17)" fg:x="7296" fg:w="2"/><text x="87.9634%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="87.7134%" y="1093" width="0.0240%" height="15" fill="rgb(208,155,18)" fg:x="7296" fg:w="2"/><text x="87.9634%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="87.7134%" y="1077" width="0.0240%" height="15" fill="rgb(223,204,38)" fg:x="7296" fg:w="2"/><text x="87.9634%" y="1087.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="87.7254%" y="1061" width="0.0120%" height="15" fill="rgb(212,114,21)" fg:x="7297" fg:w="1"/><text x="87.9754%" y="1071.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="87.7134%" y="1157" width="0.0361%" height="15" fill="rgb(250,74,13)" fg:x="7296" fg:w="3"/><text x="87.9634%" y="1167.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="87.7374%" y="1141" width="0.0120%" height="15" fill="rgb(234,7,1)" fg:x="7298" fg:w="1"/><text x="87.9874%" y="1151.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="87.7374%" y="1125" width="0.0120%" height="15" fill="rgb(207,138,31)" fg:x="7298" fg:w="1"/><text x="87.9874%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="87.7735%" y="1077" width="0.0120%" height="15" fill="rgb(215,186,42)" fg:x="7301" fg:w="1"/><text x="88.0235%" y="1087.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="87.7134%" y="1173" width="0.0842%" height="15" fill="rgb(229,205,49)" fg:x="7296" fg:w="7"/><text x="87.9634%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="87.7495%" y="1157" width="0.0481%" height="15" fill="rgb(216,156,32)" fg:x="7299" fg:w="4"/><text x="87.9995%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.05%)</title><rect x="87.7495%" y="1141" width="0.0481%" height="15" fill="rgb(238,7,21)" fg:x="7299" fg:w="4"/><text x="87.9995%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="87.7495%" y="1125" width="0.0481%" height="15" fill="rgb(249,190,22)" fg:x="7299" fg:w="4"/><text x="87.9995%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="87.7495%" y="1109" width="0.0481%" height="15" fill="rgb(253,51,31)" fg:x="7299" fg:w="4"/><text x="87.9995%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.05%)</title><rect x="87.7495%" y="1093" width="0.0481%" height="15" fill="rgb(237,90,54)" fg:x="7299" fg:w="4"/><text x="87.9995%" y="1103.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="87.7855%" y="1077" width="0.0120%" height="15" fill="rgb(250,214,33)" fg:x="7302" fg:w="1"/><text x="88.0355%" y="1087.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (18 samples, 0.22%)</title><rect x="87.6172%" y="1189" width="0.2164%" height="15" fill="rgb(237,10,49)" fg:x="7288" fg:w="18"/><text x="87.8672%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.04%)</title><rect x="87.7975%" y="1173" width="0.0361%" height="15" fill="rgb(241,56,36)" fg:x="7303" fg:w="3"/><text x="88.0475%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.04%)</title><rect x="87.7975%" y="1157" width="0.0361%" height="15" fill="rgb(227,164,12)" fg:x="7303" fg:w="3"/><text x="88.0475%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="87.7975%" y="1141" width="0.0361%" height="15" fill="rgb(249,149,35)" fg:x="7303" fg:w="3"/><text x="88.0475%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="87.7975%" y="1125" width="0.0361%" height="15" fill="rgb(238,227,50)" fg:x="7303" fg:w="3"/><text x="88.0475%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="87.8096%" y="1109" width="0.0240%" height="15" fill="rgb(235,102,45)" fg:x="7304" fg:w="2"/><text x="88.0596%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="87.8096%" y="1093" width="0.0240%" height="15" fill="rgb(211,10,38)" fg:x="7304" fg:w="2"/><text x="88.0596%" y="1103.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.8336%" y="1125" width="0.0120%" height="15" fill="rgb(219,77,48)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1135.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.8336%" y="1109" width="0.0120%" height="15" fill="rgb(246,6,15)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.8336%" y="1093" width="0.0120%" height="15" fill="rgb(207,220,2)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="87.8336%" y="1077" width="0.0120%" height="15" fill="rgb(242,48,14)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="87.8336%" y="1061" width="0.0120%" height="15" fill="rgb(218,19,27)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="87.8336%" y="1045" width="0.0120%" height="15" fill="rgb(228,0,35)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="87.8336%" y="1029" width="0.0120%" height="15" fill="rgb(244,142,54)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="87.8336%" y="1013" width="0.0120%" height="15" fill="rgb(243,217,40)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="87.8336%" y="997" width="0.0120%" height="15" fill="rgb(207,114,16)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="1007.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="87.8336%" y="981" width="0.0120%" height="15" fill="rgb(224,33,25)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="991.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="87.8336%" y="965" width="0.0120%" height="15" fill="rgb(230,93,54)" fg:x="7306" fg:w="1"/><text x="88.0836%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="87.8336%" y="1189" width="0.0240%" height="15" fill="rgb(224,56,24)" fg:x="7306" fg:w="2"/><text x="88.0836%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="87.8336%" y="1173" width="0.0240%" height="15" fill="rgb(235,189,50)" fg:x="7306" fg:w="2"/><text x="88.0836%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="87.8336%" y="1157" width="0.0240%" height="15" fill="rgb(242,173,8)" fg:x="7306" fg:w="2"/><text x="88.0836%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="87.8336%" y="1141" width="0.0240%" height="15" fill="rgb(209,206,10)" fg:x="7306" fg:w="2"/><text x="88.0836%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="87.8456%" y="1125" width="0.0120%" height="15" fill="rgb(213,182,44)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="87.8456%" y="1109" width="0.0120%" height="15" fill="rgb(243,51,15)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="87.8456%" y="1093" width="0.0120%" height="15" fill="rgb(241,13,14)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="87.8456%" y="1077" width="0.0120%" height="15" fill="rgb(239,147,24)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="87.8456%" y="1061" width="0.0120%" height="15" fill="rgb(223,129,16)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="87.8456%" y="1045" width="0.0120%" height="15" fill="rgb(209,169,13)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="87.8456%" y="1029" width="0.0120%" height="15" fill="rgb(235,159,41)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="87.8456%" y="1013" width="0.0120%" height="15" fill="rgb(223,219,48)" fg:x="7307" fg:w="1"/><text x="88.0956%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.26%)</title><rect x="87.6052%" y="1221" width="0.2645%" height="15" fill="rgb(236,80,13)" fg:x="7287" fg:w="22"/><text x="87.8552%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (22 samples, 0.26%)</title><rect x="87.6052%" y="1205" width="0.2645%" height="15" fill="rgb(213,5,6)" fg:x="7287" fg:w="22"/><text x="87.8552%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="87.8577%" y="1189" width="0.0120%" height="15" fill="rgb(205,59,21)" fg:x="7308" fg:w="1"/><text x="88.1077%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="87.8577%" y="1173" width="0.0120%" height="15" fill="rgb(247,137,35)" fg:x="7308" fg:w="1"/><text x="88.1077%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="87.8577%" y="1157" width="0.0120%" height="15" fill="rgb(242,208,28)" fg:x="7308" fg:w="1"/><text x="88.1077%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="87.8577%" y="1141" width="0.0120%" height="15" fill="rgb(245,62,25)" fg:x="7308" fg:w="1"/><text x="88.1077%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.8577%" y="1125" width="0.0120%" height="15" fill="rgb(233,99,54)" fg:x="7308" fg:w="1"/><text x="88.1077%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="87.8577%" y="1109" width="0.0120%" height="15" fill="rgb(213,10,37)" fg:x="7308" fg:w="1"/><text x="88.1077%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="87.8577%" y="1093" width="0.0120%" height="15" fill="rgb(235,143,30)" fg:x="7308" fg:w="1"/><text x="88.1077%" y="1103.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.02%)</title><rect x="87.8697%" y="1109" width="0.0240%" height="15" fill="rgb(250,146,33)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="87.8697%" y="1093" width="0.0240%" height="15" fill="rgb(226,198,42)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="87.8697%" y="1077" width="0.0240%" height="15" fill="rgb(222,55,6)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="87.8697%" y="1061" width="0.0240%" height="15" fill="rgb(213,224,31)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="87.8697%" y="1045" width="0.0240%" height="15" fill="rgb(226,103,35)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.02%)</title><rect x="87.8697%" y="1029" width="0.0240%" height="15" fill="rgb(205,66,45)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.02%)</title><rect x="87.8697%" y="1013" width="0.0240%" height="15" fill="rgb(226,51,42)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="87.8697%" y="997" width="0.0240%" height="15" fill="rgb(206,69,1)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="1007.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="87.8697%" y="981" width="0.0240%" height="15" fill="rgb(213,228,47)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="991.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="87.8697%" y="965" width="0.0240%" height="15" fill="rgb(224,204,18)" fg:x="7309" fg:w="2"/><text x="88.1197%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="87.8817%" y="949" width="0.0120%" height="15" fill="rgb(253,187,47)" fg:x="7310" fg:w="1"/><text x="88.1317%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="87.8817%" y="933" width="0.0120%" height="15" fill="rgb(232,61,2)" fg:x="7310" fg:w="1"/><text x="88.1317%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="87.8817%" y="917" width="0.0120%" height="15" fill="rgb(213,132,35)" fg:x="7310" fg:w="1"/><text x="88.1317%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="87.8817%" y="901" width="0.0120%" height="15" fill="rgb(247,33,21)" fg:x="7310" fg:w="1"/><text x="88.1317%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="87.8817%" y="885" width="0.0120%" height="15" fill="rgb(233,71,46)" fg:x="7310" fg:w="1"/><text x="88.1317%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="87.8817%" y="869" width="0.0120%" height="15" fill="rgb(222,173,43)" fg:x="7310" fg:w="1"/><text x="88.1317%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="87.8937%" y="933" width="0.0120%" height="15" fill="rgb(249,218,47)" fg:x="7311" fg:w="1"/><text x="88.1437%" y="943.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.9057%" y="885" width="0.0120%" height="15" fill="rgb(254,185,48)" fg:x="7312" fg:w="1"/><text x="88.1557%" y="895.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.9057%" y="869" width="0.0120%" height="15" fill="rgb(252,165,50)" fg:x="7312" fg:w="1"/><text x="88.1557%" y="879.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (5 samples, 0.06%)</title><rect x="87.8937%" y="981" width="0.0601%" height="15" fill="rgb(206,219,6)" fg:x="7311" fg:w="5"/><text x="88.1437%" y="991.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="87.8937%" y="965" width="0.0601%" height="15" fill="rgb(212,212,45)" fg:x="7311" fg:w="5"/><text x="88.1437%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="87.8937%" y="949" width="0.0601%" height="15" fill="rgb(221,31,9)" fg:x="7311" fg:w="5"/><text x="88.1437%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="87.9057%" y="933" width="0.0481%" height="15" fill="rgb(234,198,39)" fg:x="7312" fg:w="4"/><text x="88.1557%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="87.9057%" y="917" width="0.0481%" height="15" fill="rgb(252,145,46)" fg:x="7312" fg:w="4"/><text x="88.1557%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="87.9057%" y="901" width="0.0481%" height="15" fill="rgb(237,149,0)" fg:x="7312" fg:w="4"/><text x="88.1557%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="87.9178%" y="885" width="0.0361%" height="15" fill="rgb(229,65,5)" fg:x="7313" fg:w="3"/><text x="88.1678%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="87.9178%" y="869" width="0.0361%" height="15" fill="rgb(235,60,36)" fg:x="7313" fg:w="3"/><text x="88.1678%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="87.9178%" y="853" width="0.0361%" height="15" fill="rgb(222,47,18)" fg:x="7313" fg:w="3"/><text x="88.1678%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="87.9178%" y="837" width="0.0361%" height="15" fill="rgb(235,114,22)" fg:x="7313" fg:w="3"/><text x="88.1678%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="87.9178%" y="821" width="0.0361%" height="15" fill="rgb(209,167,11)" fg:x="7313" fg:w="3"/><text x="88.1678%" y="831.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="87.9178%" y="805" width="0.0361%" height="15" fill="rgb(251,73,18)" fg:x="7313" fg:w="3"/><text x="88.1678%" y="815.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="87.9298%" y="789" width="0.0240%" height="15" fill="rgb(217,60,17)" fg:x="7314" fg:w="2"/><text x="88.1798%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="87.9418%" y="773" width="0.0120%" height="15" fill="rgb(224,36,37)" fg:x="7315" fg:w="1"/><text x="88.1918%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.07%)</title><rect x="87.8937%" y="1061" width="0.0721%" height="15" fill="rgb(211,21,32)" fg:x="7311" fg:w="6"/><text x="88.1437%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6 samples, 0.07%)</title><rect x="87.8937%" y="1045" width="0.0721%" height="15" fill="rgb(231,55,48)" fg:x="7311" fg:w="6"/><text x="88.1437%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.07%)</title><rect x="87.8937%" y="1029" width="0.0721%" height="15" fill="rgb(227,42,18)" fg:x="7311" fg:w="6"/><text x="88.1437%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.07%)</title><rect x="87.8937%" y="1013" width="0.0721%" height="15" fill="rgb(217,2,27)" fg:x="7311" fg:w="6"/><text x="88.1437%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (6 samples, 0.07%)</title><rect x="87.8937%" y="997" width="0.0721%" height="15" fill="rgb(251,138,23)" fg:x="7311" fg:w="6"/><text x="88.1437%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="87.9538%" y="981" width="0.0120%" height="15" fill="rgb(226,184,11)" fg:x="7316" fg:w="1"/><text x="88.2038%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="87.9538%" y="965" width="0.0120%" height="15" fill="rgb(242,142,12)" fg:x="7316" fg:w="1"/><text x="88.2038%" y="975.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="87.9538%" y="949" width="0.0120%" height="15" fill="rgb(234,187,18)" fg:x="7316" fg:w="1"/><text x="88.2038%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.10%)</title><rect x="87.8937%" y="1109" width="0.0962%" height="15" fill="rgb(237,44,42)" fg:x="7311" fg:w="8"/><text x="88.1437%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.10%)</title><rect x="87.8937%" y="1093" width="0.0962%" height="15" fill="rgb(211,90,23)" fg:x="7311" fg:w="8"/><text x="88.1437%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.10%)</title><rect x="87.8937%" y="1077" width="0.0962%" height="15" fill="rgb(207,81,18)" fg:x="7311" fg:w="8"/><text x="88.1437%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="87.9659%" y="1061" width="0.0240%" height="15" fill="rgb(222,107,28)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="87.9659%" y="1045" width="0.0240%" height="15" fill="rgb(237,83,52)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="87.9659%" y="1029" width="0.0240%" height="15" fill="rgb(208,67,11)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="87.9659%" y="1013" width="0.0240%" height="15" fill="rgb(249,157,49)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="87.9659%" y="997" width="0.0240%" height="15" fill="rgb(243,200,1)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="87.9659%" y="981" width="0.0240%" height="15" fill="rgb(225,162,37)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="991.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="87.9659%" y="965" width="0.0240%" height="15" fill="rgb(242,92,13)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="975.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="87.9659%" y="949" width="0.0240%" height="15" fill="rgb(220,43,36)" fg:x="7317" fg:w="2"/><text x="88.2159%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="87.9779%" y="933" width="0.0120%" height="15" fill="rgb(213,165,48)" fg:x="7318" fg:w="1"/><text x="88.2279%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="87.9899%" y="1109" width="0.0120%" height="15" fill="rgb(227,200,9)" fg:x="7319" fg:w="1"/><text x="88.2399%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="87.9899%" y="1093" width="0.0120%" height="15" fill="rgb(221,222,28)" fg:x="7319" fg:w="1"/><text x="88.2399%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.9899%" y="1077" width="0.0120%" height="15" fill="rgb(223,142,26)" fg:x="7319" fg:w="1"/><text x="88.2399%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="87.9899%" y="1061" width="0.0120%" height="15" fill="rgb(243,46,9)" fg:x="7319" fg:w="1"/><text x="88.2399%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="87.9899%" y="1045" width="0.0120%" height="15" fill="rgb(250,56,11)" fg:x="7319" fg:w="1"/><text x="88.2399%" y="1055.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="87.9899%" y="1029" width="0.0120%" height="15" fill="rgb(229,113,5)" fg:x="7319" fg:w="1"/><text x="88.2399%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.41%)</title><rect x="87.6052%" y="1269" width="0.4088%" height="15" fill="rgb(244,108,28)" fg:x="7287" fg:w="34"/><text x="87.8552%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (34 samples, 0.41%)</title><rect x="87.6052%" y="1253" width="0.4088%" height="15" fill="rgb(242,119,50)" fg:x="7287" fg:w="34"/><text x="87.8552%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (34 samples, 0.41%)</title><rect x="87.6052%" y="1237" width="0.4088%" height="15" fill="rgb(224,164,23)" fg:x="7287" fg:w="34"/><text x="87.8552%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.14%)</title><rect x="87.8697%" y="1221" width="0.1443%" height="15" fill="rgb(214,227,44)" fg:x="7309" fg:w="12"/><text x="88.1197%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.14%)</title><rect x="87.8697%" y="1205" width="0.1443%" height="15" fill="rgb(238,202,4)" fg:x="7309" fg:w="12"/><text x="88.1197%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (12 samples, 0.14%)</title><rect x="87.8697%" y="1189" width="0.1443%" height="15" fill="rgb(213,190,30)" fg:x="7309" fg:w="12"/><text x="88.1197%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (12 samples, 0.14%)</title><rect x="87.8697%" y="1173" width="0.1443%" height="15" fill="rgb(239,15,2)" fg:x="7309" fg:w="12"/><text x="88.1197%" y="1183.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (12 samples, 0.14%)</title><rect x="87.8697%" y="1157" width="0.1443%" height="15" fill="rgb(249,229,4)" fg:x="7309" fg:w="12"/><text x="88.1197%" y="1167.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12 samples, 0.14%)</title><rect x="87.8697%" y="1141" width="0.1443%" height="15" fill="rgb(239,75,44)" fg:x="7309" fg:w="12"/><text x="88.1197%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.14%)</title><rect x="87.8697%" y="1125" width="0.1443%" height="15" fill="rgb(251,206,23)" fg:x="7309" fg:w="12"/><text x="88.1197%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="88.0019%" y="1109" width="0.0120%" height="15" fill="rgb(215,208,0)" fg:x="7320" fg:w="1"/><text x="88.2519%" y="1119.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="88.0019%" y="1093" width="0.0120%" height="15" fill="rgb(230,75,50)" fg:x="7320" fg:w="1"/><text x="88.2519%" y="1103.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="88.0019%" y="1077" width="0.0120%" height="15" fill="rgb(246,180,39)" fg:x="7320" fg:w="1"/><text x="88.2519%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="88.0139%" y="1205" width="0.0120%" height="15" fill="rgb(249,175,24)" fg:x="7321" fg:w="1"/><text x="88.2639%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="88.0139%" y="1189" width="0.0120%" height="15" fill="rgb(247,176,22)" fg:x="7321" fg:w="1"/><text x="88.2639%" y="1199.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="88.0139%" y="1173" width="0.0120%" height="15" fill="rgb(241,100,24)" fg:x="7321" fg:w="1"/><text x="88.2639%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="88.0139%" y="1157" width="0.0120%" height="15" fill="rgb(233,4,35)" fg:x="7321" fg:w="1"/><text x="88.2639%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.0139%" y="1141" width="0.0120%" height="15" fill="rgb(211,164,46)" fg:x="7321" fg:w="1"/><text x="88.2639%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.0139%" y="1125" width="0.0120%" height="15" fill="rgb(242,99,53)" fg:x="7321" fg:w="1"/><text x="88.2639%" y="1135.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="88.0139%" y="1109" width="0.0120%" height="15" fill="rgb(243,45,33)" fg:x="7321" fg:w="1"/><text x="88.2639%" y="1119.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="88.0260%" y="1205" width="0.0240%" height="15" fill="rgb(217,55,21)" fg:x="7322" fg:w="2"/><text x="88.2760%" y="1215.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="88.0260%" y="1189" width="0.0240%" height="15" fill="rgb(245,145,46)" fg:x="7322" fg:w="2"/><text x="88.2760%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="88.0260%" y="1173" width="0.0240%" height="15" fill="rgb(215,112,45)" fg:x="7322" fg:w="2"/><text x="88.2760%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="88.0260%" y="1157" width="0.0240%" height="15" fill="rgb(228,104,16)" fg:x="7322" fg:w="2"/><text x="88.2760%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="88.0260%" y="1141" width="0.0240%" height="15" fill="rgb(239,186,38)" fg:x="7322" fg:w="2"/><text x="88.2760%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="88.0260%" y="1125" width="0.0240%" height="15" fill="rgb(228,38,35)" fg:x="7322" fg:w="2"/><text x="88.2760%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="88.0260%" y="1109" width="0.0240%" height="15" fill="rgb(251,42,40)" fg:x="7322" fg:w="2"/><text x="88.2760%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.0380%" y="1093" width="0.0120%" height="15" fill="rgb(210,51,19)" fg:x="7323" fg:w="1"/><text x="88.2880%" y="1103.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="88.0380%" y="1077" width="0.0120%" height="15" fill="rgb(236,94,42)" fg:x="7323" fg:w="1"/><text x="88.2880%" y="1087.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="88.0139%" y="1221" width="0.0481%" height="15" fill="rgb(239,167,16)" fg:x="7321" fg:w="4"/><text x="88.2639%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="88.0500%" y="1205" width="0.0120%" height="15" fill="rgb(252,175,31)" fg:x="7324" fg:w="1"/><text x="88.3000%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="88.0500%" y="1189" width="0.0120%" height="15" fill="rgb(206,166,30)" fg:x="7324" fg:w="1"/><text x="88.3000%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.0500%" y="1173" width="0.0120%" height="15" fill="rgb(206,209,37)" fg:x="7324" fg:w="1"/><text x="88.3000%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.0500%" y="1157" width="0.0120%" height="15" fill="rgb(226,91,4)" fg:x="7324" fg:w="1"/><text x="88.3000%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.0500%" y="1141" width="0.0120%" height="15" fill="rgb(222,167,0)" fg:x="7324" fg:w="1"/><text x="88.3000%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="88.0500%" y="1125" width="0.0120%" height="15" fill="rgb(211,70,14)" fg:x="7324" fg:w="1"/><text x="88.3000%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,184 samples, 26.26%)</title><rect x="61.8298%" y="1413" width="26.2563%" height="15" fill="rgb(214,84,42)" fg:x="5143" fg:w="2184"/><text x="62.0798%" y="1423.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as co..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2,184 samples, 26.26%)</title><rect x="61.8298%" y="1397" width="26.2563%" height="15" fill="rgb(235,157,37)" fg:x="5143" fg:w="2184"/><text x="62.0798%" y="1407.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,184 samples, 26.26%)</title><rect x="61.8298%" y="1381" width="26.2563%" height="15" fill="rgb(225,13,6)" fg:x="5143" fg:w="2184"/><text x="62.0798%" y="1391.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as co..</text></g><g><title>core::option::Option&lt;T&gt;::map (2,184 samples, 26.26%)</title><rect x="61.8298%" y="1365" width="26.2563%" height="15" fill="rgb(205,202,1)" fg:x="5143" fg:w="2184"/><text x="62.0798%" y="1375.50">core::option::Option&lt;T&gt;::map</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,184 samples, 26.26%)</title><rect x="61.8298%" y="1349" width="26.2563%" height="15" fill="rgb(232,195,26)" fg:x="5143" fg:w="2184"/><text x="62.0798%" y="1359.50">core::ops::function::impls::&lt;impl core::op..</text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2,184 samples, 26.26%)</title><rect x="61.8298%" y="1333" width="26.2563%" height="15" fill="rgb(208,102,26)" fg:x="5143" fg:w="2184"/><text x="62.0798%" y="1343.50">smithereens::memoized_original_fragment::_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (253 samples, 3.04%)</title><rect x="85.0445%" y="1317" width="3.0416%" height="15" fill="rgb(215,41,39)" fg:x="7074" fg:w="253"/><text x="85.2945%" y="1327.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (253 samples, 3.04%)</title><rect x="85.0445%" y="1301" width="3.0416%" height="15" fill="rgb(247,139,11)" fg:x="7074" fg:w="253"/><text x="85.2945%" y="1311.50">std..</text></g><g><title>smithereens::fragment::_{{closure}} (253 samples, 3.04%)</title><rect x="85.0445%" y="1285" width="3.0416%" height="15" fill="rgb(243,99,6)" fg:x="7074" fg:w="253"/><text x="85.2945%" y="1295.50">smi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.07%)</title><rect x="88.0139%" y="1269" width="0.0721%" height="15" fill="rgb(230,168,48)" fg:x="7321" fg:w="6"/><text x="88.2639%" y="1279.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.07%)</title><rect x="88.0139%" y="1253" width="0.0721%" height="15" fill="rgb(238,227,13)" fg:x="7321" fg:w="6"/><text x="88.2639%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.07%)</title><rect x="88.0139%" y="1237" width="0.0721%" height="15" fill="rgb(209,109,13)" fg:x="7321" fg:w="6"/><text x="88.2639%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="88.0620%" y="1221" width="0.0240%" height="15" fill="rgb(228,195,1)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="88.0620%" y="1205" width="0.0240%" height="15" fill="rgb(230,218,0)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="88.0620%" y="1189" width="0.0240%" height="15" fill="rgb(206,1,45)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="88.0620%" y="1173" width="0.0240%" height="15" fill="rgb(209,124,26)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1183.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="88.0620%" y="1157" width="0.0240%" height="15" fill="rgb(220,59,8)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1167.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="88.0620%" y="1141" width="0.0240%" height="15" fill="rgb(251,41,37)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="88.0620%" y="1125" width="0.0240%" height="15" fill="rgb(239,152,21)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="88.0620%" y="1109" width="0.0240%" height="15" fill="rgb(226,32,1)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="88.0620%" y="1093" width="0.0240%" height="15" fill="rgb(230,154,36)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="88.0620%" y="1077" width="0.0240%" height="15" fill="rgb(208,228,43)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="88.0620%" y="1061" width="0.0240%" height="15" fill="rgb(214,203,3)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="88.0620%" y="1045" width="0.0240%" height="15" fill="rgb(207,149,29)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="88.0620%" y="1029" width="0.0240%" height="15" fill="rgb(250,105,7)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="88.0620%" y="1013" width="0.0240%" height="15" fill="rgb(232,222,16)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="88.0620%" y="997" width="0.0240%" height="15" fill="rgb(209,32,24)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="88.0620%" y="981" width="0.0240%" height="15" fill="rgb(225,13,6)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="991.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="88.0620%" y="965" width="0.0240%" height="15" fill="rgb(245,226,26)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="975.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="88.0620%" y="949" width="0.0240%" height="15" fill="rgb(229,178,27)" fg:x="7325" fg:w="2"/><text x="88.3120%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,185 samples, 26.27%)</title><rect x="61.8298%" y="1429" width="26.2683%" height="15" fill="rgb(205,227,28)" fg:x="5143" fg:w="2185"/><text x="62.0798%" y="1439.50">&lt;core::iter::adapters::flatten::FlattenCom..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.01%)</title><rect x="88.0861%" y="1413" width="0.0120%" height="15" fill="rgb(210,191,45)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1423.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="88.0861%" y="1397" width="0.0120%" height="15" fill="rgb(206,124,16)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.0861%" y="1381" width="0.0120%" height="15" fill="rgb(210,162,0)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1391.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.0861%" y="1365" width="0.0120%" height="15" fill="rgb(211,54,38)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1375.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.0861%" y="1349" width="0.0120%" height="15" fill="rgb(248,192,3)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.0861%" y="1333" width="0.0120%" height="15" fill="rgb(233,187,18)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.0861%" y="1317" width="0.0120%" height="15" fill="rgb(237,208,14)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1327.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="88.0861%" y="1301" width="0.0120%" height="15" fill="rgb(212,77,1)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1311.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="88.0861%" y="1285" width="0.0120%" height="15" fill="rgb(210,163,22)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1295.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="88.0861%" y="1269" width="0.0120%" height="15" fill="rgb(250,58,28)" fg:x="7327" fg:w="1"/><text x="88.3361%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="88.0981%" y="1429" width="0.0361%" height="15" fill="rgb(254,28,41)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="88.0981%" y="1413" width="0.0361%" height="15" fill="rgb(237,162,36)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="88.0981%" y="1397" width="0.0361%" height="15" fill="rgb(232,56,6)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="88.0981%" y="1381" width="0.0361%" height="15" fill="rgb(216,127,42)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="88.0981%" y="1365" width="0.0361%" height="15" fill="rgb(241,69,15)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1375.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="88.0981%" y="1349" width="0.0361%" height="15" fill="rgb(227,180,19)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1359.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="88.0981%" y="1333" width="0.0361%" height="15" fill="rgb(231,188,29)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1343.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="88.0981%" y="1317" width="0.0361%" height="15" fill="rgb(224,176,27)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1327.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="88.0981%" y="1301" width="0.0361%" height="15" fill="rgb(249,214,19)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1311.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="88.0981%" y="1285" width="0.0361%" height="15" fill="rgb(240,0,4)" fg:x="7328" fg:w="3"/><text x="88.3481%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="88.1101%" y="1269" width="0.0240%" height="15" fill="rgb(233,28,41)" fg:x="7329" fg:w="2"/><text x="88.3601%" y="1279.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="88.1101%" y="1253" width="0.0240%" height="15" fill="rgb(220,90,51)" fg:x="7329" fg:w="2"/><text x="88.3601%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="88.1221%" y="1237" width="0.0120%" height="15" fill="rgb(250,52,22)" fg:x="7330" fg:w="1"/><text x="88.3721%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,201 samples, 26.46%)</title><rect x="61.7216%" y="1445" width="26.4607%" height="15" fill="rgb(231,152,36)" fg:x="5134" fg:w="2201"/><text x="61.9716%" y="1455.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::ptr::write (4 samples, 0.05%)</title><rect x="88.1342%" y="1429" width="0.0481%" height="15" fill="rgb(250,218,4)" fg:x="7331" fg:w="4"/><text x="88.3842%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="88.1702%" y="1413" width="0.0120%" height="15" fill="rgb(210,38,21)" fg:x="7334" fg:w="1"/><text x="88.4202%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="88.1702%" y="1397" width="0.0120%" height="15" fill="rgb(230,75,13)" fg:x="7334" fg:w="1"/><text x="88.4202%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="88.1823%" y="1237" width="0.0240%" height="15" fill="rgb(250,68,53)" fg:x="7335" fg:w="2"/><text x="88.4323%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="88.1823%" y="1221" width="0.0240%" height="15" fill="rgb(250,210,16)" fg:x="7335" fg:w="2"/><text x="88.4323%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="88.1823%" y="1205" width="0.0240%" height="15" fill="rgb(240,132,5)" fg:x="7335" fg:w="2"/><text x="88.4323%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="88.1943%" y="1189" width="0.0120%" height="15" fill="rgb(222,148,48)" fg:x="7336" fg:w="1"/><text x="88.4443%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="88.1943%" y="1173" width="0.0120%" height="15" fill="rgb(247,181,24)" fg:x="7336" fg:w="1"/><text x="88.4443%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="88.1943%" y="1157" width="0.0120%" height="15" fill="rgb(239,5,31)" fg:x="7336" fg:w="1"/><text x="88.4443%" y="1167.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="88.1943%" y="1141" width="0.0120%" height="15" fill="rgb(241,152,38)" fg:x="7336" fg:w="1"/><text x="88.4443%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.04%)</title><rect x="88.1823%" y="1397" width="0.0361%" height="15" fill="rgb(246,200,37)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1407.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.04%)</title><rect x="88.1823%" y="1381" width="0.0361%" height="15" fill="rgb(243,210,26)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1391.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.04%)</title><rect x="88.1823%" y="1365" width="0.0361%" height="15" fill="rgb(222,22,22)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1375.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.04%)</title><rect x="88.1823%" y="1349" width="0.0361%" height="15" fill="rgb(208,129,28)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1359.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="88.1823%" y="1333" width="0.0361%" height="15" fill="rgb(254,169,28)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1343.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="88.1823%" y="1317" width="0.0361%" height="15" fill="rgb(225,45,17)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="88.1823%" y="1301" width="0.0361%" height="15" fill="rgb(232,199,2)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="88.1823%" y="1285" width="0.0361%" height="15" fill="rgb(235,33,40)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="88.1823%" y="1269" width="0.0361%" height="15" fill="rgb(237,89,50)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="88.1823%" y="1253" width="0.0361%" height="15" fill="rgb(238,126,5)" fg:x="7335" fg:w="3"/><text x="88.4323%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="88.2063%" y="1237" width="0.0120%" height="15" fill="rgb(247,214,42)" fg:x="7337" fg:w="1"/><text x="88.4563%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,207 samples, 26.53%)</title><rect x="61.7216%" y="1461" width="26.5328%" height="15" fill="rgb(238,60,45)" fg:x="5134" fg:w="2207"/><text x="61.9716%" y="1471.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6 samples, 0.07%)</title><rect x="88.1823%" y="1445" width="0.0721%" height="15" fill="rgb(225,69,44)" fg:x="7335" fg:w="6"/><text x="88.4323%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.07%)</title><rect x="88.1823%" y="1429" width="0.0721%" height="15" fill="rgb(241,13,44)" fg:x="7335" fg:w="6"/><text x="88.4323%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.07%)</title><rect x="88.1823%" y="1413" width="0.0721%" height="15" fill="rgb(227,121,22)" fg:x="7335" fg:w="6"/><text x="88.4323%" y="1423.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.04%)</title><rect x="88.2183%" y="1397" width="0.0361%" height="15" fill="rgb(231,160,23)" fg:x="7338" fg:w="3"/><text x="88.4683%" y="1407.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.04%)</title><rect x="88.2183%" y="1381" width="0.0361%" height="15" fill="rgb(250,179,43)" fg:x="7338" fg:w="3"/><text x="88.4683%" y="1391.50"></text></g><g><title>smithereens::fragments_to_df::_{{closure}} (3 samples, 0.04%)</title><rect x="88.2183%" y="1365" width="0.0361%" height="15" fill="rgb(233,54,46)" fg:x="7338" fg:w="3"/><text x="88.4683%" y="1375.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.04%)</title><rect x="88.2183%" y="1349" width="0.0361%" height="15" fill="rgb(247,120,42)" fg:x="7338" fg:w="3"/><text x="88.4683%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="88.2664%" y="1349" width="0.0120%" height="15" fill="rgb(221,219,12)" fg:x="7342" fg:w="1"/><text x="88.5164%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="88.2664%" y="1333" width="0.0120%" height="15" fill="rgb(211,126,8)" fg:x="7342" fg:w="1"/><text x="88.5164%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.2784%" y="1349" width="0.0120%" height="15" fill="rgb(218,154,33)" fg:x="7343" fg:w="1"/><text x="88.5284%" y="1359.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="88.2784%" y="1333" width="0.0120%" height="15" fill="rgb(212,199,16)" fg:x="7343" fg:w="1"/><text x="88.5284%" y="1343.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="88.2905%" y="1253" width="0.0240%" height="15" fill="rgb(236,215,46)" fg:x="7344" fg:w="2"/><text x="88.5405%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.3145%" y="1221" width="0.0120%" height="15" fill="rgb(232,32,22)" fg:x="7346" fg:w="1"/><text x="88.5645%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.3145%" y="1205" width="0.0120%" height="15" fill="rgb(234,79,15)" fg:x="7346" fg:w="1"/><text x="88.5645%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.3145%" y="1189" width="0.0120%" height="15" fill="rgb(235,187,47)" fg:x="7346" fg:w="1"/><text x="88.5645%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="88.3145%" y="1173" width="0.0120%" height="15" fill="rgb(244,69,37)" fg:x="7346" fg:w="1"/><text x="88.5645%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="88.3145%" y="1157" width="0.0120%" height="15" fill="rgb(249,140,25)" fg:x="7346" fg:w="1"/><text x="88.5645%" y="1167.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="88.3145%" y="1141" width="0.0120%" height="15" fill="rgb(213,69,8)" fg:x="7346" fg:w="1"/><text x="88.5645%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="88.3145%" y="1125" width="0.0120%" height="15" fill="rgb(220,136,2)" fg:x="7346" fg:w="1"/><text x="88.5645%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="88.3265%" y="1205" width="0.0240%" height="15" fill="rgb(237,50,36)" fg:x="7347" fg:w="2"/><text x="88.5765%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="88.3385%" y="1189" width="0.0120%" height="15" fill="rgb(226,18,11)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="88.3385%" y="1173" width="0.0120%" height="15" fill="rgb(243,156,2)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="88.3385%" y="1157" width="0.0120%" height="15" fill="rgb(218,8,34)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="88.3385%" y="1141" width="0.0120%" height="15" fill="rgb(250,94,35)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="88.3385%" y="1125" width="0.0120%" height="15" fill="rgb(229,127,21)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.3385%" y="1109" width="0.0120%" height="15" fill="rgb(234,49,5)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="88.3385%" y="1093" width="0.0120%" height="15" fill="rgb(248,12,16)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="88.3385%" y="1077" width="0.0120%" height="15" fill="rgb(208,220,31)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1087.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="88.3385%" y="1061" width="0.0120%" height="15" fill="rgb(243,184,0)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="88.3385%" y="1045" width="0.0120%" height="15" fill="rgb(217,38,21)" fg:x="7348" fg:w="1"/><text x="88.5885%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (4 samples, 0.05%)</title><rect x="88.3145%" y="1253" width="0.0481%" height="15" fill="rgb(239,120,45)" fg:x="7346" fg:w="4"/><text x="88.5645%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (4 samples, 0.05%)</title><rect x="88.3145%" y="1237" width="0.0481%" height="15" fill="rgb(235,33,2)" fg:x="7346" fg:w="4"/><text x="88.5645%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="88.3265%" y="1221" width="0.0361%" height="15" fill="rgb(249,161,5)" fg:x="7347" fg:w="3"/><text x="88.5765%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.3506%" y="1205" width="0.0120%" height="15" fill="rgb(250,165,48)" fg:x="7349" fg:w="1"/><text x="88.6006%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.3506%" y="1189" width="0.0120%" height="15" fill="rgb(221,23,45)" fg:x="7349" fg:w="1"/><text x="88.6006%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="88.3506%" y="1173" width="0.0120%" height="15" fill="rgb(217,108,46)" fg:x="7349" fg:w="1"/><text x="88.6006%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="88.3506%" y="1157" width="0.0120%" height="15" fill="rgb(254,26,35)" fg:x="7349" fg:w="1"/><text x="88.6006%" y="1167.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="88.3506%" y="1141" width="0.0120%" height="15" fill="rgb(218,223,28)" fg:x="7349" fg:w="1"/><text x="88.6006%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="88.3506%" y="1125" width="0.0120%" height="15" fill="rgb(242,27,47)" fg:x="7349" fg:w="1"/><text x="88.6006%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.3626%" y="1221" width="0.0120%" height="15" fill="rgb(218,39,35)" fg:x="7350" fg:w="1"/><text x="88.6126%" y="1231.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="88.3626%" y="1205" width="0.0120%" height="15" fill="rgb(232,127,16)" fg:x="7350" fg:w="1"/><text x="88.6126%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.3866%" y="1029" width="0.0120%" height="15" fill="rgb(231,219,51)" fg:x="7352" fg:w="1"/><text x="88.6366%" y="1039.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="88.3746%" y="1125" width="0.0361%" height="15" fill="rgb(217,220,46)" fg:x="7351" fg:w="3"/><text x="88.6246%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="88.3866%" y="1109" width="0.0240%" height="15" fill="rgb(230,75,1)" fg:x="7352" fg:w="2"/><text x="88.6366%" y="1119.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="88.3866%" y="1093" width="0.0240%" height="15" fill="rgb(218,2,8)" fg:x="7352" fg:w="2"/><text x="88.6366%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="88.3866%" y="1077" width="0.0240%" height="15" fill="rgb(206,111,30)" fg:x="7352" fg:w="2"/><text x="88.6366%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="88.3866%" y="1061" width="0.0240%" height="15" fill="rgb(209,135,6)" fg:x="7352" fg:w="2"/><text x="88.6366%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="88.3866%" y="1045" width="0.0240%" height="15" fill="rgb(205,169,10)" fg:x="7352" fg:w="2"/><text x="88.6366%" y="1055.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="88.3987%" y="1029" width="0.0120%" height="15" fill="rgb(212,204,38)" fg:x="7353" fg:w="1"/><text x="88.6487%" y="1039.50"></text></g><g><title>core::hash::Hash::hash_slice (4 samples, 0.05%)</title><rect x="88.3746%" y="1173" width="0.0481%" height="15" fill="rgb(205,199,14)" fg:x="7351" fg:w="4"/><text x="88.6246%" y="1183.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="88.3746%" y="1157" width="0.0481%" height="15" fill="rgb(212,4,6)" fg:x="7351" fg:w="4"/><text x="88.6246%" y="1167.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="88.3746%" y="1141" width="0.0481%" height="15" fill="rgb(250,15,10)" fg:x="7351" fg:w="4"/><text x="88.6246%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="88.4107%" y="1125" width="0.0120%" height="15" fill="rgb(212,49,51)" fg:x="7354" fg:w="1"/><text x="88.6607%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="88.4107%" y="1109" width="0.0120%" height="15" fill="rgb(235,21,9)" fg:x="7354" fg:w="1"/><text x="88.6607%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="88.4107%" y="1093" width="0.0120%" height="15" fill="rgb(251,31,32)" fg:x="7354" fg:w="1"/><text x="88.6607%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="88.4107%" y="1077" width="0.0120%" height="15" fill="rgb(246,23,9)" fg:x="7354" fg:w="1"/><text x="88.6607%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="88.4107%" y="1061" width="0.0120%" height="15" fill="rgb(225,216,14)" fg:x="7354" fg:w="1"/><text x="88.6607%" y="1071.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="88.4107%" y="1045" width="0.0120%" height="15" fill="rgb(215,200,26)" fg:x="7354" fg:w="1"/><text x="88.6607%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="88.3746%" y="1205" width="0.0601%" height="15" fill="rgb(237,130,47)" fg:x="7351" fg:w="5"/><text x="88.6246%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.06%)</title><rect x="88.3746%" y="1189" width="0.0601%" height="15" fill="rgb(247,74,14)" fg:x="7351" fg:w="5"/><text x="88.6246%" y="1199.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="88.4227%" y="1173" width="0.0120%" height="15" fill="rgb(254,97,46)" fg:x="7355" fg:w="1"/><text x="88.6727%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="88.4227%" y="1157" width="0.0120%" height="15" fill="rgb(234,191,1)" fg:x="7355" fg:w="1"/><text x="88.6727%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.4227%" y="1141" width="0.0120%" height="15" fill="rgb(215,165,14)" fg:x="7355" fg:w="1"/><text x="88.6727%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.4227%" y="1125" width="0.0120%" height="15" fill="rgb(230,182,6)" fg:x="7355" fg:w="1"/><text x="88.6727%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.4227%" y="1109" width="0.0120%" height="15" fill="rgb(210,127,39)" fg:x="7355" fg:w="1"/><text x="88.6727%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="88.4227%" y="1093" width="0.0120%" height="15" fill="rgb(223,212,51)" fg:x="7355" fg:w="1"/><text x="88.6727%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.4828%" y="1093" width="0.0120%" height="15" fill="rgb(226,176,43)" fg:x="7360" fg:w="1"/><text x="88.7328%" y="1103.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="88.4828%" y="1077" width="0.0120%" height="15" fill="rgb(222,155,4)" fg:x="7360" fg:w="1"/><text x="88.7328%" y="1087.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="88.4948%" y="1093" width="0.0120%" height="15" fill="rgb(215,149,7)" fg:x="7361" fg:w="1"/><text x="88.7448%" y="1103.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="88.4948%" y="1077" width="0.0120%" height="15" fill="rgb(252,199,23)" fg:x="7361" fg:w="1"/><text x="88.7448%" y="1087.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="88.4948%" y="1061" width="0.0120%" height="15" fill="rgb(245,52,29)" fg:x="7361" fg:w="1"/><text x="88.7448%" y="1071.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="88.4347%" y="1189" width="0.0842%" height="15" fill="rgb(221,228,19)" fg:x="7356" fg:w="7"/><text x="88.6847%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (7 samples, 0.08%)</title><rect x="88.4347%" y="1173" width="0.0842%" height="15" fill="rgb(253,101,6)" fg:x="7356" fg:w="7"/><text x="88.6847%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_u32 (7 samples, 0.08%)</title><rect x="88.4347%" y="1157" width="0.0842%" height="15" fill="rgb(211,130,8)" fg:x="7356" fg:w="7"/><text x="88.6847%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="88.4347%" y="1141" width="0.0842%" height="15" fill="rgb(238,37,53)" fg:x="7356" fg:w="7"/><text x="88.6847%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="88.4347%" y="1125" width="0.0842%" height="15" fill="rgb(235,145,5)" fg:x="7356" fg:w="7"/><text x="88.6847%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.08%)</title><rect x="88.4347%" y="1109" width="0.0842%" height="15" fill="rgb(244,12,43)" fg:x="7356" fg:w="7"/><text x="88.6847%" y="1119.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="88.5069%" y="1093" width="0.0120%" height="15" fill="rgb(246,195,24)" fg:x="7362" fg:w="1"/><text x="88.7569%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.5309%" y="1109" width="0.0120%" height="15" fill="rgb(235,163,6)" fg:x="7364" fg:w="1"/><text x="88.7809%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="88.5309%" y="1093" width="0.0120%" height="15" fill="rgb(236,218,17)" fg:x="7364" fg:w="1"/><text x="88.7809%" y="1103.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (10 samples, 0.12%)</title><rect x="88.4347%" y="1205" width="0.1202%" height="15" fill="rgb(235,12,38)" fg:x="7356" fg:w="10"/><text x="88.6847%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="88.5189%" y="1189" width="0.0361%" height="15" fill="rgb(225,195,33)" fg:x="7363" fg:w="3"/><text x="88.7689%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="88.5189%" y="1173" width="0.0361%" height="15" fill="rgb(238,54,35)" fg:x="7363" fg:w="3"/><text x="88.7689%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="88.5189%" y="1157" width="0.0361%" height="15" fill="rgb(238,33,7)" fg:x="7363" fg:w="3"/><text x="88.7689%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="88.5189%" y="1141" width="0.0361%" height="15" fill="rgb(245,5,14)" fg:x="7363" fg:w="3"/><text x="88.7689%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="88.5189%" y="1125" width="0.0361%" height="15" fill="rgb(251,95,31)" fg:x="7363" fg:w="3"/><text x="88.7689%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="88.5429%" y="1109" width="0.0120%" height="15" fill="rgb(222,15,46)" fg:x="7365" fg:w="1"/><text x="88.7929%" y="1119.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="88.5429%" y="1093" width="0.0120%" height="15" fill="rgb(226,182,24)" fg:x="7365" fg:w="1"/><text x="88.7929%" y="1103.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="88.5429%" y="1077" width="0.0120%" height="15" fill="rgb(229,105,41)" fg:x="7365" fg:w="1"/><text x="88.7929%" y="1087.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="88.5429%" y="1061" width="0.0120%" height="15" fill="rgb(216,99,53)" fg:x="7365" fg:w="1"/><text x="88.7929%" y="1071.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (16 samples, 0.19%)</title><rect x="88.3746%" y="1221" width="0.1924%" height="15" fill="rgb(253,26,20)" fg:x="7351" fg:w="16"/><text x="88.6246%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="88.5549%" y="1205" width="0.0120%" height="15" fill="rgb(249,155,28)" fg:x="7366" fg:w="1"/><text x="88.8049%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="88.5549%" y="1189" width="0.0120%" height="15" fill="rgb(241,221,2)" fg:x="7366" fg:w="1"/><text x="88.8049%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.5549%" y="1173" width="0.0120%" height="15" fill="rgb(219,124,6)" fg:x="7366" fg:w="1"/><text x="88.8049%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.5549%" y="1157" width="0.0120%" height="15" fill="rgb(233,37,6)" fg:x="7366" fg:w="1"/><text x="88.8049%" y="1167.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="88.5549%" y="1141" width="0.0120%" height="15" fill="rgb(238,20,14)" fg:x="7366" fg:w="1"/><text x="88.8049%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="88.5670%" y="1173" width="0.0120%" height="15" fill="rgb(232,106,27)" fg:x="7367" fg:w="1"/><text x="88.8170%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.5790%" y="1173" width="0.0120%" height="15" fill="rgb(246,157,24)" fg:x="7368" fg:w="1"/><text x="88.8290%" y="1183.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.5790%" y="1157" width="0.0120%" height="15" fill="rgb(214,153,10)" fg:x="7368" fg:w="1"/><text x="88.8290%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="88.5790%" y="1141" width="0.0120%" height="15" fill="rgb(212,94,6)" fg:x="7368" fg:w="1"/><text x="88.8290%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (3 samples, 0.04%)</title><rect x="88.5670%" y="1221" width="0.0361%" height="15" fill="rgb(254,25,27)" fg:x="7367" fg:w="3"/><text x="88.8170%" y="1231.50"></text></g><g><title>alloc::slice::stable_sort (3 samples, 0.04%)</title><rect x="88.5670%" y="1205" width="0.0361%" height="15" fill="rgb(250,43,52)" fg:x="7367" fg:w="3"/><text x="88.8170%" y="1215.50"></text></g><g><title>core::slice::sort::insert_tail (3 samples, 0.04%)</title><rect x="88.5670%" y="1189" width="0.0361%" height="15" fill="rgb(221,226,40)" fg:x="7367" fg:w="3"/><text x="88.8170%" y="1199.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="88.5910%" y="1173" width="0.0120%" height="15" fill="rgb(235,162,34)" fg:x="7369" fg:w="1"/><text x="88.8410%" y="1183.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="88.6030%" y="1157" width="0.0120%" height="15" fill="rgb(239,24,26)" fg:x="7370" fg:w="1"/><text x="88.8530%" y="1167.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="88.6030%" y="1141" width="0.0120%" height="15" fill="rgb(244,226,11)" fg:x="7370" fg:w="1"/><text x="88.8530%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="88.6030%" y="1125" width="0.0120%" height="15" fill="rgb(225,23,10)" fg:x="7370" fg:w="1"/><text x="88.8530%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="88.6030%" y="1109" width="0.0120%" height="15" fill="rgb(249,125,6)" fg:x="7370" fg:w="1"/><text x="88.8530%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="88.6030%" y="1093" width="0.0120%" height="15" fill="rgb(246,212,12)" fg:x="7370" fg:w="1"/><text x="88.8530%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="88.6030%" y="1077" width="0.0120%" height="15" fill="rgb(230,43,32)" fg:x="7370" fg:w="1"/><text x="88.8530%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="88.6030%" y="1061" width="0.0120%" height="15" fill="rgb(210,95,23)" fg:x="7370" fg:w="1"/><text x="88.8530%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="88.6030%" y="1221" width="0.0240%" height="15" fill="rgb(229,103,33)" fg:x="7370" fg:w="2"/><text x="88.8530%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="88.6030%" y="1205" width="0.0240%" height="15" fill="rgb(222,104,27)" fg:x="7370" fg:w="2"/><text x="88.8530%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="88.6030%" y="1189" width="0.0240%" height="15" fill="rgb(239,221,23)" fg:x="7370" fg:w="2"/><text x="88.8530%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="88.6030%" y="1173" width="0.0240%" height="15" fill="rgb(222,98,21)" fg:x="7370" fg:w="2"/><text x="88.8530%" y="1183.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="88.6151%" y="1157" width="0.0120%" height="15" fill="rgb(231,101,20)" fg:x="7371" fg:w="1"/><text x="88.8651%" y="1167.50"></text></g><g><title>hashbrown::map::make_hash (23 samples, 0.28%)</title><rect x="88.3626%" y="1253" width="0.2765%" height="15" fill="rgb(215,150,22)" fg:x="7350" fg:w="23"/><text x="88.6126%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (23 samples, 0.28%)</title><rect x="88.3626%" y="1237" width="0.2765%" height="15" fill="rgb(248,3,34)" fg:x="7350" fg:w="23"/><text x="88.6126%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="88.6271%" y="1221" width="0.0120%" height="15" fill="rgb(220,141,21)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="88.6271%" y="1205" width="0.0120%" height="15" fill="rgb(223,41,48)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="88.6271%" y="1189" width="0.0120%" height="15" fill="rgb(247,12,5)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="88.6271%" y="1173" width="0.0120%" height="15" fill="rgb(206,173,10)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.6271%" y="1157" width="0.0120%" height="15" fill="rgb(233,214,37)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="88.6271%" y="1141" width="0.0120%" height="15" fill="rgb(238,86,43)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="88.6271%" y="1125" width="0.0120%" height="15" fill="rgb(212,182,8)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1135.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="88.6271%" y="1109" width="0.0120%" height="15" fill="rgb(240,91,47)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="88.6271%" y="1093" width="0.0120%" height="15" fill="rgb(209,138,26)" fg:x="7372" fg:w="1"/><text x="88.8771%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="88.6391%" y="1109" width="0.0361%" height="15" fill="rgb(231,163,20)" fg:x="7373" fg:w="3"/><text x="88.8891%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (4 samples, 0.05%)</title><rect x="88.6391%" y="1157" width="0.0481%" height="15" fill="rgb(214,91,54)" fg:x="7373" fg:w="4"/><text x="88.8891%" y="1167.50"></text></g><g><title>alloc::slice::stable_sort (4 samples, 0.05%)</title><rect x="88.6391%" y="1141" width="0.0481%" height="15" fill="rgb(230,32,17)" fg:x="7373" fg:w="4"/><text x="88.8891%" y="1151.50"></text></g><g><title>core::slice::sort::insert_tail (4 samples, 0.05%)</title><rect x="88.6391%" y="1125" width="0.0481%" height="15" fill="rgb(231,34,34)" fg:x="7373" fg:w="4"/><text x="88.8891%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="88.6752%" y="1109" width="0.0120%" height="15" fill="rgb(224,228,27)" fg:x="7376" fg:w="1"/><text x="88.9252%" y="1119.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.6752%" y="1093" width="0.0120%" height="15" fill="rgb(219,35,40)" fg:x="7376" fg:w="1"/><text x="88.9252%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="88.6752%" y="1077" width="0.0120%" height="15" fill="rgb(234,42,8)" fg:x="7376" fg:w="1"/><text x="88.9252%" y="1087.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="88.6872%" y="997" width="0.0120%" height="15" fill="rgb(226,75,22)" fg:x="7377" fg:w="1"/><text x="88.9372%" y="1007.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="88.6872%" y="981" width="0.0120%" height="15" fill="rgb(242,203,28)" fg:x="7377" fg:w="1"/><text x="88.9372%" y="991.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="88.6872%" y="1013" width="0.0240%" height="15" fill="rgb(221,3,9)" fg:x="7377" fg:w="2"/><text x="88.9372%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="88.6992%" y="997" width="0.0120%" height="15" fill="rgb(214,34,31)" fg:x="7378" fg:w="1"/><text x="88.9492%" y="1007.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="88.6992%" y="981" width="0.0120%" height="15" fill="rgb(252,119,15)" fg:x="7378" fg:w="1"/><text x="88.9492%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="88.6992%" y="965" width="0.0120%" height="15" fill="rgb(244,224,31)" fg:x="7378" fg:w="1"/><text x="88.9492%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="88.6992%" y="949" width="0.0120%" height="15" fill="rgb(215,8,51)" fg:x="7378" fg:w="1"/><text x="88.9492%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="88.6992%" y="933" width="0.0120%" height="15" fill="rgb(207,24,1)" fg:x="7378" fg:w="1"/><text x="88.9492%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="88.6992%" y="917" width="0.0120%" height="15" fill="rgb(245,90,0)" fg:x="7378" fg:w="1"/><text x="88.9492%" y="927.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.04%)</title><rect x="88.6872%" y="1157" width="0.0361%" height="15" fill="rgb(246,43,48)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1167.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="88.6872%" y="1141" width="0.0361%" height="15" fill="rgb(252,218,10)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1151.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="88.6872%" y="1125" width="0.0361%" height="15" fill="rgb(231,24,35)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.04%)</title><rect x="88.6872%" y="1109" width="0.0361%" height="15" fill="rgb(225,66,19)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="88.6872%" y="1093" width="0.0361%" height="15" fill="rgb(214,96,51)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.04%)</title><rect x="88.6872%" y="1077" width="0.0361%" height="15" fill="rgb(251,151,47)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.04%)</title><rect x="88.6872%" y="1061" width="0.0361%" height="15" fill="rgb(236,79,14)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="88.6872%" y="1045" width="0.0361%" height="15" fill="rgb(210,205,11)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1055.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="88.6872%" y="1029" width="0.0361%" height="15" fill="rgb(233,142,53)" fg:x="7377" fg:w="3"/><text x="88.9372%" y="1039.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="1013" width="0.0120%" height="15" fill="rgb(212,116,48)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="1023.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="997" width="0.0120%" height="15" fill="rgb(234,55,33)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="1007.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="88.7112%" y="981" width="0.0120%" height="15" fill="rgb(253,92,27)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="88.7112%" y="965" width="0.0120%" height="15" fill="rgb(220,7,35)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="88.7112%" y="949" width="0.0120%" height="15" fill="rgb(246,124,6)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="88.7112%" y="933" width="0.0120%" height="15" fill="rgb(212,111,51)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="88.7112%" y="917" width="0.0120%" height="15" fill="rgb(253,116,7)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="901" width="0.0120%" height="15" fill="rgb(213,145,18)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="911.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="885" width="0.0120%" height="15" fill="rgb(219,149,7)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="895.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="869" width="0.0120%" height="15" fill="rgb(225,156,20)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="853" width="0.0120%" height="15" fill="rgb(211,98,19)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="837" width="0.0120%" height="15" fill="rgb(231,192,31)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="821" width="0.0120%" height="15" fill="rgb(249,95,19)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="88.7112%" y="805" width="0.0120%" height="15" fill="rgb(247,101,36)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="88.7112%" y="789" width="0.0120%" height="15" fill="rgb(221,45,43)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="88.7112%" y="773" width="0.0120%" height="15" fill="rgb(220,42,1)" fg:x="7379" fg:w="1"/><text x="88.9612%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="88.7353%" y="933" width="0.0240%" height="15" fill="rgb(236,19,24)" fg:x="7381" fg:w="2"/><text x="88.9853%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="88.7353%" y="917" width="0.0240%" height="15" fill="rgb(225,192,6)" fg:x="7381" fg:w="2"/><text x="88.9853%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="88.7353%" y="901" width="0.0240%" height="15" fill="rgb(242,30,19)" fg:x="7381" fg:w="2"/><text x="88.9853%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="88.7353%" y="885" width="0.0240%" height="15" fill="rgb(240,36,6)" fg:x="7381" fg:w="2"/><text x="88.9853%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="88.7353%" y="869" width="0.0240%" height="15" fill="rgb(246,40,28)" fg:x="7381" fg:w="2"/><text x="88.9853%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="88.7353%" y="853" width="0.0240%" height="15" fill="rgb(225,155,33)" fg:x="7381" fg:w="2"/><text x="88.9853%" y="863.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="88.7353%" y="837" width="0.0240%" height="15" fill="rgb(240,65,18)" fg:x="7381" fg:w="2"/><text x="88.9853%" y="847.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (4 samples, 0.05%)</title><rect x="88.7353%" y="1029" width="0.0481%" height="15" fill="rgb(217,0,48)" fg:x="7381" fg:w="4"/><text x="88.9853%" y="1039.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="88.7353%" y="1013" width="0.0481%" height="15" fill="rgb(217,80,15)" fg:x="7381" fg:w="4"/><text x="88.9853%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="88.7353%" y="997" width="0.0481%" height="15" fill="rgb(253,43,51)" fg:x="7381" fg:w="4"/><text x="88.9853%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="88.7353%" y="981" width="0.0481%" height="15" fill="rgb(246,60,4)" fg:x="7381" fg:w="4"/><text x="88.9853%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="88.7353%" y="965" width="0.0481%" height="15" fill="rgb(230,40,54)" fg:x="7381" fg:w="4"/><text x="88.9853%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="88.7353%" y="949" width="0.0481%" height="15" fill="rgb(208,20,44)" fg:x="7381" fg:w="4"/><text x="88.9853%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="88.7593%" y="933" width="0.0240%" height="15" fill="rgb(230,22,22)" fg:x="7383" fg:w="2"/><text x="89.0093%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.06%)</title><rect x="88.7353%" y="1109" width="0.0601%" height="15" fill="rgb(207,57,4)" fg:x="7381" fg:w="5"/><text x="88.9853%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5 samples, 0.06%)</title><rect x="88.7353%" y="1093" width="0.0601%" height="15" fill="rgb(242,130,33)" fg:x="7381" fg:w="5"/><text x="88.9853%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.06%)</title><rect x="88.7353%" y="1077" width="0.0601%" height="15" fill="rgb(218,66,43)" fg:x="7381" fg:w="5"/><text x="88.9853%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.06%)</title><rect x="88.7353%" y="1061" width="0.0601%" height="15" fill="rgb(236,105,16)" fg:x="7381" fg:w="5"/><text x="88.9853%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5 samples, 0.06%)</title><rect x="88.7353%" y="1045" width="0.0601%" height="15" fill="rgb(230,46,15)" fg:x="7381" fg:w="5"/><text x="88.9853%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="88.7834%" y="1029" width="0.0120%" height="15" fill="rgb(251,172,40)" fg:x="7385" fg:w="1"/><text x="89.0334%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="88.7834%" y="1013" width="0.0120%" height="15" fill="rgb(225,217,32)" fg:x="7385" fg:w="1"/><text x="89.0334%" y="1023.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.01%)</title><rect x="88.7834%" y="997" width="0.0120%" height="15" fill="rgb(243,10,29)" fg:x="7385" fg:w="1"/><text x="89.0334%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (43 samples, 0.52%)</title><rect x="88.2905%" y="1317" width="0.5170%" height="15" fill="rgb(207,102,10)" fg:x="7344" fg:w="43"/><text x="88.5405%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (43 samples, 0.52%)</title><rect x="88.2905%" y="1301" width="0.5170%" height="15" fill="rgb(241,125,5)" fg:x="7344" fg:w="43"/><text x="88.5405%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (43 samples, 0.52%)</title><rect x="88.2905%" y="1285" width="0.5170%" height="15" fill="rgb(230,125,29)" fg:x="7344" fg:w="43"/><text x="88.5405%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (43 samples, 0.52%)</title><rect x="88.2905%" y="1269" width="0.5170%" height="15" fill="rgb(223,65,44)" fg:x="7344" fg:w="43"/><text x="88.5405%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (14 samples, 0.17%)</title><rect x="88.6391%" y="1253" width="0.1683%" height="15" fill="rgb(224,188,28)" fg:x="7373" fg:w="14"/><text x="88.8891%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (14 samples, 0.17%)</title><rect x="88.6391%" y="1237" width="0.1683%" height="15" fill="rgb(254,197,27)" fg:x="7373" fg:w="14"/><text x="88.8891%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (14 samples, 0.17%)</title><rect x="88.6391%" y="1221" width="0.1683%" height="15" fill="rgb(220,200,25)" fg:x="7373" fg:w="14"/><text x="88.8891%" y="1231.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (14 samples, 0.17%)</title><rect x="88.6391%" y="1205" width="0.1683%" height="15" fill="rgb(239,225,54)" fg:x="7373" fg:w="14"/><text x="88.8891%" y="1215.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (14 samples, 0.17%)</title><rect x="88.6391%" y="1189" width="0.1683%" height="15" fill="rgb(211,59,40)" fg:x="7373" fg:w="14"/><text x="88.8891%" y="1199.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.17%)</title><rect x="88.6391%" y="1173" width="0.1683%" height="15" fill="rgb(213,176,46)" fg:x="7373" fg:w="14"/><text x="88.8891%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.08%)</title><rect x="88.7233%" y="1157" width="0.0842%" height="15" fill="rgb(226,99,4)" fg:x="7380" fg:w="7"/><text x="88.9733%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.08%)</title><rect x="88.7233%" y="1141" width="0.0842%" height="15" fill="rgb(239,203,43)" fg:x="7380" fg:w="7"/><text x="88.9733%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="88.7353%" y="1125" width="0.0721%" height="15" fill="rgb(246,1,45)" fg:x="7381" fg:w="6"/><text x="88.9853%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="88.7954%" y="1109" width="0.0120%" height="15" fill="rgb(231,42,52)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="88.7954%" y="1093" width="0.0120%" height="15" fill="rgb(240,13,50)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="88.7954%" y="1077" width="0.0120%" height="15" fill="rgb(225,81,14)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="88.7954%" y="1061" width="0.0120%" height="15" fill="rgb(216,182,23)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="88.7954%" y="1045" width="0.0120%" height="15" fill="rgb(233,137,19)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="88.7954%" y="1029" width="0.0120%" height="15" fill="rgb(242,61,46)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="88.7954%" y="1013" width="0.0120%" height="15" fill="rgb(221,168,51)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1023.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="88.7954%" y="997" width="0.0120%" height="15" fill="rgb(238,48,15)" fg:x="7386" fg:w="1"/><text x="89.0454%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="88.8074%" y="1157" width="0.0120%" height="15" fill="rgb(216,13,16)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="88.8074%" y="1141" width="0.0120%" height="15" fill="rgb(223,185,34)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1151.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="88.8074%" y="1125" width="0.0120%" height="15" fill="rgb(228,94,42)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1135.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="88.8074%" y="1109" width="0.0120%" height="15" fill="rgb(218,166,43)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="88.8074%" y="1093" width="0.0120%" height="15" fill="rgb(232,30,50)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="88.8074%" y="1077" width="0.0120%" height="15" fill="rgb(245,206,45)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1087.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="88.8074%" y="1061" width="0.0120%" height="15" fill="rgb(220,56,22)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.8074%" y="1045" width="0.0120%" height="15" fill="rgb(239,129,38)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.8074%" y="1029" width="0.0120%" height="15" fill="rgb(207,68,41)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.8074%" y="1013" width="0.0120%" height="15" fill="rgb(221,21,7)" fg:x="7387" fg:w="1"/><text x="89.0574%" y="1023.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="88.8074%" y="1173" width="0.0240%" height="15" fill="rgb(240,33,25)" fg:x="7387" fg:w="2"/><text x="89.0574%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="88.8194%" y="1157" width="0.0120%" height="15" fill="rgb(242,119,10)" fg:x="7388" fg:w="1"/><text x="89.0694%" y="1167.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="88.8194%" y="1141" width="0.0120%" height="15" fill="rgb(214,149,40)" fg:x="7388" fg:w="1"/><text x="89.0694%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.8194%" y="1125" width="0.0120%" height="15" fill="rgb(228,25,36)" fg:x="7388" fg:w="1"/><text x="89.0694%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.8194%" y="1109" width="0.0120%" height="15" fill="rgb(222,59,15)" fg:x="7388" fg:w="1"/><text x="89.0694%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (46 samples, 0.55%)</title><rect x="88.2905%" y="1349" width="0.5530%" height="15" fill="rgb(218,170,0)" fg:x="7344" fg:w="46"/><text x="88.5405%" y="1359.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (46 samples, 0.55%)</title><rect x="88.2905%" y="1333" width="0.5530%" height="15" fill="rgb(232,173,23)" fg:x="7344" fg:w="46"/><text x="88.5405%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.04%)</title><rect x="88.8074%" y="1317" width="0.0361%" height="15" fill="rgb(218,116,1)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="88.8074%" y="1301" width="0.0361%" height="15" fill="rgb(207,34,4)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="88.8074%" y="1285" width="0.0361%" height="15" fill="rgb(229,54,52)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.04%)</title><rect x="88.8074%" y="1269" width="0.0361%" height="15" fill="rgb(211,86,23)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.04%)</title><rect x="88.8074%" y="1253" width="0.0361%" height="15" fill="rgb(254,153,34)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3 samples, 0.04%)</title><rect x="88.8074%" y="1237" width="0.0361%" height="15" fill="rgb(219,220,14)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1247.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (3 samples, 0.04%)</title><rect x="88.8074%" y="1221" width="0.0361%" height="15" fill="rgb(247,8,26)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1231.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="88.8074%" y="1205" width="0.0361%" height="15" fill="rgb(213,129,42)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="88.8074%" y="1189" width="0.0361%" height="15" fill="rgb(225,95,41)" fg:x="7387" fg:w="3"/><text x="89.0574%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="88.8314%" y="1173" width="0.0120%" height="15" fill="rgb(215,134,24)" fg:x="7389" fg:w="1"/><text x="89.0814%" y="1183.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="88.8314%" y="1157" width="0.0120%" height="15" fill="rgb(235,23,54)" fg:x="7389" fg:w="1"/><text x="89.0814%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="88.8314%" y="1141" width="0.0120%" height="15" fill="rgb(229,96,31)" fg:x="7389" fg:w="1"/><text x="89.0814%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="88.8314%" y="1125" width="0.0120%" height="15" fill="rgb(206,111,12)" fg:x="7389" fg:w="1"/><text x="89.0814%" y="1135.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="88.8916%" y="1061" width="0.0240%" height="15" fill="rgb(222,177,8)" fg:x="7394" fg:w="2"/><text x="89.1416%" y="1071.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="88.8916%" y="1045" width="0.0240%" height="15" fill="rgb(251,36,52)" fg:x="7394" fg:w="2"/><text x="89.1416%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.9156%" y="1029" width="0.0120%" height="15" fill="rgb(216,182,29)" fg:x="7396" fg:w="1"/><text x="89.1656%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.9156%" y="1013" width="0.0120%" height="15" fill="rgb(241,145,50)" fg:x="7396" fg:w="1"/><text x="89.1656%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.9156%" y="997" width="0.0120%" height="15" fill="rgb(231,71,35)" fg:x="7396" fg:w="1"/><text x="89.1656%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="88.9156%" y="981" width="0.0120%" height="15" fill="rgb(218,22,17)" fg:x="7396" fg:w="1"/><text x="89.1656%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="88.9156%" y="965" width="0.0120%" height="15" fill="rgb(225,227,6)" fg:x="7396" fg:w="1"/><text x="89.1656%" y="975.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="88.9156%" y="949" width="0.0120%" height="15" fill="rgb(224,204,17)" fg:x="7396" fg:w="1"/><text x="89.1656%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="88.9156%" y="933" width="0.0120%" height="15" fill="rgb(227,61,28)" fg:x="7396" fg:w="1"/><text x="89.1656%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (2 samples, 0.02%)</title><rect x="88.9156%" y="1061" width="0.0240%" height="15" fill="rgb(242,148,23)" fg:x="7396" fg:w="2"/><text x="89.1656%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (2 samples, 0.02%)</title><rect x="88.9156%" y="1045" width="0.0240%" height="15" fill="rgb(237,105,33)" fg:x="7396" fg:w="2"/><text x="89.1656%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.9276%" y="1029" width="0.0120%" height="15" fill="rgb(238,218,40)" fg:x="7397" fg:w="1"/><text x="89.1776%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.9276%" y="1013" width="0.0120%" height="15" fill="rgb(209,126,11)" fg:x="7397" fg:w="1"/><text x="89.1776%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.9276%" y="997" width="0.0120%" height="15" fill="rgb(245,90,11)" fg:x="7397" fg:w="1"/><text x="89.1776%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="88.9276%" y="981" width="0.0120%" height="15" fill="rgb(211,195,10)" fg:x="7397" fg:w="1"/><text x="89.1776%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="88.9276%" y="965" width="0.0120%" height="15" fill="rgb(231,45,45)" fg:x="7397" fg:w="1"/><text x="89.1776%" y="975.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="88.9276%" y="949" width="0.0120%" height="15" fill="rgb(246,100,43)" fg:x="7397" fg:w="1"/><text x="89.1776%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="88.9517%" y="997" width="0.0120%" height="15" fill="rgb(241,193,8)" fg:x="7399" fg:w="1"/><text x="89.2017%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.9637%" y="965" width="0.0120%" height="15" fill="rgb(208,76,19)" fg:x="7400" fg:w="1"/><text x="89.2137%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="88.9877%" y="837" width="0.0120%" height="15" fill="rgb(223,69,40)" fg:x="7402" fg:w="1"/><text x="89.2377%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="88.9877%" y="821" width="0.0120%" height="15" fill="rgb(207,120,39)" fg:x="7402" fg:w="1"/><text x="89.2377%" y="831.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="88.9757%" y="949" width="0.0481%" height="15" fill="rgb(212,209,28)" fg:x="7401" fg:w="4"/><text x="89.2257%" y="959.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="88.9757%" y="933" width="0.0481%" height="15" fill="rgb(246,82,29)" fg:x="7401" fg:w="4"/><text x="89.2257%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4 samples, 0.05%)</title><rect x="88.9757%" y="917" width="0.0481%" height="15" fill="rgb(239,6,40)" fg:x="7401" fg:w="4"/><text x="89.2257%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u32 (4 samples, 0.05%)</title><rect x="88.9757%" y="901" width="0.0481%" height="15" fill="rgb(228,181,35)" fg:x="7401" fg:w="4"/><text x="89.2257%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="88.9757%" y="885" width="0.0481%" height="15" fill="rgb(238,151,2)" fg:x="7401" fg:w="4"/><text x="89.2257%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="88.9757%" y="869" width="0.0481%" height="15" fill="rgb(236,94,18)" fg:x="7401" fg:w="4"/><text x="89.2257%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="88.9757%" y="853" width="0.0481%" height="15" fill="rgb(208,38,14)" fg:x="7401" fg:w="4"/><text x="89.2257%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="88.9998%" y="837" width="0.0240%" height="15" fill="rgb(234,215,27)" fg:x="7403" fg:w="2"/><text x="89.2498%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="89.0118%" y="821" width="0.0120%" height="15" fill="rgb(254,211,53)" fg:x="7404" fg:w="1"/><text x="89.2618%" y="831.50"></text></g><g><title>core::hash::Hash::hash_slice (6 samples, 0.07%)</title><rect x="88.9637%" y="981" width="0.0721%" height="15" fill="rgb(216,175,11)" fg:x="7400" fg:w="6"/><text x="89.2137%" y="991.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="88.9757%" y="965" width="0.0601%" height="15" fill="rgb(246,179,26)" fg:x="7401" fg:w="5"/><text x="89.2257%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="89.0238%" y="949" width="0.0120%" height="15" fill="rgb(249,19,52)" fg:x="7405" fg:w="1"/><text x="89.2738%" y="959.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="89.0238%" y="933" width="0.0120%" height="15" fill="rgb(230,42,52)" fg:x="7405" fg:w="1"/><text x="89.2738%" y="943.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="89.0238%" y="917" width="0.0120%" height="15" fill="rgb(221,171,0)" fg:x="7405" fg:w="1"/><text x="89.2738%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.0238%" y="901" width="0.0120%" height="15" fill="rgb(222,177,40)" fg:x="7405" fg:w="1"/><text x="89.2738%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.0238%" y="885" width="0.0120%" height="15" fill="rgb(247,34,16)" fg:x="7405" fg:w="1"/><text x="89.2738%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.0238%" y="869" width="0.0120%" height="15" fill="rgb(213,217,37)" fg:x="7405" fg:w="1"/><text x="89.2738%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="88.9517%" y="1013" width="0.1082%" height="15" fill="rgb(231,189,24)" fg:x="7399" fg:w="9"/><text x="89.2017%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.10%)</title><rect x="88.9637%" y="997" width="0.0962%" height="15" fill="rgb(214,22,9)" fg:x="7400" fg:w="8"/><text x="89.2137%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.02%)</title><rect x="89.0358%" y="981" width="0.0240%" height="15" fill="rgb(212,70,22)" fg:x="7406" fg:w="2"/><text x="89.2858%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="89.0358%" y="965" width="0.0240%" height="15" fill="rgb(249,64,51)" fg:x="7406" fg:w="2"/><text x="89.2858%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.0358%" y="949" width="0.0240%" height="15" fill="rgb(249,148,20)" fg:x="7406" fg:w="2"/><text x="89.2858%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.0358%" y="933" width="0.0240%" height="15" fill="rgb(246,46,48)" fg:x="7406" fg:w="2"/><text x="89.2858%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="89.0478%" y="917" width="0.0120%" height="15" fill="rgb(217,34,48)" fg:x="7407" fg:w="1"/><text x="89.2978%" y="927.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="89.0839%" y="901" width="0.0120%" height="15" fill="rgb(222,45,26)" fg:x="7410" fg:w="1"/><text x="89.3339%" y="911.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="89.0839%" y="885" width="0.0120%" height="15" fill="rgb(230,201,36)" fg:x="7410" fg:w="1"/><text x="89.3339%" y="895.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="89.0839%" y="869" width="0.0120%" height="15" fill="rgb(217,30,43)" fg:x="7410" fg:w="1"/><text x="89.3339%" y="879.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="89.0599%" y="997" width="0.0481%" height="15" fill="rgb(230,197,40)" fg:x="7408" fg:w="4"/><text x="89.3099%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.04%)</title><rect x="89.0719%" y="981" width="0.0361%" height="15" fill="rgb(239,181,18)" fg:x="7409" fg:w="3"/><text x="89.3219%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u32 (3 samples, 0.04%)</title><rect x="89.0719%" y="965" width="0.0361%" height="15" fill="rgb(222,60,39)" fg:x="7409" fg:w="3"/><text x="89.3219%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="89.0719%" y="949" width="0.0361%" height="15" fill="rgb(210,60,22)" fg:x="7409" fg:w="3"/><text x="89.3219%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="89.0719%" y="933" width="0.0361%" height="15" fill="rgb(239,213,48)" fg:x="7409" fg:w="3"/><text x="89.3219%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="89.0719%" y="917" width="0.0361%" height="15" fill="rgb(253,214,23)" fg:x="7409" fg:w="3"/><text x="89.3219%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.0959%" y="901" width="0.0120%" height="15" fill="rgb(211,98,45)" fg:x="7411" fg:w="1"/><text x="89.3459%" y="911.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (16 samples, 0.19%)</title><rect x="88.9517%" y="1029" width="0.1924%" height="15" fill="rgb(239,130,44)" fg:x="7399" fg:w="16"/><text x="89.2017%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="89.0599%" y="1013" width="0.0842%" height="15" fill="rgb(222,181,35)" fg:x="7408" fg:w="7"/><text x="89.3099%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="89.1080%" y="997" width="0.0361%" height="15" fill="rgb(219,219,49)" fg:x="7412" fg:w="3"/><text x="89.3580%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="89.1080%" y="981" width="0.0361%" height="15" fill="rgb(227,161,51)" fg:x="7412" fg:w="3"/><text x="89.3580%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="89.1080%" y="965" width="0.0361%" height="15" fill="rgb(239,112,27)" fg:x="7412" fg:w="3"/><text x="89.3580%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="89.1080%" y="949" width="0.0361%" height="15" fill="rgb(248,122,18)" fg:x="7412" fg:w="3"/><text x="89.3580%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="89.1080%" y="933" width="0.0361%" height="15" fill="rgb(245,130,23)" fg:x="7412" fg:w="3"/><text x="89.3580%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="89.1200%" y="917" width="0.0240%" height="15" fill="rgb(211,225,28)" fg:x="7413" fg:w="2"/><text x="89.3700%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.1320%" y="901" width="0.0120%" height="15" fill="rgb(242,105,44)" fg:x="7414" fg:w="1"/><text x="89.3820%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="89.1440%" y="1029" width="0.0120%" height="15" fill="rgb(216,183,46)" fg:x="7415" fg:w="1"/><text x="89.3940%" y="1039.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="89.1440%" y="1013" width="0.0120%" height="15" fill="rgb(227,112,9)" fg:x="7415" fg:w="1"/><text x="89.3940%" y="1023.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="89.1440%" y="997" width="0.0120%" height="15" fill="rgb(244,21,0)" fg:x="7415" fg:w="1"/><text x="89.3940%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="89.1440%" y="981" width="0.0120%" height="15" fill="rgb(236,185,14)" fg:x="7415" fg:w="1"/><text x="89.3940%" y="991.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.1440%" y="965" width="0.0120%" height="15" fill="rgb(236,170,30)" fg:x="7415" fg:w="1"/><text x="89.3940%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="89.1440%" y="949" width="0.0120%" height="15" fill="rgb(209,198,51)" fg:x="7415" fg:w="1"/><text x="89.3940%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.1560%" y="965" width="0.0120%" height="15" fill="rgb(205,171,26)" fg:x="7416" fg:w="1"/><text x="89.4060%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.1560%" y="949" width="0.0120%" height="15" fill="rgb(246,41,49)" fg:x="7416" fg:w="1"/><text x="89.4060%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.1560%" y="933" width="0.0120%" height="15" fill="rgb(240,229,12)" fg:x="7416" fg:w="1"/><text x="89.4060%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="89.1560%" y="1029" width="0.0240%" height="15" fill="rgb(212,8,54)" fg:x="7416" fg:w="2"/><text x="89.4060%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="89.1560%" y="1013" width="0.0240%" height="15" fill="rgb(230,114,13)" fg:x="7416" fg:w="2"/><text x="89.4060%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="89.1560%" y="997" width="0.0240%" height="15" fill="rgb(229,130,28)" fg:x="7416" fg:w="2"/><text x="89.4060%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="89.1560%" y="981" width="0.0240%" height="15" fill="rgb(206,139,15)" fg:x="7416" fg:w="2"/><text x="89.4060%" y="991.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.1681%" y="965" width="0.0120%" height="15" fill="rgb(241,188,35)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="975.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.1681%" y="949" width="0.0120%" height="15" fill="rgb(208,224,26)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.1681%" y="933" width="0.0120%" height="15" fill="rgb(251,131,28)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="89.1681%" y="917" width="0.0120%" height="15" fill="rgb(208,153,1)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="89.1681%" y="901" width="0.0120%" height="15" fill="rgb(234,33,36)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="89.1681%" y="885" width="0.0120%" height="15" fill="rgb(246,42,29)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.1681%" y="869" width="0.0120%" height="15" fill="rgb(251,114,16)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.1681%" y="853" width="0.0120%" height="15" fill="rgb(233,13,38)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="89.1681%" y="837" width="0.0120%" height="15" fill="rgb(247,120,19)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.1681%" y="821" width="0.0120%" height="15" fill="rgb(205,11,16)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.1681%" y="805" width="0.0120%" height="15" fill="rgb(228,185,19)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.1681%" y="789" width="0.0120%" height="15" fill="rgb(239,88,52)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="799.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="89.1681%" y="773" width="0.0120%" height="15" fill="rgb(219,23,1)" fg:x="7417" fg:w="1"/><text x="89.4181%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.25%)</title><rect x="88.9396%" y="1061" width="0.2525%" height="15" fill="rgb(253,177,16)" fg:x="7398" fg:w="21"/><text x="89.1896%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (21 samples, 0.25%)</title><rect x="88.9396%" y="1045" width="0.2525%" height="15" fill="rgb(225,150,40)" fg:x="7398" fg:w="21"/><text x="89.1896%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="89.1801%" y="1029" width="0.0120%" height="15" fill="rgb(208,108,30)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="1039.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.1801%" y="1013" width="0.0120%" height="15" fill="rgb(214,122,4)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="89.1801%" y="997" width="0.0120%" height="15" fill="rgb(229,74,37)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="1007.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.1801%" y="981" width="0.0120%" height="15" fill="rgb(233,61,41)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="89.1801%" y="965" width="0.0120%" height="15" fill="rgb(238,191,5)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.1801%" y="949" width="0.0120%" height="15" fill="rgb(233,78,24)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="89.1801%" y="933" width="0.0120%" height="15" fill="rgb(211,142,8)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="89.1801%" y="917" width="0.0120%" height="15" fill="rgb(253,38,53)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="927.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="89.1801%" y="901" width="0.0120%" height="15" fill="rgb(234,63,51)" fg:x="7418" fg:w="1"/><text x="89.4301%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="89.1921%" y="965" width="0.0120%" height="15" fill="rgb(205,23,31)" fg:x="7419" fg:w="1"/><text x="89.4421%" y="975.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="89.1921%" y="949" width="0.0120%" height="15" fill="rgb(210,184,50)" fg:x="7419" fg:w="1"/><text x="89.4421%" y="959.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="89.1921%" y="933" width="0.0120%" height="15" fill="rgb(222,112,26)" fg:x="7419" fg:w="1"/><text x="89.4421%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="89.1921%" y="917" width="0.0120%" height="15" fill="rgb(250,98,18)" fg:x="7419" fg:w="1"/><text x="89.4421%" y="927.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.1921%" y="901" width="0.0120%" height="15" fill="rgb(250,34,12)" fg:x="7419" fg:w="1"/><text x="89.4421%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="89.1921%" y="885" width="0.0120%" height="15" fill="rgb(236,141,30)" fg:x="7419" fg:w="1"/><text x="89.4421%" y="895.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="89.2041%" y="805" width="0.0240%" height="15" fill="rgb(246,134,38)" fg:x="7420" fg:w="2"/><text x="89.4541%" y="815.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="89.2041%" y="821" width="0.0361%" height="15" fill="rgb(240,114,4)" fg:x="7420" fg:w="3"/><text x="89.4541%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.2282%" y="805" width="0.0120%" height="15" fill="rgb(243,113,39)" fg:x="7422" fg:w="1"/><text x="89.4782%" y="815.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.2642%" y="661" width="0.0120%" height="15" fill="rgb(239,215,4)" fg:x="7425" fg:w="1"/><text x="89.5142%" y="671.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (1 samples, 0.01%)</title><rect x="89.2642%" y="645" width="0.0120%" height="15" fill="rgb(236,229,45)" fg:x="7425" fg:w="1"/><text x="89.5142%" y="655.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (7 samples, 0.08%)</title><rect x="89.2041%" y="965" width="0.0842%" height="15" fill="rgb(242,2,6)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.08%)</title><rect x="89.2041%" y="949" width="0.0842%" height="15" fill="rgb(239,108,21)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.08%)</title><rect x="89.2041%" y="933" width="0.0842%" height="15" fill="rgb(215,168,34)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.08%)</title><rect x="89.2041%" y="917" width="0.0842%" height="15" fill="rgb(238,31,17)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.08%)</title><rect x="89.2041%" y="901" width="0.0842%" height="15" fill="rgb(220,133,11)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (7 samples, 0.08%)</title><rect x="89.2041%" y="885" width="0.0842%" height="15" fill="rgb(212,158,23)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (7 samples, 0.08%)</title><rect x="89.2041%" y="869" width="0.0842%" height="15" fill="rgb(223,172,7)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.08%)</title><rect x="89.2041%" y="853" width="0.0842%" height="15" fill="rgb(244,3,52)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (7 samples, 0.08%)</title><rect x="89.2041%" y="837" width="0.0842%" height="15" fill="rgb(207,69,27)" fg:x="7420" fg:w="7"/><text x="89.4541%" y="847.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.05%)</title><rect x="89.2402%" y="821" width="0.0481%" height="15" fill="rgb(213,136,45)" fg:x="7423" fg:w="4"/><text x="89.4902%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="89.2402%" y="805" width="0.0481%" height="15" fill="rgb(218,79,17)" fg:x="7423" fg:w="4"/><text x="89.4902%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.05%)</title><rect x="89.2402%" y="789" width="0.0481%" height="15" fill="rgb(216,106,36)" fg:x="7423" fg:w="4"/><text x="89.4902%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.05%)</title><rect x="89.2402%" y="773" width="0.0481%" height="15" fill="rgb(251,27,45)" fg:x="7423" fg:w="4"/><text x="89.4902%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.05%)</title><rect x="89.2402%" y="757" width="0.0481%" height="15" fill="rgb(232,21,34)" fg:x="7423" fg:w="4"/><text x="89.4902%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3 samples, 0.04%)</title><rect x="89.2522%" y="741" width="0.0361%" height="15" fill="rgb(249,191,16)" fg:x="7424" fg:w="3"/><text x="89.5022%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (3 samples, 0.04%)</title><rect x="89.2522%" y="725" width="0.0361%" height="15" fill="rgb(224,88,20)" fg:x="7424" fg:w="3"/><text x="89.5022%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="89.2522%" y="709" width="0.0361%" height="15" fill="rgb(237,93,27)" fg:x="7424" fg:w="3"/><text x="89.5022%" y="719.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="89.2522%" y="693" width="0.0361%" height="15" fill="rgb(226,198,48)" fg:x="7424" fg:w="3"/><text x="89.5022%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="89.2642%" y="677" width="0.0240%" height="15" fill="rgb(207,162,53)" fg:x="7425" fg:w="2"/><text x="89.5142%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.2763%" y="661" width="0.0120%" height="15" fill="rgb(207,169,9)" fg:x="7426" fg:w="1"/><text x="89.5263%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="89.2763%" y="645" width="0.0120%" height="15" fill="rgb(224,166,46)" fg:x="7426" fg:w="1"/><text x="89.5263%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.2763%" y="629" width="0.0120%" height="15" fill="rgb(233,26,6)" fg:x="7426" fg:w="1"/><text x="89.5263%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="89.2763%" y="613" width="0.0120%" height="15" fill="rgb(218,106,45)" fg:x="7426" fg:w="1"/><text x="89.5263%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="89.2763%" y="597" width="0.0120%" height="15" fill="rgb(240,217,4)" fg:x="7426" fg:w="1"/><text x="89.5263%" y="607.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.2763%" y="581" width="0.0120%" height="15" fill="rgb(246,171,10)" fg:x="7426" fg:w="1"/><text x="89.5263%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="89.3244%" y="917" width="0.0120%" height="15" fill="rgb(223,197,30)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="89.3244%" y="901" width="0.0120%" height="15" fill="rgb(207,92,16)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="89.3244%" y="885" width="0.0120%" height="15" fill="rgb(211,6,44)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="89.3244%" y="869" width="0.0120%" height="15" fill="rgb(219,139,2)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,smithereens::Residue,(),&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;smithereens::Residue,alloc::vec::Vec&lt;smithereens::Residue&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;,&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="89.3244%" y="853" width="0.0120%" height="15" fill="rgb(224,103,21)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;smithereens::Residue,alloc::vec::Vec&lt;smithereens::Residue&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;,&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="89.3244%" y="837" width="0.0120%" height="15" fill="rgb(254,110,48)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;,&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::{{closure}}&gt;&gt;::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="89.3244%" y="821" width="0.0120%" height="15" fill="rgb(212,88,19)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (1 samples, 0.01%)</title><rect x="89.3244%" y="805" width="0.0120%" height="15" fill="rgb(248,103,6)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="815.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.3244%" y="789" width="0.0120%" height="15" fill="rgb(214,53,46)" fg:x="7430" fg:w="1"/><text x="89.5744%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.07%)</title><rect x="89.2883%" y="965" width="0.0721%" height="15" fill="rgb(236,190,24)" fg:x="7427" fg:w="6"/><text x="89.5383%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="89.2883%" y="949" width="0.0721%" height="15" fill="rgb(254,58,28)" fg:x="7427" fg:w="6"/><text x="89.5383%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="89.2883%" y="933" width="0.0721%" height="15" fill="rgb(243,63,27)" fg:x="7427" fg:w="6"/><text x="89.5383%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="89.3364%" y="917" width="0.0240%" height="15" fill="rgb(206,81,20)" fg:x="7431" fg:w="2"/><text x="89.5864%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="89.3364%" y="901" width="0.0240%" height="15" fill="rgb(252,69,51)" fg:x="7431" fg:w="2"/><text x="89.5864%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="89.3364%" y="885" width="0.0240%" height="15" fill="rgb(222,213,4)" fg:x="7431" fg:w="2"/><text x="89.5864%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="89.3364%" y="869" width="0.0240%" height="15" fill="rgb(226,198,12)" fg:x="7431" fg:w="2"/><text x="89.5864%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.3484%" y="853" width="0.0120%" height="15" fill="rgb(248,115,11)" fg:x="7432" fg:w="1"/><text x="89.5984%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.3484%" y="837" width="0.0120%" height="15" fill="rgb(221,148,54)" fg:x="7432" fg:w="1"/><text x="89.5984%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.3484%" y="821" width="0.0120%" height="15" fill="rgb(214,209,51)" fg:x="7432" fg:w="1"/><text x="89.5984%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.50%)</title><rect x="88.8675%" y="1125" width="0.5049%" height="15" fill="rgb(249,116,53)" fg:x="7392" fg:w="42"/><text x="89.1175%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (42 samples, 0.50%)</title><rect x="88.8675%" y="1109" width="0.5049%" height="15" fill="rgb(248,170,1)" fg:x="7392" fg:w="42"/><text x="89.1175%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (41 samples, 0.49%)</title><rect x="88.8795%" y="1093" width="0.4929%" height="15" fill="rgb(244,105,10)" fg:x="7393" fg:w="41"/><text x="89.1295%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (41 samples, 0.49%)</title><rect x="88.8795%" y="1077" width="0.4929%" height="15" fill="rgb(229,100,5)" fg:x="7393" fg:w="41"/><text x="89.1295%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (15 samples, 0.18%)</title><rect x="89.1921%" y="1061" width="0.1803%" height="15" fill="rgb(233,221,39)" fg:x="7419" fg:w="15"/><text x="89.4421%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (15 samples, 0.18%)</title><rect x="89.1921%" y="1045" width="0.1803%" height="15" fill="rgb(233,88,21)" fg:x="7419" fg:w="15"/><text x="89.4421%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (15 samples, 0.18%)</title><rect x="89.1921%" y="1029" width="0.1803%" height="15" fill="rgb(206,13,0)" fg:x="7419" fg:w="15"/><text x="89.4421%" y="1039.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (15 samples, 0.18%)</title><rect x="89.1921%" y="1013" width="0.1803%" height="15" fill="rgb(242,15,35)" fg:x="7419" fg:w="15"/><text x="89.4421%" y="1023.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (15 samples, 0.18%)</title><rect x="89.1921%" y="997" width="0.1803%" height="15" fill="rgb(247,142,41)" fg:x="7419" fg:w="15"/><text x="89.4421%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (15 samples, 0.18%)</title><rect x="89.1921%" y="981" width="0.1803%" height="15" fill="rgb(245,51,29)" fg:x="7419" fg:w="15"/><text x="89.4421%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="89.3604%" y="965" width="0.0120%" height="15" fill="rgb(228,209,43)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.3604%" y="949" width="0.0120%" height="15" fill="rgb(233,185,9)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="89.3604%" y="933" width="0.0120%" height="15" fill="rgb(226,93,0)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="89.3604%" y="917" width="0.0120%" height="15" fill="rgb(245,194,43)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="89.3604%" y="901" width="0.0120%" height="15" fill="rgb(211,145,34)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="89.3604%" y="885" width="0.0120%" height="15" fill="rgb(231,228,28)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.3604%" y="869" width="0.0120%" height="15" fill="rgb(236,149,4)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="89.3604%" y="853" width="0.0120%" height="15" fill="rgb(234,114,38)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="89.3604%" y="837" width="0.0120%" height="15" fill="rgb(246,132,51)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="847.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="89.3604%" y="821" width="0.0120%" height="15" fill="rgb(251,137,22)" fg:x="7433" fg:w="1"/><text x="89.6104%" y="831.50"></text></g><g><title>rust_decimal::decimal::flags (1 samples, 0.01%)</title><rect x="89.3724%" y="853" width="0.0120%" height="15" fill="rgb(243,59,52)" fg:x="7434" fg:w="1"/><text x="89.6224%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.3724%" y="965" width="0.0240%" height="15" fill="rgb(239,56,28)" fg:x="7434" fg:w="2"/><text x="89.6224%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="89.3724%" y="949" width="0.0240%" height="15" fill="rgb(218,168,27)" fg:x="7434" fg:w="2"/><text x="89.6224%" y="959.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="89.3724%" y="933" width="0.0240%" height="15" fill="rgb(232,165,11)" fg:x="7434" fg:w="2"/><text x="89.6224%" y="943.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.3724%" y="917" width="0.0240%" height="15" fill="rgb(253,55,41)" fg:x="7434" fg:w="2"/><text x="89.6224%" y="927.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.3724%" y="901" width="0.0240%" height="15" fill="rgb(233,206,24)" fg:x="7434" fg:w="2"/><text x="89.6224%" y="911.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.3724%" y="885" width="0.0240%" height="15" fill="rgb(220,199,8)" fg:x="7434" fg:w="2"/><text x="89.6224%" y="895.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (2 samples, 0.02%)</title><rect x="89.3724%" y="869" width="0.0240%" height="15" fill="rgb(254,65,26)" fg:x="7434" fg:w="2"/><text x="89.6224%" y="879.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="89.3845%" y="853" width="0.0120%" height="15" fill="rgb(253,102,23)" fg:x="7435" fg:w="1"/><text x="89.6345%" y="863.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.3965%" y="949" width="0.0240%" height="15" fill="rgb(231,103,35)" fg:x="7436" fg:w="2"/><text x="89.6465%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="89.3965%" y="933" width="0.0240%" height="15" fill="rgb(238,26,10)" fg:x="7436" fg:w="2"/><text x="89.6465%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="89.3965%" y="917" width="0.0240%" height="15" fill="rgb(234,191,34)" fg:x="7436" fg:w="2"/><text x="89.6465%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.3965%" y="901" width="0.0240%" height="15" fill="rgb(206,210,9)" fg:x="7436" fg:w="2"/><text x="89.6465%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.3965%" y="885" width="0.0240%" height="15" fill="rgb(219,155,3)" fg:x="7436" fg:w="2"/><text x="89.6465%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.3965%" y="869" width="0.0240%" height="15" fill="rgb(221,62,52)" fg:x="7436" fg:w="2"/><text x="89.6465%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.4085%" y="853" width="0.0120%" height="15" fill="rgb(215,197,36)" fg:x="7437" fg:w="1"/><text x="89.6585%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="89.3724%" y="981" width="0.0601%" height="15" fill="rgb(226,222,6)" fg:x="7434" fg:w="5"/><text x="89.6224%" y="991.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="89.3965%" y="965" width="0.0361%" height="15" fill="rgb(215,58,28)" fg:x="7436" fg:w="3"/><text x="89.6465%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="89.4205%" y="949" width="0.0120%" height="15" fill="rgb(212,148,2)" fg:x="7438" fg:w="1"/><text x="89.6705%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="89.4205%" y="933" width="0.0120%" height="15" fill="rgb(208,21,42)" fg:x="7438" fg:w="1"/><text x="89.6705%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.4205%" y="917" width="0.0120%" height="15" fill="rgb(209,107,26)" fg:x="7438" fg:w="1"/><text x="89.6705%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.4205%" y="901" width="0.0120%" height="15" fill="rgb(254,60,47)" fg:x="7438" fg:w="1"/><text x="89.6705%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.4205%" y="885" width="0.0120%" height="15" fill="rgb(207,226,45)" fg:x="7438" fg:w="1"/><text x="89.6705%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.4205%" y="869" width="0.0120%" height="15" fill="rgb(223,124,22)" fg:x="7438" fg:w="1"/><text x="89.6705%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="89.4326%" y="981" width="0.0120%" height="15" fill="rgb(240,162,13)" fg:x="7439" fg:w="1"/><text x="89.6826%" y="991.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="89.4326%" y="965" width="0.0120%" height="15" fill="rgb(244,199,31)" fg:x="7439" fg:w="1"/><text x="89.6826%" y="975.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="89.4326%" y="949" width="0.0120%" height="15" fill="rgb(207,92,16)" fg:x="7439" fg:w="1"/><text x="89.6826%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="89.4326%" y="933" width="0.0120%" height="15" fill="rgb(215,31,19)" fg:x="7439" fg:w="1"/><text x="89.6826%" y="943.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (49 samples, 0.59%)</title><rect x="88.8675%" y="1157" width="0.5891%" height="15" fill="rgb(245,118,14)" fg:x="7392" fg:w="49"/><text x="89.1175%" y="1167.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (49 samples, 0.59%)</title><rect x="88.8675%" y="1141" width="0.5891%" height="15" fill="rgb(248,12,46)" fg:x="7392" fg:w="49"/><text x="89.1175%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (7 samples, 0.08%)</title><rect x="89.3724%" y="1125" width="0.0842%" height="15" fill="rgb(209,119,0)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.08%)</title><rect x="89.3724%" y="1109" width="0.0842%" height="15" fill="rgb(254,51,44)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.08%)</title><rect x="89.3724%" y="1093" width="0.0842%" height="15" fill="rgb(253,182,35)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (7 samples, 0.08%)</title><rect x="89.3724%" y="1077" width="0.0842%" height="15" fill="rgb(205,198,39)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (7 samples, 0.08%)</title><rect x="89.3724%" y="1061" width="0.0842%" height="15" fill="rgb(251,175,48)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (7 samples, 0.08%)</title><rect x="89.3724%" y="1045" width="0.0842%" height="15" fill="rgb(239,38,17)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1055.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (7 samples, 0.08%)</title><rect x="89.3724%" y="1029" width="0.0842%" height="15" fill="rgb(212,101,8)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.08%)</title><rect x="89.3724%" y="1013" width="0.0842%" height="15" fill="rgb(228,35,17)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.08%)</title><rect x="89.3724%" y="997" width="0.0842%" height="15" fill="rgb(214,95,8)" fg:x="7434" fg:w="7"/><text x="89.6224%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="89.4446%" y="981" width="0.0120%" height="15" fill="rgb(210,176,35)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="89.4446%" y="965" width="0.0120%" height="15" fill="rgb(226,4,3)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="89.4446%" y="949" width="0.0120%" height="15" fill="rgb(232,133,14)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="89.4446%" y="933" width="0.0120%" height="15" fill="rgb(250,191,8)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.4446%" y="917" width="0.0120%" height="15" fill="rgb(213,12,45)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.4446%" y="901" width="0.0120%" height="15" fill="rgb(233,78,26)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="89.4446%" y="885" width="0.0120%" height="15" fill="rgb(245,222,11)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.4446%" y="869" width="0.0120%" height="15" fill="rgb(216,174,12)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.4446%" y="853" width="0.0120%" height="15" fill="rgb(213,15,9)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.4446%" y="837" width="0.0120%" height="15" fill="rgb(238,103,32)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="847.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="89.4446%" y="821" width="0.0120%" height="15" fill="rgb(245,85,15)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.4446%" y="805" width="0.0120%" height="15" fill="rgb(254,204,5)" fg:x="7440" fg:w="1"/><text x="89.6946%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="89.4686%" y="965" width="0.0240%" height="15" fill="rgb(231,178,15)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="89.4686%" y="949" width="0.0240%" height="15" fill="rgb(248,151,3)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="89.4686%" y="933" width="0.0240%" height="15" fill="rgb(250,139,13)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="89.4686%" y="917" width="0.0240%" height="15" fill="rgb(243,107,53)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="89.4686%" y="901" width="0.0240%" height="15" fill="rgb(232,81,15)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="89.4686%" y="885" width="0.0240%" height="15" fill="rgb(225,187,48)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="89.4686%" y="869" width="0.0240%" height="15" fill="rgb(205,116,12)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="89.4686%" y="853" width="0.0240%" height="15" fill="rgb(220,222,31)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="89.4686%" y="837" width="0.0240%" height="15" fill="rgb(233,187,49)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="847.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="89.4686%" y="821" width="0.0240%" height="15" fill="rgb(211,168,53)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="831.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="89.4686%" y="805" width="0.0240%" height="15" fill="rgb(206,160,16)" fg:x="7442" fg:w="2"/><text x="89.7186%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.4806%" y="789" width="0.0120%" height="15" fill="rgb(254,164,13)" fg:x="7443" fg:w="1"/><text x="89.7306%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="89.4927%" y="853" width="0.0120%" height="15" fill="rgb(229,45,30)" fg:x="7444" fg:w="1"/><text x="89.7427%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="89.4927%" y="837" width="0.0120%" height="15" fill="rgb(237,32,10)" fg:x="7444" fg:w="1"/><text x="89.7427%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="89.4927%" y="821" width="0.0120%" height="15" fill="rgb(251,20,47)" fg:x="7444" fg:w="1"/><text x="89.7427%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="89.4927%" y="805" width="0.0120%" height="15" fill="rgb(251,116,12)" fg:x="7444" fg:w="1"/><text x="89.7427%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.5047%" y="821" width="0.0120%" height="15" fill="rgb(214,227,27)" fg:x="7445" fg:w="1"/><text x="89.7547%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="89.5047%" y="805" width="0.0120%" height="15" fill="rgb(248,10,53)" fg:x="7445" fg:w="1"/><text x="89.7547%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="89.5047%" y="789" width="0.0120%" height="15" fill="rgb(221,176,25)" fg:x="7445" fg:w="1"/><text x="89.7547%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="89.5047%" y="773" width="0.0120%" height="15" fill="rgb(205,70,46)" fg:x="7445" fg:w="1"/><text x="89.7547%" y="783.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.5167%" y="805" width="0.0120%" height="15" fill="rgb(217,45,38)" fg:x="7446" fg:w="1"/><text x="89.7667%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="89.5167%" y="789" width="0.0120%" height="15" fill="rgb(243,6,54)" fg:x="7446" fg:w="1"/><text x="89.7667%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="89.5167%" y="773" width="0.0120%" height="15" fill="rgb(242,76,23)" fg:x="7446" fg:w="1"/><text x="89.7667%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.5167%" y="757" width="0.0120%" height="15" fill="rgb(239,166,0)" fg:x="7446" fg:w="1"/><text x="89.7667%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.5167%" y="741" width="0.0120%" height="15" fill="rgb(238,174,32)" fg:x="7446" fg:w="1"/><text x="89.7667%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.5167%" y="725" width="0.0120%" height="15" fill="rgb(238,124,44)" fg:x="7446" fg:w="1"/><text x="89.7667%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.05%)</title><rect x="89.4927%" y="869" width="0.0481%" height="15" fill="rgb(206,185,9)" fg:x="7444" fg:w="4"/><text x="89.7427%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="89.5047%" y="853" width="0.0361%" height="15" fill="rgb(215,157,17)" fg:x="7445" fg:w="3"/><text x="89.7547%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="89.5047%" y="837" width="0.0361%" height="15" fill="rgb(251,17,29)" fg:x="7445" fg:w="3"/><text x="89.7547%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.5167%" y="821" width="0.0240%" height="15" fill="rgb(227,113,27)" fg:x="7446" fg:w="2"/><text x="89.7667%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="89.5287%" y="805" width="0.0120%" height="15" fill="rgb(217,226,24)" fg:x="7447" fg:w="1"/><text x="89.7787%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="89.5287%" y="789" width="0.0120%" height="15" fill="rgb(251,99,38)" fg:x="7447" fg:w="1"/><text x="89.7787%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.5287%" y="773" width="0.0120%" height="15" fill="rgb(231,147,19)" fg:x="7447" fg:w="1"/><text x="89.7787%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.5287%" y="757" width="0.0120%" height="15" fill="rgb(230,86,8)" fg:x="7447" fg:w="1"/><text x="89.7787%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.5287%" y="741" width="0.0120%" height="15" fill="rgb(237,159,39)" fg:x="7447" fg:w="1"/><text x="89.7787%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="89.5287%" y="725" width="0.0120%" height="15" fill="rgb(247,179,47)" fg:x="7447" fg:w="1"/><text x="89.7787%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.5287%" y="709" width="0.0120%" height="15" fill="rgb(253,152,26)" fg:x="7447" fg:w="1"/><text x="89.7787%" y="719.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="89.5528%" y="773" width="0.0120%" height="15" fill="rgb(222,211,15)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="89.5528%" y="757" width="0.0120%" height="15" fill="rgb(236,193,6)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="89.5528%" y="741" width="0.0120%" height="15" fill="rgb(226,206,10)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="89.5528%" y="725" width="0.0120%" height="15" fill="rgb(213,125,22)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="89.5528%" y="709" width="0.0120%" height="15" fill="rgb(221,66,28)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="89.5528%" y="693" width="0.0120%" height="15" fill="rgb(222,84,53)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="89.5528%" y="677" width="0.0120%" height="15" fill="rgb(243,50,15)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.5528%" y="661" width="0.0120%" height="15" fill="rgb(208,184,23)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="671.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.5528%" y="645" width="0.0120%" height="15" fill="rgb(221,83,2)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.5528%" y="629" width="0.0120%" height="15" fill="rgb(236,53,24)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="639.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.5528%" y="613" width="0.0120%" height="15" fill="rgb(244,171,29)" fg:x="7449" fg:w="1"/><text x="89.8028%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="89.5648%" y="773" width="0.0120%" height="15" fill="rgb(205,19,11)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.5648%" y="757" width="0.0120%" height="15" fill="rgb(207,108,29)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.5648%" y="741" width="0.0120%" height="15" fill="rgb(236,215,43)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="89.5648%" y="725" width="0.0120%" height="15" fill="rgb(213,58,35)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="89.5648%" y="709" width="0.0120%" height="15" fill="rgb(220,211,46)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="89.5648%" y="693" width="0.0120%" height="15" fill="rgb(212,134,16)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="89.5648%" y="677" width="0.0120%" height="15" fill="rgb(232,90,44)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="89.5648%" y="661" width="0.0120%" height="15" fill="rgb(212,18,36)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="89.5648%" y="645" width="0.0120%" height="15" fill="rgb(206,112,24)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="89.5648%" y="629" width="0.0120%" height="15" fill="rgb(238,223,40)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="89.5648%" y="613" width="0.0120%" height="15" fill="rgb(226,169,20)" fg:x="7450" fg:w="1"/><text x="89.8148%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.10%)</title><rect x="89.4927%" y="933" width="0.0962%" height="15" fill="rgb(241,64,52)" fg:x="7444" fg:w="8"/><text x="89.7427%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8 samples, 0.10%)</title><rect x="89.4927%" y="917" width="0.0962%" height="15" fill="rgb(228,120,25)" fg:x="7444" fg:w="8"/><text x="89.7427%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8 samples, 0.10%)</title><rect x="89.4927%" y="901" width="0.0962%" height="15" fill="rgb(234,108,19)" fg:x="7444" fg:w="8"/><text x="89.7427%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (8 samples, 0.10%)</title><rect x="89.4927%" y="885" width="0.0962%" height="15" fill="rgb(236,133,29)" fg:x="7444" fg:w="8"/><text x="89.7427%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.05%)</title><rect x="89.5408%" y="869" width="0.0481%" height="15" fill="rgb(246,174,53)" fg:x="7448" fg:w="4"/><text x="89.7908%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4 samples, 0.05%)</title><rect x="89.5408%" y="853" width="0.0481%" height="15" fill="rgb(210,105,35)" fg:x="7448" fg:w="4"/><text x="89.7908%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (3 samples, 0.04%)</title><rect x="89.5528%" y="837" width="0.0361%" height="15" fill="rgb(225,27,26)" fg:x="7449" fg:w="3"/><text x="89.8028%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3 samples, 0.04%)</title><rect x="89.5528%" y="821" width="0.0361%" height="15" fill="rgb(233,2,39)" fg:x="7449" fg:w="3"/><text x="89.8028%" y="831.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.04%)</title><rect x="89.5528%" y="805" width="0.0361%" height="15" fill="rgb(219,164,26)" fg:x="7449" fg:w="3"/><text x="89.8028%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="89.5528%" y="789" width="0.0361%" height="15" fill="rgb(236,211,5)" fg:x="7449" fg:w="3"/><text x="89.8028%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="89.5768%" y="773" width="0.0120%" height="15" fill="rgb(244,227,23)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.5768%" y="757" width="0.0120%" height="15" fill="rgb(230,184,8)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="89.5768%" y="741" width="0.0120%" height="15" fill="rgb(217,125,48)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="89.5768%" y="725" width="0.0120%" height="15" fill="rgb(223,192,47)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="89.5768%" y="709" width="0.0120%" height="15" fill="rgb(226,119,10)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="89.5768%" y="693" width="0.0120%" height="15" fill="rgb(221,49,29)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.5768%" y="677" width="0.0120%" height="15" fill="rgb(217,205,19)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="89.5768%" y="661" width="0.0120%" height="15" fill="rgb(242,104,7)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="89.5768%" y="645" width="0.0120%" height="15" fill="rgb(209,154,48)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="655.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="89.5768%" y="629" width="0.0120%" height="15" fill="rgb(219,213,46)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.5768%" y="613" width="0.0120%" height="15" fill="rgb(229,105,38)" fg:x="7451" fg:w="1"/><text x="89.8268%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.11%)</title><rect x="89.4927%" y="965" width="0.1082%" height="15" fill="rgb(205,151,5)" fg:x="7444" fg:w="9"/><text x="89.7427%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.11%)</title><rect x="89.4927%" y="949" width="0.1082%" height="15" fill="rgb(248,115,40)" fg:x="7444" fg:w="9"/><text x="89.7427%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="89.5888%" y="933" width="0.0120%" height="15" fill="rgb(206,179,2)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="89.5888%" y="917" width="0.0120%" height="15" fill="rgb(230,103,24)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="89.5888%" y="901" width="0.0120%" height="15" fill="rgb(218,152,4)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="89.5888%" y="885" width="0.0120%" height="15" fill="rgb(236,161,54)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="89.5888%" y="869" width="0.0120%" height="15" fill="rgb(226,65,17)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="89.5888%" y="853" width="0.0120%" height="15" fill="rgb(221,134,44)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="863.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="89.5888%" y="837" width="0.0120%" height="15" fill="rgb(251,129,4)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="89.5888%" y="821" width="0.0120%" height="15" fill="rgb(244,32,34)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="805" width="0.0120%" height="15" fill="rgb(251,224,37)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="789" width="0.0120%" height="15" fill="rgb(248,117,31)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="773" width="0.0120%" height="15" fill="rgb(222,208,37)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="757" width="0.0120%" height="15" fill="rgb(234,211,25)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="767.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="89.5888%" y="741" width="0.0120%" height="15" fill="rgb(211,72,6)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="751.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="725" width="0.0120%" height="15" fill="rgb(249,198,38)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="735.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="709" width="0.0120%" height="15" fill="rgb(221,86,51)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="719.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="693" width="0.0120%" height="15" fill="rgb(226,178,43)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="89.5888%" y="677" width="0.0120%" height="15" fill="rgb(215,145,7)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="89.5888%" y="661" width="0.0120%" height="15" fill="rgb(250,202,36)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.5888%" y="645" width="0.0120%" height="15" fill="rgb(215,86,13)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.5888%" y="629" width="0.0120%" height="15" fill="rgb(221,134,12)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.5888%" y="613" width="0.0120%" height="15" fill="rgb(213,82,10)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.5888%" y="597" width="0.0120%" height="15" fill="rgb(214,142,0)" fg:x="7452" fg:w="1"/><text x="89.8388%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="89.6009%" y="965" width="0.0120%" height="15" fill="rgb(205,145,9)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="89.6009%" y="949" width="0.0120%" height="15" fill="rgb(244,214,8)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="89.6009%" y="933" width="0.0120%" height="15" fill="rgb(224,72,51)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="943.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.6009%" y="917" width="0.0120%" height="15" fill="rgb(233,137,37)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="927.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.6009%" y="901" width="0.0120%" height="15" fill="rgb(208,71,28)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="89.6009%" y="885" width="0.0120%" height="15" fill="rgb(226,31,7)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="89.6009%" y="869" width="0.0120%" height="15" fill="rgb(229,62,18)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="89.6009%" y="853" width="0.0120%" height="15" fill="rgb(226,74,28)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.6009%" y="837" width="0.0120%" height="15" fill="rgb(214,170,18)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.6009%" y="821" width="0.0120%" height="15" fill="rgb(227,229,35)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="89.6009%" y="805" width="0.0120%" height="15" fill="rgb(225,181,39)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.6009%" y="789" width="0.0120%" height="15" fill="rgb(253,124,44)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.6009%" y="773" width="0.0120%" height="15" fill="rgb(220,75,18)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.6009%" y="757" width="0.0120%" height="15" fill="rgb(239,175,43)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="767.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="89.6009%" y="741" width="0.0120%" height="15" fill="rgb(228,112,50)" fg:x="7453" fg:w="1"/><text x="89.8509%" y="751.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.6129%" y="613" width="0.0120%" height="15" fill="rgb(232,105,36)" fg:x="7454" fg:w="1"/><text x="89.8629%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="89.6129%" y="597" width="0.0120%" height="15" fill="rgb(227,137,47)" fg:x="7454" fg:w="1"/><text x="89.8629%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="89.6129%" y="581" width="0.0120%" height="15" fill="rgb(217,51,9)" fg:x="7454" fg:w="1"/><text x="89.8629%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.6129%" y="565" width="0.0120%" height="15" fill="rgb(245,117,0)" fg:x="7454" fg:w="1"/><text x="89.8629%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.6129%" y="549" width="0.0120%" height="15" fill="rgb(252,52,30)" fg:x="7454" fg:w="1"/><text x="89.8629%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.6129%" y="533" width="0.0120%" height="15" fill="rgb(227,85,33)" fg:x="7454" fg:w="1"/><text x="89.8629%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="89.6129%" y="677" width="0.0240%" height="15" fill="rgb(220,157,20)" fg:x="7454" fg:w="2"/><text x="89.8629%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="89.6129%" y="661" width="0.0240%" height="15" fill="rgb(254,14,34)" fg:x="7454" fg:w="2"/><text x="89.8629%" y="671.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.6129%" y="645" width="0.0240%" height="15" fill="rgb(216,103,41)" fg:x="7454" fg:w="2"/><text x="89.8629%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.6129%" y="629" width="0.0240%" height="15" fill="rgb(245,221,9)" fg:x="7454" fg:w="2"/><text x="89.8629%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="89.6249%" y="613" width="0.0120%" height="15" fill="rgb(254,136,47)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="89.6249%" y="597" width="0.0120%" height="15" fill="rgb(235,71,46)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.6249%" y="581" width="0.0120%" height="15" fill="rgb(242,154,29)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.6249%" y="565" width="0.0120%" height="15" fill="rgb(210,65,31)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="89.6249%" y="549" width="0.0120%" height="15" fill="rgb(244,9,50)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="559.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="89.6249%" y="533" width="0.0120%" height="15" fill="rgb(215,141,38)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="543.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="89.6249%" y="517" width="0.0120%" height="15" fill="rgb(241,129,6)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="527.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="89.6249%" y="501" width="0.0120%" height="15" fill="rgb(253,169,4)" fg:x="7455" fg:w="1"/><text x="89.8749%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.04%)</title><rect x="89.6129%" y="773" width="0.0361%" height="15" fill="rgb(237,82,36)" fg:x="7454" fg:w="3"/><text x="89.8629%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.04%)</title><rect x="89.6129%" y="757" width="0.0361%" height="15" fill="rgb(209,171,11)" fg:x="7454" fg:w="3"/><text x="89.8629%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.04%)</title><rect x="89.6129%" y="741" width="0.0361%" height="15" fill="rgb(242,19,22)" fg:x="7454" fg:w="3"/><text x="89.8629%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.04%)</title><rect x="89.6129%" y="725" width="0.0361%" height="15" fill="rgb(251,122,24)" fg:x="7454" fg:w="3"/><text x="89.8629%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.04%)</title><rect x="89.6129%" y="709" width="0.0361%" height="15" fill="rgb(226,166,42)" fg:x="7454" fg:w="3"/><text x="89.8629%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3 samples, 0.04%)</title><rect x="89.6129%" y="693" width="0.0361%" height="15" fill="rgb(244,101,48)" fg:x="7454" fg:w="3"/><text x="89.8629%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="89.6369%" y="677" width="0.0120%" height="15" fill="rgb(227,125,1)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="89.6369%" y="661" width="0.0120%" height="15" fill="rgb(206,79,43)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="89.6369%" y="645" width="0.0120%" height="15" fill="rgb(241,109,41)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="89.6369%" y="629" width="0.0120%" height="15" fill="rgb(219,73,4)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="639.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="89.6369%" y="613" width="0.0120%" height="15" fill="rgb(239,25,41)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.6369%" y="597" width="0.0120%" height="15" fill="rgb(208,88,46)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="89.6369%" y="581" width="0.0120%" height="15" fill="rgb(239,184,9)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.6369%" y="565" width="0.0120%" height="15" fill="rgb(223,114,13)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.6369%" y="549" width="0.0120%" height="15" fill="rgb(214,28,42)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="89.6369%" y="533" width="0.0120%" height="15" fill="rgb(252,32,44)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="89.6369%" y="517" width="0.0120%" height="15" fill="rgb(231,159,4)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="89.6369%" y="501" width="0.0120%" height="15" fill="rgb(210,35,26)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="89.6369%" y="485" width="0.0120%" height="15" fill="rgb(208,190,37)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="89.6369%" y="469" width="0.0120%" height="15" fill="rgb(226,148,22)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.01%)</title><rect x="89.6369%" y="453" width="0.0120%" height="15" fill="rgb(242,153,24)" fg:x="7456" fg:w="1"/><text x="89.8869%" y="463.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.6610%" y="405" width="0.0120%" height="15" fill="rgb(213,133,7)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="415.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.6610%" y="389" width="0.0120%" height="15" fill="rgb(248,206,18)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.6610%" y="373" width="0.0120%" height="15" fill="rgb(233,157,4)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="89.6610%" y="357" width="0.0120%" height="15" fill="rgb(249,179,32)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="89.6610%" y="341" width="0.0120%" height="15" fill="rgb(248,69,35)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="351.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="89.6610%" y="325" width="0.0120%" height="15" fill="rgb(249,158,38)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.6610%" y="309" width="0.0120%" height="15" fill="rgb(223,18,43)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.6610%" y="293" width="0.0120%" height="15" fill="rgb(238,42,45)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.6610%" y="277" width="0.0120%" height="15" fill="rgb(219,65,47)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="287.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="89.6610%" y="261" width="0.0120%" height="15" fill="rgb(248,153,12)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.6610%" y="245" width="0.0120%" height="15" fill="rgb(240,118,4)" fg:x="7458" fg:w="1"/><text x="89.9110%" y="255.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.04%)</title><rect x="89.6490%" y="533" width="0.0361%" height="15" fill="rgb(250,96,34)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="89.6490%" y="517" width="0.0361%" height="15" fill="rgb(221,15,4)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="527.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="89.6490%" y="501" width="0.0361%" height="15" fill="rgb(217,149,33)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="89.6490%" y="485" width="0.0361%" height="15" fill="rgb(213,58,29)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.04%)</title><rect x="89.6490%" y="469" width="0.0361%" height="15" fill="rgb(236,218,9)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.04%)</title><rect x="89.6490%" y="453" width="0.0361%" height="15" fill="rgb(248,40,19)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="463.50"></text></g><g><title>core::clone::Clone::clone (3 samples, 0.04%)</title><rect x="89.6490%" y="437" width="0.0361%" height="15" fill="rgb(212,17,6)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="447.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="89.6490%" y="421" width="0.0361%" height="15" fill="rgb(206,212,20)" fg:x="7457" fg:w="3"/><text x="89.8990%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="89.6730%" y="405" width="0.0120%" height="15" fill="rgb(229,80,37)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="89.6730%" y="389" width="0.0120%" height="15" fill="rgb(253,8,37)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="89.6730%" y="373" width="0.0120%" height="15" fill="rgb(215,16,43)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.6730%" y="357" width="0.0120%" height="15" fill="rgb(236,219,16)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.6730%" y="341" width="0.0120%" height="15" fill="rgb(251,0,3)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="89.6730%" y="325" width="0.0120%" height="15" fill="rgb(207,133,37)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.6730%" y="309" width="0.0120%" height="15" fill="rgb(250,143,20)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.6730%" y="293" width="0.0120%" height="15" fill="rgb(242,19,50)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.6730%" y="277" width="0.0120%" height="15" fill="rgb(206,124,43)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="287.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="89.6730%" y="261" width="0.0120%" height="15" fill="rgb(229,4,38)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.6730%" y="245" width="0.0120%" height="15" fill="rgb(247,220,45)" fg:x="7459" fg:w="1"/><text x="89.9230%" y="255.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="89.6850%" y="373" width="0.0120%" height="15" fill="rgb(247,195,0)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="89.6850%" y="357" width="0.0120%" height="15" fill="rgb(252,12,19)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="89.6850%" y="341" width="0.0120%" height="15" fill="rgb(222,49,50)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="89.6850%" y="325" width="0.0120%" height="15" fill="rgb(209,157,28)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="89.6850%" y="309" width="0.0120%" height="15" fill="rgb(238,174,24)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="89.6850%" y="293" width="0.0120%" height="15" fill="rgb(224,17,28)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="89.6850%" y="277" width="0.0120%" height="15" fill="rgb(249,7,29)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.6850%" y="261" width="0.0120%" height="15" fill="rgb(243,178,4)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="271.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.6850%" y="245" width="0.0120%" height="15" fill="rgb(246,138,35)" fg:x="7460" fg:w="1"/><text x="89.9350%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="89.6490%" y="693" width="0.0601%" height="15" fill="rgb(251,85,18)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="89.6490%" y="677" width="0.0601%" height="15" fill="rgb(254,55,9)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (5 samples, 0.06%)</title><rect x="89.6490%" y="661" width="0.0601%" height="15" fill="rgb(248,4,50)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="89.6490%" y="645" width="0.0601%" height="15" fill="rgb(215,208,14)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="89.6490%" y="629" width="0.0601%" height="15" fill="rgb(218,37,18)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.06%)</title><rect x="89.6490%" y="613" width="0.0601%" height="15" fill="rgb(206,104,13)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="623.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (5 samples, 0.06%)</title><rect x="89.6490%" y="597" width="0.0601%" height="15" fill="rgb(248,94,22)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="89.6490%" y="581" width="0.0601%" height="15" fill="rgb(235,42,46)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="89.6490%" y="565" width="0.0601%" height="15" fill="rgb(220,228,48)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="575.50"></text></g><g><title>smithereens::fragment::_{{closure}} (5 samples, 0.06%)</title><rect x="89.6490%" y="549" width="0.0601%" height="15" fill="rgb(216,58,12)" fg:x="7457" fg:w="5"/><text x="89.8990%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="89.6850%" y="533" width="0.0240%" height="15" fill="rgb(223,97,52)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="89.6850%" y="517" width="0.0240%" height="15" fill="rgb(208,159,17)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="89.6850%" y="501" width="0.0240%" height="15" fill="rgb(215,172,9)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="89.6850%" y="485" width="0.0240%" height="15" fill="rgb(252,175,30)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="89.6850%" y="469" width="0.0240%" height="15" fill="rgb(209,159,10)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.02%)</title><rect x="89.6850%" y="453" width="0.0240%" height="15" fill="rgb(229,73,51)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.02%)</title><rect x="89.6850%" y="437" width="0.0240%" height="15" fill="rgb(208,212,43)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.02%)</title><rect x="89.6850%" y="421" width="0.0240%" height="15" fill="rgb(254,123,53)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="431.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="89.6850%" y="405" width="0.0240%" height="15" fill="rgb(254,128,49)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="89.6850%" y="389" width="0.0240%" height="15" fill="rgb(246,16,16)" fg:x="7460" fg:w="2"/><text x="89.9350%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="89.6970%" y="373" width="0.0120%" height="15" fill="rgb(209,200,1)" fg:x="7461" fg:w="1"/><text x="89.9470%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.6970%" y="357" width="0.0120%" height="15" fill="rgb(235,9,3)" fg:x="7461" fg:w="1"/><text x="89.9470%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.6970%" y="341" width="0.0120%" height="15" fill="rgb(233,121,54)" fg:x="7461" fg:w="1"/><text x="89.9470%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="89.6970%" y="325" width="0.0120%" height="15" fill="rgb(236,80,25)" fg:x="7461" fg:w="1"/><text x="89.9470%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="89.6970%" y="309" width="0.0120%" height="15" fill="rgb(220,44,24)" fg:x="7461" fg:w="1"/><text x="89.9470%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="89.6970%" y="293" width="0.0120%" height="15" fill="rgb(236,225,16)" fg:x="7461" fg:w="1"/><text x="89.9470%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.07%)</title><rect x="89.6490%" y="725" width="0.0721%" height="15" fill="rgb(237,140,0)" fg:x="7457" fg:w="6"/><text x="89.8990%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.07%)</title><rect x="89.6490%" y="709" width="0.0721%" height="15" fill="rgb(243,225,53)" fg:x="7457" fg:w="6"/><text x="89.8990%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="89.7091%" y="693" width="0.0120%" height="15" fill="rgb(240,140,30)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="89.7091%" y="677" width="0.0120%" height="15" fill="rgb(217,51,16)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="89.7091%" y="661" width="0.0120%" height="15" fill="rgb(245,75,50)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="89.7091%" y="645" width="0.0120%" height="15" fill="rgb(208,174,22)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="89.7091%" y="629" width="0.0120%" height="15" fill="rgb(219,98,50)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="89.7091%" y="613" width="0.0120%" height="15" fill="rgb(243,138,3)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="89.7091%" y="597" width="0.0120%" height="15" fill="rgb(243,132,26)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="607.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="89.7091%" y="581" width="0.0120%" height="15" fill="rgb(250,201,8)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.7091%" y="565" width="0.0120%" height="15" fill="rgb(213,91,26)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.7091%" y="549" width="0.0120%" height="15" fill="rgb(229,117,1)" fg:x="7462" fg:w="1"/><text x="89.9591%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.08%)</title><rect x="89.6490%" y="773" width="0.0842%" height="15" fill="rgb(229,24,6)" fg:x="7457" fg:w="7"/><text x="89.8990%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.08%)</title><rect x="89.6490%" y="757" width="0.0842%" height="15" fill="rgb(206,69,11)" fg:x="7457" fg:w="7"/><text x="89.8990%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.08%)</title><rect x="89.6490%" y="741" width="0.0842%" height="15" fill="rgb(234,111,34)" fg:x="7457" fg:w="7"/><text x="89.8990%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.7211%" y="725" width="0.0120%" height="15" fill="rgb(213,187,51)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.7211%" y="709" width="0.0120%" height="15" fill="rgb(207,45,11)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="89.7211%" y="693" width="0.0120%" height="15" fill="rgb(225,151,47)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.7211%" y="677" width="0.0120%" height="15" fill="rgb(211,226,5)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="89.7211%" y="661" width="0.0120%" height="15" fill="rgb(214,83,52)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="89.7211%" y="645" width="0.0120%" height="15" fill="rgb(229,49,53)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="655.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="629" width="0.0120%" height="15" fill="rgb(246,8,28)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="89.7211%" y="613" width="0.0120%" height="15" fill="rgb(207,28,41)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="89.7211%" y="597" width="0.0120%" height="15" fill="rgb(254,22,25)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="89.7211%" y="581" width="0.0120%" height="15" fill="rgb(209,120,42)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="565" width="0.0120%" height="15" fill="rgb(216,194,18)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="549" width="0.0120%" height="15" fill="rgb(213,70,17)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="533" width="0.0120%" height="15" fill="rgb(228,66,19)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="89.7211%" y="517" width="0.0120%" height="15" fill="rgb(236,221,54)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="89.7211%" y="501" width="0.0120%" height="15" fill="rgb(207,175,15)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="485" width="0.0120%" height="15" fill="rgb(234,76,8)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="469" width="0.0120%" height="15" fill="rgb(243,106,0)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="479.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="89.7211%" y="453" width="0.0120%" height="15" fill="rgb(208,48,19)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="437" width="0.0120%" height="15" fill="rgb(251,50,29)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="447.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="421" width="0.0120%" height="15" fill="rgb(222,31,49)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="405" width="0.0120%" height="15" fill="rgb(232,33,18)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="89.7211%" y="389" width="0.0120%" height="15" fill="rgb(209,1,44)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="89.7211%" y="373" width="0.0120%" height="15" fill="rgb(211,7,1)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="89.7211%" y="357" width="0.0120%" height="15" fill="rgb(224,111,27)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="341" width="0.0120%" height="15" fill="rgb(252,195,39)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="325" width="0.0120%" height="15" fill="rgb(237,198,5)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="309" width="0.0120%" height="15" fill="rgb(232,148,1)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="319.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="293" width="0.0120%" height="15" fill="rgb(249,41,3)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="303.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="277" width="0.0120%" height="15" fill="rgb(215,14,33)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="261" width="0.0120%" height="15" fill="rgb(209,146,24)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="89.7211%" y="245" width="0.0120%" height="15" fill="rgb(219,51,47)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="89.7211%" y="229" width="0.0120%" height="15" fill="rgb(234,217,40)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="89.7211%" y="213" width="0.0120%" height="15" fill="rgb(228,34,26)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="197" width="0.0120%" height="15" fill="rgb(224,50,29)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="89.7211%" y="181" width="0.0120%" height="15" fill="rgb(205,79,51)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="165" width="0.0120%" height="15" fill="rgb(218,136,28)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="175.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="149" width="0.0120%" height="15" fill="rgb(220,150,10)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="159.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="133" width="0.0120%" height="15" fill="rgb(242,158,47)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="117" width="0.0120%" height="15" fill="rgb(209,68,0)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="127.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="101" width="0.0120%" height="15" fill="rgb(208,13,41)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="85" width="0.0120%" height="15" fill="rgb(226,201,7)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="95.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="89.7211%" y="69" width="0.0120%" height="15" fill="rgb(236,103,26)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="79.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="89.7211%" y="53" width="0.0120%" height="15" fill="rgb(243,162,8)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.7211%" y="37" width="0.0120%" height="15" fill="rgb(237,225,11)" fg:x="7463" fg:w="1"/><text x="89.9711%" y="47.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="89.7331%" y="773" width="0.0240%" height="15" fill="rgb(247,186,32)" fg:x="7464" fg:w="2"/><text x="89.9831%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="89.7331%" y="757" width="0.0240%" height="15" fill="rgb(215,26,28)" fg:x="7464" fg:w="2"/><text x="89.9831%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="89.7331%" y="741" width="0.0240%" height="15" fill="rgb(208,121,6)" fg:x="7464" fg:w="2"/><text x="89.9831%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="89.7331%" y="725" width="0.0240%" height="15" fill="rgb(225,91,3)" fg:x="7464" fg:w="2"/><text x="89.9831%" y="735.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.7451%" y="709" width="0.0120%" height="15" fill="rgb(246,119,36)" fg:x="7465" fg:w="1"/><text x="89.9951%" y="719.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.7451%" y="693" width="0.0120%" height="15" fill="rgb(254,173,2)" fg:x="7465" fg:w="1"/><text x="89.9951%" y="703.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.7451%" y="677" width="0.0120%" height="15" fill="rgb(209,87,54)" fg:x="7465" fg:w="1"/><text x="89.9951%" y="687.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="89.7451%" y="661" width="0.0120%" height="15" fill="rgb(223,216,20)" fg:x="7465" fg:w="1"/><text x="89.9951%" y="671.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="89.7451%" y="645" width="0.0120%" height="15" fill="rgb(220,31,8)" fg:x="7465" fg:w="1"/><text x="89.9951%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.7572%" y="597" width="0.0120%" height="15" fill="rgb(220,185,15)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="89.7572%" y="581" width="0.0120%" height="15" fill="rgb(247,190,50)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="89.7572%" y="565" width="0.0120%" height="15" fill="rgb(239,173,47)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="89.7572%" y="549" width="0.0120%" height="15" fill="rgb(218,190,42)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.7572%" y="533" width="0.0120%" height="15" fill="rgb(251,207,16)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="89.7572%" y="517" width="0.0120%" height="15" fill="rgb(222,199,47)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="89.7572%" y="501" width="0.0120%" height="15" fill="rgb(245,190,7)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.7572%" y="485" width="0.0120%" height="15" fill="rgb(239,85,38)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.7572%" y="469" width="0.0120%" height="15" fill="rgb(229,69,51)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.7572%" y="453" width="0.0120%" height="15" fill="rgb(231,104,51)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="463.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="89.7572%" y="437" width="0.0120%" height="15" fill="rgb(235,49,4)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.7572%" y="421" width="0.0120%" height="15" fill="rgb(246,166,20)" fg:x="7466" fg:w="1"/><text x="90.0072%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.7692%" y="597" width="0.0120%" height="15" fill="rgb(230,119,37)" fg:x="7467" fg:w="1"/><text x="90.0192%" y="607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.7692%" y="581" width="0.0120%" height="15" fill="rgb(234,77,34)" fg:x="7467" fg:w="1"/><text x="90.0192%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.7692%" y="565" width="0.0120%" height="15" fill="rgb(211,222,33)" fg:x="7467" fg:w="1"/><text x="90.0192%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="89.7692%" y="549" width="0.0120%" height="15" fill="rgb(226,45,42)" fg:x="7467" fg:w="1"/><text x="90.0192%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="89.7692%" y="533" width="0.0120%" height="15" fill="rgb(215,174,28)" fg:x="7467" fg:w="1"/><text x="90.0192%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="89.7692%" y="517" width="0.0120%" height="15" fill="rgb(254,173,49)" fg:x="7467" fg:w="1"/><text x="90.0192%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.7692%" y="501" width="0.0120%" height="15" fill="rgb(229,191,6)" fg:x="7467" fg:w="1"/><text x="90.0192%" y="511.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="89.7812%" y="549" width="0.0240%" height="15" fill="rgb(212,145,22)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="559.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="89.7812%" y="533" width="0.0240%" height="15" fill="rgb(226,6,51)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="89.7812%" y="517" width="0.0240%" height="15" fill="rgb(227,128,8)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="89.7812%" y="501" width="0.0240%" height="15" fill="rgb(205,24,10)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="89.7812%" y="485" width="0.0240%" height="15" fill="rgb(217,147,27)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="89.7812%" y="469" width="0.0240%" height="15" fill="rgb(250,82,42)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="89.7812%" y="453" width="0.0240%" height="15" fill="rgb(248,93,17)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="89.7812%" y="437" width="0.0240%" height="15" fill="rgb(254,212,40)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="89.7812%" y="421" width="0.0240%" height="15" fill="rgb(229,209,2)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="89.7812%" y="405" width="0.0240%" height="15" fill="rgb(211,50,43)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="89.7812%" y="389" width="0.0240%" height="15" fill="rgb(245,196,29)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="399.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="89.7812%" y="373" width="0.0240%" height="15" fill="rgb(216,132,13)" fg:x="7468" fg:w="2"/><text x="90.0312%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (6 samples, 0.07%)</title><rect x="89.7572%" y="725" width="0.0721%" height="15" fill="rgb(251,108,21)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="89.7572%" y="709" width="0.0721%" height="15" fill="rgb(229,174,54)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="719.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="89.7572%" y="693" width="0.0721%" height="15" fill="rgb(211,175,47)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="89.7572%" y="677" width="0.0721%" height="15" fill="rgb(234,5,37)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.07%)</title><rect x="89.7572%" y="661" width="0.0721%" height="15" fill="rgb(244,150,43)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6 samples, 0.07%)</title><rect x="89.7572%" y="645" width="0.0721%" height="15" fill="rgb(242,172,38)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="655.50"></text></g><g><title>core::clone::Clone::clone (6 samples, 0.07%)</title><rect x="89.7572%" y="629" width="0.0721%" height="15" fill="rgb(205,27,8)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="639.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="89.7572%" y="613" width="0.0721%" height="15" fill="rgb(217,57,3)" fg:x="7466" fg:w="6"/><text x="90.0072%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="89.7812%" y="597" width="0.0481%" height="15" fill="rgb(242,21,38)" fg:x="7468" fg:w="4"/><text x="90.0312%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="89.7812%" y="581" width="0.0481%" height="15" fill="rgb(209,64,43)" fg:x="7468" fg:w="4"/><text x="90.0312%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="89.7812%" y="565" width="0.0481%" height="15" fill="rgb(222,2,46)" fg:x="7468" fg:w="4"/><text x="90.0312%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="89.8052%" y="549" width="0.0240%" height="15" fill="rgb(218,19,44)" fg:x="7470" fg:w="2"/><text x="90.0552%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="89.8052%" y="533" width="0.0240%" height="15" fill="rgb(240,203,42)" fg:x="7470" fg:w="2"/><text x="90.0552%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="89.8052%" y="517" width="0.0240%" height="15" fill="rgb(229,23,45)" fg:x="7470" fg:w="2"/><text x="90.0552%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="89.8052%" y="501" width="0.0240%" height="15" fill="rgb(205,228,51)" fg:x="7470" fg:w="2"/><text x="90.0552%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="89.8052%" y="485" width="0.0240%" height="15" fill="rgb(239,36,20)" fg:x="7470" fg:w="2"/><text x="90.0552%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="89.8052%" y="469" width="0.0240%" height="15" fill="rgb(248,172,27)" fg:x="7470" fg:w="2"/><text x="90.0552%" y="479.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="89.8052%" y="453" width="0.0240%" height="15" fill="rgb(244,55,32)" fg:x="7470" fg:w="2"/><text x="90.0552%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.8173%" y="437" width="0.0120%" height="15" fill="rgb(215,97,16)" fg:x="7471" fg:w="1"/><text x="90.0673%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.8413%" y="629" width="0.0120%" height="15" fill="rgb(224,80,29)" fg:x="7473" fg:w="1"/><text x="90.0913%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="89.8413%" y="613" width="0.0120%" height="15" fill="rgb(216,93,47)" fg:x="7473" fg:w="1"/><text x="90.0913%" y="623.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="89.8413%" y="597" width="0.0120%" height="15" fill="rgb(238,159,10)" fg:x="7473" fg:w="1"/><text x="90.0913%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="89.8413%" y="581" width="0.0120%" height="15" fill="rgb(223,98,29)" fg:x="7473" fg:w="1"/><text x="90.0913%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.8413%" y="565" width="0.0120%" height="15" fill="rgb(210,176,23)" fg:x="7473" fg:w="1"/><text x="90.0913%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.8413%" y="549" width="0.0120%" height="15" fill="rgb(242,162,27)" fg:x="7473" fg:w="1"/><text x="90.0913%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.8413%" y="533" width="0.0120%" height="15" fill="rgb(245,109,32)" fg:x="7473" fg:w="1"/><text x="90.0913%" y="543.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="89.8533%" y="517" width="0.0120%" height="15" fill="rgb(248,87,8)" fg:x="7474" fg:w="1"/><text x="90.1033%" y="527.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="89.8533%" y="501" width="0.0120%" height="15" fill="rgb(250,160,50)" fg:x="7474" fg:w="1"/><text x="90.1033%" y="511.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="89.8533%" y="485" width="0.0120%" height="15" fill="rgb(246,165,25)" fg:x="7474" fg:w="1"/><text x="90.1033%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.05%)</title><rect x="89.8293%" y="677" width="0.0481%" height="15" fill="rgb(249,219,3)" fg:x="7472" fg:w="4"/><text x="90.0793%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="89.8293%" y="661" width="0.0481%" height="15" fill="rgb(226,66,5)" fg:x="7472" fg:w="4"/><text x="90.0793%" y="671.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="89.8413%" y="645" width="0.0361%" height="15" fill="rgb(250,220,43)" fg:x="7473" fg:w="3"/><text x="90.0913%" y="655.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.8533%" y="629" width="0.0240%" height="15" fill="rgb(225,111,31)" fg:x="7474" fg:w="2"/><text x="90.1033%" y="639.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="89.8533%" y="613" width="0.0240%" height="15" fill="rgb(248,106,18)" fg:x="7474" fg:w="2"/><text x="90.1033%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="89.8533%" y="597" width="0.0240%" height="15" fill="rgb(220,226,45)" fg:x="7474" fg:w="2"/><text x="90.1033%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="89.8533%" y="581" width="0.0240%" height="15" fill="rgb(208,58,53)" fg:x="7474" fg:w="2"/><text x="90.1033%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.8533%" y="565" width="0.0240%" height="15" fill="rgb(209,133,1)" fg:x="7474" fg:w="2"/><text x="90.1033%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.8533%" y="549" width="0.0240%" height="15" fill="rgb(228,216,27)" fg:x="7474" fg:w="2"/><text x="90.1033%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="89.8533%" y="533" width="0.0240%" height="15" fill="rgb(238,155,2)" fg:x="7474" fg:w="2"/><text x="90.1033%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="89.8654%" y="517" width="0.0120%" height="15" fill="rgb(244,99,37)" fg:x="7475" fg:w="1"/><text x="90.1154%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.28%)</title><rect x="89.6129%" y="917" width="0.2765%" height="15" fill="rgb(254,32,3)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 0.28%)</title><rect x="89.6129%" y="901" width="0.2765%" height="15" fill="rgb(234,46,50)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.28%)</title><rect x="89.6129%" y="885" width="0.2765%" height="15" fill="rgb(232,118,51)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.28%)</title><rect x="89.6129%" y="869" width="0.2765%" height="15" fill="rgb(207,24,32)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (23 samples, 0.28%)</title><rect x="89.6129%" y="853" width="0.2765%" height="15" fill="rgb(208,107,43)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.28%)</title><rect x="89.6129%" y="837" width="0.2765%" height="15" fill="rgb(231,28,9)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.28%)</title><rect x="89.6129%" y="821" width="0.2765%" height="15" fill="rgb(241,204,15)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (23 samples, 0.28%)</title><rect x="89.6129%" y="805" width="0.2765%" height="15" fill="rgb(214,54,15)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="815.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (23 samples, 0.28%)</title><rect x="89.6129%" y="789" width="0.2765%" height="15" fill="rgb(230,12,28)" fg:x="7454" fg:w="23"/><text x="89.8629%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.13%)</title><rect x="89.7572%" y="773" width="0.1322%" height="15" fill="rgb(221,171,5)" fg:x="7466" fg:w="11"/><text x="90.0072%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.13%)</title><rect x="89.7572%" y="757" width="0.1322%" height="15" fill="rgb(207,72,25)" fg:x="7466" fg:w="11"/><text x="90.0072%" y="767.50"></text></g><g><title>smithereens::fragment::_{{closure}} (11 samples, 0.13%)</title><rect x="89.7572%" y="741" width="0.1322%" height="15" fill="rgb(249,79,37)" fg:x="7466" fg:w="11"/><text x="90.0072%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.06%)</title><rect x="89.8293%" y="725" width="0.0601%" height="15" fill="rgb(209,98,49)" fg:x="7472" fg:w="5"/><text x="90.0793%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.06%)</title><rect x="89.8293%" y="709" width="0.0601%" height="15" fill="rgb(221,62,13)" fg:x="7472" fg:w="5"/><text x="90.0793%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.06%)</title><rect x="89.8293%" y="693" width="0.0601%" height="15" fill="rgb(223,39,6)" fg:x="7472" fg:w="5"/><text x="90.0793%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="89.8774%" y="677" width="0.0120%" height="15" fill="rgb(246,163,20)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="89.8774%" y="661" width="0.0120%" height="15" fill="rgb(211,111,29)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="89.8774%" y="645" width="0.0120%" height="15" fill="rgb(243,118,5)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8774%" y="629" width="0.0120%" height="15" fill="rgb(240,144,52)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8774%" y="613" width="0.0120%" height="15" fill="rgb(244,158,36)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="623.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="89.8774%" y="597" width="0.0120%" height="15" fill="rgb(241,109,37)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.8774%" y="581" width="0.0120%" height="15" fill="rgb(213,95,32)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="89.8774%" y="565" width="0.0120%" height="15" fill="rgb(252,193,9)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.8774%" y="549" width="0.0120%" height="15" fill="rgb(225,213,21)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.8774%" y="533" width="0.0120%" height="15" fill="rgb(220,172,46)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="89.8774%" y="517" width="0.0120%" height="15" fill="rgb(235,75,41)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="89.8774%" y="501" width="0.0120%" height="15" fill="rgb(213,86,9)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="89.8774%" y="485" width="0.0120%" height="15" fill="rgb(238,127,51)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="89.8774%" y="469" width="0.0120%" height="15" fill="rgb(215,2,54)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8774%" y="453" width="0.0120%" height="15" fill="rgb(245,80,6)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8774%" y="437" width="0.0120%" height="15" fill="rgb(233,106,42)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8774%" y="421" width="0.0120%" height="15" fill="rgb(244,86,38)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="89.8774%" y="405" width="0.0120%" height="15" fill="rgb(242,167,7)" fg:x="7476" fg:w="1"/><text x="90.1274%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.29%)</title><rect x="89.6129%" y="965" width="0.2885%" height="15" fill="rgb(218,216,3)" fg:x="7454" fg:w="24"/><text x="89.8629%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.29%)</title><rect x="89.6129%" y="949" width="0.2885%" height="15" fill="rgb(206,136,36)" fg:x="7454" fg:w="24"/><text x="89.8629%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (24 samples, 0.29%)</title><rect x="89.6129%" y="933" width="0.2885%" height="15" fill="rgb(206,206,15)" fg:x="7454" fg:w="24"/><text x="89.8629%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="917" width="0.0120%" height="15" fill="rgb(207,163,34)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="901" width="0.0120%" height="15" fill="rgb(240,127,22)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="885" width="0.0120%" height="15" fill="rgb(227,49,5)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="869" width="0.0120%" height="15" fill="rgb(231,8,6)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="89.8894%" y="853" width="0.0120%" height="15" fill="rgb(223,21,24)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="89.8894%" y="837" width="0.0120%" height="15" fill="rgb(244,44,52)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="847.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8894%" y="821" width="0.0120%" height="15" fill="rgb(207,73,28)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="89.8894%" y="805" width="0.0120%" height="15" fill="rgb(234,215,10)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.8894%" y="789" width="0.0120%" height="15" fill="rgb(236,85,3)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="89.8894%" y="773" width="0.0120%" height="15" fill="rgb(236,102,39)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="89.8894%" y="757" width="0.0120%" height="15" fill="rgb(243,50,8)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="89.8894%" y="741" width="0.0120%" height="15" fill="rgb(207,111,4)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="725" width="0.0120%" height="15" fill="rgb(230,52,42)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="709" width="0.0120%" height="15" fill="rgb(252,178,50)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="693" width="0.0120%" height="15" fill="rgb(234,46,35)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.8894%" y="677" width="0.0120%" height="15" fill="rgb(228,69,37)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="89.8894%" y="661" width="0.0120%" height="15" fill="rgb(221,21,11)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="89.8894%" y="645" width="0.0120%" height="15" fill="rgb(223,56,9)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="655.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8894%" y="629" width="0.0120%" height="15" fill="rgb(234,30,19)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="89.8894%" y="613" width="0.0120%" height="15" fill="rgb(211,64,54)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="89.8894%" y="597" width="0.0120%" height="15" fill="rgb(250,189,5)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="607.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="89.8894%" y="581" width="0.0120%" height="15" fill="rgb(214,180,13)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="591.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="89.8894%" y="565" width="0.0120%" height="15" fill="rgb(238,40,40)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="549" width="0.0120%" height="15" fill="rgb(214,101,38)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="559.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="533" width="0.0120%" height="15" fill="rgb(242,65,53)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="517" width="0.0120%" height="15" fill="rgb(230,22,45)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="89.8894%" y="501" width="0.0120%" height="15" fill="rgb(223,77,1)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="89.8894%" y="485" width="0.0120%" height="15" fill="rgb(227,33,37)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="495.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="469" width="0.0120%" height="15" fill="rgb(224,148,39)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="479.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="453" width="0.0120%" height="15" fill="rgb(232,212,39)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="463.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="437" width="0.0120%" height="15" fill="rgb(251,172,7)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="447.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="421" width="0.0120%" height="15" fill="rgb(219,39,9)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="89.8894%" y="405" width="0.0120%" height="15" fill="rgb(228,118,14)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="89.8894%" y="389" width="0.0120%" height="15" fill="rgb(207,140,10)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="89.8894%" y="373" width="0.0120%" height="15" fill="rgb(227,111,53)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="89.8894%" y="357" width="0.0120%" height="15" fill="rgb(216,165,16)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.8894%" y="341" width="0.0120%" height="15" fill="rgb(226,111,18)" fg:x="7477" fg:w="1"/><text x="90.1394%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="89.9014%" y="965" width="0.0120%" height="15" fill="rgb(251,27,17)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="89.9014%" y="949" width="0.0120%" height="15" fill="rgb(254,69,9)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="89.9014%" y="933" width="0.0120%" height="15" fill="rgb(234,140,37)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="89.9014%" y="917" width="0.0120%" height="15" fill="rgb(220,93,8)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.9014%" y="901" width="0.0120%" height="15" fill="rgb(236,113,3)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="89.9014%" y="885" width="0.0120%" height="15" fill="rgb(234,108,23)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="89.9014%" y="869" width="0.0120%" height="15" fill="rgb(205,114,34)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="879.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="89.9014%" y="853" width="0.0120%" height="15" fill="rgb(236,200,45)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="89.9014%" y="837" width="0.0120%" height="15" fill="rgb(227,194,29)" fg:x="7478" fg:w="1"/><text x="90.1514%" y="847.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (1 samples, 0.01%)</title><rect x="89.9134%" y="965" width="0.0120%" height="15" fill="rgb(250,76,42)" fg:x="7479" fg:w="1"/><text x="90.1634%" y="975.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (1 samples, 0.01%)</title><rect x="89.9134%" y="949" width="0.0120%" height="15" fill="rgb(208,128,8)" fg:x="7479" fg:w="1"/><text x="90.1634%" y="959.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next_edge (1 samples, 0.01%)</title><rect x="89.9134%" y="933" width="0.0120%" height="15" fill="rgb(229,209,35)" fg:x="7479" fg:w="1"/><text x="90.1634%" y="943.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next (1 samples, 0.01%)</title><rect x="89.9134%" y="917" width="0.0120%" height="15" fill="rgb(215,39,53)" fg:x="7479" fg:w="1"/><text x="90.1634%" y="927.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (1 samples, 0.01%)</title><rect x="89.9134%" y="901" width="0.0120%" height="15" fill="rgb(219,123,41)" fg:x="7479" fg:w="1"/><text x="90.1634%" y="911.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1 samples, 0.01%)</title><rect x="89.9134%" y="885" width="0.0120%" height="15" fill="rgb(212,158,18)" fg:x="7479" fg:w="1"/><text x="90.1634%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="89.9255%" y="949" width="0.0120%" height="15" fill="rgb(234,196,53)" fg:x="7480" fg:w="1"/><text x="90.1755%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="89.9255%" y="933" width="0.0120%" height="15" fill="rgb(210,139,12)" fg:x="7480" fg:w="1"/><text x="90.1755%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="89.9255%" y="917" width="0.0120%" height="15" fill="rgb(220,116,54)" fg:x="7480" fg:w="1"/><text x="90.1755%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="89.9255%" y="901" width="0.0120%" height="15" fill="rgb(247,103,28)" fg:x="7480" fg:w="1"/><text x="90.1755%" y="911.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="89.9255%" y="885" width="0.0120%" height="15" fill="rgb(253,156,45)" fg:x="7480" fg:w="1"/><text x="90.1755%" y="895.50"></text></g><g><title>smithereens::expand_from (3 samples, 0.04%)</title><rect x="89.9255%" y="965" width="0.0361%" height="15" fill="rgb(237,157,52)" fg:x="7480" fg:w="3"/><text x="90.1755%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="89.9375%" y="949" width="0.0240%" height="15" fill="rgb(253,112,16)" fg:x="7481" fg:w="2"/><text x="90.1875%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="89.9495%" y="933" width="0.0120%" height="15" fill="rgb(234,70,18)" fg:x="7482" fg:w="1"/><text x="90.1995%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="89.9495%" y="917" width="0.0120%" height="15" fill="rgb(247,138,19)" fg:x="7482" fg:w="1"/><text x="90.1995%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="89.9615%" y="933" width="0.0120%" height="15" fill="rgb(207,171,1)" fg:x="7483" fg:w="1"/><text x="90.2115%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="89.9615%" y="917" width="0.0120%" height="15" fill="rgb(239,213,3)" fg:x="7483" fg:w="1"/><text x="90.2115%" y="927.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9615%" y="901" width="0.0120%" height="15" fill="rgb(226,112,4)" fg:x="7483" fg:w="1"/><text x="90.2115%" y="911.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9615%" y="885" width="0.0120%" height="15" fill="rgb(252,170,12)" fg:x="7483" fg:w="1"/><text x="90.2115%" y="895.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9615%" y="869" width="0.0120%" height="15" fill="rgb(241,106,13)" fg:x="7483" fg:w="1"/><text x="90.2115%" y="879.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="89.9615%" y="853" width="0.0120%" height="15" fill="rgb(225,73,23)" fg:x="7483" fg:w="1"/><text x="90.2115%" y="863.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="89.9615%" y="837" width="0.0120%" height="15" fill="rgb(251,227,29)" fg:x="7483" fg:w="1"/><text x="90.2115%" y="847.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9736%" y="789" width="0.0120%" height="15" fill="rgb(237,144,13)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9736%" y="773" width="0.0120%" height="15" fill="rgb(232,106,46)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="89.9736%" y="757" width="0.0120%" height="15" fill="rgb(245,154,53)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="767.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="89.9736%" y="741" width="0.0120%" height="15" fill="rgb(212,119,47)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="751.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9736%" y="725" width="0.0120%" height="15" fill="rgb(253,135,25)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="735.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9736%" y="709" width="0.0120%" height="15" fill="rgb(253,208,39)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="719.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="89.9736%" y="693" width="0.0120%" height="15" fill="rgb(226,64,12)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="89.9736%" y="677" width="0.0120%" height="15" fill="rgb(214,162,37)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="89.9736%" y="661" width="0.0120%" height="15" fill="rgb(250,104,5)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.9736%" y="645" width="0.0120%" height="15" fill="rgb(220,202,50)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.9736%" y="629" width="0.0120%" height="15" fill="rgb(248,67,38)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="89.9736%" y="613" width="0.0120%" height="15" fill="rgb(242,94,35)" fg:x="7484" fg:w="1"/><text x="90.2236%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.04%)</title><rect x="89.9615%" y="965" width="0.0361%" height="15" fill="rgb(209,78,37)" fg:x="7483" fg:w="3"/><text x="90.2115%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.04%)</title><rect x="89.9615%" y="949" width="0.0361%" height="15" fill="rgb(230,126,47)" fg:x="7483" fg:w="3"/><text x="90.2115%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.02%)</title><rect x="89.9736%" y="933" width="0.0240%" height="15" fill="rgb(222,110,35)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="89.9736%" y="917" width="0.0240%" height="15" fill="rgb(233,154,20)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="89.9736%" y="901" width="0.0240%" height="15" fill="rgb(223,53,50)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.02%)</title><rect x="89.9736%" y="885" width="0.0240%" height="15" fill="rgb(251,27,26)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.02%)</title><rect x="89.9736%" y="869" width="0.0240%" height="15" fill="rgb(223,189,16)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2 samples, 0.02%)</title><rect x="89.9736%" y="853" width="0.0240%" height="15" fill="rgb(207,5,54)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="863.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (2 samples, 0.02%)</title><rect x="89.9736%" y="837" width="0.0240%" height="15" fill="rgb(254,124,50)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="89.9736%" y="821" width="0.0240%" height="15" fill="rgb(253,193,24)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="89.9736%" y="805" width="0.0240%" height="15" fill="rgb(235,170,24)" fg:x="7484" fg:w="2"/><text x="90.2236%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="89.9856%" y="789" width="0.0120%" height="15" fill="rgb(222,212,52)" fg:x="7485" fg:w="1"/><text x="90.2356%" y="799.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="89.9856%" y="773" width="0.0120%" height="15" fill="rgb(223,17,45)" fg:x="7485" fg:w="1"/><text x="90.2356%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (1 samples, 0.01%)</title><rect x="89.9976%" y="965" width="0.0120%" height="15" fill="rgb(227,103,26)" fg:x="7486" fg:w="1"/><text x="90.2476%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (1 samples, 0.01%)</title><rect x="89.9976%" y="949" width="0.0120%" height="15" fill="rgb(251,151,25)" fg:x="7486" fg:w="1"/><text x="90.2476%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.9976%" y="933" width="0.0120%" height="15" fill="rgb(248,144,29)" fg:x="7486" fg:w="1"/><text x="90.2476%" y="943.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.0096%" y="917" width="0.0120%" height="15" fill="rgb(245,97,16)" fg:x="7487" fg:w="1"/><text x="90.2596%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="90.0457%" y="789" width="0.0361%" height="15" fill="rgb(220,200,29)" fg:x="7490" fg:w="3"/><text x="90.2957%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="90.0457%" y="773" width="0.0361%" height="15" fill="rgb(206,38,29)" fg:x="7490" fg:w="3"/><text x="90.2957%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="90.0457%" y="757" width="0.0361%" height="15" fill="rgb(245,19,52)" fg:x="7490" fg:w="3"/><text x="90.2957%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="90.0457%" y="741" width="0.0361%" height="15" fill="rgb(205,67,43)" fg:x="7490" fg:w="3"/><text x="90.2957%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="90.0457%" y="725" width="0.0361%" height="15" fill="rgb(217,128,23)" fg:x="7490" fg:w="3"/><text x="90.2957%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.0818%" y="789" width="0.0481%" height="15" fill="rgb(210,109,28)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="799.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.0818%" y="773" width="0.0481%" height="15" fill="rgb(233,181,7)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.0818%" y="757" width="0.0481%" height="15" fill="rgb(244,11,22)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (4 samples, 0.05%)</title><rect x="90.0818%" y="741" width="0.0481%" height="15" fill="rgb(205,124,54)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.05%)</title><rect x="90.0818%" y="725" width="0.0481%" height="15" fill="rgb(218,21,27)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.05%)</title><rect x="90.0818%" y="709" width="0.0481%" height="15" fill="rgb(224,153,33)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="90.0818%" y="693" width="0.0481%" height="15" fill="rgb(240,219,28)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="90.0818%" y="677" width="0.0481%" height="15" fill="rgb(214,80,29)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="687.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="90.0818%" y="661" width="0.0481%" height="15" fill="rgb(247,148,44)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="671.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="90.0818%" y="645" width="0.0481%" height="15" fill="rgb(243,110,30)" fg:x="7493" fg:w="4"/><text x="90.3318%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.1178%" y="629" width="0.0120%" height="15" fill="rgb(243,173,41)" fg:x="7496" fg:w="1"/><text x="90.3678%" y="639.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.1298%" y="741" width="0.0120%" height="15" fill="rgb(225,160,47)" fg:x="7497" fg:w="1"/><text x="90.3798%" y="751.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.1298%" y="725" width="0.0120%" height="15" fill="rgb(215,44,21)" fg:x="7497" fg:w="1"/><text x="90.3798%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.1298%" y="709" width="0.0120%" height="15" fill="rgb(248,90,3)" fg:x="7497" fg:w="1"/><text x="90.3798%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.1298%" y="693" width="0.0120%" height="15" fill="rgb(220,196,49)" fg:x="7497" fg:w="1"/><text x="90.3798%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.1298%" y="677" width="0.0120%" height="15" fill="rgb(217,138,14)" fg:x="7497" fg:w="1"/><text x="90.3798%" y="687.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.1298%" y="661" width="0.0120%" height="15" fill="rgb(219,111,20)" fg:x="7497" fg:w="1"/><text x="90.3798%" y="671.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.1298%" y="645" width="0.0120%" height="15" fill="rgb(218,114,4)" fg:x="7497" fg:w="1"/><text x="90.3798%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="90.1419%" y="741" width="0.0240%" height="15" fill="rgb(238,133,3)" fg:x="7498" fg:w="2"/><text x="90.3919%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="90.1419%" y="725" width="0.0240%" height="15" fill="rgb(224,95,0)" fg:x="7498" fg:w="2"/><text x="90.3919%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="90.1419%" y="709" width="0.0240%" height="15" fill="rgb(220,169,35)" fg:x="7498" fg:w="2"/><text x="90.3919%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="90.1419%" y="693" width="0.0240%" height="15" fill="rgb(242,116,47)" fg:x="7498" fg:w="2"/><text x="90.3919%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="90.1419%" y="677" width="0.0240%" height="15" fill="rgb(251,42,20)" fg:x="7498" fg:w="2"/><text x="90.3919%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="90.1419%" y="661" width="0.0240%" height="15" fill="rgb(234,7,34)" fg:x="7498" fg:w="2"/><text x="90.3919%" y="671.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="90.1419%" y="645" width="0.0240%" height="15" fill="rgb(243,208,13)" fg:x="7498" fg:w="2"/><text x="90.3919%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.1539%" y="629" width="0.0120%" height="15" fill="rgb(227,33,28)" fg:x="7499" fg:w="1"/><text x="90.4039%" y="639.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (13 samples, 0.16%)</title><rect x="90.0216%" y="917" width="0.1563%" height="15" fill="rgb(250,47,37)" fg:x="7488" fg:w="13"/><text x="90.2716%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="90.0337%" y="901" width="0.1443%" height="15" fill="rgb(235,111,52)" fg:x="7489" fg:w="12"/><text x="90.2837%" y="911.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="90.0337%" y="885" width="0.1443%" height="15" fill="rgb(223,64,28)" fg:x="7489" fg:w="12"/><text x="90.2837%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="90.0337%" y="869" width="0.1443%" height="15" fill="rgb(236,67,22)" fg:x="7489" fg:w="12"/><text x="90.2837%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (12 samples, 0.14%)</title><rect x="90.0337%" y="853" width="0.1443%" height="15" fill="rgb(243,79,24)" fg:x="7489" fg:w="12"/><text x="90.2837%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (12 samples, 0.14%)</title><rect x="90.0337%" y="837" width="0.1443%" height="15" fill="rgb(241,225,22)" fg:x="7489" fg:w="12"/><text x="90.2837%" y="847.50"></text></g><g><title>core::clone::Clone::clone (12 samples, 0.14%)</title><rect x="90.0337%" y="821" width="0.1443%" height="15" fill="rgb(228,214,26)" fg:x="7489" fg:w="12"/><text x="90.2837%" y="831.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="90.0337%" y="805" width="0.1443%" height="15" fill="rgb(219,84,52)" fg:x="7489" fg:w="12"/><text x="90.2837%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="90.1298%" y="789" width="0.0481%" height="15" fill="rgb(220,12,22)" fg:x="7497" fg:w="4"/><text x="90.3798%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="90.1298%" y="773" width="0.0481%" height="15" fill="rgb(219,9,49)" fg:x="7497" fg:w="4"/><text x="90.3798%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="90.1298%" y="757" width="0.0481%" height="15" fill="rgb(237,40,43)" fg:x="7497" fg:w="4"/><text x="90.3798%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="90.1659%" y="741" width="0.0120%" height="15" fill="rgb(212,189,32)" fg:x="7500" fg:w="1"/><text x="90.4159%" y="751.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.1779%" y="805" width="0.0120%" height="15" fill="rgb(247,48,9)" fg:x="7501" fg:w="1"/><text x="90.4279%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="90.1779%" y="789" width="0.0120%" height="15" fill="rgb(247,112,3)" fg:x="7501" fg:w="1"/><text x="90.4279%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="90.1779%" y="773" width="0.0120%" height="15" fill="rgb(243,110,18)" fg:x="7501" fg:w="1"/><text x="90.4279%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.1779%" y="757" width="0.0120%" height="15" fill="rgb(233,223,44)" fg:x="7501" fg:w="1"/><text x="90.4279%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.1779%" y="741" width="0.0120%" height="15" fill="rgb(245,160,20)" fg:x="7501" fg:w="1"/><text x="90.4279%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.1779%" y="725" width="0.0120%" height="15" fill="rgb(225,37,1)" fg:x="7501" fg:w="1"/><text x="90.4279%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.1779%" y="709" width="0.0120%" height="15" fill="rgb(253,227,39)" fg:x="7501" fg:w="1"/><text x="90.4279%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="90.1779%" y="869" width="0.0240%" height="15" fill="rgb(240,179,26)" fg:x="7501" fg:w="2"/><text x="90.4279%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="90.1779%" y="853" width="0.0240%" height="15" fill="rgb(237,212,23)" fg:x="7501" fg:w="2"/><text x="90.4279%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="90.1779%" y="837" width="0.0240%" height="15" fill="rgb(221,38,11)" fg:x="7501" fg:w="2"/><text x="90.4279%" y="847.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="90.1779%" y="821" width="0.0240%" height="15" fill="rgb(215,85,6)" fg:x="7501" fg:w="2"/><text x="90.4279%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="90.1899%" y="805" width="0.0120%" height="15" fill="rgb(239,64,14)" fg:x="7502" fg:w="1"/><text x="90.4399%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="90.1899%" y="789" width="0.0120%" height="15" fill="rgb(215,150,32)" fg:x="7502" fg:w="1"/><text x="90.4399%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.1899%" y="773" width="0.0120%" height="15" fill="rgb(238,15,13)" fg:x="7502" fg:w="1"/><text x="90.4399%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.1899%" y="757" width="0.0120%" height="15" fill="rgb(251,87,8)" fg:x="7502" fg:w="1"/><text x="90.4399%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.1899%" y="741" width="0.0120%" height="15" fill="rgb(206,86,1)" fg:x="7502" fg:w="1"/><text x="90.4399%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.1899%" y="725" width="0.0120%" height="15" fill="rgb(208,151,45)" fg:x="7502" fg:w="1"/><text x="90.4399%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.76%)</title><rect x="89.4566%" y="1077" width="0.7574%" height="15" fill="rgb(231,181,24)" fg:x="7441" fg:w="63"/><text x="89.7066%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.76%)</title><rect x="89.4566%" y="1061" width="0.7574%" height="15" fill="rgb(240,106,29)" fg:x="7441" fg:w="63"/><text x="89.7066%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (63 samples, 0.76%)</title><rect x="89.4566%" y="1045" width="0.7574%" height="15" fill="rgb(227,166,11)" fg:x="7441" fg:w="63"/><text x="89.7066%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.76%)</title><rect x="89.4566%" y="1029" width="0.7574%" height="15" fill="rgb(254,14,34)" fg:x="7441" fg:w="63"/><text x="89.7066%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (63 samples, 0.76%)</title><rect x="89.4566%" y="1013" width="0.7574%" height="15" fill="rgb(223,222,6)" fg:x="7441" fg:w="63"/><text x="89.7066%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (63 samples, 0.76%)</title><rect x="89.4566%" y="997" width="0.7574%" height="15" fill="rgb(245,69,24)" fg:x="7441" fg:w="63"/><text x="89.7066%" y="1007.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (63 samples, 0.76%)</title><rect x="89.4566%" y="981" width="0.7574%" height="15" fill="rgb(213,193,7)" fg:x="7441" fg:w="63"/><text x="89.7066%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.20%)</title><rect x="90.0096%" y="965" width="0.2044%" height="15" fill="rgb(237,92,51)" fg:x="7487" fg:w="17"/><text x="90.2596%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.20%)</title><rect x="90.0096%" y="949" width="0.2044%" height="15" fill="rgb(225,194,6)" fg:x="7487" fg:w="17"/><text x="90.2596%" y="959.50"></text></g><g><title>smithereens::fragment::_{{closure}} (17 samples, 0.20%)</title><rect x="90.0096%" y="933" width="0.2044%" height="15" fill="rgb(205,159,49)" fg:x="7487" fg:w="17"/><text x="90.2596%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="90.1779%" y="917" width="0.0361%" height="15" fill="rgb(219,69,2)" fg:x="7501" fg:w="3"/><text x="90.4279%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.04%)</title><rect x="90.1779%" y="901" width="0.0361%" height="15" fill="rgb(215,107,24)" fg:x="7501" fg:w="3"/><text x="90.4279%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.04%)</title><rect x="90.1779%" y="885" width="0.0361%" height="15" fill="rgb(249,208,29)" fg:x="7501" fg:w="3"/><text x="90.4279%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="90.2020%" y="869" width="0.0120%" height="15" fill="rgb(213,147,10)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="90.2020%" y="853" width="0.0120%" height="15" fill="rgb(254,140,42)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="90.2020%" y="837" width="0.0120%" height="15" fill="rgb(249,9,15)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2020%" y="821" width="0.0120%" height="15" fill="rgb(210,19,33)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="831.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2020%" y="805" width="0.0120%" height="15" fill="rgb(241,121,22)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="815.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="90.2020%" y="789" width="0.0120%" height="15" fill="rgb(244,69,52)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.2020%" y="773" width="0.0120%" height="15" fill="rgb(244,191,54)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="90.2020%" y="757" width="0.0120%" height="15" fill="rgb(250,3,53)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="90.2020%" y="741" width="0.0120%" height="15" fill="rgb(205,77,3)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="90.2020%" y="725" width="0.0120%" height="15" fill="rgb(207,155,3)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.2020%" y="709" width="0.0120%" height="15" fill="rgb(224,79,2)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="90.2020%" y="693" width="0.0120%" height="15" fill="rgb(243,172,5)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="90.2020%" y="677" width="0.0120%" height="15" fill="rgb(217,23,43)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="90.2020%" y="661" width="0.0120%" height="15" fill="rgb(223,109,20)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2020%" y="645" width="0.0120%" height="15" fill="rgb(232,159,21)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="655.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2020%" y="629" width="0.0120%" height="15" fill="rgb(219,58,2)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="639.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2020%" y="613" width="0.0120%" height="15" fill="rgb(241,56,8)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2020%" y="597" width="0.0120%" height="15" fill="rgb(249,10,27)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.2020%" y="581" width="0.0120%" height="15" fill="rgb(248,177,5)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.2020%" y="565" width="0.0120%" height="15" fill="rgb(239,12,30)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.2020%" y="549" width="0.0120%" height="15" fill="rgb(229,164,25)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="559.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2020%" y="533" width="0.0120%" height="15" fill="rgb(231,217,50)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="543.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2020%" y="517" width="0.0120%" height="15" fill="rgb(247,99,32)" fg:x="7503" fg:w="1"/><text x="90.4520%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (64 samples, 0.77%)</title><rect x="89.4566%" y="1109" width="0.7694%" height="15" fill="rgb(240,74,50)" fg:x="7441" fg:w="64"/><text x="89.7066%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (64 samples, 0.77%)</title><rect x="89.4566%" y="1093" width="0.7694%" height="15" fill="rgb(218,54,8)" fg:x="7441" fg:w="64"/><text x="89.7066%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.2140%" y="1077" width="0.0120%" height="15" fill="rgb(227,132,20)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.2140%" y="1061" width="0.0120%" height="15" fill="rgb(232,134,12)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.2140%" y="1045" width="0.0120%" height="15" fill="rgb(250,129,18)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.2140%" y="1029" width="0.0120%" height="15" fill="rgb(232,129,47)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="90.2140%" y="1013" width="0.0120%" height="15" fill="rgb(230,31,40)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="1023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="90.2140%" y="997" width="0.0120%" height="15" fill="rgb(232,126,10)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="1007.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="90.2140%" y="981" width="0.0120%" height="15" fill="rgb(205,46,31)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="991.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="90.2140%" y="965" width="0.0120%" height="15" fill="rgb(232,37,37)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.2140%" y="949" width="0.0120%" height="15" fill="rgb(240,91,16)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.2140%" y="933" width="0.0120%" height="15" fill="rgb(224,160,9)" fg:x="7504" fg:w="1"/><text x="90.4640%" y="943.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.2260%" y="869" width="0.0120%" height="15" fill="rgb(215,116,14)" fg:x="7505" fg:w="1"/><text x="90.4760%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="90.2260%" y="853" width="0.0120%" height="15" fill="rgb(235,46,36)" fg:x="7505" fg:w="1"/><text x="90.4760%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="90.2260%" y="837" width="0.0120%" height="15" fill="rgb(238,39,28)" fg:x="7505" fg:w="1"/><text x="90.4760%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.01%)</title><rect x="90.2260%" y="821" width="0.0120%" height="15" fill="rgb(242,125,29)" fg:x="7505" fg:w="1"/><text x="90.4760%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="90.2260%" y="901" width="0.0240%" height="15" fill="rgb(238,211,30)" fg:x="7505" fg:w="2"/><text x="90.4760%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="90.2260%" y="885" width="0.0240%" height="15" fill="rgb(227,201,28)" fg:x="7505" fg:w="2"/><text x="90.4760%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.2380%" y="869" width="0.0120%" height="15" fill="rgb(238,77,29)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.2380%" y="853" width="0.0120%" height="15" fill="rgb(213,221,40)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.2380%" y="837" width="0.0120%" height="15" fill="rgb(226,220,44)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.2380%" y="821" width="0.0120%" height="15" fill="rgb(228,90,23)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="831.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2380%" y="805" width="0.0120%" height="15" fill="rgb(235,72,29)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2380%" y="789" width="0.0120%" height="15" fill="rgb(248,117,39)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2380%" y="773" width="0.0120%" height="15" fill="rgb(225,43,28)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.2380%" y="757" width="0.0120%" height="15" fill="rgb(240,93,4)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.2380%" y="741" width="0.0120%" height="15" fill="rgb(234,178,27)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.2380%" y="725" width="0.0120%" height="15" fill="rgb(254,88,22)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.2380%" y="709" width="0.0120%" height="15" fill="rgb(240,206,50)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.2380%" y="693" width="0.0120%" height="15" fill="rgb(249,103,8)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="90.2380%" y="677" width="0.0120%" height="15" fill="rgb(241,178,36)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="90.2380%" y="661" width="0.0120%" height="15" fill="rgb(246,110,15)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="90.2380%" y="645" width="0.0120%" height="15" fill="rgb(207,14,43)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="90.2380%" y="629" width="0.0120%" height="15" fill="rgb(253,219,19)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="639.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="90.2380%" y="613" width="0.0120%" height="15" fill="rgb(216,126,5)" fg:x="7506" fg:w="1"/><text x="90.4880%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.04%)</title><rect x="90.2260%" y="997" width="0.0361%" height="15" fill="rgb(218,78,42)" fg:x="7505" fg:w="3"/><text x="90.4760%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.04%)</title><rect x="90.2260%" y="981" width="0.0361%" height="15" fill="rgb(215,154,40)" fg:x="7505" fg:w="3"/><text x="90.4760%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.04%)</title><rect x="90.2260%" y="965" width="0.0361%" height="15" fill="rgb(235,129,32)" fg:x="7505" fg:w="3"/><text x="90.4760%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.04%)</title><rect x="90.2260%" y="949" width="0.0361%" height="15" fill="rgb(218,51,8)" fg:x="7505" fg:w="3"/><text x="90.4760%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.04%)</title><rect x="90.2260%" y="933" width="0.0361%" height="15" fill="rgb(245,48,4)" fg:x="7505" fg:w="3"/><text x="90.4760%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3 samples, 0.04%)</title><rect x="90.2260%" y="917" width="0.0361%" height="15" fill="rgb(250,175,12)" fg:x="7505" fg:w="3"/><text x="90.4760%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="90.2501%" y="901" width="0.0120%" height="15" fill="rgb(237,95,40)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="90.2501%" y="885" width="0.0120%" height="15" fill="rgb(244,120,0)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2501%" y="869" width="0.0120%" height="15" fill="rgb(241,19,42)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2501%" y="853" width="0.0120%" height="15" fill="rgb(217,174,48)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="863.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="90.2501%" y="837" width="0.0120%" height="15" fill="rgb(239,36,38)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.2501%" y="821" width="0.0120%" height="15" fill="rgb(220,63,49)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="90.2501%" y="805" width="0.0120%" height="15" fill="rgb(240,101,13)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="90.2501%" y="789" width="0.0120%" height="15" fill="rgb(209,184,51)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="90.2501%" y="773" width="0.0120%" height="15" fill="rgb(206,136,39)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="90.2501%" y="757" width="0.0120%" height="15" fill="rgb(254,47,45)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.2501%" y="741" width="0.0120%" height="15" fill="rgb(252,103,20)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.2501%" y="725" width="0.0120%" height="15" fill="rgb(230,69,12)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="90.2501%" y="709" width="0.0120%" height="15" fill="rgb(219,2,28)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="90.2501%" y="693" width="0.0120%" height="15" fill="rgb(210,9,12)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="90.2501%" y="677" width="0.0120%" height="15" fill="rgb(235,99,33)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="90.2501%" y="661" width="0.0120%" height="15" fill="rgb(230,11,38)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="671.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="90.2501%" y="645" width="0.0120%" height="15" fill="rgb(217,129,0)" fg:x="7507" fg:w="1"/><text x="90.5001%" y="655.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="90.2621%" y="805" width="0.0120%" height="15" fill="rgb(222,198,4)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="815.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="90.2621%" y="789" width="0.0120%" height="15" fill="rgb(246,170,27)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="90.2621%" y="773" width="0.0120%" height="15" fill="rgb(229,17,28)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2621%" y="757" width="0.0120%" height="15" fill="rgb(233,198,48)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2621%" y="741" width="0.0120%" height="15" fill="rgb(238,103,23)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2621%" y="725" width="0.0120%" height="15" fill="rgb(206,91,41)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="90.2621%" y="709" width="0.0120%" height="15" fill="rgb(227,34,25)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="90.2621%" y="693" width="0.0120%" height="15" fill="rgb(210,110,44)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2621%" y="677" width="0.0120%" height="15" fill="rgb(216,189,8)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2621%" y="661" width="0.0120%" height="15" fill="rgb(234,9,46)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="671.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="90.2621%" y="645" width="0.0120%" height="15" fill="rgb(251,200,5)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="629" width="0.0120%" height="15" fill="rgb(238,165,37)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="639.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="613" width="0.0120%" height="15" fill="rgb(232,77,38)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="597" width="0.0120%" height="15" fill="rgb(253,179,33)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="90.2621%" y="581" width="0.0120%" height="15" fill="rgb(240,13,35)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="90.2621%" y="565" width="0.0120%" height="15" fill="rgb(242,150,49)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="90.2621%" y="549" width="0.0120%" height="15" fill="rgb(237,176,28)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2621%" y="533" width="0.0120%" height="15" fill="rgb(214,176,33)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2621%" y="517" width="0.0120%" height="15" fill="rgb(214,25,12)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="501" width="0.0120%" height="15" fill="rgb(238,190,20)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="511.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="485" width="0.0120%" height="15" fill="rgb(208,11,19)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="495.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="469" width="0.0120%" height="15" fill="rgb(239,90,4)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="453" width="0.0120%" height="15" fill="rgb(248,110,3)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="437" width="0.0120%" height="15" fill="rgb(210,41,30)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="421" width="0.0120%" height="15" fill="rgb(239,36,8)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="90.2621%" y="405" width="0.0120%" height="15" fill="rgb(237,201,47)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="90.2621%" y="389" width="0.0120%" height="15" fill="rgb(224,140,29)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.2621%" y="373" width="0.0120%" height="15" fill="rgb(231,209,17)" fg:x="7508" fg:w="1"/><text x="90.5121%" y="383.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="90.2741%" y="613" width="0.0120%" height="15" fill="rgb(249,196,1)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="90.2741%" y="597" width="0.0120%" height="15" fill="rgb(223,207,51)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="90.2741%" y="581" width="0.0120%" height="15" fill="rgb(210,14,40)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2741%" y="565" width="0.0120%" height="15" fill="rgb(250,20,52)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2741%" y="549" width="0.0120%" height="15" fill="rgb(241,46,11)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2741%" y="533" width="0.0120%" height="15" fill="rgb(219,105,5)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="90.2741%" y="517" width="0.0120%" height="15" fill="rgb(252,77,35)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="90.2741%" y="501" width="0.0120%" height="15" fill="rgb(243,119,2)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2741%" y="485" width="0.0120%" height="15" fill="rgb(206,82,28)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="90.2741%" y="469" width="0.0120%" height="15" fill="rgb(227,120,12)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="479.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="90.2741%" y="453" width="0.0120%" height="15" fill="rgb(229,134,41)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.2741%" y="437" width="0.0120%" height="15" fill="rgb(239,96,32)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2741%" y="421" width="0.0120%" height="15" fill="rgb(225,46,27)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="90.2741%" y="405" width="0.0120%" height="15" fill="rgb(215,168,2)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.2741%" y="389" width="0.0120%" height="15" fill="rgb(207,170,52)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="90.2741%" y="373" width="0.0120%" height="15" fill="rgb(237,198,36)" fg:x="7509" fg:w="1"/><text x="90.5241%" y="383.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.2861%" y="565" width="0.0120%" height="15" fill="rgb(213,27,14)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.2861%" y="549" width="0.0120%" height="15" fill="rgb(218,77,5)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.2861%" y="533" width="0.0120%" height="15" fill="rgb(230,219,39)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.2861%" y="517" width="0.0120%" height="15" fill="rgb(245,177,7)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.2861%" y="501" width="0.0120%" height="15" fill="rgb(246,44,46)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.2861%" y="485" width="0.0120%" height="15" fill="rgb(207,173,15)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="90.2861%" y="469" width="0.0120%" height="15" fill="rgb(245,170,50)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="90.2861%" y="453" width="0.0120%" height="15" fill="rgb(233,156,21)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="90.2861%" y="437" width="0.0120%" height="15" fill="rgb(253,146,27)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="90.2861%" y="421" width="0.0120%" height="15" fill="rgb(247,66,29)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="431.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="90.2861%" y="405" width="0.0120%" height="15" fill="rgb(218,207,26)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.2861%" y="389" width="0.0120%" height="15" fill="rgb(234,93,26)" fg:x="7510" fg:w="1"/><text x="90.5361%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="90.2741%" y="805" width="0.0361%" height="15" fill="rgb(214,75,48)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="90.2741%" y="789" width="0.0361%" height="15" fill="rgb(229,119,22)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="90.2741%" y="773" width="0.0361%" height="15" fill="rgb(226,153,19)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="90.2741%" y="757" width="0.0361%" height="15" fill="rgb(220,204,36)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="90.2741%" y="741" width="0.0361%" height="15" fill="rgb(253,181,43)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="90.2741%" y="725" width="0.0361%" height="15" fill="rgb(211,41,51)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="90.2741%" y="709" width="0.0361%" height="15" fill="rgb(207,215,0)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.04%)</title><rect x="90.2741%" y="693" width="0.0361%" height="15" fill="rgb(212,153,10)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="90.2741%" y="677" width="0.0361%" height="15" fill="rgb(251,171,36)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="90.2741%" y="661" width="0.0361%" height="15" fill="rgb(225,219,41)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.04%)</title><rect x="90.2741%" y="645" width="0.0361%" height="15" fill="rgb(208,200,1)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="655.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="90.2741%" y="629" width="0.0361%" height="15" fill="rgb(206,75,47)" fg:x="7509" fg:w="3"/><text x="90.5241%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="90.2861%" y="613" width="0.0240%" height="15" fill="rgb(248,3,16)" fg:x="7510" fg:w="2"/><text x="90.5361%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="90.2861%" y="597" width="0.0240%" height="15" fill="rgb(242,157,36)" fg:x="7510" fg:w="2"/><text x="90.5361%" y="607.50"></text></g><g><title>smithereens::fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="90.2861%" y="581" width="0.0240%" height="15" fill="rgb(215,175,11)" fg:x="7510" fg:w="2"/><text x="90.5361%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="90.2981%" y="565" width="0.0120%" height="15" fill="rgb(252,222,22)" fg:x="7511" fg:w="1"/><text x="90.5481%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="90.2981%" y="549" width="0.0120%" height="15" fill="rgb(250,121,35)" fg:x="7511" fg:w="1"/><text x="90.5481%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="90.2981%" y="533" width="0.0120%" height="15" fill="rgb(233,120,49)" fg:x="7511" fg:w="1"/><text x="90.5481%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="90.2981%" y="517" width="0.0120%" height="15" fill="rgb(205,201,14)" fg:x="7511" fg:w="1"/><text x="90.5481%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="90.2981%" y="501" width="0.0120%" height="15" fill="rgb(219,58,45)" fg:x="7511" fg:w="1"/><text x="90.5481%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="90.2981%" y="485" width="0.0120%" height="15" fill="rgb(251,65,12)" fg:x="7511" fg:w="1"/><text x="90.5481%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.06%)</title><rect x="90.2621%" y="949" width="0.0601%" height="15" fill="rgb(224,47,31)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.06%)</title><rect x="90.2621%" y="933" width="0.0601%" height="15" fill="rgb(233,74,26)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="90.2621%" y="917" width="0.0601%" height="15" fill="rgb(231,211,31)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="90.2621%" y="901" width="0.0601%" height="15" fill="rgb(239,167,5)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (5 samples, 0.06%)</title><rect x="90.2621%" y="885" width="0.0601%" height="15" fill="rgb(241,85,0)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="90.2621%" y="869" width="0.0601%" height="15" fill="rgb(229,130,21)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="90.2621%" y="853" width="0.0601%" height="15" fill="rgb(254,84,49)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.06%)</title><rect x="90.2621%" y="837" width="0.0601%" height="15" fill="rgb(235,85,21)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="847.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (5 samples, 0.06%)</title><rect x="90.2621%" y="821" width="0.0601%" height="15" fill="rgb(246,128,52)" fg:x="7508" fg:w="5"/><text x="90.5121%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="90.3102%" y="805" width="0.0120%" height="15" fill="rgb(243,114,49)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="90.3102%" y="789" width="0.0120%" height="15" fill="rgb(240,224,22)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="799.50"></text></g><g><title>smithereens::fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3102%" y="773" width="0.0120%" height="15" fill="rgb(247,201,52)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="90.3102%" y="757" width="0.0120%" height="15" fill="rgb(231,70,45)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3102%" y="741" width="0.0120%" height="15" fill="rgb(217,215,20)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3102%" y="725" width="0.0120%" height="15" fill="rgb(226,170,30)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3102%" y="709" width="0.0120%" height="15" fill="rgb(220,190,43)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="90.3102%" y="693" width="0.0120%" height="15" fill="rgb(218,20,18)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="90.3102%" y="677" width="0.0120%" height="15" fill="rgb(245,37,26)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="687.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="90.3102%" y="661" width="0.0120%" height="15" fill="rgb(241,127,29)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="671.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3102%" y="645" width="0.0120%" height="15" fill="rgb(241,33,26)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.3102%" y="629" width="0.0120%" height="15" fill="rgb(220,106,21)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.3102%" y="613" width="0.0120%" height="15" fill="rgb(225,125,35)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.3102%" y="597" width="0.0120%" height="15" fill="rgb(248,80,22)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="607.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3102%" y="581" width="0.0120%" height="15" fill="rgb(231,117,39)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="591.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3102%" y="565" width="0.0120%" height="15" fill="rgb(239,183,16)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.3102%" y="549" width="0.0120%" height="15" fill="rgb(221,61,19)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.3102%" y="533" width="0.0120%" height="15" fill="rgb(239,196,44)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.3102%" y="517" width="0.0120%" height="15" fill="rgb(206,113,19)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.3102%" y="501" width="0.0120%" height="15" fill="rgb(245,114,12)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.3102%" y="485" width="0.0120%" height="15" fill="rgb(247,89,39)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="90.3102%" y="469" width="0.0120%" height="15" fill="rgb(213,85,14)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="90.3102%" y="453" width="0.0120%" height="15" fill="rgb(249,206,33)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="90.3102%" y="437" width="0.0120%" height="15" fill="rgb(235,167,47)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="90.3102%" y="421" width="0.0120%" height="15" fill="rgb(217,177,16)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="431.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="90.3102%" y="405" width="0.0120%" height="15" fill="rgb(250,228,29)" fg:x="7512" fg:w="1"/><text x="90.5602%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.07%)</title><rect x="90.2621%" y="997" width="0.0721%" height="15" fill="rgb(216,195,42)" fg:x="7508" fg:w="6"/><text x="90.5121%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="90.2621%" y="981" width="0.0721%" height="15" fill="rgb(232,192,32)" fg:x="7508" fg:w="6"/><text x="90.5121%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.07%)</title><rect x="90.2621%" y="965" width="0.0721%" height="15" fill="rgb(211,8,47)" fg:x="7508" fg:w="6"/><text x="90.5121%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="949" width="0.0120%" height="15" fill="rgb(251,201,9)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="933" width="0.0120%" height="15" fill="rgb(206,185,47)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="917" width="0.0120%" height="15" fill="rgb(245,54,32)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="901" width="0.0120%" height="15" fill="rgb(208,1,8)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="90.3222%" y="885" width="0.0120%" height="15" fill="rgb(228,57,24)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="90.3222%" y="869" width="0.0120%" height="15" fill="rgb(251,24,8)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="879.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3222%" y="853" width="0.0120%" height="15" fill="rgb(236,196,50)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="90.3222%" y="837" width="0.0120%" height="15" fill="rgb(246,222,29)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="90.3222%" y="821" width="0.0120%" height="15" fill="rgb(211,34,40)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="90.3222%" y="805" width="0.0120%" height="15" fill="rgb(210,66,51)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.3222%" y="789" width="0.0120%" height="15" fill="rgb(250,56,43)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="90.3222%" y="773" width="0.0120%" height="15" fill="rgb(240,111,50)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="757" width="0.0120%" height="15" fill="rgb(209,117,13)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="741" width="0.0120%" height="15" fill="rgb(232,164,45)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="725" width="0.0120%" height="15" fill="rgb(205,69,32)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.3222%" y="709" width="0.0120%" height="15" fill="rgb(240,147,45)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="90.3222%" y="693" width="0.0120%" height="15" fill="rgb(221,94,48)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="90.3222%" y="677" width="0.0120%" height="15" fill="rgb(249,209,17)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="687.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3222%" y="661" width="0.0120%" height="15" fill="rgb(228,57,28)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="90.3222%" y="645" width="0.0120%" height="15" fill="rgb(250,133,26)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="90.3222%" y="629" width="0.0120%" height="15" fill="rgb(254,15,16)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="90.3222%" y="613" width="0.0120%" height="15" fill="rgb(209,147,42)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3222%" y="597" width="0.0120%" height="15" fill="rgb(208,5,29)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3222%" y="581" width="0.0120%" height="15" fill="rgb(250,73,31)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3222%" y="565" width="0.0120%" height="15" fill="rgb(238,45,10)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="90.3222%" y="549" width="0.0120%" height="15" fill="rgb(214,104,5)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.3222%" y="533" width="0.0120%" height="15" fill="rgb(242,217,19)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="90.3222%" y="517" width="0.0120%" height="15" fill="rgb(246,113,27)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="90.3222%" y="501" width="0.0120%" height="15" fill="rgb(221,34,27)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (1 samples, 0.01%)</title><rect x="90.3222%" y="485" width="0.0120%" height="15" fill="rgb(246,109,6)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.3222%" y="469" width="0.0120%" height="15" fill="rgb(217,12,25)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.01%)</title><rect x="90.3222%" y="453" width="0.0120%" height="15" fill="rgb(250,195,5)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.01%)</title><rect x="90.3222%" y="437" width="0.0120%" height="15" fill="rgb(244,140,45)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="90.3222%" y="421" width="0.0120%" height="15" fill="rgb(230,64,14)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="90.3222%" y="405" width="0.0120%" height="15" fill="rgb(206,27,27)" fg:x="7513" fg:w="1"/><text x="90.5722%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="90.3342%" y="997" width="0.0120%" height="15" fill="rgb(230,14,50)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="90.3342%" y="981" width="0.0120%" height="15" fill="rgb(237,172,14)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="90.3342%" y="965" width="0.0120%" height="15" fill="rgb(209,25,21)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.3342%" y="949" width="0.0120%" height="15" fill="rgb(248,148,22)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="90.3342%" y="933" width="0.0120%" height="15" fill="rgb(234,100,22)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="90.3342%" y="917" width="0.0120%" height="15" fill="rgb(210,20,30)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="90.3342%" y="901" width="0.0120%" height="15" fill="rgb(232,58,0)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3342%" y="885" width="0.0120%" height="15" fill="rgb(221,68,13)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="895.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="90.3342%" y="869" width="0.0120%" height="15" fill="rgb(231,194,11)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="90.3342%" y="853" width="0.0120%" height="15" fill="rgb(235,51,41)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="90.3342%" y="837" width="0.0120%" height="15" fill="rgb(240,50,32)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="847.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.3342%" y="821" width="0.0120%" height="15" fill="rgb(240,185,36)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="831.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.3342%" y="805" width="0.0120%" height="15" fill="rgb(211,168,15)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="815.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.3342%" y="789" width="0.0120%" height="15" fill="rgb(221,70,0)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="90.3342%" y="773" width="0.0120%" height="15" fill="rgb(205,21,33)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="783.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="90.3342%" y="757" width="0.0120%" height="15" fill="rgb(225,106,10)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.3342%" y="741" width="0.0120%" height="15" fill="rgb(236,200,50)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.3342%" y="725" width="0.0120%" height="15" fill="rgb(249,93,23)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.3342%" y="709" width="0.0120%" height="15" fill="rgb(244,115,35)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="90.3342%" y="693" width="0.0120%" height="15" fill="rgb(231,129,47)" fg:x="7514" fg:w="1"/><text x="90.5842%" y="703.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3462%" y="693" width="0.0120%" height="15" fill="rgb(225,160,50)" fg:x="7515" fg:w="1"/><text x="90.5962%" y="703.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.3462%" y="677" width="0.0120%" height="15" fill="rgb(218,135,23)" fg:x="7515" fg:w="1"/><text x="90.5962%" y="687.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.3462%" y="773" width="0.0240%" height="15" fill="rgb(227,119,14)" fg:x="7515" fg:w="2"/><text x="90.5962%" y="783.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.3462%" y="757" width="0.0240%" height="15" fill="rgb(242,138,13)" fg:x="7515" fg:w="2"/><text x="90.5962%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="90.3462%" y="741" width="0.0240%" height="15" fill="rgb(215,11,16)" fg:x="7515" fg:w="2"/><text x="90.5962%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="90.3462%" y="725" width="0.0240%" height="15" fill="rgb(234,170,50)" fg:x="7515" fg:w="2"/><text x="90.5962%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="90.3462%" y="709" width="0.0240%" height="15" fill="rgb(233,34,20)" fg:x="7515" fg:w="2"/><text x="90.5962%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.3583%" y="693" width="0.0120%" height="15" fill="rgb(237,100,45)" fg:x="7516" fg:w="1"/><text x="90.6083%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.3583%" y="677" width="0.0120%" height="15" fill="rgb(231,184,36)" fg:x="7516" fg:w="1"/><text x="90.6083%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="90.3583%" y="661" width="0.0120%" height="15" fill="rgb(252,93,2)" fg:x="7516" fg:w="1"/><text x="90.6083%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="90.3583%" y="645" width="0.0120%" height="15" fill="rgb(248,176,47)" fg:x="7516" fg:w="1"/><text x="90.6083%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="90.3583%" y="629" width="0.0120%" height="15" fill="rgb(249,125,23)" fg:x="7516" fg:w="1"/><text x="90.6083%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="90.3583%" y="613" width="0.0120%" height="15" fill="rgb(239,67,42)" fg:x="7516" fg:w="1"/><text x="90.6083%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (78 samples, 0.94%)</title><rect x="89.4566%" y="1157" width="0.9377%" height="15" fill="rgb(244,162,4)" fg:x="7441" fg:w="78"/><text x="89.7066%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (78 samples, 0.94%)</title><rect x="89.4566%" y="1141" width="0.9377%" height="15" fill="rgb(214,150,38)" fg:x="7441" fg:w="78"/><text x="89.7066%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (78 samples, 0.94%)</title><rect x="89.4566%" y="1125" width="0.9377%" height="15" fill="rgb(228,211,28)" fg:x="7441" fg:w="78"/><text x="89.7066%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="90.2260%" y="1109" width="0.1683%" height="15" fill="rgb(212,98,48)" fg:x="7505" fg:w="14"/><text x="90.4760%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="90.2260%" y="1093" width="0.1683%" height="15" fill="rgb(213,45,13)" fg:x="7505" fg:w="14"/><text x="90.4760%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (14 samples, 0.17%)</title><rect x="90.2260%" y="1077" width="0.1683%" height="15" fill="rgb(218,35,29)" fg:x="7505" fg:w="14"/><text x="90.4760%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="90.2260%" y="1061" width="0.1683%" height="15" fill="rgb(244,13,3)" fg:x="7505" fg:w="14"/><text x="90.4760%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.17%)</title><rect x="90.2260%" y="1045" width="0.1683%" height="15" fill="rgb(235,170,19)" fg:x="7505" fg:w="14"/><text x="90.4760%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (14 samples, 0.17%)</title><rect x="90.2260%" y="1029" width="0.1683%" height="15" fill="rgb(233,193,43)" fg:x="7505" fg:w="14"/><text x="90.4760%" y="1039.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (14 samples, 0.17%)</title><rect x="90.2260%" y="1013" width="0.1683%" height="15" fill="rgb(228,223,20)" fg:x="7505" fg:w="14"/><text x="90.4760%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.05%)</title><rect x="90.3462%" y="997" width="0.0481%" height="15" fill="rgb(208,85,54)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="90.3462%" y="981" width="0.0481%" height="15" fill="rgb(254,14,45)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="991.50"></text></g><g><title>smithereens::fragment::_{{closure}} (4 samples, 0.05%)</title><rect x="90.3462%" y="965" width="0.0481%" height="15" fill="rgb(247,99,29)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="975.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.05%)</title><rect x="90.3462%" y="949" width="0.0481%" height="15" fill="rgb(225,180,54)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.3462%" y="933" width="0.0481%" height="15" fill="rgb(239,88,43)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="943.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.3462%" y="917" width="0.0481%" height="15" fill="rgb(209,47,11)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="927.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.3462%" y="901" width="0.0481%" height="15" fill="rgb(219,179,23)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.05%)</title><rect x="90.3462%" y="885" width="0.0481%" height="15" fill="rgb(213,183,19)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4 samples, 0.05%)</title><rect x="90.3462%" y="869" width="0.0481%" height="15" fill="rgb(210,11,9)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="879.50"></text></g><g><title>core::clone::Clone::clone (4 samples, 0.05%)</title><rect x="90.3462%" y="853" width="0.0481%" height="15" fill="rgb(239,194,16)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="863.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.3462%" y="837" width="0.0481%" height="15" fill="rgb(246,23,50)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="90.3462%" y="821" width="0.0481%" height="15" fill="rgb(245,10,41)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="90.3462%" y="805" width="0.0481%" height="15" fill="rgb(228,43,24)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="90.3462%" y="789" width="0.0481%" height="15" fill="rgb(220,151,0)" fg:x="7515" fg:w="4"/><text x="90.5962%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="90.3703%" y="773" width="0.0240%" height="15" fill="rgb(232,219,10)" fg:x="7517" fg:w="2"/><text x="90.6203%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="90.3703%" y="757" width="0.0240%" height="15" fill="rgb(227,217,48)" fg:x="7517" fg:w="2"/><text x="90.6203%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="90.3703%" y="741" width="0.0240%" height="15" fill="rgb(210,66,35)" fg:x="7517" fg:w="2"/><text x="90.6203%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="90.3703%" y="725" width="0.0240%" height="15" fill="rgb(254,6,7)" fg:x="7517" fg:w="2"/><text x="90.6203%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="90.3703%" y="709" width="0.0240%" height="15" fill="rgb(235,222,42)" fg:x="7517" fg:w="2"/><text x="90.6203%" y="719.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="90.3703%" y="693" width="0.0240%" height="15" fill="rgb(245,126,5)" fg:x="7517" fg:w="2"/><text x="90.6203%" y="703.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="90.3703%" y="677" width="0.0240%" height="15" fill="rgb(215,73,17)" fg:x="7517" fg:w="2"/><text x="90.6203%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.3823%" y="661" width="0.0120%" height="15" fill="rgb(219,198,52)" fg:x="7518" fg:w="1"/><text x="90.6323%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (1 samples, 0.01%)</title><rect x="90.3943%" y="1157" width="0.0120%" height="15" fill="rgb(217,159,18)" fg:x="7519" fg:w="1"/><text x="90.6443%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (1 samples, 0.01%)</title><rect x="90.3943%" y="1141" width="0.0120%" height="15" fill="rgb(212,177,18)" fg:x="7519" fg:w="1"/><text x="90.6443%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.3943%" y="1125" width="0.0120%" height="15" fill="rgb(241,10,11)" fg:x="7519" fg:w="1"/><text x="90.6443%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="90.3943%" y="1109" width="0.0120%" height="15" fill="rgb(232,114,35)" fg:x="7519" fg:w="1"/><text x="90.6443%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="90.3943%" y="1093" width="0.0120%" height="15" fill="rgb(238,222,8)" fg:x="7519" fg:w="1"/><text x="90.6443%" y="1103.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="90.3943%" y="1077" width="0.0120%" height="15" fill="rgb(251,153,44)" fg:x="7519" fg:w="1"/><text x="90.6443%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.3943%" y="1061" width="0.0120%" height="15" fill="rgb(210,140,51)" fg:x="7519" fg:w="1"/><text x="90.6443%" y="1071.50"></text></g><g><title>&lt;petgraph::graph_impl::EdgeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="90.4063%" y="1125" width="0.0120%" height="15" fill="rgb(222,63,0)" fg:x="7520" fg:w="1"/><text x="90.6563%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (1 samples, 0.01%)</title><rect x="90.4063%" y="1109" width="0.0120%" height="15" fill="rgb(240,18,40)" fg:x="7520" fg:w="1"/><text x="90.6563%" y="1119.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (2 samples, 0.02%)</title><rect x="90.4063%" y="1157" width="0.0240%" height="15" fill="rgb(237,88,16)" fg:x="7520" fg:w="2"/><text x="90.6563%" y="1167.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (2 samples, 0.02%)</title><rect x="90.4063%" y="1141" width="0.0240%" height="15" fill="rgb(251,117,13)" fg:x="7520" fg:w="2"/><text x="90.6563%" y="1151.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_edge (1 samples, 0.01%)</title><rect x="90.4184%" y="1125" width="0.0120%" height="15" fill="rgb(251,228,8)" fg:x="7521" fg:w="1"/><text x="90.6684%" y="1135.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_edge_adjust_indices (1 samples, 0.01%)</title><rect x="90.4184%" y="1109" width="0.0120%" height="15" fill="rgb(205,107,49)" fg:x="7521" fg:w="1"/><text x="90.6684%" y="1119.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::change_edge_links (1 samples, 0.01%)</title><rect x="90.4184%" y="1093" width="0.0120%" height="15" fill="rgb(238,72,41)" fg:x="7521" fg:w="1"/><text x="90.6684%" y="1103.50"></text></g><g><title>petgraph::graph_impl::NodeIndex&lt;Ix&gt;::index (1 samples, 0.01%)</title><rect x="90.4184%" y="1077" width="0.0120%" height="15" fill="rgb(248,183,52)" fg:x="7521" fg:w="1"/><text x="90.6684%" y="1087.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1 samples, 0.01%)</title><rect x="90.4184%" y="1061" width="0.0120%" height="15" fill="rgb(215,58,20)" fg:x="7521" fg:w="1"/><text x="90.6684%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="90.4304%" y="1109" width="0.0120%" height="15" fill="rgb(209,49,13)" fg:x="7522" fg:w="1"/><text x="90.6804%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="90.4304%" y="1093" width="0.0120%" height="15" fill="rgb(208,113,17)" fg:x="7522" fg:w="1"/><text x="90.6804%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="90.4304%" y="1077" width="0.0120%" height="15" fill="rgb(208,14,22)" fg:x="7522" fg:w="1"/><text x="90.6804%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="90.4304%" y="1061" width="0.0120%" height="15" fill="rgb(222,95,2)" fg:x="7522" fg:w="1"/><text x="90.6804%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="90.4304%" y="1045" width="0.0120%" height="15" fill="rgb(253,180,37)" fg:x="7522" fg:w="1"/><text x="90.6804%" y="1055.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.4424%" y="997" width="0.0120%" height="15" fill="rgb(250,81,33)" fg:x="7523" fg:w="1"/><text x="90.6924%" y="1007.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="90.4424%" y="981" width="0.0120%" height="15" fill="rgb(251,151,41)" fg:x="7523" fg:w="1"/><text x="90.6924%" y="991.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="90.4424%" y="1045" width="0.0240%" height="15" fill="rgb(210,135,17)" fg:x="7523" fg:w="2"/><text x="90.6924%" y="1055.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="90.4424%" y="1029" width="0.0240%" height="15" fill="rgb(239,21,29)" fg:x="7523" fg:w="2"/><text x="90.6924%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="90.4424%" y="1013" width="0.0240%" height="15" fill="rgb(231,215,16)" fg:x="7523" fg:w="2"/><text x="90.6924%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="90.4544%" y="997" width="0.0120%" height="15" fill="rgb(239,151,54)" fg:x="7524" fg:w="1"/><text x="90.7044%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="90.4544%" y="981" width="0.0120%" height="15" fill="rgb(222,122,38)" fg:x="7524" fg:w="1"/><text x="90.7044%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.4544%" y="965" width="0.0120%" height="15" fill="rgb(243,128,1)" fg:x="7524" fg:w="1"/><text x="90.7044%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.4544%" y="949" width="0.0120%" height="15" fill="rgb(225,74,21)" fg:x="7524" fg:w="1"/><text x="90.7044%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.4544%" y="933" width="0.0120%" height="15" fill="rgb(216,210,10)" fg:x="7524" fg:w="1"/><text x="90.7044%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.4544%" y="917" width="0.0120%" height="15" fill="rgb(228,76,19)" fg:x="7524" fg:w="1"/><text x="90.7044%" y="927.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="90.4424%" y="1093" width="0.0361%" height="15" fill="rgb(236,80,34)" fg:x="7523" fg:w="3"/><text x="90.6924%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="90.4424%" y="1077" width="0.0361%" height="15" fill="rgb(225,173,23)" fg:x="7523" fg:w="3"/><text x="90.6924%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.04%)</title><rect x="90.4424%" y="1061" width="0.0361%" height="15" fill="rgb(253,38,1)" fg:x="7523" fg:w="3"/><text x="90.6924%" y="1071.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="90.4665%" y="1045" width="0.0120%" height="15" fill="rgb(206,155,35)" fg:x="7525" fg:w="1"/><text x="90.7165%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="90.4665%" y="1029" width="0.0120%" height="15" fill="rgb(254,27,53)" fg:x="7525" fg:w="1"/><text x="90.7165%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.4665%" y="1013" width="0.0120%" height="15" fill="rgb(225,52,41)" fg:x="7525" fg:w="1"/><text x="90.7165%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.4665%" y="997" width="0.0120%" height="15" fill="rgb(244,53,18)" fg:x="7525" fg:w="1"/><text x="90.7165%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.06%)</title><rect x="90.4304%" y="1125" width="0.0601%" height="15" fill="rgb(254,206,48)" fg:x="7522" fg:w="5"/><text x="90.6804%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="90.4424%" y="1109" width="0.0481%" height="15" fill="rgb(236,182,23)" fg:x="7523" fg:w="4"/><text x="90.6924%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="90.4785%" y="1093" width="0.0120%" height="15" fill="rgb(236,191,37)" fg:x="7526" fg:w="1"/><text x="90.7285%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="90.4785%" y="1077" width="0.0120%" height="15" fill="rgb(245,53,8)" fg:x="7526" fg:w="1"/><text x="90.7285%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="90.4785%" y="1061" width="0.0120%" height="15" fill="rgb(245,147,9)" fg:x="7526" fg:w="1"/><text x="90.7285%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="90.4785%" y="1045" width="0.0120%" height="15" fill="rgb(218,24,48)" fg:x="7526" fg:w="1"/><text x="90.7285%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.4785%" y="1029" width="0.0120%" height="15" fill="rgb(254,23,9)" fg:x="7526" fg:w="1"/><text x="90.7285%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="90.4785%" y="1013" width="0.0120%" height="15" fill="rgb(244,105,9)" fg:x="7526" fg:w="1"/><text x="90.7285%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.4905%" y="965" width="0.0120%" height="15" fill="rgb(212,142,22)" fg:x="7527" fg:w="1"/><text x="90.7405%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="90.4905%" y="949" width="0.0120%" height="15" fill="rgb(221,114,49)" fg:x="7527" fg:w="1"/><text x="90.7405%" y="959.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="90.4905%" y="933" width="0.0120%" height="15" fill="rgb(223,210,25)" fg:x="7527" fg:w="1"/><text x="90.7405%" y="943.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="90.4905%" y="917" width="0.0120%" height="15" fill="rgb(235,162,44)" fg:x="7527" fg:w="1"/><text x="90.7405%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.4905%" y="901" width="0.0120%" height="15" fill="rgb(237,65,45)" fg:x="7527" fg:w="1"/><text x="90.7405%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.4905%" y="885" width="0.0120%" height="15" fill="rgb(208,79,9)" fg:x="7527" fg:w="1"/><text x="90.7405%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.4905%" y="869" width="0.0120%" height="15" fill="rgb(215,228,8)" fg:x="7527" fg:w="1"/><text x="90.7405%" y="879.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="90.4905%" y="981" width="0.0240%" height="15" fill="rgb(205,185,17)" fg:x="7527" fg:w="2"/><text x="90.7405%" y="991.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.5025%" y="965" width="0.0120%" height="15" fill="rgb(213,62,36)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="975.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.5025%" y="949" width="0.0120%" height="15" fill="rgb(209,34,9)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="90.5025%" y="933" width="0.0120%" height="15" fill="rgb(246,151,27)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="90.5025%" y="917" width="0.0120%" height="15" fill="rgb(218,206,3)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.5025%" y="901" width="0.0120%" height="15" fill="rgb(242,202,1)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.5025%" y="885" width="0.0120%" height="15" fill="rgb(227,185,16)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.5025%" y="869" width="0.0120%" height="15" fill="rgb(241,1,14)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="90.5025%" y="853" width="0.0120%" height="15" fill="rgb(212,113,25)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="90.5025%" y="837" width="0.0120%" height="15" fill="rgb(247,37,43)" fg:x="7528" fg:w="1"/><text x="90.7525%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.10%)</title><rect x="90.4304%" y="1157" width="0.0962%" height="15" fill="rgb(226,54,8)" fg:x="7522" fg:w="8"/><text x="90.6804%" y="1167.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.10%)</title><rect x="90.4304%" y="1141" width="0.0962%" height="15" fill="rgb(251,205,25)" fg:x="7522" fg:w="8"/><text x="90.6804%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3 samples, 0.04%)</title><rect x="90.4905%" y="1125" width="0.0361%" height="15" fill="rgb(246,87,35)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="90.4905%" y="1109" width="0.0361%" height="15" fill="rgb(251,145,46)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="90.4905%" y="1093" width="0.0361%" height="15" fill="rgb(210,210,33)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.04%)</title><rect x="90.4905%" y="1077" width="0.0361%" height="15" fill="rgb(221,151,11)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.04%)</title><rect x="90.4905%" y="1061" width="0.0361%" height="15" fill="rgb(208,160,28)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3 samples, 0.04%)</title><rect x="90.4905%" y="1045" width="0.0361%" height="15" fill="rgb(243,69,29)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1055.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (3 samples, 0.04%)</title><rect x="90.4905%" y="1029" width="0.0361%" height="15" fill="rgb(224,144,4)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="90.4905%" y="1013" width="0.0361%" height="15" fill="rgb(211,140,38)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="90.4905%" y="997" width="0.0361%" height="15" fill="rgb(252,189,15)" fg:x="7527" fg:w="3"/><text x="90.7405%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.5145%" y="981" width="0.0120%" height="15" fill="rgb(251,175,23)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.5145%" y="965" width="0.0120%" height="15" fill="rgb(212,184,11)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.5145%" y="949" width="0.0120%" height="15" fill="rgb(217,205,6)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.5145%" y="933" width="0.0120%" height="15" fill="rgb(235,45,45)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="943.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.5145%" y="917" width="0.0120%" height="15" fill="rgb(211,157,53)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="927.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.5145%" y="901" width="0.0120%" height="15" fill="rgb(212,13,8)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.5145%" y="885" width="0.0120%" height="15" fill="rgb(218,80,36)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.5145%" y="869" width="0.0120%" height="15" fill="rgb(211,123,43)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.5145%" y="853" width="0.0120%" height="15" fill="rgb(206,165,2)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.5145%" y="837" width="0.0120%" height="15" fill="rgb(248,63,35)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="847.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="90.5145%" y="821" width="0.0120%" height="15" fill="rgb(219,133,41)" fg:x="7529" fg:w="1"/><text x="90.7645%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.5266%" y="997" width="0.0120%" height="15" fill="rgb(206,175,46)" fg:x="7530" fg:w="1"/><text x="90.7766%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.5266%" y="981" width="0.0120%" height="15" fill="rgb(224,41,35)" fg:x="7530" fg:w="1"/><text x="90.7766%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.5266%" y="965" width="0.0120%" height="15" fill="rgb(226,113,24)" fg:x="7530" fg:w="1"/><text x="90.7766%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.5266%" y="949" width="0.0120%" height="15" fill="rgb(219,51,41)" fg:x="7530" fg:w="1"/><text x="90.7766%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.5266%" y="933" width="0.0120%" height="15" fill="rgb(220,145,47)" fg:x="7530" fg:w="1"/><text x="90.7766%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.04%)</title><rect x="90.5266%" y="1061" width="0.0361%" height="15" fill="rgb(239,121,47)" fg:x="7530" fg:w="3"/><text x="90.7766%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.04%)</title><rect x="90.5266%" y="1045" width="0.0361%" height="15" fill="rgb(207,60,40)" fg:x="7530" fg:w="3"/><text x="90.7766%" y="1055.50"></text></g><g><title>core::clone::Clone::clone (3 samples, 0.04%)</title><rect x="90.5266%" y="1029" width="0.0361%" height="15" fill="rgb(224,229,11)" fg:x="7530" fg:w="3"/><text x="90.7766%" y="1039.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="90.5266%" y="1013" width="0.0361%" height="15" fill="rgb(252,28,32)" fg:x="7530" fg:w="3"/><text x="90.7766%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="90.5386%" y="997" width="0.0240%" height="15" fill="rgb(207,52,49)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="90.5386%" y="981" width="0.0240%" height="15" fill="rgb(243,51,50)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="90.5386%" y="965" width="0.0240%" height="15" fill="rgb(212,92,21)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="975.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.5386%" y="949" width="0.0240%" height="15" fill="rgb(230,183,50)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="959.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.5386%" y="933" width="0.0240%" height="15" fill="rgb(225,48,9)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="90.5386%" y="917" width="0.0240%" height="15" fill="rgb(254,44,4)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="90.5386%" y="901" width="0.0240%" height="15" fill="rgb(252,128,37)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="90.5386%" y="885" width="0.0240%" height="15" fill="rgb(227,178,8)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="90.5386%" y="869" width="0.0240%" height="15" fill="rgb(205,206,32)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="90.5386%" y="853" width="0.0240%" height="15" fill="rgb(220,218,22)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="90.5386%" y="837" width="0.0240%" height="15" fill="rgb(236,41,28)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="90.5386%" y="821" width="0.0240%" height="15" fill="rgb(219,37,7)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="90.5386%" y="805" width="0.0240%" height="15" fill="rgb(206,160,15)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="90.5386%" y="789" width="0.0240%" height="15" fill="rgb(208,82,21)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="799.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="90.5386%" y="773" width="0.0240%" height="15" fill="rgb(226,130,25)" fg:x="7531" fg:w="2"/><text x="90.7886%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.5506%" y="757" width="0.0120%" height="15" fill="rgb(212,72,24)" fg:x="7532" fg:w="1"/><text x="90.8006%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="90.5266%" y="1109" width="0.0601%" height="15" fill="rgb(206,28,16)" fg:x="7530" fg:w="5"/><text x="90.7766%" y="1119.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="90.5266%" y="1093" width="0.0601%" height="15" fill="rgb(249,41,5)" fg:x="7530" fg:w="5"/><text x="90.7766%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="90.5266%" y="1077" width="0.0601%" height="15" fill="rgb(233,96,48)" fg:x="7530" fg:w="5"/><text x="90.7766%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="90.5626%" y="1061" width="0.0240%" height="15" fill="rgb(240,198,11)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="90.5626%" y="1045" width="0.0240%" height="15" fill="rgb(209,175,35)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="1055.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="90.5626%" y="1029" width="0.0240%" height="15" fill="rgb(214,40,51)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="90.5626%" y="1013" width="0.0240%" height="15" fill="rgb(252,56,4)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="90.5626%" y="997" width="0.0240%" height="15" fill="rgb(219,131,5)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="90.5626%" y="981" width="0.0240%" height="15" fill="rgb(223,67,53)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="991.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="90.5626%" y="965" width="0.0240%" height="15" fill="rgb(227,154,8)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="975.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="90.5626%" y="949" width="0.0240%" height="15" fill="rgb(216,174,51)" fg:x="7533" fg:w="2"/><text x="90.8126%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.5747%" y="933" width="0.0120%" height="15" fill="rgb(239,60,34)" fg:x="7534" fg:w="1"/><text x="90.8247%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.5747%" y="917" width="0.0120%" height="15" fill="rgb(236,165,48)" fg:x="7534" fg:w="1"/><text x="90.8247%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="90.5987%" y="981" width="0.0601%" height="15" fill="rgb(210,37,26)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="90.5987%" y="965" width="0.0601%" height="15" fill="rgb(211,3,17)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="90.5987%" y="949" width="0.0601%" height="15" fill="rgb(234,88,49)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="90.5987%" y="933" width="0.0601%" height="15" fill="rgb(233,40,17)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="90.5987%" y="917" width="0.0601%" height="15" fill="rgb(235,127,31)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="90.5987%" y="901" width="0.0601%" height="15" fill="rgb(248,167,17)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="90.5987%" y="885" width="0.0601%" height="15" fill="rgb(218,179,8)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="90.5987%" y="869" width="0.0601%" height="15" fill="rgb(216,92,14)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="90.5987%" y="853" width="0.0601%" height="15" fill="rgb(221,198,46)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="863.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="90.5987%" y="837" width="0.0601%" height="15" fill="rgb(244,7,25)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="847.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="90.5987%" y="821" width="0.0601%" height="15" fill="rgb(233,75,6)" fg:x="7536" fg:w="5"/><text x="90.8487%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.6468%" y="805" width="0.0120%" height="15" fill="rgb(240,189,41)" fg:x="7540" fg:w="1"/><text x="90.8968%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.6588%" y="981" width="0.0240%" height="15" fill="rgb(237,157,21)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.6588%" y="965" width="0.0240%" height="15" fill="rgb(210,136,49)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="90.6588%" y="949" width="0.0240%" height="15" fill="rgb(210,68,29)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="90.6588%" y="933" width="0.0240%" height="15" fill="rgb(247,207,20)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.02%)</title><rect x="90.6588%" y="917" width="0.0240%" height="15" fill="rgb(224,73,48)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="927.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="90.6588%" y="901" width="0.0240%" height="15" fill="rgb(215,136,47)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="90.6588%" y="885" width="0.0240%" height="15" fill="rgb(232,222,16)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="90.6588%" y="869" width="0.0240%" height="15" fill="rgb(249,202,47)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="90.6588%" y="853" width="0.0240%" height="15" fill="rgb(236,56,8)" fg:x="7541" fg:w="2"/><text x="90.9088%" y="863.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.6829%" y="933" width="0.0120%" height="15" fill="rgb(222,6,3)" fg:x="7543" fg:w="1"/><text x="90.9329%" y="943.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.6829%" y="917" width="0.0120%" height="15" fill="rgb(254,222,28)" fg:x="7543" fg:w="1"/><text x="90.9329%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.6829%" y="901" width="0.0120%" height="15" fill="rgb(219,57,23)" fg:x="7543" fg:w="1"/><text x="90.9329%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.6829%" y="885" width="0.0120%" height="15" fill="rgb(251,106,48)" fg:x="7543" fg:w="1"/><text x="90.9329%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.6829%" y="869" width="0.0120%" height="15" fill="rgb(242,2,23)" fg:x="7543" fg:w="1"/><text x="90.9329%" y="879.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.6829%" y="853" width="0.0120%" height="15" fill="rgb(212,109,31)" fg:x="7543" fg:w="1"/><text x="90.9329%" y="863.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.6829%" y="837" width="0.0120%" height="15" fill="rgb(241,9,22)" fg:x="7543" fg:w="1"/><text x="90.9329%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13 samples, 0.16%)</title><rect x="90.5867%" y="1045" width="0.1563%" height="15" fill="rgb(209,64,27)" fg:x="7535" fg:w="13"/><text x="90.8367%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (13 samples, 0.16%)</title><rect x="90.5867%" y="1029" width="0.1563%" height="15" fill="rgb(248,13,44)" fg:x="7535" fg:w="13"/><text x="90.8367%" y="1039.50"></text></g><g><title>core::clone::Clone::clone (13 samples, 0.16%)</title><rect x="90.5867%" y="1013" width="0.1563%" height="15" fill="rgb(213,86,6)" fg:x="7535" fg:w="13"/><text x="90.8367%" y="1023.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="90.5867%" y="997" width="0.1563%" height="15" fill="rgb(247,11,18)" fg:x="7535" fg:w="13"/><text x="90.8367%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="90.6829%" y="981" width="0.0601%" height="15" fill="rgb(252,31,11)" fg:x="7543" fg:w="5"/><text x="90.9329%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="90.6829%" y="965" width="0.0601%" height="15" fill="rgb(215,63,51)" fg:x="7543" fg:w="5"/><text x="90.9329%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="90.6829%" y="949" width="0.0601%" height="15" fill="rgb(222,180,4)" fg:x="7543" fg:w="5"/><text x="90.9329%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="90.6949%" y="933" width="0.0481%" height="15" fill="rgb(233,4,23)" fg:x="7544" fg:w="4"/><text x="90.9449%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="90.6949%" y="917" width="0.0481%" height="15" fill="rgb(230,116,22)" fg:x="7544" fg:w="4"/><text x="90.9449%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="90.6949%" y="901" width="0.0481%" height="15" fill="rgb(222,20,14)" fg:x="7544" fg:w="4"/><text x="90.9449%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="90.6949%" y="885" width="0.0481%" height="15" fill="rgb(210,176,43)" fg:x="7544" fg:w="4"/><text x="90.9449%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="90.6949%" y="869" width="0.0481%" height="15" fill="rgb(219,67,32)" fg:x="7544" fg:w="4"/><text x="90.9449%" y="879.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="90.6949%" y="853" width="0.0481%" height="15" fill="rgb(228,91,39)" fg:x="7544" fg:w="4"/><text x="90.9449%" y="863.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="90.6949%" y="837" width="0.0481%" height="15" fill="rgb(254,63,14)" fg:x="7544" fg:w="4"/><text x="90.9449%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.7309%" y="821" width="0.0120%" height="15" fill="rgb(216,171,39)" fg:x="7547" fg:w="1"/><text x="90.9809%" y="831.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (14 samples, 0.17%)</title><rect x="90.5867%" y="1109" width="0.1683%" height="15" fill="rgb(248,68,25)" fg:x="7535" fg:w="14"/><text x="90.8367%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="90.5867%" y="1093" width="0.1683%" height="15" fill="rgb(239,63,16)" fg:x="7535" fg:w="14"/><text x="90.8367%" y="1103.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="90.5867%" y="1077" width="0.1683%" height="15" fill="rgb(225,111,43)" fg:x="7535" fg:w="14"/><text x="90.8367%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="90.5867%" y="1061" width="0.1683%" height="15" fill="rgb(246,165,17)" fg:x="7535" fg:w="14"/><text x="90.8367%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="90.7430%" y="1045" width="0.0120%" height="15" fill="rgb(208,124,1)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="90.7430%" y="1029" width="0.0120%" height="15" fill="rgb(234,147,33)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="1039.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="90.7430%" y="1013" width="0.0120%" height="15" fill="rgb(240,86,30)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="90.7430%" y="997" width="0.0120%" height="15" fill="rgb(237,34,51)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="90.7430%" y="981" width="0.0120%" height="15" fill="rgb(232,131,41)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="90.7430%" y="965" width="0.0120%" height="15" fill="rgb(227,129,53)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="975.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="90.7430%" y="949" width="0.0120%" height="15" fill="rgb(230,90,35)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.7430%" y="933" width="0.0120%" height="15" fill="rgb(248,88,27)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.7430%" y="917" width="0.0120%" height="15" fill="rgb(223,18,17)" fg:x="7548" fg:w="1"/><text x="90.9930%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="90.7550%" y="1077" width="0.0120%" height="15" fill="rgb(241,11,10)" fg:x="7549" fg:w="1"/><text x="91.0050%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="90.7550%" y="1061" width="0.0120%" height="15" fill="rgb(232,111,52)" fg:x="7549" fg:w="1"/><text x="91.0050%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.7550%" y="1045" width="0.0120%" height="15" fill="rgb(228,67,8)" fg:x="7549" fg:w="1"/><text x="91.0050%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="90.7550%" y="1029" width="0.0120%" height="15" fill="rgb(251,168,31)" fg:x="7549" fg:w="1"/><text x="91.0050%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="90.7550%" y="1013" width="0.0120%" height="15" fill="rgb(249,164,11)" fg:x="7549" fg:w="1"/><text x="91.0050%" y="1023.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="90.7550%" y="997" width="0.0120%" height="15" fill="rgb(239,81,9)" fg:x="7549" fg:w="1"/><text x="91.0050%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.7550%" y="981" width="0.0120%" height="15" fill="rgb(222,145,38)" fg:x="7549" fg:w="1"/><text x="91.0050%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (3 samples, 0.04%)</title><rect x="90.7550%" y="1109" width="0.0361%" height="15" fill="rgb(238,80,54)" fg:x="7549" fg:w="3"/><text x="91.0050%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (3 samples, 0.04%)</title><rect x="90.7550%" y="1093" width="0.0361%" height="15" fill="rgb(237,116,16)" fg:x="7549" fg:w="3"/><text x="91.0050%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="90.7670%" y="1077" width="0.0240%" height="15" fill="rgb(218,135,19)" fg:x="7550" fg:w="2"/><text x="91.0170%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="90.7670%" y="1061" width="0.0240%" height="15" fill="rgb(216,207,44)" fg:x="7550" fg:w="2"/><text x="91.0170%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (2 samples, 0.02%)</title><rect x="90.7670%" y="1045" width="0.0240%" height="15" fill="rgb(226,152,40)" fg:x="7550" fg:w="2"/><text x="91.0170%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="90.7790%" y="1029" width="0.0120%" height="15" fill="rgb(219,98,35)" fg:x="7551" fg:w="1"/><text x="91.0290%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="90.7790%" y="1013" width="0.0120%" height="15" fill="rgb(222,136,46)" fg:x="7551" fg:w="1"/><text x="91.0290%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="90.7790%" y="997" width="0.0120%" height="15" fill="rgb(222,71,8)" fg:x="7551" fg:w="1"/><text x="91.0290%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="90.7790%" y="981" width="0.0120%" height="15" fill="rgb(209,89,53)" fg:x="7551" fg:w="1"/><text x="91.0290%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.7790%" y="965" width="0.0120%" height="15" fill="rgb(210,97,51)" fg:x="7551" fg:w="1"/><text x="91.0290%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="90.7790%" y="949" width="0.0120%" height="15" fill="rgb(248,65,21)" fg:x="7551" fg:w="1"/><text x="91.0290%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="90.7790%" y="933" width="0.0120%" height="15" fill="rgb(222,5,31)" fg:x="7551" fg:w="1"/><text x="91.0290%" y="943.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.7911%" y="933" width="0.0120%" height="15" fill="rgb(241,16,30)" fg:x="7552" fg:w="1"/><text x="91.0411%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="90.7911%" y="917" width="0.0120%" height="15" fill="rgb(215,86,30)" fg:x="7552" fg:w="1"/><text x="91.0411%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="90.7911%" y="901" width="0.0120%" height="15" fill="rgb(235,26,44)" fg:x="7552" fg:w="1"/><text x="91.0411%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.7911%" y="885" width="0.0120%" height="15" fill="rgb(228,147,14)" fg:x="7552" fg:w="1"/><text x="91.0411%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.7911%" y="869" width="0.0120%" height="15" fill="rgb(253,38,50)" fg:x="7552" fg:w="1"/><text x="91.0411%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.7911%" y="853" width="0.0120%" height="15" fill="rgb(251,151,16)" fg:x="7552" fg:w="1"/><text x="91.0411%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.7911%" y="837" width="0.0120%" height="15" fill="rgb(224,64,19)" fg:x="7552" fg:w="1"/><text x="91.0411%" y="847.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="90.7911%" y="981" width="0.0240%" height="15" fill="rgb(235,214,47)" fg:x="7552" fg:w="2"/><text x="91.0411%" y="991.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="90.7911%" y="965" width="0.0240%" height="15" fill="rgb(218,15,19)" fg:x="7552" fg:w="2"/><text x="91.0411%" y="975.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="90.7911%" y="949" width="0.0240%" height="15" fill="rgb(247,209,3)" fg:x="7552" fg:w="2"/><text x="91.0411%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="90.8031%" y="933" width="0.0120%" height="15" fill="rgb(217,29,2)" fg:x="7553" fg:w="1"/><text x="91.0531%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="90.8031%" y="917" width="0.0120%" height="15" fill="rgb(234,9,9)" fg:x="7553" fg:w="1"/><text x="91.0531%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8031%" y="901" width="0.0120%" height="15" fill="rgb(207,43,14)" fg:x="7553" fg:w="1"/><text x="91.0531%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8031%" y="885" width="0.0120%" height="15" fill="rgb(216,219,36)" fg:x="7553" fg:w="1"/><text x="91.0531%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8031%" y="869" width="0.0120%" height="15" fill="rgb(238,12,26)" fg:x="7553" fg:w="1"/><text x="91.0531%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.8031%" y="853" width="0.0120%" height="15" fill="rgb(226,67,30)" fg:x="7553" fg:w="1"/><text x="91.0531%" y="863.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="90.7911%" y="1029" width="0.0361%" height="15" fill="rgb(229,154,7)" fg:x="7552" fg:w="3"/><text x="91.0411%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="90.7911%" y="1013" width="0.0361%" height="15" fill="rgb(249,90,18)" fg:x="7552" fg:w="3"/><text x="91.0411%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.04%)</title><rect x="90.7911%" y="997" width="0.0361%" height="15" fill="rgb(223,53,15)" fg:x="7552" fg:w="3"/><text x="91.0411%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="90.8151%" y="981" width="0.0120%" height="15" fill="rgb(253,86,38)" fg:x="7554" fg:w="1"/><text x="91.0651%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="90.8151%" y="965" width="0.0120%" height="15" fill="rgb(222,198,9)" fg:x="7554" fg:w="1"/><text x="91.0651%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8151%" y="949" width="0.0120%" height="15" fill="rgb(240,146,25)" fg:x="7554" fg:w="1"/><text x="91.0651%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8151%" y="933" width="0.0120%" height="15" fill="rgb(225,38,10)" fg:x="7554" fg:w="1"/><text x="91.0651%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.05%)</title><rect x="90.7911%" y="1061" width="0.0481%" height="15" fill="rgb(246,93,4)" fg:x="7552" fg:w="4"/><text x="91.0411%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.05%)</title><rect x="90.7911%" y="1045" width="0.0481%" height="15" fill="rgb(222,55,18)" fg:x="7552" fg:w="4"/><text x="91.0411%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.8271%" y="1029" width="0.0120%" height="15" fill="rgb(233,137,48)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.8271%" y="1013" width="0.0120%" height="15" fill="rgb(214,8,54)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.8271%" y="997" width="0.0120%" height="15" fill="rgb(206,75,4)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.8271%" y="981" width="0.0120%" height="15" fill="rgb(238,171,14)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.8271%" y="965" width="0.0120%" height="15" fill="rgb(233,70,41)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="90.8271%" y="949" width="0.0120%" height="15" fill="rgb(214,68,36)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="90.8271%" y="933" width="0.0120%" height="15" fill="rgb(223,29,5)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="90.8271%" y="917" width="0.0120%" height="15" fill="rgb(251,22,40)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="90.8271%" y="901" width="0.0120%" height="15" fill="rgb(210,67,41)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="90.8271%" y="885" width="0.0120%" height="15" fill="rgb(225,177,31)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="895.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="90.8271%" y="869" width="0.0120%" height="15" fill="rgb(221,229,11)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="90.8271%" y="853" width="0.0120%" height="15" fill="rgb(247,172,52)" fg:x="7555" fg:w="1"/><text x="91.0771%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="90.8391%" y="949" width="0.0120%" height="15" fill="rgb(212,73,19)" fg:x="7556" fg:w="1"/><text x="91.0891%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.8391%" y="933" width="0.0120%" height="15" fill="rgb(244,7,46)" fg:x="7556" fg:w="1"/><text x="91.0891%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="90.8391%" y="917" width="0.0120%" height="15" fill="rgb(230,113,20)" fg:x="7556" fg:w="1"/><text x="91.0891%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="90.7911%" y="1109" width="0.0721%" height="15" fill="rgb(209,97,30)" fg:x="7552" fg:w="6"/><text x="91.0411%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.07%)</title><rect x="90.7911%" y="1093" width="0.0721%" height="15" fill="rgb(243,89,12)" fg:x="7552" fg:w="6"/><text x="91.0411%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.07%)</title><rect x="90.7911%" y="1077" width="0.0721%" height="15" fill="rgb(228,32,19)" fg:x="7552" fg:w="6"/><text x="91.0411%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="90.8391%" y="1061" width="0.0240%" height="15" fill="rgb(248,25,17)" fg:x="7556" fg:w="2"/><text x="91.0891%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="90.8391%" y="1045" width="0.0240%" height="15" fill="rgb(232,161,29)" fg:x="7556" fg:w="2"/><text x="91.0891%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.02%)</title><rect x="90.8391%" y="1029" width="0.0240%" height="15" fill="rgb(251,192,11)" fg:x="7556" fg:w="2"/><text x="91.0891%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.02%)</title><rect x="90.8391%" y="1013" width="0.0240%" height="15" fill="rgb(240,47,32)" fg:x="7556" fg:w="2"/><text x="91.0891%" y="1023.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.02%)</title><rect x="90.8391%" y="997" width="0.0240%" height="15" fill="rgb(250,16,45)" fg:x="7556" fg:w="2"/><text x="91.0891%" y="1007.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="90.8391%" y="981" width="0.0240%" height="15" fill="rgb(227,217,42)" fg:x="7556" fg:w="2"/><text x="91.0891%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="90.8391%" y="965" width="0.0240%" height="15" fill="rgb(206,82,54)" fg:x="7556" fg:w="2"/><text x="91.0891%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="90.8512%" y="949" width="0.0120%" height="15" fill="rgb(243,145,25)" fg:x="7557" fg:w="1"/><text x="91.1012%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="90.8512%" y="933" width="0.0120%" height="15" fill="rgb(207,166,24)" fg:x="7557" fg:w="1"/><text x="91.1012%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="90.8512%" y="917" width="0.0120%" height="15" fill="rgb(215,191,44)" fg:x="7557" fg:w="1"/><text x="91.1012%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="90.8632%" y="1093" width="0.0120%" height="15" fill="rgb(234,218,51)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="90.8632%" y="1077" width="0.0120%" height="15" fill="rgb(245,133,21)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="1087.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8632%" y="1061" width="0.0120%" height="15" fill="rgb(230,136,45)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="1071.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8632%" y="1045" width="0.0120%" height="15" fill="rgb(247,63,43)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="1055.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8632%" y="1029" width="0.0120%" height="15" fill="rgb(254,223,31)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="90.8632%" y="1013" width="0.0120%" height="15" fill="rgb(236,185,0)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="90.8632%" y="997" width="0.0120%" height="15" fill="rgb(231,139,46)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8632%" y="981" width="0.0120%" height="15" fill="rgb(236,147,31)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8632%" y="965" width="0.0120%" height="15" fill="rgb(225,222,22)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8632%" y="949" width="0.0120%" height="15" fill="rgb(225,193,14)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="90.8632%" y="933" width="0.0120%" height="15" fill="rgb(253,193,46)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="90.8632%" y="917" width="0.0120%" height="15" fill="rgb(218,187,39)" fg:x="7558" fg:w="1"/><text x="91.1132%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="90.8752%" y="949" width="0.0240%" height="15" fill="rgb(227,162,48)" fg:x="7559" fg:w="2"/><text x="91.1252%" y="959.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="90.8872%" y="933" width="0.0120%" height="15" fill="rgb(222,25,5)" fg:x="7560" fg:w="1"/><text x="91.1372%" y="943.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8993%" y="949" width="0.0120%" height="15" fill="rgb(211,205,16)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8993%" y="933" width="0.0120%" height="15" fill="rgb(244,191,2)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="90.8993%" y="917" width="0.0120%" height="15" fill="rgb(248,159,12)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="927.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="90.8993%" y="901" width="0.0120%" height="15" fill="rgb(235,204,17)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="911.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8993%" y="885" width="0.0120%" height="15" fill="rgb(240,21,27)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="895.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8993%" y="869" width="0.0120%" height="15" fill="rgb(224,170,31)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="879.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.8993%" y="853" width="0.0120%" height="15" fill="rgb(223,145,32)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="90.8993%" y="837" width="0.0120%" height="15" fill="rgb(243,100,5)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="90.8993%" y="821" width="0.0120%" height="15" fill="rgb(242,131,51)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8993%" y="805" width="0.0120%" height="15" fill="rgb(223,156,46)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8993%" y="789" width="0.0120%" height="15" fill="rgb(215,10,40)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.8993%" y="773" width="0.0120%" height="15" fill="rgb(233,155,0)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.8993%" y="757" width="0.0120%" height="15" fill="rgb(247,78,6)" fg:x="7561" fg:w="1"/><text x="91.1493%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 2.10%)</title><rect x="88.8555%" y="1253" width="2.1039%" height="15" fill="rgb(237,217,21)" fg:x="7391" fg:w="175"/><text x="89.1055%" y="1263.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (175 samples, 2.10%)</title><rect x="88.8555%" y="1237" width="2.1039%" height="15" fill="rgb(212,1,21)" fg:x="7391" fg:w="175"/><text x="89.1055%" y="1247.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (175 samples, 2.10%)</title><rect x="88.8555%" y="1221" width="2.1039%" height="15" fill="rgb(213,7,14)" fg:x="7391" fg:w="175"/><text x="89.1055%" y="1231.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map (175 samples, 2.10%)</title><rect x="88.8555%" y="1205" width="2.1039%" height="15" fill="rgb(225,84,14)" fg:x="7391" fg:w="175"/><text x="89.1055%" y="1215.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (175 samples, 2.10%)</title><rect x="88.8555%" y="1189" width="2.1039%" height="15" fill="rgb(239,216,39)" fg:x="7391" fg:w="175"/><text x="89.1055%" y="1199.50">c..</text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (175 samples, 2.10%)</title><rect x="88.8555%" y="1173" width="2.1039%" height="15" fill="rgb(253,29,23)" fg:x="7391" fg:w="175"/><text x="89.1055%" y="1183.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.43%)</title><rect x="90.5266%" y="1157" width="0.4328%" height="15" fill="rgb(220,167,50)" fg:x="7530" fg:w="36"/><text x="90.7766%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.43%)</title><rect x="90.5266%" y="1141" width="0.4328%" height="15" fill="rgb(232,141,1)" fg:x="7530" fg:w="36"/><text x="90.7766%" y="1151.50"></text></g><g><title>smithereens::fragment::_{{closure}} (36 samples, 0.43%)</title><rect x="90.5266%" y="1125" width="0.4328%" height="15" fill="rgb(222,210,1)" fg:x="7530" fg:w="36"/><text x="90.7766%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.10%)</title><rect x="90.8632%" y="1109" width="0.0962%" height="15" fill="rgb(219,84,10)" fg:x="7558" fg:w="8"/><text x="91.1132%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7 samples, 0.08%)</title><rect x="90.8752%" y="1093" width="0.0842%" height="15" fill="rgb(245,188,6)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.08%)</title><rect x="90.8752%" y="1077" width="0.0842%" height="15" fill="rgb(252,139,39)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.08%)</title><rect x="90.8752%" y="1061" width="0.0842%" height="15" fill="rgb(218,42,26)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (7 samples, 0.08%)</title><rect x="90.8752%" y="1045" width="0.0842%" height="15" fill="rgb(237,226,51)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (7 samples, 0.08%)</title><rect x="90.8752%" y="1029" width="0.0842%" height="15" fill="rgb(246,15,17)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (7 samples, 0.08%)</title><rect x="90.8752%" y="1013" width="0.0842%" height="15" fill="rgb(228,170,42)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="1023.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (7 samples, 0.08%)</title><rect x="90.8752%" y="997" width="0.0842%" height="15" fill="rgb(248,118,53)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.08%)</title><rect x="90.8752%" y="981" width="0.0842%" height="15" fill="rgb(207,30,10)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.08%)</title><rect x="90.8752%" y="965" width="0.0842%" height="15" fill="rgb(217,104,38)" fg:x="7559" fg:w="7"/><text x="91.1252%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.05%)</title><rect x="90.9113%" y="949" width="0.0481%" height="15" fill="rgb(211,165,26)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="90.9113%" y="933" width="0.0481%" height="15" fill="rgb(247,38,9)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="90.9113%" y="917" width="0.0481%" height="15" fill="rgb(218,187,8)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="90.9113%" y="901" width="0.0481%" height="15" fill="rgb(247,94,28)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="911.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.9113%" y="885" width="0.0481%" height="15" fill="rgb(218,173,30)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="895.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.9113%" y="869" width="0.0481%" height="15" fill="rgb(245,45,36)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.9113%" y="853" width="0.0481%" height="15" fill="rgb(221,172,44)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="90.9113%" y="837" width="0.0481%" height="15" fill="rgb(222,45,12)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="90.9113%" y="821" width="0.0481%" height="15" fill="rgb(250,10,22)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="90.9113%" y="805" width="0.0481%" height="15" fill="rgb(239,27,0)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="815.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.9113%" y="789" width="0.0481%" height="15" fill="rgb(223,118,22)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="799.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="90.9113%" y="773" width="0.0481%" height="15" fill="rgb(251,81,25)" fg:x="7562" fg:w="4"/><text x="91.1613%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (177 samples, 2.13%)</title><rect x="88.8435%" y="1301" width="2.1279%" height="15" fill="rgb(237,225,53)" fg:x="7390" fg:w="177"/><text x="89.0935%" y="1311.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (177 samples, 2.13%)</title><rect x="88.8435%" y="1285" width="2.1279%" height="15" fill="rgb(237,186,51)" fg:x="7390" fg:w="177"/><text x="89.0935%" y="1295.50">a..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (176 samples, 2.12%)</title><rect x="88.8555%" y="1269" width="2.1159%" height="15" fill="rgb(247,209,11)" fg:x="7391" fg:w="176"/><text x="89.1055%" y="1279.50">&lt;..</text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.01%)</title><rect x="90.9594%" y="1253" width="0.0120%" height="15" fill="rgb(223,109,27)" fg:x="7566" fg:w="1"/><text x="91.2094%" y="1263.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="90.9594%" y="1237" width="0.0120%" height="15" fill="rgb(246,181,13)" fg:x="7566" fg:w="1"/><text x="91.2094%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.9594%" y="1221" width="0.0120%" height="15" fill="rgb(234,57,44)" fg:x="7566" fg:w="1"/><text x="91.2094%" y="1231.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.9594%" y="1205" width="0.0120%" height="15" fill="rgb(211,227,50)" fg:x="7566" fg:w="1"/><text x="91.2094%" y="1215.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.9714%" y="1061" width="0.0120%" height="15" fill="rgb(254,57,34)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.9714%" y="1045" width="0.0120%" height="15" fill="rgb(227,212,26)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="90.9714%" y="1029" width="0.0120%" height="15" fill="rgb(244,169,44)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="1039.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="90.9714%" y="1013" width="0.0120%" height="15" fill="rgb(236,135,50)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="1023.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.9714%" y="997" width="0.0120%" height="15" fill="rgb(241,89,30)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="1007.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.9714%" y="981" width="0.0120%" height="15" fill="rgb(206,113,34)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="991.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="90.9714%" y="965" width="0.0120%" height="15" fill="rgb(218,104,52)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="90.9714%" y="949" width="0.0120%" height="15" fill="rgb(223,82,32)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="90.9714%" y="933" width="0.0120%" height="15" fill="rgb(249,219,30)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.9714%" y="917" width="0.0120%" height="15" fill="rgb(233,141,21)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.9714%" y="901" width="0.0120%" height="15" fill="rgb(252,87,44)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="90.9714%" y="885" width="0.0120%" height="15" fill="rgb(229,48,33)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="90.9714%" y="869" width="0.0120%" height="15" fill="rgb(229,23,22)" fg:x="7567" fg:w="1"/><text x="91.2214%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="90.9714%" y="1093" width="0.0240%" height="15" fill="rgb(244,116,16)" fg:x="7567" fg:w="2"/><text x="91.2214%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="90.9714%" y="1077" width="0.0240%" height="15" fill="rgb(247,45,10)" fg:x="7567" fg:w="2"/><text x="91.2214%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.9834%" y="1061" width="0.0120%" height="15" fill="rgb(228,60,29)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="90.9834%" y="1045" width="0.0120%" height="15" fill="rgb(205,129,15)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="90.9834%" y="1029" width="0.0120%" height="15" fill="rgb(206,229,4)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="90.9834%" y="1013" width="0.0120%" height="15" fill="rgb(249,191,30)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="1023.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.9834%" y="997" width="0.0120%" height="15" fill="rgb(250,84,54)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="1007.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.9834%" y="981" width="0.0120%" height="15" fill="rgb(207,25,53)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.9834%" y="965" width="0.0120%" height="15" fill="rgb(235,40,8)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="90.9834%" y="949" width="0.0120%" height="15" fill="rgb(226,169,33)" fg:x="7568" fg:w="1"/><text x="91.2334%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.04%)</title><rect x="90.9714%" y="1157" width="0.0361%" height="15" fill="rgb(238,110,8)" fg:x="7567" fg:w="3"/><text x="91.2214%" y="1167.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3 samples, 0.04%)</title><rect x="90.9714%" y="1141" width="0.0361%" height="15" fill="rgb(251,206,12)" fg:x="7567" fg:w="3"/><text x="91.2214%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3 samples, 0.04%)</title><rect x="90.9714%" y="1125" width="0.0361%" height="15" fill="rgb(248,171,18)" fg:x="7567" fg:w="3"/><text x="91.2214%" y="1135.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3 samples, 0.04%)</title><rect x="90.9714%" y="1109" width="0.0361%" height="15" fill="rgb(213,65,46)" fg:x="7567" fg:w="3"/><text x="91.2214%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="90.9954%" y="1093" width="0.0120%" height="15" fill="rgb(211,154,15)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="90.9954%" y="1077" width="0.0120%" height="15" fill="rgb(217,75,43)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="90.9954%" y="1061" width="0.0120%" height="15" fill="rgb(230,32,33)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="1071.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="90.9954%" y="1045" width="0.0120%" height="15" fill="rgb(221,100,16)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="1055.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="90.9954%" y="1029" width="0.0120%" height="15" fill="rgb(212,129,47)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.9954%" y="1013" width="0.0120%" height="15" fill="rgb(239,217,47)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="1023.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="90.9954%" y="997" width="0.0120%" height="15" fill="rgb(230,84,24)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="1007.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="90.9954%" y="981" width="0.0120%" height="15" fill="rgb(214,153,51)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="991.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="90.9954%" y="965" width="0.0120%" height="15" fill="rgb(231,6,35)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="90.9954%" y="949" width="0.0120%" height="15" fill="rgb(229,122,30)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="90.9954%" y="933" width="0.0120%" height="15" fill="rgb(234,71,10)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="90.9954%" y="917" width="0.0120%" height="15" fill="rgb(215,173,26)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="90.9954%" y="901" width="0.0120%" height="15" fill="rgb(248,118,52)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="90.9954%" y="885" width="0.0120%" height="15" fill="rgb(237,55,46)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="895.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="90.9954%" y="869" width="0.0120%" height="15" fill="rgb(243,214,43)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="879.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="90.9954%" y="853" width="0.0120%" height="15" fill="rgb(252,123,30)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="863.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="90.9954%" y="837" width="0.0120%" height="15" fill="rgb(215,73,39)" fg:x="7569" fg:w="1"/><text x="91.2454%" y="847.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.05%)</title><rect x="90.9714%" y="1189" width="0.0481%" height="15" fill="rgb(251,194,29)" fg:x="7567" fg:w="4"/><text x="91.2214%" y="1199.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.05%)</title><rect x="90.9714%" y="1173" width="0.0481%" height="15" fill="rgb(224,58,52)" fg:x="7567" fg:w="4"/><text x="91.2214%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.0075%" y="1157" width="0.0120%" height="15" fill="rgb(248,106,46)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.0075%" y="1141" width="0.0120%" height="15" fill="rgb(223,80,29)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="91.0075%" y="1125" width="0.0120%" height="15" fill="rgb(243,137,9)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="91.0075%" y="1109" width="0.0120%" height="15" fill="rgb(235,121,28)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="91.0075%" y="1093" width="0.0120%" height="15" fill="rgb(219,121,41)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="91.0075%" y="1077" width="0.0120%" height="15" fill="rgb(251,60,6)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1087.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="91.0075%" y="1061" width="0.0120%" height="15" fill="rgb(208,12,30)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="91.0075%" y="1045" width="0.0120%" height="15" fill="rgb(207,176,36)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.0075%" y="1029" width="0.0120%" height="15" fill="rgb(211,188,29)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1039.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.0075%" y="1013" width="0.0120%" height="15" fill="rgb(220,184,37)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1023.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="91.0075%" y="997" width="0.0120%" height="15" fill="rgb(239,87,37)" fg:x="7570" fg:w="1"/><text x="91.2575%" y="1007.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.0195%" y="997" width="0.0120%" height="15" fill="rgb(232,113,44)" fg:x="7571" fg:w="1"/><text x="91.2695%" y="1007.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="91.0315%" y="821" width="0.0120%" height="15" fill="rgb(246,25,39)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="831.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.0315%" y="805" width="0.0120%" height="15" fill="rgb(247,30,13)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="815.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.0315%" y="789" width="0.0120%" height="15" fill="rgb(230,176,35)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="799.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.0315%" y="773" width="0.0120%" height="15" fill="rgb(222,23,18)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="91.0315%" y="757" width="0.0120%" height="15" fill="rgb(234,86,8)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="91.0315%" y="741" width="0.0120%" height="15" fill="rgb(206,218,47)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.0315%" y="725" width="0.0120%" height="15" fill="rgb(229,35,31)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.0315%" y="709" width="0.0120%" height="15" fill="rgb(242,81,7)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.0315%" y="693" width="0.0120%" height="15" fill="rgb(231,11,35)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="91.0315%" y="677" width="0.0120%" height="15" fill="rgb(219,218,17)" fg:x="7572" fg:w="1"/><text x="91.2815%" y="687.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.0315%" y="869" width="0.0240%" height="15" fill="rgb(221,83,32)" fg:x="7572" fg:w="2"/><text x="91.2815%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.0315%" y="853" width="0.0240%" height="15" fill="rgb(233,49,54)" fg:x="7572" fg:w="2"/><text x="91.2815%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="91.0315%" y="837" width="0.0240%" height="15" fill="rgb(206,18,51)" fg:x="7572" fg:w="2"/><text x="91.2815%" y="847.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="91.0435%" y="821" width="0.0120%" height="15" fill="rgb(249,193,15)" fg:x="7573" fg:w="1"/><text x="91.2935%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="91.0435%" y="805" width="0.0120%" height="15" fill="rgb(245,186,19)" fg:x="7573" fg:w="1"/><text x="91.2935%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.0435%" y="789" width="0.0120%" height="15" fill="rgb(230,4,24)" fg:x="7573" fg:w="1"/><text x="91.2935%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.0435%" y="773" width="0.0120%" height="15" fill="rgb(234,75,27)" fg:x="7573" fg:w="1"/><text x="91.2935%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="91.0315%" y="901" width="0.0361%" height="15" fill="rgb(244,187,35)" fg:x="7572" fg:w="3"/><text x="91.2815%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="91.0315%" y="885" width="0.0361%" height="15" fill="rgb(241,97,43)" fg:x="7572" fg:w="3"/><text x="91.2815%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.0555%" y="869" width="0.0120%" height="15" fill="rgb(236,94,2)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.0555%" y="853" width="0.0120%" height="15" fill="rgb(231,175,7)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.0555%" y="837" width="0.0120%" height="15" fill="rgb(236,89,47)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.0555%" y="821" width="0.0120%" height="15" fill="rgb(213,191,37)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="831.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.0555%" y="805" width="0.0120%" height="15" fill="rgb(252,0,34)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="815.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.0555%" y="789" width="0.0120%" height="15" fill="rgb(208,145,44)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.0555%" y="773" width="0.0120%" height="15" fill="rgb(227,95,50)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.0555%" y="757" width="0.0120%" height="15" fill="rgb(222,136,24)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.0555%" y="741" width="0.0120%" height="15" fill="rgb(218,105,10)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.0555%" y="725" width="0.0120%" height="15" fill="rgb(216,65,28)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.0555%" y="709" width="0.0120%" height="15" fill="rgb(229,6,28)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.0555%" y="693" width="0.0120%" height="15" fill="rgb(222,160,42)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.0555%" y="677" width="0.0120%" height="15" fill="rgb(235,83,49)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.0555%" y="661" width="0.0120%" height="15" fill="rgb(236,86,36)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.0555%" y="645" width="0.0120%" height="15" fill="rgb(236,19,41)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.0555%" y="629" width="0.0120%" height="15" fill="rgb(217,71,31)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="639.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.0555%" y="613" width="0.0120%" height="15" fill="rgb(236,209,25)" fg:x="7574" fg:w="1"/><text x="91.3055%" y="623.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="91.0676%" y="805" width="0.0120%" height="15" fill="rgb(247,104,21)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="91.0676%" y="789" width="0.0120%" height="15" fill="rgb(243,80,38)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="91.0676%" y="773" width="0.0120%" height="15" fill="rgb(232,109,38)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="91.0676%" y="757" width="0.0120%" height="15" fill="rgb(212,177,53)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="91.0676%" y="741" width="0.0120%" height="15" fill="rgb(227,30,34)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="91.0676%" y="725" width="0.0120%" height="15" fill="rgb(205,175,25)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="91.0676%" y="709" width="0.0120%" height="15" fill="rgb(249,39,54)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.0676%" y="693" width="0.0120%" height="15" fill="rgb(215,54,37)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="703.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.0676%" y="677" width="0.0120%" height="15" fill="rgb(205,60,46)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="687.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.0676%" y="661" width="0.0120%" height="15" fill="rgb(238,89,29)" fg:x="7575" fg:w="1"/><text x="91.3176%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.06%)</title><rect x="91.0315%" y="997" width="0.0601%" height="15" fill="rgb(212,48,10)" fg:x="7572" fg:w="5"/><text x="91.2815%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.06%)</title><rect x="91.0315%" y="981" width="0.0601%" height="15" fill="rgb(237,186,28)" fg:x="7572" fg:w="5"/><text x="91.2815%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.06%)</title><rect x="91.0315%" y="965" width="0.0601%" height="15" fill="rgb(237,204,4)" fg:x="7572" fg:w="5"/><text x="91.2815%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5 samples, 0.06%)</title><rect x="91.0315%" y="949" width="0.0601%" height="15" fill="rgb(237,15,47)" fg:x="7572" fg:w="5"/><text x="91.2815%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.06%)</title><rect x="91.0315%" y="933" width="0.0601%" height="15" fill="rgb(244,110,25)" fg:x="7572" fg:w="5"/><text x="91.2815%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (5 samples, 0.06%)</title><rect x="91.0315%" y="917" width="0.0601%" height="15" fill="rgb(241,12,16)" fg:x="7572" fg:w="5"/><text x="91.2815%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.02%)</title><rect x="91.0676%" y="901" width="0.0240%" height="15" fill="rgb(235,25,9)" fg:x="7575" fg:w="2"/><text x="91.3176%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2 samples, 0.02%)</title><rect x="91.0676%" y="885" width="0.0240%" height="15" fill="rgb(245,159,19)" fg:x="7575" fg:w="2"/><text x="91.3176%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="91.0676%" y="869" width="0.0240%" height="15" fill="rgb(236,63,32)" fg:x="7575" fg:w="2"/><text x="91.3176%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.02%)</title><rect x="91.0676%" y="853" width="0.0240%" height="15" fill="rgb(235,32,52)" fg:x="7575" fg:w="2"/><text x="91.3176%" y="863.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="91.0676%" y="837" width="0.0240%" height="15" fill="rgb(209,176,21)" fg:x="7575" fg:w="2"/><text x="91.3176%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="91.0676%" y="821" width="0.0240%" height="15" fill="rgb(205,90,42)" fg:x="7575" fg:w="2"/><text x="91.3176%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="91.0796%" y="805" width="0.0120%" height="15" fill="rgb(213,132,16)" fg:x="7576" fg:w="1"/><text x="91.3296%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="91.0796%" y="789" width="0.0120%" height="15" fill="rgb(232,11,22)" fg:x="7576" fg:w="1"/><text x="91.3296%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.0796%" y="773" width="0.0120%" height="15" fill="rgb(248,167,41)" fg:x="7576" fg:w="1"/><text x="91.3296%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="91.0796%" y="757" width="0.0120%" height="15" fill="rgb(209,127,6)" fg:x="7576" fg:w="1"/><text x="91.3296%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="91.0796%" y="741" width="0.0120%" height="15" fill="rgb(246,210,34)" fg:x="7576" fg:w="1"/><text x="91.3296%" y="751.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="91.0796%" y="725" width="0.0120%" height="15" fill="rgb(238,165,13)" fg:x="7576" fg:w="1"/><text x="91.3296%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.0916%" y="613" width="0.0120%" height="15" fill="rgb(233,98,15)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="91.0916%" y="597" width="0.0120%" height="15" fill="rgb(215,215,51)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="607.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="91.0916%" y="581" width="0.0120%" height="15" fill="rgb(217,161,25)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="591.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.0916%" y="565" width="0.0120%" height="15" fill="rgb(217,167,48)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="575.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.0916%" y="549" width="0.0120%" height="15" fill="rgb(205,163,34)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.0916%" y="533" width="0.0120%" height="15" fill="rgb(241,197,31)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="91.0916%" y="517" width="0.0120%" height="15" fill="rgb(225,123,11)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.0916%" y="501" width="0.0120%" height="15" fill="rgb(217,4,20)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.0916%" y="485" width="0.0120%" height="15" fill="rgb(215,55,9)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.0916%" y="469" width="0.0120%" height="15" fill="rgb(218,165,5)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="91.0916%" y="453" width="0.0120%" height="15" fill="rgb(222,175,15)" fg:x="7577" fg:w="1"/><text x="91.3416%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="91.0916%" y="805" width="0.0240%" height="15" fill="rgb(223,85,34)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="91.0916%" y="789" width="0.0240%" height="15" fill="rgb(234,228,29)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2 samples, 0.02%)</title><rect x="91.0916%" y="773" width="0.0240%" height="15" fill="rgb(239,7,28)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="91.0916%" y="757" width="0.0240%" height="15" fill="rgb(252,222,53)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="91.0916%" y="741" width="0.0240%" height="15" fill="rgb(232,146,44)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (2 samples, 0.02%)</title><rect x="91.0916%" y="725" width="0.0240%" height="15" fill="rgb(243,223,53)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (2 samples, 0.02%)</title><rect x="91.0916%" y="709" width="0.0240%" height="15" fill="rgb(219,128,25)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (2 samples, 0.02%)</title><rect x="91.0916%" y="693" width="0.0240%" height="15" fill="rgb(223,56,32)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="703.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (2 samples, 0.02%)</title><rect x="91.0916%" y="677" width="0.0240%" height="15" fill="rgb(237,41,3)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="91.0916%" y="661" width="0.0240%" height="15" fill="rgb(235,138,9)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="91.0916%" y="645" width="0.0240%" height="15" fill="rgb(214,131,10)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="655.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.0916%" y="629" width="0.0240%" height="15" fill="rgb(229,89,7)" fg:x="7577" fg:w="2"/><text x="91.3416%" y="639.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.1036%" y="613" width="0.0120%" height="15" fill="rgb(240,24,42)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="623.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.1036%" y="597" width="0.0120%" height="15" fill="rgb(243,188,54)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="91.1036%" y="581" width="0.0120%" height="15" fill="rgb(246,92,22)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="91.1036%" y="565" width="0.0120%" height="15" fill="rgb(211,176,51)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.1036%" y="549" width="0.0120%" height="15" fill="rgb(246,207,34)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.1036%" y="533" width="0.0120%" height="15" fill="rgb(239,95,2)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.1036%" y="517" width="0.0120%" height="15" fill="rgb(211,124,25)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="91.1036%" y="501" width="0.0120%" height="15" fill="rgb(231,221,19)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="91.1036%" y="485" width="0.0120%" height="15" fill="rgb(239,183,19)" fg:x="7578" fg:w="1"/><text x="91.3536%" y="495.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1157%" y="629" width="0.0120%" height="15" fill="rgb(221,130,29)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1157%" y="613" width="0.0120%" height="15" fill="rgb(206,130,36)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1157%" y="597" width="0.0120%" height="15" fill="rgb(215,70,19)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="91.1157%" y="581" width="0.0120%" height="15" fill="rgb(244,16,43)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="91.1157%" y="565" width="0.0120%" height="15" fill="rgb(222,115,32)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="575.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="91.1157%" y="549" width="0.0120%" height="15" fill="rgb(247,48,25)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.1157%" y="533" width="0.0120%" height="15" fill="rgb(226,180,51)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.1157%" y="517" width="0.0120%" height="15" fill="rgb(217,142,42)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.1157%" y="501" width="0.0120%" height="15" fill="rgb(220,178,3)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="511.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.1157%" y="485" width="0.0120%" height="15" fill="rgb(217,221,4)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.1157%" y="469" width="0.0120%" height="15" fill="rgb(237,63,43)" fg:x="7579" fg:w="1"/><text x="91.3657%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.05%)</title><rect x="91.0916%" y="997" width="0.0481%" height="15" fill="rgb(220,57,8)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="91.0916%" y="981" width="0.0481%" height="15" fill="rgb(254,186,27)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="91.0916%" y="965" width="0.0481%" height="15" fill="rgb(251,57,28)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.05%)</title><rect x="91.0916%" y="949" width="0.0481%" height="15" fill="rgb(215,228,0)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.05%)</title><rect x="91.0916%" y="933" width="0.0481%" height="15" fill="rgb(237,218,39)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="91.0916%" y="917" width="0.0481%" height="15" fill="rgb(207,2,54)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="91.0916%" y="901" width="0.0481%" height="15" fill="rgb(232,76,50)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (4 samples, 0.05%)</title><rect x="91.0916%" y="885" width="0.0481%" height="15" fill="rgb(211,85,31)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="91.0916%" y="869" width="0.0481%" height="15" fill="rgb(223,210,27)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="91.0916%" y="853" width="0.0481%" height="15" fill="rgb(254,36,8)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.05%)</title><rect x="91.0916%" y="837" width="0.0481%" height="15" fill="rgb(213,4,25)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="847.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (4 samples, 0.05%)</title><rect x="91.0916%" y="821" width="0.0481%" height="15" fill="rgb(224,2,39)" fg:x="7577" fg:w="4"/><text x="91.3416%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="91.1157%" y="805" width="0.0240%" height="15" fill="rgb(208,8,39)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="91.1157%" y="789" width="0.0240%" height="15" fill="rgb(216,226,3)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="799.50"></text></g><g><title>smithereens::fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="91.1157%" y="773" width="0.0240%" height="15" fill="rgb(249,139,31)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="783.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="91.1157%" y="757" width="0.0240%" height="15" fill="rgb(242,170,35)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1157%" y="741" width="0.0240%" height="15" fill="rgb(238,14,9)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1157%" y="725" width="0.0240%" height="15" fill="rgb(251,81,46)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="735.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1157%" y="709" width="0.0240%" height="15" fill="rgb(230,23,4)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="91.1157%" y="693" width="0.0240%" height="15" fill="rgb(211,85,25)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="91.1157%" y="677" width="0.0240%" height="15" fill="rgb(252,23,31)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="687.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="91.1157%" y="661" width="0.0240%" height="15" fill="rgb(234,163,38)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="671.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1157%" y="645" width="0.0240%" height="15" fill="rgb(210,190,50)" fg:x="7579" fg:w="2"/><text x="91.3657%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.1277%" y="629" width="0.0120%" height="15" fill="rgb(228,158,3)" fg:x="7580" fg:w="1"/><text x="91.3777%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.1277%" y="613" width="0.0120%" height="15" fill="rgb(216,130,0)" fg:x="7580" fg:w="1"/><text x="91.3777%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.1277%" y="597" width="0.0120%" height="15" fill="rgb(224,184,10)" fg:x="7580" fg:w="1"/><text x="91.3777%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="91.1277%" y="581" width="0.0120%" height="15" fill="rgb(214,202,18)" fg:x="7580" fg:w="1"/><text x="91.3777%" y="591.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1397%" y="949" width="0.0120%" height="15" fill="rgb(213,229,54)" fg:x="7581" fg:w="1"/><text x="91.3897%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1397%" y="933" width="0.0120%" height="15" fill="rgb(246,120,0)" fg:x="7581" fg:w="1"/><text x="91.3897%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.1397%" y="917" width="0.0120%" height="15" fill="rgb(237,6,15)" fg:x="7581" fg:w="1"/><text x="91.3897%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.1397%" y="901" width="0.0120%" height="15" fill="rgb(252,156,15)" fg:x="7581" fg:w="1"/><text x="91.3897%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.1397%" y="885" width="0.0120%" height="15" fill="rgb(249,78,18)" fg:x="7581" fg:w="1"/><text x="91.3897%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="91.1397%" y="869" width="0.0120%" height="15" fill="rgb(230,223,44)" fg:x="7581" fg:w="1"/><text x="91.3897%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1517%" y="949" width="0.0120%" height="15" fill="rgb(230,222,32)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="959.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1517%" y="933" width="0.0120%" height="15" fill="rgb(247,54,6)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1517%" y="917" width="0.0120%" height="15" fill="rgb(247,115,45)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="91.1517%" y="901" width="0.0120%" height="15" fill="rgb(213,203,37)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="91.1517%" y="885" width="0.0120%" height="15" fill="rgb(248,188,18)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="91.1517%" y="869" width="0.0120%" height="15" fill="rgb(206,80,8)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.1517%" y="853" width="0.0120%" height="15" fill="rgb(245,217,31)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.1517%" y="837" width="0.0120%" height="15" fill="rgb(220,193,15)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.1517%" y="821" width="0.0120%" height="15" fill="rgb(226,7,19)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="831.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.1517%" y="805" width="0.0120%" height="15" fill="rgb(222,145,31)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.1517%" y="789" width="0.0120%" height="15" fill="rgb(241,193,36)" fg:x="7582" fg:w="1"/><text x="91.4017%" y="799.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1637%" y="821" width="0.0120%" height="15" fill="rgb(225,123,33)" fg:x="7583" fg:w="1"/><text x="91.4137%" y="831.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1637%" y="805" width="0.0120%" height="15" fill="rgb(246,136,38)" fg:x="7583" fg:w="1"/><text x="91.4137%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.1637%" y="789" width="0.0120%" height="15" fill="rgb(243,56,24)" fg:x="7583" fg:w="1"/><text x="91.4137%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="91.1637%" y="773" width="0.0120%" height="15" fill="rgb(215,147,2)" fg:x="7583" fg:w="1"/><text x="91.4137%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="91.1637%" y="757" width="0.0120%" height="15" fill="rgb(209,155,27)" fg:x="7583" fg:w="1"/><text x="91.4137%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.1637%" y="741" width="0.0120%" height="15" fill="rgb(222,177,11)" fg:x="7583" fg:w="1"/><text x="91.4137%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.1637%" y="725" width="0.0120%" height="15" fill="rgb(212,227,15)" fg:x="7583" fg:w="1"/><text x="91.4137%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="91.1637%" y="949" width="0.0240%" height="15" fill="rgb(214,138,20)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1637%" y="933" width="0.0240%" height="15" fill="rgb(221,170,31)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="943.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1637%" y="917" width="0.0240%" height="15" fill="rgb(253,207,5)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="927.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1637%" y="901" width="0.0240%" height="15" fill="rgb(212,64,37)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="91.1637%" y="885" width="0.0240%" height="15" fill="rgb(208,113,51)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="91.1637%" y="869" width="0.0240%" height="15" fill="rgb(237,15,5)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="879.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="91.1637%" y="853" width="0.0240%" height="15" fill="rgb(238,33,18)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="863.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.1637%" y="837" width="0.0240%" height="15" fill="rgb(253,206,50)" fg:x="7583" fg:w="2"/><text x="91.4137%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.1758%" y="821" width="0.0120%" height="15" fill="rgb(242,158,43)" fg:x="7584" fg:w="1"/><text x="91.4258%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.1758%" y="805" width="0.0120%" height="15" fill="rgb(213,125,27)" fg:x="7584" fg:w="1"/><text x="91.4258%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.1758%" y="789" width="0.0120%" height="15" fill="rgb(233,161,31)" fg:x="7584" fg:w="1"/><text x="91.4258%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.1758%" y="773" width="0.0120%" height="15" fill="rgb(218,135,6)" fg:x="7584" fg:w="1"/><text x="91.4258%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.1758%" y="757" width="0.0120%" height="15" fill="rgb(222,73,53)" fg:x="7584" fg:w="1"/><text x="91.4258%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.1758%" y="741" width="0.0120%" height="15" fill="rgb(229,66,53)" fg:x="7584" fg:w="1"/><text x="91.4258%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.18%)</title><rect x="91.0195%" y="1141" width="0.1803%" height="15" fill="rgb(208,128,19)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.18%)</title><rect x="91.0195%" y="1125" width="0.1803%" height="15" fill="rgb(235,70,27)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="91.0195%" y="1109" width="0.1803%" height="15" fill="rgb(241,130,30)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="91.0195%" y="1093" width="0.1803%" height="15" fill="rgb(222,57,48)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (15 samples, 0.18%)</title><rect x="91.0195%" y="1077" width="0.1803%" height="15" fill="rgb(225,204,29)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="91.0195%" y="1061" width="0.1803%" height="15" fill="rgb(240,196,35)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.18%)</title><rect x="91.0195%" y="1045" width="0.1803%" height="15" fill="rgb(215,150,16)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15 samples, 0.18%)</title><rect x="91.0195%" y="1029" width="0.1803%" height="15" fill="rgb(209,170,13)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1039.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (15 samples, 0.18%)</title><rect x="91.0195%" y="1013" width="0.1803%" height="15" fill="rgb(235,75,31)" fg:x="7571" fg:w="15"/><text x="91.2695%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="91.1397%" y="997" width="0.0601%" height="15" fill="rgb(252,1,47)" fg:x="7581" fg:w="5"/><text x="91.3897%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="91.1397%" y="981" width="0.0601%" height="15" fill="rgb(241,2,36)" fg:x="7581" fg:w="5"/><text x="91.3897%" y="991.50"></text></g><g><title>smithereens::fragment::_{{closure}} (5 samples, 0.06%)</title><rect x="91.1397%" y="965" width="0.0601%" height="15" fill="rgb(236,191,4)" fg:x="7581" fg:w="5"/><text x="91.3897%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="91.1878%" y="949" width="0.0120%" height="15" fill="rgb(212,65,35)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="91.1878%" y="933" width="0.0120%" height="15" fill="rgb(209,49,33)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="91.1878%" y="917" width="0.0120%" height="15" fill="rgb(208,36,46)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="91.1878%" y="901" width="0.0120%" height="15" fill="rgb(210,125,2)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.1878%" y="885" width="0.0120%" height="15" fill="rgb(225,62,6)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="91.1878%" y="869" width="0.0120%" height="15" fill="rgb(210,54,27)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="879.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="91.1878%" y="853" width="0.0120%" height="15" fill="rgb(249,189,52)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="863.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="91.1878%" y="837" width="0.0120%" height="15" fill="rgb(225,134,40)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="91.1878%" y="821" width="0.0120%" height="15" fill="rgb(206,13,37)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="831.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.1878%" y="805" width="0.0120%" height="15" fill="rgb(232,114,28)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.1878%" y="789" width="0.0120%" height="15" fill="rgb(253,215,8)" fg:x="7585" fg:w="1"/><text x="91.4378%" y="799.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="91.1998%" y="1029" width="0.0120%" height="15" fill="rgb(254,64,19)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="1039.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="91.1998%" y="1013" width="0.0120%" height="15" fill="rgb(242,18,46)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="91.1998%" y="997" width="0.0120%" height="15" fill="rgb(239,192,30)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="981" width="0.0120%" height="15" fill="rgb(232,73,14)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="965" width="0.0120%" height="15" fill="rgb(225,51,9)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="949" width="0.0120%" height="15" fill="rgb(242,217,54)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="91.1998%" y="933" width="0.0120%" height="15" fill="rgb(216,93,3)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="91.1998%" y="917" width="0.0120%" height="15" fill="rgb(230,119,33)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="901" width="0.0120%" height="15" fill="rgb(238,170,27)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="885" width="0.0120%" height="15" fill="rgb(229,8,2)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="895.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="91.1998%" y="869" width="0.0120%" height="15" fill="rgb(205,214,42)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="853" width="0.0120%" height="15" fill="rgb(245,113,1)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="863.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="837" width="0.0120%" height="15" fill="rgb(252,50,2)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="821" width="0.0120%" height="15" fill="rgb(225,122,24)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="91.1998%" y="805" width="0.0120%" height="15" fill="rgb(234,129,31)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="91.1998%" y="789" width="0.0120%" height="15" fill="rgb(219,177,4)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="91.1998%" y="773" width="0.0120%" height="15" fill="rgb(225,142,27)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="757" width="0.0120%" height="15" fill="rgb(205,107,51)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="741" width="0.0120%" height="15" fill="rgb(236,223,15)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="725" width="0.0120%" height="15" fill="rgb(235,133,11)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="735.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="709" width="0.0120%" height="15" fill="rgb(247,172,13)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="719.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="693" width="0.0120%" height="15" fill="rgb(233,191,41)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="677" width="0.0120%" height="15" fill="rgb(250,65,16)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="91.1998%" y="661" width="0.0120%" height="15" fill="rgb(206,10,27)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="91.1998%" y="645" width="0.0120%" height="15" fill="rgb(212,96,22)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="91.1998%" y="629" width="0.0120%" height="15" fill="rgb(206,50,0)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="613" width="0.0120%" height="15" fill="rgb(249,105,52)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="91.1998%" y="597" width="0.0120%" height="15" fill="rgb(216,93,51)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="581" width="0.0120%" height="15" fill="rgb(217,172,13)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="591.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="565" width="0.0120%" height="15" fill="rgb(235,199,38)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="575.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="549" width="0.0120%" height="15" fill="rgb(221,97,33)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="559.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.1998%" y="533" width="0.0120%" height="15" fill="rgb(205,156,50)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="543.50"></text></g><g><title>rust_decimal::ops::common::Dec64::new (1 samples, 0.01%)</title><rect x="91.1998%" y="517" width="0.0120%" height="15" fill="rgb(215,142,19)" fg:x="7586" fg:w="1"/><text x="91.4498%" y="527.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="91.2118%" y="597" width="0.0120%" height="15" fill="rgb(232,170,7)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="581" width="0.0120%" height="15" fill="rgb(223,50,17)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="591.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="565" width="0.0120%" height="15" fill="rgb(230,103,46)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="549" width="0.0120%" height="15" fill="rgb(254,30,34)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="91.2118%" y="533" width="0.0120%" height="15" fill="rgb(235,198,1)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1 samples, 0.01%)</title><rect x="91.2118%" y="517" width="0.0120%" height="15" fill="rgb(217,105,47)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="527.50"></text></g><g><title>core::clone::Clone::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="501" width="0.0120%" height="15" fill="rgb(231,18,12)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="511.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="485" width="0.0120%" height="15" fill="rgb(218,196,1)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="495.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="469" width="0.0120%" height="15" fill="rgb(210,32,3)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="479.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="453" width="0.0120%" height="15" fill="rgb(227,178,30)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2118%" y="437" width="0.0120%" height="15" fill="rgb(231,140,27)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="91.2118%" y="421" width="0.0120%" height="15" fill="rgb(206,66,35)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="91.2118%" y="405" width="0.0120%" height="15" fill="rgb(212,34,2)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="415.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="91.2118%" y="389" width="0.0120%" height="15" fill="rgb(207,201,33)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.2118%" y="373" width="0.0120%" height="15" fill="rgb(221,135,32)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.2118%" y="357" width="0.0120%" height="15" fill="rgb(206,77,31)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.2118%" y="341" width="0.0120%" height="15" fill="rgb(252,198,50)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="351.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.2118%" y="325" width="0.0120%" height="15" fill="rgb(206,79,27)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.2118%" y="309" width="0.0120%" height="15" fill="rgb(228,108,9)" fg:x="7587" fg:w="1"/><text x="91.4618%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="91.2118%" y="837" width="0.0240%" height="15" fill="rgb(213,9,39)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="91.2118%" y="821" width="0.0240%" height="15" fill="rgb(252,51,13)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="91.2118%" y="805" width="0.0240%" height="15" fill="rgb(218,202,39)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="91.2118%" y="789" width="0.0240%" height="15" fill="rgb(214,122,21)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="91.2118%" y="773" width="0.0240%" height="15" fill="rgb(217,205,48)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="91.2118%" y="757" width="0.0240%" height="15" fill="rgb(230,216,13)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="91.2118%" y="741" width="0.0240%" height="15" fill="rgb(249,118,4)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="91.2118%" y="725" width="0.0240%" height="15" fill="rgb(212,207,40)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="91.2118%" y="709" width="0.0240%" height="15" fill="rgb(217,156,26)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="91.2118%" y="693" width="0.0240%" height="15" fill="rgb(226,86,34)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="91.2118%" y="677" width="0.0240%" height="15" fill="rgb(217,111,30)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="687.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="91.2118%" y="661" width="0.0240%" height="15" fill="rgb(228,64,18)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="91.2118%" y="645" width="0.0240%" height="15" fill="rgb(254,217,48)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="91.2118%" y="629" width="0.0240%" height="15" fill="rgb(226,156,48)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="639.50"></text></g><g><title>smithereens::fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="91.2118%" y="613" width="0.0240%" height="15" fill="rgb(236,168,20)" fg:x="7587" fg:w="2"/><text x="91.4618%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="91.2239%" y="597" width="0.0120%" height="15" fill="rgb(239,210,33)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="91.2239%" y="581" width="0.0120%" height="15" fill="rgb(242,85,17)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="91.2239%" y="565" width="0.0120%" height="15" fill="rgb(221,196,15)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="91.2239%" y="549" width="0.0120%" height="15" fill="rgb(249,76,21)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="91.2239%" y="533" width="0.0120%" height="15" fill="rgb(243,67,29)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="91.2239%" y="517" width="0.0120%" height="15" fill="rgb(240,159,2)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2239%" y="501" width="0.0120%" height="15" fill="rgb(244,64,3)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="511.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2239%" y="485" width="0.0120%" height="15" fill="rgb(220,86,40)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="495.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="91.2239%" y="469" width="0.0120%" height="15" fill="rgb(222,194,51)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.2239%" y="453" width="0.0120%" height="15" fill="rgb(207,154,19)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="91.2239%" y="437" width="0.0120%" height="15" fill="rgb(206,178,36)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2239%" y="421" width="0.0120%" height="15" fill="rgb(218,8,24)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2239%" y="405" width="0.0120%" height="15" fill="rgb(226,83,41)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="91.2239%" y="389" width="0.0120%" height="15" fill="rgb(224,23,22)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.2239%" y="373" width="0.0120%" height="15" fill="rgb(218,198,45)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.2239%" y="357" width="0.0120%" height="15" fill="rgb(249,147,41)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.2239%" y="341" width="0.0120%" height="15" fill="rgb(244,224,13)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.2239%" y="325" width="0.0120%" height="15" fill="rgb(225,97,27)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.2239%" y="309" width="0.0120%" height="15" fill="rgb(254,64,0)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.2239%" y="293" width="0.0120%" height="15" fill="rgb(208,130,43)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="303.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.2239%" y="277" width="0.0120%" height="15" fill="rgb(247,91,25)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.2239%" y="261" width="0.0120%" height="15" fill="rgb(215,218,42)" fg:x="7588" fg:w="1"/><text x="91.4739%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="91.2118%" y="1029" width="0.0361%" height="15" fill="rgb(233,9,24)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="91.2118%" y="1013" width="0.0361%" height="15" fill="rgb(252,105,38)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="91.2118%" y="997" width="0.0361%" height="15" fill="rgb(225,40,49)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="91.2118%" y="981" width="0.0361%" height="15" fill="rgb(232,196,19)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="91.2118%" y="965" width="0.0361%" height="15" fill="rgb(207,35,15)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="91.2118%" y="949" width="0.0361%" height="15" fill="rgb(238,68,36)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="91.2118%" y="933" width="0.0361%" height="15" fill="rgb(205,158,20)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.04%)</title><rect x="91.2118%" y="917" width="0.0361%" height="15" fill="rgb(232,32,22)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="91.2118%" y="901" width="0.0361%" height="15" fill="rgb(210,169,6)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="91.2118%" y="885" width="0.0361%" height="15" fill="rgb(229,28,12)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.04%)</title><rect x="91.2118%" y="869" width="0.0361%" height="15" fill="rgb(229,78,10)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="879.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="91.2118%" y="853" width="0.0361%" height="15" fill="rgb(223,139,54)" fg:x="7587" fg:w="3"/><text x="91.4618%" y="863.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="91.2359%" y="837" width="0.0120%" height="15" fill="rgb(207,110,4)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="91.2359%" y="821" width="0.0120%" height="15" fill="rgb(248,30,41)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="91.2359%" y="805" width="0.0120%" height="15" fill="rgb(235,54,25)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.2359%" y="789" width="0.0120%" height="15" fill="rgb(213,107,41)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="91.2359%" y="773" width="0.0120%" height="15" fill="rgb(237,102,9)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="91.2359%" y="757" width="0.0120%" height="15" fill="rgb(252,137,49)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="91.2359%" y="741" width="0.0120%" height="15" fill="rgb(233,202,33)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2359%" y="725" width="0.0120%" height="15" fill="rgb(223,14,51)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="735.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2359%" y="709" width="0.0120%" height="15" fill="rgb(248,70,23)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="91.2359%" y="693" width="0.0120%" height="15" fill="rgb(209,207,47)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.2359%" y="677" width="0.0120%" height="15" fill="rgb(245,124,2)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.2359%" y="661" width="0.0120%" height="15" fill="rgb(249,208,11)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.2359%" y="645" width="0.0120%" height="15" fill="rgb(247,112,7)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.2359%" y="629" width="0.0120%" height="15" fill="rgb(209,192,31)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.2359%" y="613" width="0.0120%" height="15" fill="rgb(236,55,19)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="91.2359%" y="597" width="0.0120%" height="15" fill="rgb(252,89,41)" fg:x="7589" fg:w="1"/><text x="91.4859%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (1 samples, 0.01%)</title><rect x="91.2479%" y="981" width="0.0120%" height="15" fill="rgb(220,172,14)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (1 samples, 0.01%)</title><rect x="91.2479%" y="965" width="0.0120%" height="15" fill="rgb(252,65,2)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="91.2479%" y="949" width="0.0120%" height="15" fill="rgb(250,20,8)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="91.2479%" y="933" width="0.0120%" height="15" fill="rgb(234,149,13)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (1 samples, 0.01%)</title><rect x="91.2479%" y="917" width="0.0120%" height="15" fill="rgb(223,219,12)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.2479%" y="901" width="0.0120%" height="15" fill="rgb(234,13,49)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.01%)</title><rect x="91.2479%" y="885" width="0.0120%" height="15" fill="rgb(214,41,25)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.01%)</title><rect x="91.2479%" y="869" width="0.0120%" height="15" fill="rgb(232,198,52)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="91.2479%" y="853" width="0.0120%" height="15" fill="rgb(236,111,46)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="91.2479%" y="837" width="0.0120%" height="15" fill="rgb(253,30,20)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="847.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="91.2479%" y="821" width="0.0120%" height="15" fill="rgb(247,141,17)" fg:x="7590" fg:w="1"/><text x="91.4979%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.25%)</title><rect x="91.0195%" y="1189" width="0.2525%" height="15" fill="rgb(214,195,21)" fg:x="7571" fg:w="21"/><text x="91.2695%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (21 samples, 0.25%)</title><rect x="91.0195%" y="1173" width="0.2525%" height="15" fill="rgb(214,98,12)" fg:x="7571" fg:w="21"/><text x="91.2695%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (21 samples, 0.25%)</title><rect x="91.0195%" y="1157" width="0.2525%" height="15" fill="rgb(239,4,26)" fg:x="7571" fg:w="21"/><text x="91.2695%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="91.1998%" y="1141" width="0.0721%" height="15" fill="rgb(234,210,35)" fg:x="7586" fg:w="6"/><text x="91.4498%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="91.1998%" y="1125" width="0.0721%" height="15" fill="rgb(252,178,27)" fg:x="7586" fg:w="6"/><text x="91.4498%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (6 samples, 0.07%)</title><rect x="91.1998%" y="1109" width="0.0721%" height="15" fill="rgb(217,50,1)" fg:x="7586" fg:w="6"/><text x="91.4498%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="91.1998%" y="1093" width="0.0721%" height="15" fill="rgb(233,137,5)" fg:x="7586" fg:w="6"/><text x="91.4498%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="91.1998%" y="1077" width="0.0721%" height="15" fill="rgb(217,227,25)" fg:x="7586" fg:w="6"/><text x="91.4498%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.07%)</title><rect x="91.1998%" y="1061" width="0.0721%" height="15" fill="rgb(242,89,38)" fg:x="7586" fg:w="6"/><text x="91.4498%" y="1071.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (6 samples, 0.07%)</title><rect x="91.1998%" y="1045" width="0.0721%" height="15" fill="rgb(212,190,30)" fg:x="7586" fg:w="6"/><text x="91.4498%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="91.2479%" y="1029" width="0.0240%" height="15" fill="rgb(222,120,8)" fg:x="7590" fg:w="2"/><text x="91.4979%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="91.2479%" y="1013" width="0.0240%" height="15" fill="rgb(227,181,9)" fg:x="7590" fg:w="2"/><text x="91.4979%" y="1023.50"></text></g><g><title>smithereens::fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="91.2479%" y="997" width="0.0240%" height="15" fill="rgb(222,125,29)" fg:x="7590" fg:w="2"/><text x="91.4979%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="91.2599%" y="981" width="0.0120%" height="15" fill="rgb(215,153,31)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="91.2599%" y="965" width="0.0120%" height="15" fill="rgb(228,77,30)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="91.2599%" y="949" width="0.0120%" height="15" fill="rgb(226,110,9)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="91.2599%" y="933" width="0.0120%" height="15" fill="rgb(219,111,7)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="91.2599%" y="917" width="0.0120%" height="15" fill="rgb(229,167,25)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="91.2599%" y="901" width="0.0120%" height="15" fill="rgb(209,77,43)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2599%" y="885" width="0.0120%" height="15" fill="rgb(233,70,39)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2599%" y="869" width="0.0120%" height="15" fill="rgb(207,171,44)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="879.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="91.2599%" y="853" width="0.0120%" height="15" fill="rgb(244,91,6)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.2599%" y="837" width="0.0120%" height="15" fill="rgb(234,136,12)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="91.2599%" y="821" width="0.0120%" height="15" fill="rgb(216,210,38)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2599%" y="805" width="0.0120%" height="15" fill="rgb(241,227,7)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.2599%" y="789" width="0.0120%" height="15" fill="rgb(241,222,11)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.2599%" y="773" width="0.0120%" height="15" fill="rgb(246,86,18)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="91.2599%" y="757" width="0.0120%" height="15" fill="rgb(224,151,49)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="91.2599%" y="741" width="0.0120%" height="15" fill="rgb(235,4,41)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="91.2599%" y="725" width="0.0120%" height="15" fill="rgb(218,30,52)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2599%" y="709" width="0.0120%" height="15" fill="rgb(205,124,51)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="719.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2599%" y="693" width="0.0120%" height="15" fill="rgb(237,126,51)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="703.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2599%" y="677" width="0.0120%" height="15" fill="rgb(225,32,46)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2599%" y="661" width="0.0120%" height="15" fill="rgb(251,60,49)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.2599%" y="645" width="0.0120%" height="15" fill="rgb(234,18,23)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.2599%" y="629" width="0.0120%" height="15" fill="rgb(234,25,23)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.2599%" y="613" width="0.0120%" height="15" fill="rgb(210,43,52)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="623.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2599%" y="597" width="0.0120%" height="15" fill="rgb(237,198,21)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="607.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2599%" y="581" width="0.0120%" height="15" fill="rgb(211,20,34)" fg:x="7591" fg:w="1"/><text x="91.5099%" y="591.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="91.2719%" y="1189" width="0.0120%" height="15" fill="rgb(221,155,50)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1199.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="91.2719%" y="1173" width="0.0120%" height="15" fill="rgb(213,214,53)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="91.2719%" y="1157" width="0.0120%" height="15" fill="rgb(215,229,48)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.2719%" y="1141" width="0.0120%" height="15" fill="rgb(243,88,5)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="91.2719%" y="1125" width="0.0120%" height="15" fill="rgb(216,199,8)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="91.2719%" y="1109" width="0.0120%" height="15" fill="rgb(241,22,4)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="91.2719%" y="1093" width="0.0120%" height="15" fill="rgb(209,190,22)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2719%" y="1077" width="0.0120%" height="15" fill="rgb(251,138,45)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1087.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1 samples, 0.01%)</title><rect x="91.2719%" y="1061" width="0.0120%" height="15" fill="rgb(219,111,22)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="91.2719%" y="1045" width="0.0120%" height="15" fill="rgb(253,29,49)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.2719%" y="1029" width="0.0120%" height="15" fill="rgb(238,129,49)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1039.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.2719%" y="1013" width="0.0120%" height="15" fill="rgb(240,26,41)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1023.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="91.2719%" y="997" width="0.0120%" height="15" fill="rgb(221,47,33)" fg:x="7592" fg:w="1"/><text x="91.5219%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2840%" y="1013" width="0.0120%" height="15" fill="rgb(216,200,17)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="1023.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2840%" y="997" width="0.0120%" height="15" fill="rgb(230,151,26)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.2840%" y="981" width="0.0120%" height="15" fill="rgb(242,182,16)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="91.2840%" y="965" width="0.0120%" height="15" fill="rgb(236,35,53)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="91.2840%" y="949" width="0.0120%" height="15" fill="rgb(214,180,28)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="959.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="91.2840%" y="933" width="0.0120%" height="15" fill="rgb(208,173,36)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.2840%" y="917" width="0.0120%" height="15" fill="rgb(218,39,15)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.2840%" y="901" width="0.0120%" height="15" fill="rgb(213,145,15)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.2840%" y="885" width="0.0120%" height="15" fill="rgb(242,110,37)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="895.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.2840%" y="869" width="0.0120%" height="15" fill="rgb(247,146,22)" fg:x="7593" fg:w="1"/><text x="91.5340%" y="879.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="91.2840%" y="1141" width="0.0240%" height="15" fill="rgb(215,191,7)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.2840%" y="1125" width="0.0240%" height="15" fill="rgb(240,158,1)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.2840%" y="1109" width="0.0240%" height="15" fill="rgb(241,78,32)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.2840%" y="1093" width="0.0240%" height="15" fill="rgb(248,83,10)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="91.2840%" y="1077" width="0.0240%" height="15" fill="rgb(241,52,0)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="91.2840%" y="1061" width="0.0240%" height="15" fill="rgb(238,37,13)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1071.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="91.2840%" y="1045" width="0.0240%" height="15" fill="rgb(242,194,17)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1055.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="91.2840%" y="1029" width="0.0240%" height="15" fill="rgb(236,96,3)" fg:x="7593" fg:w="2"/><text x="91.5340%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.2960%" y="1013" width="0.0120%" height="15" fill="rgb(235,148,34)" fg:x="7594" fg:w="1"/><text x="91.5460%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.2960%" y="997" width="0.0120%" height="15" fill="rgb(254,12,11)" fg:x="7594" fg:w="1"/><text x="91.5460%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.2960%" y="981" width="0.0120%" height="15" fill="rgb(207,31,54)" fg:x="7594" fg:w="1"/><text x="91.5460%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.2960%" y="965" width="0.0120%" height="15" fill="rgb(252,14,28)" fg:x="7594" fg:w="1"/><text x="91.5460%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.2960%" y="949" width="0.0120%" height="15" fill="rgb(252,108,36)" fg:x="7594" fg:w="1"/><text x="91.5460%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.2960%" y="933" width="0.0120%" height="15" fill="rgb(214,149,7)" fg:x="7594" fg:w="1"/><text x="91.5460%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (206 samples, 2.48%)</title><rect x="88.8435%" y="1349" width="2.4766%" height="15" fill="rgb(243,94,12)" fg:x="7390" fg:w="206"/><text x="89.0935%" y="1359.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (206 samples, 2.48%)</title><rect x="88.8435%" y="1333" width="2.4766%" height="15" fill="rgb(208,36,10)" fg:x="7390" fg:w="206"/><text x="89.0935%" y="1343.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (206 samples, 2.48%)</title><rect x="88.8435%" y="1317" width="2.4766%" height="15" fill="rgb(233,185,52)" fg:x="7390" fg:w="206"/><text x="89.0935%" y="1327.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.35%)</title><rect x="90.9714%" y="1301" width="0.3486%" height="15" fill="rgb(234,50,45)" fg:x="7567" fg:w="29"/><text x="91.2214%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.35%)</title><rect x="90.9714%" y="1285" width="0.3486%" height="15" fill="rgb(228,92,54)" fg:x="7567" fg:w="29"/><text x="91.2214%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (29 samples, 0.35%)</title><rect x="90.9714%" y="1269" width="0.3486%" height="15" fill="rgb(224,85,25)" fg:x="7567" fg:w="29"/><text x="91.2214%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.35%)</title><rect x="90.9714%" y="1253" width="0.3486%" height="15" fill="rgb(246,1,45)" fg:x="7567" fg:w="29"/><text x="91.2214%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.35%)</title><rect x="90.9714%" y="1237" width="0.3486%" height="15" fill="rgb(240,66,23)" fg:x="7567" fg:w="29"/><text x="91.2214%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29 samples, 0.35%)</title><rect x="90.9714%" y="1221" width="0.3486%" height="15" fill="rgb(222,96,27)" fg:x="7567" fg:w="29"/><text x="91.2214%" y="1231.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (29 samples, 0.35%)</title><rect x="90.9714%" y="1205" width="0.3486%" height="15" fill="rgb(212,136,10)" fg:x="7567" fg:w="29"/><text x="91.2214%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="91.2840%" y="1189" width="0.0361%" height="15" fill="rgb(226,192,50)" fg:x="7593" fg:w="3"/><text x="91.5340%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="91.2840%" y="1173" width="0.0361%" height="15" fill="rgb(241,182,31)" fg:x="7593" fg:w="3"/><text x="91.5340%" y="1183.50"></text></g><g><title>smithereens::fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="91.2840%" y="1157" width="0.0361%" height="15" fill="rgb(219,205,47)" fg:x="7593" fg:w="3"/><text x="91.5340%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="91.3080%" y="1141" width="0.0120%" height="15" fill="rgb(207,96,14)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="91.3080%" y="1125" width="0.0120%" height="15" fill="rgb(216,119,9)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="91.3080%" y="1109" width="0.0120%" height="15" fill="rgb(235,62,36)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="91.3080%" y="1093" width="0.0120%" height="15" fill="rgb(214,41,27)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="91.3080%" y="1077" width="0.0120%" height="15" fill="rgb(214,174,37)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.01%)</title><rect x="91.3080%" y="1061" width="0.0120%" height="15" fill="rgb(212,11,25)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.01%)</title><rect x="91.3080%" y="1045" width="0.0120%" height="15" fill="rgb(217,71,35)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1055.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="91.3080%" y="1029" width="0.0120%" height="15" fill="rgb(234,152,9)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1039.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="91.3080%" y="1013" width="0.0120%" height="15" fill="rgb(228,32,51)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.3080%" y="997" width="0.0120%" height="15" fill="rgb(209,14,47)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="91.3080%" y="981" width="0.0120%" height="15" fill="rgb(218,201,17)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.3080%" y="965" width="0.0120%" height="15" fill="rgb(218,98,15)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.3080%" y="949" width="0.0120%" height="15" fill="rgb(233,202,29)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.3080%" y="933" width="0.0120%" height="15" fill="rgb(207,196,44)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="91.3080%" y="917" width="0.0120%" height="15" fill="rgb(218,63,34)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="91.3080%" y="901" width="0.0120%" height="15" fill="rgb(209,10,5)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="91.3080%" y="885" width="0.0120%" height="15" fill="rgb(224,36,28)" fg:x="7595" fg:w="1"/><text x="91.5580%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="91.3200%" y="1333" width="0.0120%" height="15" fill="rgb(249,178,7)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.3200%" y="1317" width="0.0120%" height="15" fill="rgb(253,163,10)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="91.3200%" y="1301" width="0.0120%" height="15" fill="rgb(245,67,46)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.3200%" y="1285" width="0.0120%" height="15" fill="rgb(225,14,18)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.01%)</title><rect x="91.3200%" y="1269" width="0.0120%" height="15" fill="rgb(217,41,54)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="91.3200%" y="1253" width="0.0120%" height="15" fill="rgb(222,111,11)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1263.50"></text></g><g><title>&lt;petgraph::graph_impl::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.3200%" y="1237" width="0.0120%" height="15" fill="rgb(211,85,31)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1247.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (1 samples, 0.01%)</title><rect x="91.3200%" y="1221" width="0.0120%" height="15" fill="rgb(223,29,26)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1231.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1 samples, 0.01%)</title><rect x="91.3200%" y="1205" width="0.0120%" height="15" fill="rgb(236,124,50)" fg:x="7596" fg:w="1"/><text x="91.5700%" y="1215.50"></text></g><g><title>smithereens::expand_from (2 samples, 0.02%)</title><rect x="91.3200%" y="1349" width="0.0240%" height="15" fill="rgb(219,148,15)" fg:x="7596" fg:w="2"/><text x="91.5700%" y="1359.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="91.3321%" y="1333" width="0.0120%" height="15" fill="rgb(248,159,33)" fg:x="7597" fg:w="1"/><text x="91.5821%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.3321%" y="1317" width="0.0120%" height="15" fill="rgb(252,65,8)" fg:x="7597" fg:w="1"/><text x="91.5821%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.3321%" y="1301" width="0.0120%" height="15" fill="rgb(236,45,7)" fg:x="7597" fg:w="1"/><text x="91.5821%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.3321%" y="1285" width="0.0120%" height="15" fill="rgb(244,3,48)" fg:x="7597" fg:w="1"/><text x="91.5821%" y="1295.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.3321%" y="1269" width="0.0120%" height="15" fill="rgb(224,123,53)" fg:x="7597" fg:w="1"/><text x="91.5821%" y="1279.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.3441%" y="1189" width="0.0120%" height="15" fill="rgb(223,173,15)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="91.3441%" y="1173" width="0.0120%" height="15" fill="rgb(254,181,5)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="91.3441%" y="1157" width="0.0120%" height="15" fill="rgb(243,124,33)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3441%" y="1141" width="0.0120%" height="15" fill="rgb(253,220,11)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3441%" y="1125" width="0.0120%" height="15" fill="rgb(217,14,4)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3441%" y="1109" width="0.0120%" height="15" fill="rgb(209,196,12)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="91.3441%" y="1093" width="0.0120%" height="15" fill="rgb(237,108,29)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1103.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="91.3441%" y="1077" width="0.0120%" height="15" fill="rgb(216,173,20)" fg:x="7598" fg:w="1"/><text x="91.5941%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.3441%" y="1269" width="0.0240%" height="15" fill="rgb(245,27,6)" fg:x="7598" fg:w="2"/><text x="91.5941%" y="1279.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="91.3441%" y="1253" width="0.0240%" height="15" fill="rgb(210,181,20)" fg:x="7598" fg:w="2"/><text x="91.5941%" y="1263.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.02%)</title><rect x="91.3441%" y="1237" width="0.0240%" height="15" fill="rgb(235,213,1)" fg:x="7598" fg:w="2"/><text x="91.5941%" y="1247.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.3441%" y="1221" width="0.0240%" height="15" fill="rgb(239,68,43)" fg:x="7598" fg:w="2"/><text x="91.5941%" y="1231.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.3441%" y="1205" width="0.0240%" height="15" fill="rgb(254,137,43)" fg:x="7598" fg:w="2"/><text x="91.5941%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.3561%" y="1189" width="0.0120%" height="15" fill="rgb(252,170,38)" fg:x="7599" fg:w="1"/><text x="91.6061%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="91.3561%" y="1173" width="0.0120%" height="15" fill="rgb(234,21,42)" fg:x="7599" fg:w="1"/><text x="91.6061%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.3561%" y="1157" width="0.0120%" height="15" fill="rgb(216,145,40)" fg:x="7599" fg:w="1"/><text x="91.6061%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.3561%" y="1141" width="0.0120%" height="15" fill="rgb(251,73,9)" fg:x="7599" fg:w="1"/><text x="91.6061%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.3561%" y="1125" width="0.0120%" height="15" fill="rgb(242,54,6)" fg:x="7599" fg:w="1"/><text x="91.6061%" y="1135.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="91.3561%" y="1109" width="0.0120%" height="15" fill="rgb(239,70,7)" fg:x="7599" fg:w="1"/><text x="91.6061%" y="1119.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.3681%" y="1269" width="0.0120%" height="15" fill="rgb(216,159,35)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1279.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.3681%" y="1253" width="0.0120%" height="15" fill="rgb(224,50,39)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="91.3681%" y="1237" width="0.0120%" height="15" fill="rgb(235,9,35)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="91.3681%" y="1221" width="0.0120%" height="15" fill="rgb(239,34,21)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3681%" y="1205" width="0.0120%" height="15" fill="rgb(218,162,43)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3681%" y="1189" width="0.0120%" height="15" fill="rgb(219,89,33)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3681%" y="1173" width="0.0120%" height="15" fill="rgb(226,125,37)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1183.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="91.3681%" y="1157" width="0.0120%" height="15" fill="rgb(233,149,30)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.3681%" y="1141" width="0.0120%" height="15" fill="rgb(236,8,18)" fg:x="7600" fg:w="1"/><text x="91.6181%" y="1151.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="91.3441%" y="1285" width="0.0481%" height="15" fill="rgb(205,176,9)" fg:x="7598" fg:w="4"/><text x="91.5941%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="91.3801%" y="1269" width="0.0120%" height="15" fill="rgb(252,103,44)" fg:x="7601" fg:w="1"/><text x="91.6301%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="91.3801%" y="1253" width="0.0120%" height="15" fill="rgb(207,68,53)" fg:x="7601" fg:w="1"/><text x="91.6301%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3801%" y="1237" width="0.0120%" height="15" fill="rgb(218,193,48)" fg:x="7601" fg:w="1"/><text x="91.6301%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.3801%" y="1221" width="0.0120%" height="15" fill="rgb(234,121,52)" fg:x="7601" fg:w="1"/><text x="91.6301%" y="1231.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="91.3801%" y="1205" width="0.0120%" height="15" fill="rgb(227,218,49)" fg:x="7601" fg:w="1"/><text x="91.6301%" y="1215.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.3922%" y="1221" width="0.0120%" height="15" fill="rgb(221,8,7)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1231.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.3922%" y="1205" width="0.0120%" height="15" fill="rgb(217,151,36)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.3922%" y="1189" width="0.0120%" height="15" fill="rgb(213,71,5)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.3922%" y="1173" width="0.0120%" height="15" fill="rgb(225,145,43)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.3922%" y="1157" width="0.0120%" height="15" fill="rgb(235,118,19)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.3922%" y="1141" width="0.0120%" height="15" fill="rgb(214,102,36)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.3922%" y="1125" width="0.0120%" height="15" fill="rgb(220,56,43)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.3922%" y="1109" width="0.0120%" height="15" fill="rgb(246,136,46)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.3922%" y="1093" width="0.0120%" height="15" fill="rgb(249,99,12)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.3922%" y="1077" width="0.0120%" height="15" fill="rgb(224,31,42)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.3922%" y="1061" width="0.0120%" height="15" fill="rgb(208,96,21)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.3922%" y="1045" width="0.0120%" height="15" fill="rgb(237,229,7)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.3922%" y="1029" width="0.0120%" height="15" fill="rgb(210,12,6)" fg:x="7602" fg:w="1"/><text x="91.6422%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.02%)</title><rect x="91.3922%" y="1285" width="0.0240%" height="15" fill="rgb(240,9,34)" fg:x="7602" fg:w="2"/><text x="91.6422%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="91.3922%" y="1269" width="0.0240%" height="15" fill="rgb(211,68,37)" fg:x="7602" fg:w="2"/><text x="91.6422%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="91.3922%" y="1253" width="0.0240%" height="15" fill="rgb(249,138,50)" fg:x="7602" fg:w="2"/><text x="91.6422%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="91.3922%" y="1237" width="0.0240%" height="15" fill="rgb(243,185,40)" fg:x="7602" fg:w="2"/><text x="91.6422%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.4042%" y="1221" width="0.0120%" height="15" fill="rgb(242,92,35)" fg:x="7603" fg:w="1"/><text x="91.6542%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.4042%" y="1205" width="0.0120%" height="15" fill="rgb(244,98,5)" fg:x="7603" fg:w="1"/><text x="91.6542%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.4042%" y="1189" width="0.0120%" height="15" fill="rgb(228,186,29)" fg:x="7603" fg:w="1"/><text x="91.6542%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.4042%" y="1173" width="0.0120%" height="15" fill="rgb(253,7,44)" fg:x="7603" fg:w="1"/><text x="91.6542%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.4042%" y="1157" width="0.0120%" height="15" fill="rgb(216,11,45)" fg:x="7603" fg:w="1"/><text x="91.6542%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.4042%" y="1141" width="0.0120%" height="15" fill="rgb(205,67,3)" fg:x="7603" fg:w="1"/><text x="91.6542%" y="1151.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.4042%" y="1125" width="0.0120%" height="15" fill="rgb(250,18,3)" fg:x="7603" fg:w="1"/><text x="91.6542%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1 samples, 0.01%)</title><rect x="91.4162%" y="1285" width="0.0120%" height="15" fill="rgb(241,222,43)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1295.50"></text></g><g><title>&lt;smithereens::TerminalIon as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.4162%" y="1269" width="0.0120%" height="15" fill="rgb(233,115,3)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1279.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="91.4162%" y="1253" width="0.0120%" height="15" fill="rgb(215,165,25)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1263.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="91.4162%" y="1237" width="0.0120%" height="15" fill="rgb(234,179,6)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="91.4162%" y="1221" width="0.0120%" height="15" fill="rgb(215,82,23)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.4162%" y="1205" width="0.0120%" height="15" fill="rgb(211,47,18)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.4162%" y="1189" width="0.0120%" height="15" fill="rgb(248,17,9)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.4162%" y="1173" width="0.0120%" height="15" fill="rgb(210,212,12)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="91.4162%" y="1157" width="0.0120%" height="15" fill="rgb(230,135,45)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1167.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="91.4162%" y="1141" width="0.0120%" height="15" fill="rgb(214,121,41)" fg:x="7604" fg:w="1"/><text x="91.6662%" y="1151.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.10%)</title><rect x="91.3441%" y="1317" width="0.0962%" height="15" fill="rgb(239,165,45)" fg:x="7598" fg:w="8"/><text x="91.5941%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.10%)</title><rect x="91.3441%" y="1301" width="0.0962%" height="15" fill="rgb(214,85,51)" fg:x="7598" fg:w="8"/><text x="91.5941%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="91.4282%" y="1285" width="0.0120%" height="15" fill="rgb(223,90,27)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1295.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.4282%" y="1269" width="0.0120%" height="15" fill="rgb(244,84,11)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="91.4282%" y="1253" width="0.0120%" height="15" fill="rgb(253,41,47)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1263.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.4282%" y="1237" width="0.0120%" height="15" fill="rgb(232,39,5)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="91.4282%" y="1221" width="0.0120%" height="15" fill="rgb(211,93,4)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.4282%" y="1205" width="0.0120%" height="15" fill="rgb(219,50,49)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="91.4282%" y="1189" width="0.0120%" height="15" fill="rgb(232,80,19)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="91.4282%" y="1173" width="0.0120%" height="15" fill="rgb(215,227,39)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1183.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="91.4282%" y="1157" width="0.0120%" height="15" fill="rgb(211,99,12)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.4282%" y="1141" width="0.0120%" height="15" fill="rgb(214,158,5)" fg:x="7605" fg:w="1"/><text x="91.6782%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.4403%" y="1157" width="0.0120%" height="15" fill="rgb(242,19,53)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="91.4403%" y="1141" width="0.0120%" height="15" fill="rgb(208,18,20)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1151.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="91.4403%" y="1125" width="0.0120%" height="15" fill="rgb(250,44,11)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1135.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.4403%" y="1109" width="0.0120%" height="15" fill="rgb(238,159,13)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1119.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.4403%" y="1093" width="0.0120%" height="15" fill="rgb(231,74,18)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.4403%" y="1077" width="0.0120%" height="15" fill="rgb(229,219,45)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="91.4403%" y="1061" width="0.0120%" height="15" fill="rgb(210,221,1)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.4403%" y="1045" width="0.0120%" height="15" fill="rgb(209,60,51)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.4403%" y="1029" width="0.0120%" height="15" fill="rgb(252,97,34)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.4403%" y="1013" width="0.0120%" height="15" fill="rgb(243,211,37)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="91.4403%" y="997" width="0.0120%" height="15" fill="rgb(210,229,37)" fg:x="7606" fg:w="1"/><text x="91.6903%" y="1007.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.4403%" y="1173" width="0.0240%" height="15" fill="rgb(220,208,43)" fg:x="7606" fg:w="2"/><text x="91.6903%" y="1183.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.4523%" y="1157" width="0.0120%" height="15" fill="rgb(218,118,50)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1167.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.4523%" y="1141" width="0.0120%" height="15" fill="rgb(254,169,52)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="91.4523%" y="1125" width="0.0120%" height="15" fill="rgb(221,214,37)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="91.4523%" y="1109" width="0.0120%" height="15" fill="rgb(254,186,32)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.4523%" y="1093" width="0.0120%" height="15" fill="rgb(215,144,43)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.4523%" y="1077" width="0.0120%" height="15" fill="rgb(252,21,46)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.4523%" y="1061" width="0.0120%" height="15" fill="rgb(207,166,46)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1071.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="91.4523%" y="1045" width="0.0120%" height="15" fill="rgb(253,37,49)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1055.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="91.4523%" y="1029" width="0.0120%" height="15" fill="rgb(222,97,20)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1039.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="91.4523%" y="1013" width="0.0120%" height="15" fill="rgb(244,181,26)" fg:x="7607" fg:w="1"/><text x="91.7023%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="91.4403%" y="1301" width="0.0361%" height="15" fill="rgb(241,22,29)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="91.4403%" y="1285" width="0.0361%" height="15" fill="rgb(206,200,43)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (3 samples, 0.04%)</title><rect x="91.4403%" y="1269" width="0.0361%" height="15" fill="rgb(226,224,43)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (3 samples, 0.04%)</title><rect x="91.4403%" y="1253" width="0.0361%" height="15" fill="rgb(253,129,28)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (3 samples, 0.04%)</title><rect x="91.4403%" y="1237" width="0.0361%" height="15" fill="rgb(252,99,33)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1247.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (3 samples, 0.04%)</title><rect x="91.4403%" y="1221" width="0.0361%" height="15" fill="rgb(208,123,45)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1231.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="91.4403%" y="1205" width="0.0361%" height="15" fill="rgb(251,106,12)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="91.4403%" y="1189" width="0.0361%" height="15" fill="rgb(240,209,35)" fg:x="7606" fg:w="3"/><text x="91.6903%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.4643%" y="1173" width="0.0120%" height="15" fill="rgb(214,52,50)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.4643%" y="1157" width="0.0120%" height="15" fill="rgb(234,119,4)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.4643%" y="1141" width="0.0120%" height="15" fill="rgb(228,181,36)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.4643%" y="1125" width="0.0120%" height="15" fill="rgb(213,171,42)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.4643%" y="1109" width="0.0120%" height="15" fill="rgb(239,14,41)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.4643%" y="1093" width="0.0120%" height="15" fill="rgb(239,111,46)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.4643%" y="1077" width="0.0120%" height="15" fill="rgb(214,72,7)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.4643%" y="1061" width="0.0120%" height="15" fill="rgb(221,114,1)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.4643%" y="1045" width="0.0120%" height="15" fill="rgb(213,143,14)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.4643%" y="1029" width="0.0120%" height="15" fill="rgb(220,221,53)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1039.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.4643%" y="1013" width="0.0120%" height="15" fill="rgb(236,189,27)" fg:x="7608" fg:w="1"/><text x="91.7143%" y="1023.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (12 samples, 0.14%)</title><rect x="91.3441%" y="1349" width="0.1443%" height="15" fill="rgb(252,139,49)" fg:x="7598" fg:w="12"/><text x="91.5941%" y="1359.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (12 samples, 0.14%)</title><rect x="91.3441%" y="1333" width="0.1443%" height="15" fill="rgb(231,158,33)" fg:x="7598" fg:w="12"/><text x="91.5941%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.05%)</title><rect x="91.4403%" y="1317" width="0.0481%" height="15" fill="rgb(207,201,15)" fg:x="7606" fg:w="4"/><text x="91.6903%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="91.4763%" y="1301" width="0.0120%" height="15" fill="rgb(218,43,48)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="91.4763%" y="1285" width="0.0120%" height="15" fill="rgb(244,63,52)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1295.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="91.4763%" y="1269" width="0.0120%" height="15" fill="rgb(236,60,17)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1279.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="91.4763%" y="1253" width="0.0120%" height="15" fill="rgb(205,206,29)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.4763%" y="1237" width="0.0120%" height="15" fill="rgb(205,209,35)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="91.4763%" y="1221" width="0.0120%" height="15" fill="rgb(227,112,14)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.4763%" y="1205" width="0.0120%" height="15" fill="rgb(248,151,9)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.4763%" y="1189" width="0.0120%" height="15" fill="rgb(247,45,40)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.4763%" y="1173" width="0.0120%" height="15" fill="rgb(232,185,16)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="91.4763%" y="1157" width="0.0120%" height="15" fill="rgb(215,45,44)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="91.4763%" y="1141" width="0.0120%" height="15" fill="rgb(206,69,32)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="91.4763%" y="1125" width="0.0120%" height="15" fill="rgb(233,98,50)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="91.4763%" y="1109" width="0.0120%" height="15" fill="rgb(232,217,52)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1119.50"></text></g><g><title>&lt;smithereens::Fragment as core::cmp::PartialEq&gt;::eq::_{{closure}} (1 samples, 0.01%)</title><rect x="91.4763%" y="1093" width="0.0120%" height="15" fill="rgb(250,42,51)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1103.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.4763%" y="1077" width="0.0120%" height="15" fill="rgb(241,200,26)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.4763%" y="1061" width="0.0120%" height="15" fill="rgb(207,10,32)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.4763%" y="1045" width="0.0120%" height="15" fill="rgb(214,63,15)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.4763%" y="1029" width="0.0120%" height="15" fill="rgb(234,176,14)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.4763%" y="1013" width="0.0120%" height="15" fill="rgb(226,104,52)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.4763%" y="997" width="0.0120%" height="15" fill="rgb(211,222,1)" fg:x="7609" fg:w="1"/><text x="91.7263%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.5004%" y="1189" width="0.0120%" height="15" fill="rgb(237,7,3)" fg:x="7611" fg:w="1"/><text x="91.7504%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.5004%" y="1173" width="0.0120%" height="15" fill="rgb(218,143,7)" fg:x="7611" fg:w="1"/><text x="91.7504%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.5004%" y="1157" width="0.0120%" height="15" fill="rgb(208,25,22)" fg:x="7611" fg:w="1"/><text x="91.7504%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.5004%" y="1141" width="0.0120%" height="15" fill="rgb(228,127,16)" fg:x="7611" fg:w="1"/><text x="91.7504%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.5004%" y="1125" width="0.0120%" height="15" fill="rgb(237,86,27)" fg:x="7611" fg:w="1"/><text x="91.7504%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.5004%" y="1109" width="0.0120%" height="15" fill="rgb(207,125,19)" fg:x="7611" fg:w="1"/><text x="91.7504%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.5004%" y="1093" width="0.0120%" height="15" fill="rgb(243,195,0)" fg:x="7611" fg:w="1"/><text x="91.7504%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.04%)</title><rect x="91.4883%" y="1253" width="0.0361%" height="15" fill="rgb(230,95,18)" fg:x="7610" fg:w="3"/><text x="91.7383%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3 samples, 0.04%)</title><rect x="91.4883%" y="1237" width="0.0361%" height="15" fill="rgb(232,157,21)" fg:x="7610" fg:w="3"/><text x="91.7383%" y="1247.50"></text></g><g><title>core::clone::Clone::clone (3 samples, 0.04%)</title><rect x="91.4883%" y="1221" width="0.0361%" height="15" fill="rgb(212,120,50)" fg:x="7610" fg:w="3"/><text x="91.7383%" y="1231.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="91.4883%" y="1205" width="0.0361%" height="15" fill="rgb(222,204,44)" fg:x="7610" fg:w="3"/><text x="91.7383%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.5124%" y="1189" width="0.0120%" height="15" fill="rgb(236,6,33)" fg:x="7612" fg:w="1"/><text x="91.7624%" y="1199.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.5124%" y="1173" width="0.0120%" height="15" fill="rgb(247,11,38)" fg:x="7612" fg:w="1"/><text x="91.7624%" y="1183.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.5124%" y="1157" width="0.0120%" height="15" fill="rgb(215,111,0)" fg:x="7612" fg:w="1"/><text x="91.7624%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.01%)</title><rect x="91.5124%" y="1141" width="0.0120%" height="15" fill="rgb(211,65,46)" fg:x="7612" fg:w="1"/><text x="91.7624%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="91.5124%" y="1125" width="0.0120%" height="15" fill="rgb(216,5,12)" fg:x="7612" fg:w="1"/><text x="91.7624%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.5124%" y="1109" width="0.0120%" height="15" fill="rgb(226,7,2)" fg:x="7612" fg:w="1"/><text x="91.7624%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.5124%" y="1093" width="0.0120%" height="15" fill="rgb(242,116,12)" fg:x="7612" fg:w="1"/><text x="91.7624%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="91.4883%" y="1301" width="0.0481%" height="15" fill="rgb(249,209,7)" fg:x="7610" fg:w="4"/><text x="91.7383%" y="1311.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="91.4883%" y="1285" width="0.0481%" height="15" fill="rgb(232,73,17)" fg:x="7610" fg:w="4"/><text x="91.7383%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="91.4883%" y="1269" width="0.0481%" height="15" fill="rgb(214,13,32)" fg:x="7610" fg:w="4"/><text x="91.7383%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="91.5244%" y="1253" width="0.0120%" height="15" fill="rgb(221,125,10)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="91.5244%" y="1237" width="0.0120%" height="15" fill="rgb(246,7,44)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1247.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="91.5244%" y="1221" width="0.0120%" height="15" fill="rgb(239,18,35)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.5244%" y="1205" width="0.0120%" height="15" fill="rgb(250,222,16)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.5244%" y="1189" width="0.0120%" height="15" fill="rgb(219,100,8)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.5244%" y="1173" width="0.0120%" height="15" fill="rgb(240,62,13)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1183.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.5244%" y="1157" width="0.0120%" height="15" fill="rgb(253,194,2)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.5244%" y="1141" width="0.0120%" height="15" fill="rgb(235,58,31)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.5244%" y="1125" width="0.0120%" height="15" fill="rgb(231,37,11)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.5244%" y="1109" width="0.0120%" height="15" fill="rgb(235,133,0)" fg:x="7613" fg:w="1"/><text x="91.7744%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="91.5725%" y="1173" width="0.0361%" height="15" fill="rgb(212,185,40)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1183.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="91.5725%" y="1157" width="0.0361%" height="15" fill="rgb(216,68,42)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1167.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="91.5725%" y="1141" width="0.0361%" height="15" fill="rgb(239,81,4)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="91.5725%" y="1125" width="0.0361%" height="15" fill="rgb(206,86,6)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.04%)</title><rect x="91.5725%" y="1109" width="0.0361%" height="15" fill="rgb(249,95,27)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1119.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="91.5725%" y="1093" width="0.0361%" height="15" fill="rgb(205,155,45)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="91.5725%" y="1077" width="0.0361%" height="15" fill="rgb(213,55,42)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="91.5725%" y="1061" width="0.0361%" height="15" fill="rgb(249,197,4)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="91.5725%" y="1045" width="0.0361%" height="15" fill="rgb(212,128,32)" fg:x="7617" fg:w="3"/><text x="91.8225%" y="1055.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="91.5845%" y="1029" width="0.0240%" height="15" fill="rgb(252,47,30)" fg:x="7618" fg:w="2"/><text x="91.8345%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.04%)</title><rect x="91.6086%" y="1093" width="0.0361%" height="15" fill="rgb(209,79,18)" fg:x="7620" fg:w="3"/><text x="91.8586%" y="1103.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="91.6086%" y="1125" width="0.0842%" height="15" fill="rgb(225,81,38)" fg:x="7620" fg:w="7"/><text x="91.8586%" y="1135.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="91.6086%" y="1109" width="0.0842%" height="15" fill="rgb(205,95,16)" fg:x="7620" fg:w="7"/><text x="91.8586%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="91.6446%" y="1093" width="0.0481%" height="15" fill="rgb(214,30,4)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="91.6446%" y="1077" width="0.0481%" height="15" fill="rgb(232,137,22)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="91.6446%" y="1061" width="0.0481%" height="15" fill="rgb(232,156,19)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="91.6446%" y="1045" width="0.0481%" height="15" fill="rgb(248,157,26)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="91.6446%" y="1029" width="0.0481%" height="15" fill="rgb(242,24,3)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="91.6446%" y="1013" width="0.0481%" height="15" fill="rgb(218,195,48)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="91.6446%" y="997" width="0.0481%" height="15" fill="rgb(214,193,36)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="91.6446%" y="981" width="0.0481%" height="15" fill="rgb(242,110,40)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="991.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="91.6446%" y="965" width="0.0481%" height="15" fill="rgb(233,150,26)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="975.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="91.6446%" y="949" width="0.0481%" height="15" fill="rgb(239,200,30)" fg:x="7623" fg:w="4"/><text x="91.8946%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="91.6687%" y="933" width="0.0240%" height="15" fill="rgb(226,28,11)" fg:x="7625" fg:w="2"/><text x="91.9187%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.6807%" y="917" width="0.0120%" height="15" fill="rgb(220,26,48)" fg:x="7626" fg:w="1"/><text x="91.9307%" y="927.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (15 samples, 0.18%)</title><rect x="91.5364%" y="1301" width="0.1803%" height="15" fill="rgb(232,10,11)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="91.5364%" y="1285" width="0.1803%" height="15" fill="rgb(252,143,50)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1295.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="91.5364%" y="1269" width="0.1803%" height="15" fill="rgb(206,58,22)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1279.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="91.5364%" y="1253" width="0.1803%" height="15" fill="rgb(250,9,45)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (15 samples, 0.18%)</title><rect x="91.5364%" y="1237" width="0.1803%" height="15" fill="rgb(225,148,14)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (15 samples, 0.18%)</title><rect x="91.5364%" y="1221" width="0.1803%" height="15" fill="rgb(205,178,40)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1231.50"></text></g><g><title>core::clone::Clone::clone (15 samples, 0.18%)</title><rect x="91.5364%" y="1205" width="0.1803%" height="15" fill="rgb(215,201,4)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1215.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (15 samples, 0.18%)</title><rect x="91.5364%" y="1189" width="0.1803%" height="15" fill="rgb(219,223,24)" fg:x="7614" fg:w="15"/><text x="91.7864%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="91.6086%" y="1173" width="0.1082%" height="15" fill="rgb(217,19,31)" fg:x="7620" fg:w="9"/><text x="91.8586%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="91.6086%" y="1157" width="0.1082%" height="15" fill="rgb(235,33,3)" fg:x="7620" fg:w="9"/><text x="91.8586%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="91.6086%" y="1141" width="0.1082%" height="15" fill="rgb(221,39,18)" fg:x="7620" fg:w="9"/><text x="91.8586%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="91.6927%" y="1125" width="0.0240%" height="15" fill="rgb(242,162,33)" fg:x="7627" fg:w="2"/><text x="91.9427%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="91.6927%" y="1109" width="0.0240%" height="15" fill="rgb(233,215,28)" fg:x="7627" fg:w="2"/><text x="91.9427%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="91.6927%" y="1093" width="0.0240%" height="15" fill="rgb(212,117,9)" fg:x="7627" fg:w="2"/><text x="91.9427%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="91.6927%" y="1077" width="0.0240%" height="15" fill="rgb(237,70,47)" fg:x="7627" fg:w="2"/><text x="91.9427%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="91.6927%" y="1061" width="0.0240%" height="15" fill="rgb(206,177,13)" fg:x="7627" fg:w="2"/><text x="91.9427%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="91.6927%" y="1045" width="0.0240%" height="15" fill="rgb(209,174,33)" fg:x="7627" fg:w="2"/><text x="91.9427%" y="1055.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="91.6927%" y="1029" width="0.0240%" height="15" fill="rgb(226,6,11)" fg:x="7627" fg:w="2"/><text x="91.9427%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.7047%" y="1013" width="0.0120%" height="15" fill="rgb(240,214,6)" fg:x="7628" fg:w="1"/><text x="91.9547%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.7168%" y="1205" width="0.0120%" height="15" fill="rgb(254,214,40)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="91.7168%" y="1189" width="0.0120%" height="15" fill="rgb(230,187,15)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1199.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="91.7168%" y="1173" width="0.0120%" height="15" fill="rgb(250,11,27)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1183.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.7168%" y="1157" width="0.0120%" height="15" fill="rgb(243,107,19)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="91.7168%" y="1141" width="0.0120%" height="15" fill="rgb(253,66,26)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="91.7168%" y="1125" width="0.0120%" height="15" fill="rgb(228,43,8)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1135.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="91.7168%" y="1109" width="0.0120%" height="15" fill="rgb(232,197,36)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.7168%" y="1093" width="0.0120%" height="15" fill="rgb(221,182,31)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.7168%" y="1077" width="0.0120%" height="15" fill="rgb(244,25,36)" fg:x="7629" fg:w="1"/><text x="91.9668%" y="1087.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="91.7168%" y="1221" width="0.0240%" height="15" fill="rgb(247,101,19)" fg:x="7629" fg:w="2"/><text x="91.9668%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="91.7288%" y="1205" width="0.0120%" height="15" fill="rgb(223,117,19)" fg:x="7630" fg:w="1"/><text x="91.9788%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="91.7288%" y="1189" width="0.0120%" height="15" fill="rgb(249,63,38)" fg:x="7630" fg:w="1"/><text x="91.9788%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.7288%" y="1173" width="0.0120%" height="15" fill="rgb(220,143,23)" fg:x="7630" fg:w="1"/><text x="91.9788%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="91.7288%" y="1157" width="0.0120%" height="15" fill="rgb(252,183,22)" fg:x="7630" fg:w="1"/><text x="91.9788%" y="1167.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="91.7168%" y="1253" width="0.0361%" height="15" fill="rgb(243,176,15)" fg:x="7629" fg:w="3"/><text x="91.9668%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="91.7168%" y="1237" width="0.0361%" height="15" fill="rgb(244,204,46)" fg:x="7629" fg:w="3"/><text x="91.9668%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.7408%" y="1221" width="0.0120%" height="15" fill="rgb(227,28,54)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.7408%" y="1205" width="0.0120%" height="15" fill="rgb(231,10,15)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.7408%" y="1189" width="0.0120%" height="15" fill="rgb(210,200,17)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.7408%" y="1173" width="0.0120%" height="15" fill="rgb(251,106,46)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1183.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.7408%" y="1157" width="0.0120%" height="15" fill="rgb(218,211,15)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1167.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.7408%" y="1141" width="0.0120%" height="15" fill="rgb(239,62,10)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="91.7408%" y="1125" width="0.0120%" height="15" fill="rgb(225,53,53)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.7408%" y="1109" width="0.0120%" height="15" fill="rgb(207,16,24)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.7408%" y="1093" width="0.0120%" height="15" fill="rgb(217,52,28)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.7408%" y="1077" width="0.0120%" height="15" fill="rgb(246,1,5)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.7408%" y="1061" width="0.0120%" height="15" fill="rgb(221,29,26)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.7408%" y="1045" width="0.0120%" height="15" fill="rgb(250,133,32)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.7408%" y="1029" width="0.0120%" height="15" fill="rgb(236,63,16)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.7408%" y="1013" width="0.0120%" height="15" fill="rgb(231,159,14)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.7408%" y="997" width="0.0120%" height="15" fill="rgb(207,102,36)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.7408%" y="981" width="0.0120%" height="15" fill="rgb(230,224,31)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="991.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.7408%" y="965" width="0.0120%" height="15" fill="rgb(215,182,16)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.7408%" y="949" width="0.0120%" height="15" fill="rgb(226,113,2)" fg:x="7631" fg:w="1"/><text x="91.9908%" y="959.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="1141" width="0.0120%" height="15" fill="rgb(241,18,35)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1151.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="1125" width="0.0120%" height="15" fill="rgb(240,165,44)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1135.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="91.7528%" y="1109" width="0.0120%" height="15" fill="rgb(229,130,47)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="91.7528%" y="1093" width="0.0120%" height="15" fill="rgb(223,93,7)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="91.7528%" y="1077" width="0.0120%" height="15" fill="rgb(205,180,36)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="91.7528%" y="1061" width="0.0120%" height="15" fill="rgb(221,103,28)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="91.7528%" y="1045" width="0.0120%" height="15" fill="rgb(212,4,3)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="1029" width="0.0120%" height="15" fill="rgb(209,221,53)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1039.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="1013" width="0.0120%" height="15" fill="rgb(233,229,52)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1023.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="997" width="0.0120%" height="15" fill="rgb(254,127,37)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="981" width="0.0120%" height="15" fill="rgb(207,161,26)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="965" width="0.0120%" height="15" fill="rgb(223,75,5)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="949" width="0.0120%" height="15" fill="rgb(235,115,52)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="91.7528%" y="933" width="0.0120%" height="15" fill="rgb(240,91,46)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="91.7528%" y="917" width="0.0120%" height="15" fill="rgb(251,144,21)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.7528%" y="901" width="0.0120%" height="15" fill="rgb(247,220,47)" fg:x="7632" fg:w="1"/><text x="92.0028%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.02%)</title><rect x="91.7528%" y="1205" width="0.0240%" height="15" fill="rgb(253,122,1)" fg:x="7632" fg:w="2"/><text x="92.0028%" y="1215.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.02%)</title><rect x="91.7528%" y="1189" width="0.0240%" height="15" fill="rgb(221,0,24)" fg:x="7632" fg:w="2"/><text x="92.0028%" y="1199.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="91.7528%" y="1173" width="0.0240%" height="15" fill="rgb(220,204,54)" fg:x="7632" fg:w="2"/><text x="92.0028%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="91.7528%" y="1157" width="0.0240%" height="15" fill="rgb(205,96,25)" fg:x="7632" fg:w="2"/><text x="92.0028%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="91.7648%" y="1141" width="0.0120%" height="15" fill="rgb(247,77,20)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.7648%" y="1125" width="0.0120%" height="15" fill="rgb(245,151,8)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="91.7648%" y="1109" width="0.0120%" height="15" fill="rgb(242,158,39)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="91.7648%" y="1093" width="0.0120%" height="15" fill="rgb(222,214,50)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.7648%" y="1077" width="0.0120%" height="15" fill="rgb(229,60,39)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="91.7648%" y="1061" width="0.0120%" height="15" fill="rgb(240,148,18)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="91.7648%" y="1045" width="0.0120%" height="15" fill="rgb(215,96,11)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.7648%" y="1029" width="0.0120%" height="15" fill="rgb(238,162,53)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.7648%" y="1013" width="0.0120%" height="15" fill="rgb(214,83,18)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.7648%" y="997" width="0.0120%" height="15" fill="rgb(248,117,24)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="91.7648%" y="981" width="0.0120%" height="15" fill="rgb(238,190,6)" fg:x="7633" fg:w="1"/><text x="92.0148%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="91.7168%" y="1301" width="0.0721%" height="15" fill="rgb(213,51,6)" fg:x="7629" fg:w="6"/><text x="91.9668%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.07%)</title><rect x="91.7168%" y="1285" width="0.0721%" height="15" fill="rgb(212,136,1)" fg:x="7629" fg:w="6"/><text x="91.9668%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.07%)</title><rect x="91.7168%" y="1269" width="0.0721%" height="15" fill="rgb(221,192,14)" fg:x="7629" fg:w="6"/><text x="91.9668%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="91.7528%" y="1253" width="0.0361%" height="15" fill="rgb(244,38,54)" fg:x="7632" fg:w="3"/><text x="92.0028%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="91.7528%" y="1237" width="0.0361%" height="15" fill="rgb(240,45,28)" fg:x="7632" fg:w="3"/><text x="92.0028%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3 samples, 0.04%)</title><rect x="91.7528%" y="1221" width="0.0361%" height="15" fill="rgb(240,123,12)" fg:x="7632" fg:w="3"/><text x="92.0028%" y="1231.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="91.7769%" y="1205" width="0.0120%" height="15" fill="rgb(216,14,30)" fg:x="7634" fg:w="1"/><text x="92.0269%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="91.7769%" y="1189" width="0.0120%" height="15" fill="rgb(212,50,24)" fg:x="7634" fg:w="1"/><text x="92.0269%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.7769%" y="1173" width="0.0120%" height="15" fill="rgb(253,229,47)" fg:x="7634" fg:w="1"/><text x="92.0269%" y="1183.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.7889%" y="1253" width="0.0120%" height="15" fill="rgb(214,26,17)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.7889%" y="1237" width="0.0120%" height="15" fill="rgb(252,60,11)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="91.7889%" y="1221" width="0.0120%" height="15" fill="rgb(209,59,37)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1231.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="91.7889%" y="1205" width="0.0120%" height="15" fill="rgb(228,126,53)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1215.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.7889%" y="1189" width="0.0120%" height="15" fill="rgb(233,99,2)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1199.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="91.7889%" y="1173" width="0.0120%" height="15" fill="rgb(217,106,34)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="91.7889%" y="1157" width="0.0120%" height="15" fill="rgb(222,46,19)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="91.7889%" y="1141" width="0.0120%" height="15" fill="rgb(251,87,31)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.7889%" y="1125" width="0.0120%" height="15" fill="rgb(213,70,51)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.7889%" y="1109" width="0.0120%" height="15" fill="rgb(229,144,18)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="91.7889%" y="1093" width="0.0120%" height="15" fill="rgb(254,60,26)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="91.7889%" y="1077" width="0.0120%" height="15" fill="rgb(243,127,51)" fg:x="7635" fg:w="1"/><text x="92.0389%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 3.56%)</title><rect x="88.2544%" y="1461" width="3.5585%" height="15" fill="rgb(221,51,25)" fg:x="7341" fg:w="296"/><text x="88.5044%" y="1471.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 3.56%)</title><rect x="88.2544%" y="1445" width="3.5585%" height="15" fill="rgb(205,42,7)" fg:x="7341" fg:w="296"/><text x="88.5044%" y="1455.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (296 samples, 3.56%)</title><rect x="88.2544%" y="1429" width="3.5585%" height="15" fill="rgb(236,177,48)" fg:x="7341" fg:w="296"/><text x="88.5044%" y="1439.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (296 samples, 3.56%)</title><rect x="88.2544%" y="1413" width="3.5585%" height="15" fill="rgb(226,79,31)" fg:x="7341" fg:w="296"/><text x="88.5044%" y="1423.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (296 samples, 3.56%)</title><rect x="88.2544%" y="1397" width="3.5585%" height="15" fill="rgb(216,170,12)" fg:x="7341" fg:w="296"/><text x="88.5044%" y="1407.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (296 samples, 3.56%)</title><rect x="88.2544%" y="1381" width="3.5585%" height="15" fill="rgb(208,62,51)" fg:x="7341" fg:w="296"/><text x="88.5044%" y="1391.50">core..</text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (296 samples, 3.56%)</title><rect x="88.2544%" y="1365" width="3.5585%" height="15" fill="rgb(254,129,9)" fg:x="7341" fg:w="296"/><text x="88.5044%" y="1375.50">smit..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.32%)</title><rect x="91.4883%" y="1349" width="0.3246%" height="15" fill="rgb(243,209,31)" fg:x="7610" fg:w="27"/><text x="91.7383%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.32%)</title><rect x="91.4883%" y="1333" width="0.3246%" height="15" fill="rgb(213,159,23)" fg:x="7610" fg:w="27"/><text x="91.7383%" y="1343.50"></text></g><g><title>smithereens::fragment::_{{closure}} (27 samples, 0.32%)</title><rect x="91.4883%" y="1317" width="0.3246%" height="15" fill="rgb(249,77,39)" fg:x="7610" fg:w="27"/><text x="91.7383%" y="1327.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.02%)</title><rect x="91.7889%" y="1301" width="0.0240%" height="15" fill="rgb(230,13,33)" fg:x="7635" fg:w="2"/><text x="92.0389%" y="1311.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="91.7889%" y="1285" width="0.0240%" height="15" fill="rgb(215,215,7)" fg:x="7635" fg:w="2"/><text x="92.0389%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="91.7889%" y="1269" width="0.0240%" height="15" fill="rgb(222,92,25)" fg:x="7635" fg:w="2"/><text x="92.0389%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.8009%" y="1253" width="0.0120%" height="15" fill="rgb(215,173,22)" fg:x="7636" fg:w="1"/><text x="92.0509%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="91.8009%" y="1237" width="0.0120%" height="15" fill="rgb(247,205,52)" fg:x="7636" fg:w="1"/><text x="92.0509%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="91.8009%" y="1221" width="0.0120%" height="15" fill="rgb(240,210,37)" fg:x="7636" fg:w="1"/><text x="92.0509%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="91.8009%" y="1205" width="0.0120%" height="15" fill="rgb(224,13,10)" fg:x="7636" fg:w="1"/><text x="92.0509%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.8009%" y="1189" width="0.0120%" height="15" fill="rgb(209,48,33)" fg:x="7636" fg:w="1"/><text x="92.0509%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.8009%" y="1173" width="0.0120%" height="15" fill="rgb(228,219,23)" fg:x="7636" fg:w="1"/><text x="92.0509%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.8009%" y="1157" width="0.0120%" height="15" fill="rgb(239,46,49)" fg:x="7636" fg:w="1"/><text x="92.0509%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,513 samples, 30.21%)</title><rect x="61.6494%" y="1509" width="30.2116%" height="15" fill="rgb(206,172,51)" fg:x="5128" fg:w="2513"/><text x="61.8994%" y="1519.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,513 samples, 30.21%)</title><rect x="61.6494%" y="1493" width="30.2116%" height="15" fill="rgb(213,212,35)" fg:x="5128" fg:w="2513"/><text x="61.8994%" y="1503.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,510 samples, 30.18%)</title><rect x="61.6855%" y="1477" width="30.1755%" height="15" fill="rgb(252,40,27)" fg:x="5131" fg:w="2510"/><text x="61.9355%" y="1487.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.05%)</title><rect x="91.8129%" y="1461" width="0.0481%" height="15" fill="rgb(212,33,41)" fg:x="7637" fg:w="4"/><text x="92.0629%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="91.8129%" y="1445" width="0.0481%" height="15" fill="rgb(232,160,27)" fg:x="7637" fg:w="4"/><text x="92.0629%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="91.8129%" y="1429" width="0.0481%" height="15" fill="rgb(244,160,20)" fg:x="7637" fg:w="4"/><text x="92.0629%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="91.8129%" y="1413" width="0.0481%" height="15" fill="rgb(205,66,20)" fg:x="7637" fg:w="4"/><text x="92.0629%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="91.8129%" y="1397" width="0.0481%" height="15" fill="rgb(236,158,6)" fg:x="7637" fg:w="4"/><text x="92.0629%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="91.8129%" y="1381" width="0.0481%" height="15" fill="rgb(232,25,36)" fg:x="7637" fg:w="4"/><text x="92.0629%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="91.8129%" y="1365" width="0.0481%" height="15" fill="rgb(220,153,35)" fg:x="7637" fg:w="4"/><text x="92.0629%" y="1375.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="91.8370%" y="1349" width="0.0240%" height="15" fill="rgb(216,5,8)" fg:x="7639" fg:w="2"/><text x="92.0870%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="91.8610%" y="1509" width="0.0120%" height="15" fill="rgb(240,97,3)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1519.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="91.8610%" y="1493" width="0.0120%" height="15" fill="rgb(220,99,26)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="91.8610%" y="1477" width="0.0120%" height="15" fill="rgb(237,96,2)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="91.8610%" y="1461" width="0.0120%" height="15" fill="rgb(217,197,47)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="91.8610%" y="1445" width="0.0120%" height="15" fill="rgb(252,133,54)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1455.50"></text></g><g><title>smithereens::Peptidoglycan::monoisotopic_mass::_{{closure}} (1 samples, 0.01%)</title><rect x="91.8610%" y="1429" width="0.0120%" height="15" fill="rgb(233,37,30)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1439.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="91.8610%" y="1413" width="0.0120%" height="15" fill="rgb(239,182,12)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1423.50"></text></g><g><title>smithereens::Residue::monoisotopic_mass::_{{closure}} (1 samples, 0.01%)</title><rect x="91.8610%" y="1397" width="0.0120%" height="15" fill="rgb(245,83,39)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1407.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Add for rust_decimal::decimal::Decimal&gt;::add (1 samples, 0.01%)</title><rect x="91.8610%" y="1381" width="0.0120%" height="15" fill="rgb(222,109,36)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1391.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Add&lt;&amp;rust_decimal::decimal::Decimal&gt; for &amp;rust_decimal::decimal::Decimal&gt;::add (1 samples, 0.01%)</title><rect x="91.8610%" y="1365" width="0.0120%" height="15" fill="rgb(237,95,44)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1375.50"></text></g><g><title>rust_decimal::ops::add::add_sub_internal (1 samples, 0.01%)</title><rect x="91.8610%" y="1349" width="0.0120%" height="15" fill="rgb(216,36,54)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1359.50"></text></g><g><title>rust_decimal::ops::add::fast_add (1 samples, 0.01%)</title><rect x="91.8610%" y="1333" width="0.0120%" height="15" fill="rgb(236,164,3)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1343.50"></text></g><g><title>rust_decimal::decimal::Decimal::from_parts_raw (1 samples, 0.01%)</title><rect x="91.8610%" y="1317" width="0.0120%" height="15" fill="rgb(223,15,21)" fg:x="7641" fg:w="1"/><text x="92.1110%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.05%)</title><rect x="91.8730%" y="1509" width="0.0481%" height="15" fill="rgb(239,191,12)" fg:x="7642" fg:w="4"/><text x="92.1230%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.05%)</title><rect x="91.8730%" y="1493" width="0.0481%" height="15" fill="rgb(231,191,37)" fg:x="7642" fg:w="4"/><text x="92.1230%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.05%)</title><rect x="91.8730%" y="1477" width="0.0481%" height="15" fill="rgb(209,155,36)" fg:x="7642" fg:w="4"/><text x="92.1230%" y="1487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="91.8730%" y="1461" width="0.0481%" height="15" fill="rgb(216,222,49)" fg:x="7642" fg:w="4"/><text x="92.1230%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="91.8730%" y="1445" width="0.0481%" height="15" fill="rgb(218,181,2)" fg:x="7642" fg:w="4"/><text x="92.1230%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="91.8730%" y="1429" width="0.0481%" height="15" fill="rgb(239,125,9)" fg:x="7642" fg:w="4"/><text x="92.1230%" y="1439.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="91.8851%" y="1413" width="0.0361%" height="15" fill="rgb(233,103,7)" fg:x="7643" fg:w="3"/><text x="92.1351%" y="1423.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="91.8971%" y="1397" width="0.0240%" height="15" fill="rgb(209,223,5)" fg:x="7644" fg:w="2"/><text x="92.1471%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;smithereens::TerminalIon&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9211%" y="1509" width="0.0120%" height="15" fill="rgb(234,71,27)" fg:x="7646" fg:w="1"/><text x="92.1711%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;smithereens::TerminalIon&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9211%" y="1493" width="0.0120%" height="15" fill="rgb(251,202,16)" fg:x="7646" fg:w="1"/><text x="92.1711%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.9211%" y="1477" width="0.0120%" height="15" fill="rgb(231,180,0)" fg:x="7646" fg:w="1"/><text x="92.1711%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="91.9211%" y="1461" width="0.0120%" height="15" fill="rgb(223,58,28)" fg:x="7646" fg:w="1"/><text x="92.1711%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="91.9211%" y="1445" width="0.0120%" height="15" fill="rgb(250,34,24)" fg:x="7646" fg:w="1"/><text x="92.1711%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;str&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9332%" y="1509" width="0.0120%" height="15" fill="rgb(235,24,16)" fg:x="7647" fg:w="1"/><text x="92.1832%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;str&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9332%" y="1493" width="0.0120%" height="15" fill="rgb(219,28,33)" fg:x="7647" fg:w="1"/><text x="92.1832%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.9332%" y="1477" width="0.0120%" height="15" fill="rgb(228,150,43)" fg:x="7647" fg:w="1"/><text x="92.1832%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="91.9332%" y="1461" width="0.0120%" height="15" fill="rgb(221,228,36)" fg:x="7647" fg:w="1"/><text x="92.1832%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9452%" y="1509" width="0.0120%" height="15" fill="rgb(232,116,17)" fg:x="7648" fg:w="1"/><text x="92.1952%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9452%" y="1493" width="0.0120%" height="15" fill="rgb(220,110,51)" fg:x="7648" fg:w="1"/><text x="92.1952%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.9452%" y="1477" width="0.0120%" height="15" fill="rgb(207,26,25)" fg:x="7648" fg:w="1"/><text x="92.1952%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="91.9452%" y="1461" width="0.0120%" height="15" fill="rgb(223,58,19)" fg:x="7648" fg:w="1"/><text x="92.1952%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="91.9452%" y="1445" width="0.0120%" height="15" fill="rgb(234,125,39)" fg:x="7648" fg:w="1"/><text x="92.1952%" y="1455.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="91.9452%" y="1429" width="0.0120%" height="15" fill="rgb(241,48,36)" fg:x="7648" fg:w="1"/><text x="92.1952%" y="1439.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="91.9452%" y="1413" width="0.0120%" height="15" fill="rgb(217,148,51)" fg:x="7648" fg:w="1"/><text x="92.1952%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.9572%" y="1493" width="0.0120%" height="15" fill="rgb(247,17,25)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)]&gt; (1 samples, 0.01%)</title><rect x="91.9572%" y="1477" width="0.0120%" height="15" fill="rgb(219,89,38)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="91.9572%" y="1461" width="0.0120%" height="15" fill="rgb(220,145,2)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9572%" y="1445" width="0.0120%" height="15" fill="rgb(244,66,47)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9572%" y="1429" width="0.0120%" height="15" fill="rgb(226,182,5)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.9572%" y="1413" width="0.0120%" height="15" fill="rgb(211,98,20)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)]&gt; (1 samples, 0.01%)</title><rect x="91.9572%" y="1397" width="0.0120%" height="15" fill="rgb(217,103,52)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="91.9572%" y="1381" width="0.0120%" height="15" fill="rgb(208,125,52)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9572%" y="1365" width="0.0120%" height="15" fill="rgb(244,70,13)" fg:x="7649" fg:w="1"/><text x="92.2072%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)&gt;&gt; (2 samples, 0.02%)</title><rect x="91.9572%" y="1509" width="0.0240%" height="15" fill="rgb(253,124,3)" fg:x="7649" fg:w="2"/><text x="92.2072%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9692%" y="1493" width="0.0120%" height="15" fill="rgb(222,145,32)" fg:x="7650" fg:w="1"/><text x="92.2192%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.9692%" y="1477" width="0.0120%" height="15" fill="rgb(232,183,47)" fg:x="7650" fg:w="1"/><text x="92.2192%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="91.9692%" y="1461" width="0.0120%" height="15" fill="rgb(246,226,4)" fg:x="7650" fg:w="1"/><text x="92.2192%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="91.9933%" y="1397" width="0.0481%" height="15" fill="rgb(228,185,46)" fg:x="7652" fg:w="4"/><text x="92.2433%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="91.9933%" y="1381" width="0.0481%" height="15" fill="rgb(213,196,4)" fg:x="7652" fg:w="4"/><text x="92.2433%" y="1391.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="91.9933%" y="1365" width="0.0481%" height="15" fill="rgb(212,2,45)" fg:x="7652" fg:w="4"/><text x="92.2433%" y="1375.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="91.9933%" y="1349" width="0.0481%" height="15" fill="rgb(217,145,50)" fg:x="7652" fg:w="4"/><text x="92.2433%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (6 samples, 0.07%)</title><rect x="91.9812%" y="1509" width="0.0721%" height="15" fill="rgb(242,10,46)" fg:x="7651" fg:w="6"/><text x="92.2312%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="91.9812%" y="1493" width="0.0721%" height="15" fill="rgb(252,91,48)" fg:x="7651" fg:w="6"/><text x="92.2312%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (6 samples, 0.07%)</title><rect x="91.9812%" y="1477" width="0.0721%" height="15" fill="rgb(216,72,13)" fg:x="7651" fg:w="6"/><text x="92.2312%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.06%)</title><rect x="91.9933%" y="1461" width="0.0601%" height="15" fill="rgb(219,6,37)" fg:x="7652" fg:w="5"/><text x="92.2433%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.06%)</title><rect x="91.9933%" y="1445" width="0.0601%" height="15" fill="rgb(236,185,40)" fg:x="7652" fg:w="5"/><text x="92.2433%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.06%)</title><rect x="91.9933%" y="1429" width="0.0601%" height="15" fill="rgb(208,81,48)" fg:x="7652" fg:w="5"/><text x="92.2433%" y="1439.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="91.9933%" y="1413" width="0.0601%" height="15" fill="rgb(211,42,33)" fg:x="7652" fg:w="5"/><text x="92.2433%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="92.0414%" y="1397" width="0.0120%" height="15" fill="rgb(211,90,39)" fg:x="7656" fg:w="1"/><text x="92.2914%" y="1407.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.0654%" y="1413" width="0.0120%" height="15" fill="rgb(218,136,12)" fg:x="7658" fg:w="1"/><text x="92.3154%" y="1423.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.0654%" y="1397" width="0.0120%" height="15" fill="rgb(234,12,32)" fg:x="7658" fg:w="1"/><text x="92.3154%" y="1407.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="92.0774%" y="1413" width="0.0120%" height="15" fill="rgb(221,164,18)" fg:x="7659" fg:w="1"/><text x="92.3274%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;dyn polars_core::series::series_trait::SeriesTrait,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="92.0774%" y="1397" width="0.0120%" height="15" fill="rgb(239,135,14)" fg:x="7659" fg:w="1"/><text x="92.3274%" y="1407.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.0774%" y="1381" width="0.0120%" height="15" fill="rgb(226,198,47)" fg:x="7659" fg:w="1"/><text x="92.3274%" y="1391.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.0894%" y="1349" width="0.0120%" height="15" fill="rgb(244,121,47)" fg:x="7660" fg:w="1"/><text x="92.3394%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_core::datatypes::field::Field&gt;&gt; (2 samples, 0.02%)</title><rect x="92.0894%" y="1381" width="0.0240%" height="15" fill="rgb(226,21,48)" fg:x="7660" fg:w="2"/><text x="92.3394%" y="1391.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="92.0894%" y="1365" width="0.0240%" height="15" fill="rgb(215,178,47)" fg:x="7660" fg:w="2"/><text x="92.3394%" y="1375.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="92.1015%" y="1349" width="0.0120%" height="15" fill="rgb(206,212,19)" fg:x="7661" fg:w="1"/><text x="92.3515%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;polars_core::datatypes::field::Field,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1015%" y="1333" width="0.0120%" height="15" fill="rgb(230,104,34)" fg:x="7661" fg:w="1"/><text x="92.3515%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1015%" y="1317" width="0.0120%" height="15" fill="rgb(210,96,51)" fg:x="7661" fg:w="1"/><text x="92.3515%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::chunked_array::ChunkedArray&lt;polars_core::datatypes::Int32Type&gt;&gt; (3 samples, 0.04%)</title><rect x="92.0894%" y="1397" width="0.0361%" height="15" fill="rgb(229,111,47)" fg:x="7660" fg:w="3"/><text x="92.3394%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn polars_arrow::array::Array&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1135%" y="1381" width="0.0120%" height="15" fill="rgb(218,174,45)" fg:x="7662" fg:w="1"/><text x="92.3635%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn polars_arrow::array::Array&gt;]&gt; (1 samples, 0.01%)</title><rect x="92.1135%" y="1365" width="0.0120%" height="15" fill="rgb(215,21,32)" fg:x="7662" fg:w="1"/><text x="92.3635%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn polars_arrow::array::Array&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1135%" y="1349" width="0.0120%" height="15" fill="rgb(235,72,21)" fg:x="7662" fg:w="1"/><text x="92.3635%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::buffer::immutable::Buffer&lt;i32&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1135%" y="1333" width="0.0120%" height="15" fill="rgb(250,113,30)" fg:x="7662" fg:w="1"/><text x="92.3635%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_arrow::buffer::Bytes&lt;i32&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1135%" y="1317" width="0.0120%" height="15" fill="rgb(244,136,34)" fg:x="7662" fg:w="1"/><text x="92.3635%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1135%" y="1301" width="0.0120%" height="15" fill="rgb(213,226,47)" fg:x="7662" fg:w="1"/><text x="92.3635%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_core::datatypes::field::Field&gt;&gt; (2 samples, 0.02%)</title><rect x="92.1255%" y="1365" width="0.0240%" height="15" fill="rgb(224,136,40)" fg:x="7663" fg:w="2"/><text x="92.3755%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="92.1255%" y="1349" width="0.0240%" height="15" fill="rgb(253,124,12)" fg:x="7663" fg:w="2"/><text x="92.3755%" y="1359.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.1375%" y="1333" width="0.0120%" height="15" fill="rgb(210,67,8)" fg:x="7664" fg:w="1"/><text x="92.3875%" y="1343.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.1375%" y="1317" width="0.0120%" height="15" fill="rgb(210,204,0)" fg:x="7664" fg:w="1"/><text x="92.3875%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::buffer::immutable::Buffer&lt;f64&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1496%" y="1317" width="0.0120%" height="15" fill="rgb(217,179,22)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_arrow::buffer::Bytes&lt;f64&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1496%" y="1301" width="0.0120%" height="15" fill="rgb(237,192,33)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1496%" y="1285" width="0.0120%" height="15" fill="rgb(211,104,28)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::buffer::Bytes&lt;f64&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1496%" y="1269" width="0.0120%" height="15" fill="rgb(214,75,30)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;foreign_vec::ForeignVec&lt;polars_arrow::buffer::BytesAllocator,f64&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1496%" y="1253" width="0.0120%" height="15" fill="rgb(220,227,12)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1263.50"></text></g><g><title>&lt;foreign_vec::ForeignVec&lt;D,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1496%" y="1237" width="0.0120%" height="15" fill="rgb(233,134,28)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1496%" y="1221" width="0.0120%" height="15" fill="rgb(215,146,24)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1496%" y="1205" width="0.0120%" height="15" fill="rgb(248,227,20)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1496%" y="1189" width="0.0120%" height="15" fill="rgb(250,44,42)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="92.1496%" y="1173" width="0.0120%" height="15" fill="rgb(219,5,35)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="92.1496%" y="1157" width="0.0120%" height="15" fill="rgb(241,132,32)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1167.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.1496%" y="1141" width="0.0120%" height="15" fill="rgb(234,212,51)" fg:x="7665" fg:w="1"/><text x="92.3996%" y="1151.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="92.1616%" y="1269" width="0.0240%" height="15" fill="rgb(242,173,29)" fg:x="7666" fg:w="2"/><text x="92.4116%" y="1279.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.1616%" y="1253" width="0.0240%" height="15" fill="rgb(212,159,2)" fg:x="7666" fg:w="2"/><text x="92.4116%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::buffer::immutable::Buffer&lt;u8&gt;&gt; (3 samples, 0.04%)</title><rect x="92.1616%" y="1317" width="0.0361%" height="15" fill="rgb(238,165,31)" fg:x="7666" fg:w="3"/><text x="92.4116%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_arrow::buffer::Bytes&lt;u8&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="92.1616%" y="1301" width="0.0361%" height="15" fill="rgb(241,57,36)" fg:x="7666" fg:w="3"/><text x="92.4116%" y="1311.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="92.1616%" y="1285" width="0.0361%" height="15" fill="rgb(249,7,4)" fg:x="7666" fg:w="3"/><text x="92.4116%" y="1295.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="92.1856%" y="1269" width="0.0120%" height="15" fill="rgb(250,137,44)" fg:x="7668" fg:w="1"/><text x="92.4356%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;polars_arrow::buffer::Bytes&lt;u8&gt;,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1856%" y="1253" width="0.0120%" height="15" fill="rgb(244,185,1)" fg:x="7668" fg:w="1"/><text x="92.4356%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1856%" y="1237" width="0.0120%" height="15" fill="rgb(216,5,53)" fg:x="7668" fg:w="1"/><text x="92.4356%" y="1247.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.1976%" y="1253" width="0.0120%" height="15" fill="rgb(234,89,21)" fg:x="7669" fg:w="1"/><text x="92.4476%" y="1263.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.1976%" y="1237" width="0.0120%" height="15" fill="rgb(250,81,43)" fg:x="7669" fg:w="1"/><text x="92.4476%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (14 samples, 0.17%)</title><rect x="92.0534%" y="1509" width="0.1683%" height="15" fill="rgb(243,132,11)" fg:x="7657" fg:w="14"/><text x="92.3034%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.17%)</title><rect x="92.0534%" y="1493" width="0.1683%" height="15" fill="rgb(253,159,28)" fg:x="7657" fg:w="14"/><text x="92.3034%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (14 samples, 0.17%)</title><rect x="92.0534%" y="1477" width="0.1683%" height="15" fill="rgb(237,167,34)" fg:x="7657" fg:w="14"/><text x="92.3034%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (14 samples, 0.17%)</title><rect x="92.0534%" y="1461" width="0.1683%" height="15" fill="rgb(237,16,50)" fg:x="7657" fg:w="14"/><text x="92.3034%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (14 samples, 0.17%)</title><rect x="92.0534%" y="1445" width="0.1683%" height="15" fill="rgb(247,125,2)" fg:x="7657" fg:w="14"/><text x="92.3034%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.17%)</title><rect x="92.0534%" y="1429" width="0.1683%" height="15" fill="rgb(254,35,3)" fg:x="7657" fg:w="14"/><text x="92.3034%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn polars_core::series::series_trait::SeriesTrait&gt; (11 samples, 0.13%)</title><rect x="92.0894%" y="1413" width="0.1322%" height="15" fill="rgb(237,209,21)" fg:x="7660" fg:w="11"/><text x="92.3394%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::implementations::SeriesWrap&lt;polars_core::chunked_array::ChunkedArray&lt;polars_core::datatypes::StringType&gt;&gt;&gt; (8 samples, 0.10%)</title><rect x="92.1255%" y="1397" width="0.0962%" height="15" fill="rgb(224,122,20)" fg:x="7663" fg:w="8"/><text x="92.3755%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::chunked_array::ChunkedArray&lt;polars_core::datatypes::StringType&gt;&gt; (8 samples, 0.10%)</title><rect x="92.1255%" y="1381" width="0.0962%" height="15" fill="rgb(224,11,46)" fg:x="7663" fg:w="8"/><text x="92.3755%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn polars_arrow::array::Array&gt;&gt;&gt; (6 samples, 0.07%)</title><rect x="92.1496%" y="1365" width="0.0721%" height="15" fill="rgb(248,21,33)" fg:x="7665" fg:w="6"/><text x="92.3996%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn polars_arrow::array::Array&gt;]&gt; (6 samples, 0.07%)</title><rect x="92.1496%" y="1349" width="0.0721%" height="15" fill="rgb(222,144,7)" fg:x="7665" fg:w="6"/><text x="92.3996%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn polars_arrow::array::Array&gt;&gt; (6 samples, 0.07%)</title><rect x="92.1496%" y="1333" width="0.0721%" height="15" fill="rgb(205,141,37)" fg:x="7665" fg:w="6"/><text x="92.3996%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::offset::OffsetsBuffer&lt;i64&gt;&gt; (2 samples, 0.02%)</title><rect x="92.1976%" y="1317" width="0.0240%" height="15" fill="rgb(237,130,8)" fg:x="7669" fg:w="2"/><text x="92.4476%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_arrow::buffer::immutable::Buffer&lt;i64&gt;&gt; (2 samples, 0.02%)</title><rect x="92.1976%" y="1301" width="0.0240%" height="15" fill="rgb(209,179,39)" fg:x="7669" fg:w="2"/><text x="92.4476%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_arrow::buffer::Bytes&lt;i64&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.1976%" y="1285" width="0.0240%" height="15" fill="rgb(207,52,17)" fg:x="7669" fg:w="2"/><text x="92.4476%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="92.1976%" y="1269" width="0.0240%" height="15" fill="rgb(253,158,17)" fg:x="7669" fg:w="2"/><text x="92.4476%" y="1279.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="92.2097%" y="1253" width="0.0120%" height="15" fill="rgb(208,19,53)" fg:x="7670" fg:w="1"/><text x="92.4597%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;polars_arrow::buffer::Bytes&lt;f64&gt;,&amp;alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="92.2097%" y="1237" width="0.0120%" height="15" fill="rgb(233,152,13)" fg:x="7670" fg:w="1"/><text x="92.4597%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.2097%" y="1221" width="0.0120%" height="15" fill="rgb(231,84,1)" fg:x="7670" fg:w="1"/><text x="92.4597%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;polars_core::series::Series,polars_error::PolarsError&gt;&gt; (5 samples, 0.06%)</title><rect x="92.2217%" y="1509" width="0.0601%" height="15" fill="rgb(229,142,48)" fg:x="7671" fg:w="5"/><text x="92.4717%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (5 samples, 0.06%)</title><rect x="92.2217%" y="1493" width="0.0601%" height="15" fill="rgb(248,70,29)" fg:x="7671" fg:w="5"/><text x="92.4717%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (5 samples, 0.06%)</title><rect x="92.2217%" y="1477" width="0.0601%" height="15" fill="rgb(250,85,7)" fg:x="7671" fg:w="5"/><text x="92.4717%" y="1487.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="92.2217%" y="1461" width="0.0601%" height="15" fill="rgb(235,140,43)" fg:x="7671" fg:w="5"/><text x="92.4717%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn polars_core::series::series_trait::SeriesTrait&gt; (4 samples, 0.05%)</title><rect x="92.2337%" y="1445" width="0.0481%" height="15" fill="rgb(216,0,5)" fg:x="7672" fg:w="4"/><text x="92.4837%" y="1455.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="92.2578%" y="1429" width="0.0240%" height="15" fill="rgb(223,167,29)" fg:x="7674" fg:w="2"/><text x="92.5078%" y="1439.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.2578%" y="1413" width="0.0240%" height="15" fill="rgb(229,150,33)" fg:x="7674" fg:w="2"/><text x="92.5078%" y="1423.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.2578%" y="1397" width="0.0240%" height="15" fill="rgb(227,26,52)" fg:x="7674" fg:w="2"/><text x="92.5078%" y="1407.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.2578%" y="1381" width="0.0240%" height="15" fill="rgb(250,60,52)" fg:x="7674" fg:w="2"/><text x="92.5078%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="92.2818%" y="1509" width="0.0120%" height="15" fill="rgb(228,81,46)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.2818%" y="1493" width="0.0120%" height="15" fill="rgb(225,218,31)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.2818%" y="1477" width="0.0120%" height="15" fill="rgb(230,35,16)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="92.2818%" y="1461" width="0.0120%" height="15" fill="rgb(247,100,0)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="92.2818%" y="1445" width="0.0120%" height="15" fill="rgb(223,135,11)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="92.2818%" y="1429" width="0.0120%" height="15" fill="rgb(207,136,0)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="92.2818%" y="1413" width="0.0120%" height="15" fill="rgb(246,131,25)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="92.2818%" y="1397" width="0.0120%" height="15" fill="rgb(209,47,12)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.2818%" y="1381" width="0.0120%" height="15" fill="rgb(221,25,16)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="92.2818%" y="1365" width="0.0120%" height="15" fill="rgb(223,164,33)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="92.2818%" y="1349" width="0.0120%" height="15" fill="rgb(220,26,23)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1359.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.2818%" y="1333" width="0.0120%" height="15" fill="rgb(231,224,1)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1343.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.2818%" y="1317" width="0.0120%" height="15" fill="rgb(229,221,24)" fg:x="7676" fg:w="1"/><text x="92.5318%" y="1327.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.2938%" y="1397" width="0.0120%" height="15" fill="rgb(213,34,10)" fg:x="7677" fg:w="1"/><text x="92.5438%" y="1407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.2938%" y="1381" width="0.0120%" height="15" fill="rgb(215,33,11)" fg:x="7677" fg:w="1"/><text x="92.5438%" y="1391.50"></text></g><g><title>cfree (10 samples, 0.12%)</title><rect x="92.3419%" y="1381" width="0.1202%" height="15" fill="rgb(216,20,41)" fg:x="7681" fg:w="10"/><text x="92.5919%" y="1391.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="92.3660%" y="1365" width="0.0962%" height="15" fill="rgb(228,43,31)" fg:x="7683" fg:w="8"/><text x="92.6160%" y="1375.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="92.4020%" y="1349" width="0.0601%" height="15" fill="rgb(227,83,26)" fg:x="7686" fg:w="5"/><text x="92.6520%" y="1359.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="92.4020%" y="1333" width="0.0601%" height="15" fill="rgb(217,168,19)" fg:x="7686" fg:w="5"/><text x="92.6520%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::frame::DataFrame&gt; (15 samples, 0.18%)</title><rect x="92.2938%" y="1509" width="0.1803%" height="15" fill="rgb(231,34,33)" fg:x="7677" fg:w="15"/><text x="92.5438%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::Series&gt;&gt; (15 samples, 0.18%)</title><rect x="92.2938%" y="1493" width="0.1803%" height="15" fill="rgb(230,120,51)" fg:x="7677" fg:w="15"/><text x="92.5438%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.18%)</title><rect x="92.2938%" y="1477" width="0.1803%" height="15" fill="rgb(215,138,27)" fg:x="7677" fg:w="15"/><text x="92.5438%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[polars_core::series::Series]&gt; (15 samples, 0.18%)</title><rect x="92.2938%" y="1461" width="0.1803%" height="15" fill="rgb(246,80,47)" fg:x="7677" fg:w="15"/><text x="92.5438%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::series::Series&gt; (15 samples, 0.18%)</title><rect x="92.2938%" y="1445" width="0.1803%" height="15" fill="rgb(215,57,53)" fg:x="7677" fg:w="15"/><text x="92.5438%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn polars_core::series::series_trait::SeriesTrait&gt;&gt; (15 samples, 0.18%)</title><rect x="92.2938%" y="1429" width="0.1803%" height="15" fill="rgb(229,137,5)" fg:x="7677" fg:w="15"/><text x="92.5438%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.18%)</title><rect x="92.2938%" y="1413" width="0.1803%" height="15" fill="rgb(210,86,2)" fg:x="7677" fg:w="15"/><text x="92.5438%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt; (14 samples, 0.17%)</title><rect x="92.3058%" y="1397" width="0.1683%" height="15" fill="rgb(231,226,51)" fg:x="7678" fg:w="14"/><text x="92.5558%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_core::chunked_array::ChunkedArray&lt;polars_core::datatypes::BinaryType&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4621%" y="1381" width="0.0120%" height="15" fill="rgb(216,62,29)" fg:x="7691" fg:w="1"/><text x="92.7121%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;polars_core::datatypes::field::Field&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4621%" y="1365" width="0.0120%" height="15" fill="rgb(248,202,3)" fg:x="7691" fg:w="1"/><text x="92.7121%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.4621%" y="1349" width="0.0120%" height="15" fill="rgb(225,181,7)" fg:x="7691" fg:w="1"/><text x="92.7121%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_utils::contention_pool::LowContentionPool&lt;alloc::vec::Vec&lt;polars_core::series::iterator::SeriesIter&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4742%" y="1509" width="0.0120%" height="15" fill="rgb(247,170,54)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;polars_core::series::iterator::SeriesIter&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4742%" y="1493" width="0.0120%" height="15" fill="rgb(236,204,33)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.4742%" y="1477" width="0.0120%" height="15" fill="rgb(216,45,30)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;polars_core::series::iterator::SeriesIter&gt;&gt;]&gt; (1 samples, 0.01%)</title><rect x="92.4742%" y="1461" width="0.0120%" height="15" fill="rgb(213,203,16)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;polars_core::series::iterator::SeriesIter&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4742%" y="1445" width="0.0120%" height="15" fill="rgb(215,46,16)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;polars_core::series::iterator::SeriesIter&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4742%" y="1429" width="0.0120%" height="15" fill="rgb(217,162,46)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polars_core::series::iterator::SeriesIter&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4742%" y="1413" width="0.0120%" height="15" fill="rgb(224,189,20)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;polars_core::series::iterator::SeriesIter&gt;&gt; (1 samples, 0.01%)</title><rect x="92.4742%" y="1397" width="0.0120%" height="15" fill="rgb(232,35,51)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.4742%" y="1381" width="0.0120%" height="15" fill="rgb(243,221,46)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="92.4742%" y="1365" width="0.0120%" height="15" fill="rgb(248,16,16)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="92.4742%" y="1349" width="0.0120%" height="15" fill="rgb(220,168,13)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1359.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.4742%" y="1333" width="0.0120%" height="15" fill="rgb(243,102,39)" fg:x="7692" fg:w="1"/><text x="92.7242%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;polars_utils::contention_pool::LowContentionPool&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.4862%" y="1509" width="0.0240%" height="15" fill="rgb(245,82,32)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.4862%" y="1493" width="0.0240%" height="15" fill="rgb(230,164,19)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="92.4862%" y="1477" width="0.0240%" height="15" fill="rgb(221,9,41)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;u8&gt;&gt;]&gt; (2 samples, 0.02%)</title><rect x="92.4862%" y="1461" width="0.0240%" height="15" fill="rgb(216,93,0)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.4862%" y="1445" width="0.0240%" height="15" fill="rgb(235,113,9)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.4862%" y="1429" width="0.0240%" height="15" fill="rgb(209,224,10)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="92.4862%" y="1413" width="0.0240%" height="15" fill="rgb(226,54,34)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="92.4862%" y="1397" width="0.0240%" height="15" fill="rgb(222,60,8)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="92.4862%" y="1381" width="0.0240%" height="15" fill="rgb(248,228,41)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="92.4862%" y="1365" width="0.0240%" height="15" fill="rgb(226,31,32)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="92.4862%" y="1349" width="0.0240%" height="15" fill="rgb(242,132,49)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1359.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="92.4862%" y="1333" width="0.0240%" height="15" fill="rgb(224,194,19)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1343.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.4862%" y="1317" width="0.0240%" height="15" fill="rgb(232,200,51)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1327.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.4862%" y="1301" width="0.0240%" height="15" fill="rgb(235,60,46)" fg:x="7693" fg:w="2"/><text x="92.7362%" y="1311.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.4982%" y="1285" width="0.0120%" height="15" fill="rgb(240,109,52)" fg:x="7694" fg:w="1"/><text x="92.7482%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="92.5102%" y="1493" width="0.0120%" height="15" fill="rgb(215,78,37)" fg:x="7695" fg:w="1"/><text x="92.7602%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5102%" y="1477" width="0.0120%" height="15" fill="rgb(225,141,7)" fg:x="7695" fg:w="1"/><text x="92.7602%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5102%" y="1461" width="0.0120%" height="15" fill="rgb(216,102,54)" fg:x="7695" fg:w="1"/><text x="92.7602%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.5102%" y="1445" width="0.0120%" height="15" fill="rgb(238,143,13)" fg:x="7695" fg:w="1"/><text x="92.7602%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Peptidoglycan&gt; (2 samples, 0.02%)</title><rect x="92.5102%" y="1509" width="0.0240%" height="15" fill="rgb(219,45,51)" fg:x="7695" fg:w="2"/><text x="92.7602%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5222%" y="1493" width="0.0120%" height="15" fill="rgb(242,105,46)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5222%" y="1477" width="0.0120%" height="15" fill="rgb(206,154,49)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.5222%" y="1461" width="0.0120%" height="15" fill="rgb(239,215,4)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (1 samples, 0.01%)</title><rect x="92.5222%" y="1445" width="0.0120%" height="15" fill="rgb(238,82,17)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5222%" y="1429" width="0.0120%" height="15" fill="rgb(242,49,30)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="92.5222%" y="1413" width="0.0120%" height="15" fill="rgb(248,5,16)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5222%" y="1397" width="0.0120%" height="15" fill="rgb(237,138,32)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5222%" y="1381" width="0.0120%" height="15" fill="rgb(235,79,45)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.5222%" y="1365" width="0.0120%" height="15" fill="rgb(213,105,25)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="92.5222%" y="1349" width="0.0120%" height="15" fill="rgb(251,131,7)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="92.5222%" y="1333" width="0.0120%" height="15" fill="rgb(211,155,7)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1343.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="92.5222%" y="1317" width="0.0120%" height="15" fill="rgb(243,70,15)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1327.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.5222%" y="1301" width="0.0120%" height="15" fill="rgb(215,171,2)" fg:x="7696" fg:w="1"/><text x="92.7722%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="92.5343%" y="1509" width="0.0120%" height="15" fill="rgb(244,121,35)" fg:x="7697" fg:w="1"/><text x="92.7843%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5343%" y="1493" width="0.0120%" height="15" fill="rgb(249,147,17)" fg:x="7697" fg:w="1"/><text x="92.7843%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="92.5343%" y="1477" width="0.0120%" height="15" fill="rgb(241,193,52)" fg:x="7697" fg:w="1"/><text x="92.7843%" y="1487.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.5343%" y="1461" width="0.0120%" height="15" fill="rgb(217,159,39)" fg:x="7697" fg:w="1"/><text x="92.7843%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="92.5343%" y="1445" width="0.0120%" height="15" fill="rgb(248,110,0)" fg:x="7697" fg:w="1"/><text x="92.7843%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="92.5343%" y="1429" width="0.0120%" height="15" fill="rgb(233,227,0)" fg:x="7697" fg:w="1"/><text x="92.7843%" y="1439.50"></text></g><g><title>cfree (8 samples, 0.10%)</title><rect x="92.5583%" y="1445" width="0.0962%" height="15" fill="rgb(252,55,2)" fg:x="7699" fg:w="8"/><text x="92.8083%" y="1455.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="92.5583%" y="1429" width="0.0962%" height="15" fill="rgb(224,194,24)" fg:x="7699" fg:w="8"/><text x="92.8083%" y="1439.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="92.5583%" y="1413" width="0.0962%" height="15" fill="rgb(247,5,33)" fg:x="7699" fg:w="8"/><text x="92.8083%" y="1423.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="92.5583%" y="1397" width="0.0962%" height="15" fill="rgb(242,66,47)" fg:x="7699" fg:w="8"/><text x="92.8083%" y="1407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.6425%" y="1381" width="0.0120%" height="15" fill="rgb(213,107,12)" fg:x="7706" fg:w="1"/><text x="92.8925%" y="1391.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="92.6545%" y="1381" width="0.0120%" height="15" fill="rgb(206,131,1)" fg:x="7707" fg:w="1"/><text x="92.9045%" y="1391.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="92.6545%" y="1365" width="0.0120%" height="15" fill="rgb(214,9,36)" fg:x="7707" fg:w="1"/><text x="92.9045%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="92.6545%" y="1349" width="0.0120%" height="15" fill="rgb(251,215,18)" fg:x="7707" fg:w="1"/><text x="92.9045%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="92.6545%" y="1413" width="0.0240%" height="15" fill="rgb(251,64,9)" fg:x="7707" fg:w="2"/><text x="92.9045%" y="1423.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.02%)</title><rect x="92.6545%" y="1397" width="0.0240%" height="15" fill="rgb(235,68,21)" fg:x="7707" fg:w="2"/><text x="92.9045%" y="1407.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="92.6665%" y="1381" width="0.0120%" height="15" fill="rgb(240,69,38)" fg:x="7708" fg:w="1"/><text x="92.9165%" y="1391.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="92.6665%" y="1365" width="0.0120%" height="15" fill="rgb(231,18,27)" fg:x="7708" fg:w="1"/><text x="92.9165%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.6785%" y="1333" width="0.0240%" height="15" fill="rgb(215,154,25)" fg:x="7709" fg:w="2"/><text x="92.9285%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.6785%" y="1317" width="0.0240%" height="15" fill="rgb(224,33,46)" fg:x="7709" fg:w="2"/><text x="92.9285%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="92.6785%" y="1301" width="0.0240%" height="15" fill="rgb(248,191,53)" fg:x="7709" fg:w="2"/><text x="92.9285%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="92.6785%" y="1285" width="0.0240%" height="15" fill="rgb(231,3,37)" fg:x="7709" fg:w="2"/><text x="92.9285%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="92.6785%" y="1269" width="0.0240%" height="15" fill="rgb(209,152,2)" fg:x="7709" fg:w="2"/><text x="92.9285%" y="1279.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="92.6785%" y="1253" width="0.0240%" height="15" fill="rgb(212,208,43)" fg:x="7709" fg:w="2"/><text x="92.9285%" y="1263.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.6785%" y="1237" width="0.0240%" height="15" fill="rgb(208,60,49)" fg:x="7709" fg:w="2"/><text x="92.9285%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="92.7146%" y="1205" width="0.0721%" height="15" fill="rgb(245,135,6)" fg:x="7712" fg:w="6"/><text x="92.9646%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="92.7146%" y="1189" width="0.0721%" height="15" fill="rgb(243,86,23)" fg:x="7712" fg:w="6"/><text x="92.9646%" y="1199.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="92.7266%" y="1173" width="0.0601%" height="15" fill="rgb(223,7,20)" fg:x="7713" fg:w="5"/><text x="92.9766%" y="1183.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="92.7507%" y="1157" width="0.0361%" height="15" fill="rgb(212,182,17)" fg:x="7715" fg:w="3"/><text x="93.0007%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.7747%" y="1141" width="0.0120%" height="15" fill="rgb(237,94,50)" fg:x="7717" fg:w="1"/><text x="93.0247%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.7747%" y="1125" width="0.0120%" height="15" fill="rgb(232,185,44)" fg:x="7717" fg:w="1"/><text x="93.0247%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.12%)</title><rect x="92.7026%" y="1317" width="0.1202%" height="15" fill="rgb(205,50,36)" fg:x="7711" fg:w="10"/><text x="92.9526%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (10 samples, 0.12%)</title><rect x="92.7026%" y="1301" width="0.1202%" height="15" fill="rgb(252,32,32)" fg:x="7711" fg:w="10"/><text x="92.9526%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (9 samples, 0.11%)</title><rect x="92.7146%" y="1285" width="0.1082%" height="15" fill="rgb(241,123,33)" fg:x="7712" fg:w="9"/><text x="92.9646%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (9 samples, 0.11%)</title><rect x="92.7146%" y="1269" width="0.1082%" height="15" fill="rgb(212,140,16)" fg:x="7712" fg:w="9"/><text x="92.9646%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (9 samples, 0.11%)</title><rect x="92.7146%" y="1253" width="0.1082%" height="15" fill="rgb(247,132,5)" fg:x="7712" fg:w="9"/><text x="92.9646%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (9 samples, 0.11%)</title><rect x="92.7146%" y="1237" width="0.1082%" height="15" fill="rgb(209,137,38)" fg:x="7712" fg:w="9"/><text x="92.9646%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.11%)</title><rect x="92.7146%" y="1221" width="0.1082%" height="15" fill="rgb(248,32,42)" fg:x="7712" fg:w="9"/><text x="92.9646%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.04%)</title><rect x="92.7867%" y="1205" width="0.0361%" height="15" fill="rgb(216,188,40)" fg:x="7718" fg:w="3"/><text x="93.0367%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (15 samples, 0.18%)</title><rect x="92.6785%" y="1349" width="0.1803%" height="15" fill="rgb(209,127,53)" fg:x="7709" fg:w="15"/><text x="92.9285%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (13 samples, 0.16%)</title><rect x="92.7026%" y="1333" width="0.1563%" height="15" fill="rgb(254,162,9)" fg:x="7711" fg:w="13"/><text x="92.9526%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="92.8228%" y="1317" width="0.0361%" height="15" fill="rgb(219,183,10)" fg:x="7721" fg:w="3"/><text x="93.0728%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="92.8228%" y="1301" width="0.0361%" height="15" fill="rgb(217,192,21)" fg:x="7721" fg:w="3"/><text x="93.0728%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.04%)</title><rect x="92.8228%" y="1285" width="0.0361%" height="15" fill="rgb(251,89,27)" fg:x="7721" fg:w="3"/><text x="93.0728%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.04%)</title><rect x="92.8228%" y="1269" width="0.0361%" height="15" fill="rgb(253,55,28)" fg:x="7721" fg:w="3"/><text x="93.0728%" y="1279.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="92.8228%" y="1253" width="0.0361%" height="15" fill="rgb(216,159,8)" fg:x="7721" fg:w="3"/><text x="93.0728%" y="1263.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="92.8348%" y="1237" width="0.0240%" height="15" fill="rgb(231,228,44)" fg:x="7722" fg:w="2"/><text x="93.0848%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;&gt; (30 samples, 0.36%)</title><rect x="92.5463%" y="1509" width="0.3607%" height="15" fill="rgb(247,34,48)" fg:x="7698" fg:w="30"/><text x="92.7963%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;smithereens::Fragment,std::collections::hash::map::RandomState&gt;&gt; (30 samples, 0.36%)</title><rect x="92.5463%" y="1493" width="0.3607%" height="15" fill="rgb(247,222,18)" fg:x="7698" fg:w="30"/><text x="92.7963%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;smithereens::Fragment,(),std::collections::hash::map::RandomState&gt;&gt; (30 samples, 0.36%)</title><rect x="92.5463%" y="1477" width="0.3607%" height="15" fill="rgb(227,49,4)" fg:x="7698" fg:w="30"/><text x="92.7963%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(smithereens::Fragment,())&gt;&gt; (30 samples, 0.36%)</title><rect x="92.5463%" y="1461" width="0.3607%" height="15" fill="rgb(219,189,53)" fg:x="7698" fg:w="30"/><text x="92.7963%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (21 samples, 0.25%)</title><rect x="92.6545%" y="1445" width="0.2525%" height="15" fill="rgb(241,160,53)" fg:x="7707" fg:w="21"/><text x="92.9045%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (21 samples, 0.25%)</title><rect x="92.6545%" y="1429" width="0.2525%" height="15" fill="rgb(227,115,4)" fg:x="7707" fg:w="21"/><text x="92.9045%" y="1439.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (19 samples, 0.23%)</title><rect x="92.6785%" y="1413" width="0.2284%" height="15" fill="rgb(215,28,28)" fg:x="7709" fg:w="19"/><text x="92.9285%" y="1423.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (19 samples, 0.23%)</title><rect x="92.6785%" y="1397" width="0.2284%" height="15" fill="rgb(237,143,40)" fg:x="7709" fg:w="19"/><text x="92.9285%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smithereens::Fragment,())&gt; (19 samples, 0.23%)</title><rect x="92.6785%" y="1381" width="0.2284%" height="15" fill="rgb(205,107,24)" fg:x="7709" fg:w="19"/><text x="92.9285%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (19 samples, 0.23%)</title><rect x="92.6785%" y="1365" width="0.2284%" height="15" fill="rgb(209,112,35)" fg:x="7709" fg:w="19"/><text x="92.9285%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (4 samples, 0.05%)</title><rect x="92.8589%" y="1349" width="0.0481%" height="15" fill="rgb(206,135,5)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.05%)</title><rect x="92.8589%" y="1333" width="0.0481%" height="15" fill="rgb(227,217,38)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.05%)</title><rect x="92.8589%" y="1317" width="0.0481%" height="15" fill="rgb(205,0,41)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (4 samples, 0.05%)</title><rect x="92.8589%" y="1301" width="0.0481%" height="15" fill="rgb(220,20,40)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (4 samples, 0.05%)</title><rect x="92.8589%" y="1285" width="0.0481%" height="15" fill="rgb(216,145,3)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (4 samples, 0.05%)</title><rect x="92.8589%" y="1269" width="0.0481%" height="15" fill="rgb(207,130,51)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="92.8589%" y="1253" width="0.0481%" height="15" fill="rgb(252,93,13)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1263.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="92.8589%" y="1237" width="0.0481%" height="15" fill="rgb(210,105,15)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1247.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="92.8589%" y="1221" width="0.0481%" height="15" fill="rgb(212,126,31)" fg:x="7724" fg:w="4"/><text x="93.1089%" y="1231.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="92.8709%" y="1205" width="0.0361%" height="15" fill="rgb(241,167,46)" fg:x="7725" fg:w="3"/><text x="93.1209%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.01%)</title><rect x="92.9069%" y="1509" width="0.0120%" height="15" fill="rgb(217,143,19)" fg:x="7728" fg:w="1"/><text x="93.1569%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.01%)</title><rect x="92.9069%" y="1493" width="0.0120%" height="15" fill="rgb(235,117,33)" fg:x="7728" fg:w="1"/><text x="93.1569%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.01%)</title><rect x="92.9069%" y="1477" width="0.0120%" height="15" fill="rgb(247,95,6)" fg:x="7728" fg:w="1"/><text x="93.1569%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.01%)</title><rect x="92.9069%" y="1461" width="0.0120%" height="15" fill="rgb(243,206,43)" fg:x="7728" fg:w="1"/><text x="93.1569%" y="1471.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.9069%" y="1445" width="0.0120%" height="15" fill="rgb(229,65,54)" fg:x="7728" fg:w="1"/><text x="93.1569%" y="1455.50"></text></g><g><title>__close (1 samples, 0.01%)</title><rect x="92.9069%" y="1429" width="0.0120%" height="15" fill="rgb(247,137,34)" fg:x="7728" fg:w="1"/><text x="93.1569%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="92.9190%" y="1509" width="0.0240%" height="15" fill="rgb(245,174,44)" fg:x="7729" fg:w="2"/><text x="93.1690%" y="1519.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="92.9190%" y="1493" width="0.0240%" height="15" fill="rgb(223,64,15)" fg:x="7729" fg:w="2"/><text x="93.1690%" y="1503.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="92.9190%" y="1477" width="0.0240%" height="15" fill="rgb(243,153,36)" fg:x="7729" fg:w="2"/><text x="93.1690%" y="1487.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.01%)</title><rect x="92.9310%" y="1461" width="0.0120%" height="15" fill="rgb(252,23,4)" fg:x="7730" fg:w="1"/><text x="93.1810%" y="1471.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="92.9310%" y="1445" width="0.0120%" height="15" fill="rgb(209,132,13)" fg:x="7730" fg:w="1"/><text x="93.1810%" y="1455.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="92.9430%" y="1509" width="0.0120%" height="15" fill="rgb(209,196,21)" fg:x="7731" fg:w="1"/><text x="93.1930%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="92.9430%" y="1493" width="0.0120%" height="15" fill="rgb(252,197,1)" fg:x="7731" fg:w="1"/><text x="93.1930%" y="1503.50"></text></g><g><title>getenv (2 samples, 0.02%)</title><rect x="92.9550%" y="1509" width="0.0240%" height="15" fill="rgb(229,42,46)" fg:x="7732" fg:w="2"/><text x="93.2050%" y="1519.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="92.9671%" y="1493" width="0.0120%" height="15" fill="rgb(219,85,8)" fg:x="7733" fg:w="1"/><text x="93.2171%" y="1503.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="92.9791%" y="1509" width="0.0361%" height="15" fill="rgb(223,185,14)" fg:x="7734" fg:w="3"/><text x="93.2291%" y="1519.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="92.9791%" y="1493" width="0.0361%" height="15" fill="rgb(217,196,18)" fg:x="7734" fg:w="3"/><text x="93.2291%" y="1503.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="93.0151%" y="1477" width="0.0120%" height="15" fill="rgb(220,122,37)" fg:x="7737" fg:w="1"/><text x="93.2651%" y="1487.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="93.0272%" y="1429" width="0.0120%" height="15" fill="rgb(236,135,33)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1439.50"></text></g><g><title>nom::multi::many1::_{{closure}} (1 samples, 0.01%)</title><rect x="93.0272%" y="1413" width="0.0120%" height="15" fill="rgb(222,86,54)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1423.50"></text></g><g><title>nom::sequence::pair::_{{closure}} (1 samples, 0.01%)</title><rect x="93.0272%" y="1397" width="0.0120%" height="15" fill="rgb(227,42,22)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1407.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (1 samples, 0.01%)</title><rect x="93.0272%" y="1381" width="0.0120%" height="15" fill="rgb(243,101,27)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1391.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="93.0272%" y="1365" width="0.0120%" height="15" fill="rgb(229,100,8)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1375.50"></text></g><g><title>smithereens::parser::modifications (1 samples, 0.01%)</title><rect x="93.0272%" y="1349" width="0.0120%" height="15" fill="rgb(252,68,10)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1359.50"></text></g><g><title>nom::combinator::map::_{{closure}} (1 samples, 0.01%)</title><rect x="93.0272%" y="1333" width="0.0120%" height="15" fill="rgb(219,19,31)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1343.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="93.0272%" y="1317" width="0.0120%" height="15" fill="rgb(246,150,44)" fg:x="7738" fg:w="1"/><text x="93.2772%" y="1327.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="93.0392%" y="1317" width="0.0120%" height="15" fill="rgb(211,14,39)" fg:x="7739" fg:w="1"/><text x="93.2892%" y="1327.50"></text></g><g><title>smithereens::parser::amino_acid (1 samples, 0.01%)</title><rect x="93.0392%" y="1301" width="0.0120%" height="15" fill="rgb(221,98,29)" fg:x="7739" fg:w="1"/><text x="93.2892%" y="1311.50"></text></g><g><title>nom::character::complete::satisfy::_{{closure}} (1 samples, 0.01%)</title><rect x="93.0392%" y="1285" width="0.0120%" height="15" fill="rgb(221,70,26)" fg:x="7739" fg:w="1"/><text x="93.2892%" y="1295.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.04%)</title><rect x="93.0392%" y="1365" width="0.0361%" height="15" fill="rgb(236,146,30)" fg:x="7739" fg:w="3"/><text x="93.2892%" y="1375.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (3 samples, 0.04%)</title><rect x="93.0392%" y="1349" width="0.0361%" height="15" fill="rgb(226,94,34)" fg:x="7739" fg:w="3"/><text x="93.2892%" y="1359.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.04%)</title><rect x="93.0392%" y="1333" width="0.0361%" height="15" fill="rgb(248,132,21)" fg:x="7739" fg:w="3"/><text x="93.2892%" y="1343.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (2 samples, 0.02%)</title><rect x="93.0512%" y="1317" width="0.0240%" height="15" fill="rgb(245,43,50)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1327.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.02%)</title><rect x="93.0512%" y="1301" width="0.0240%" height="15" fill="rgb(245,132,31)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1311.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.02%)</title><rect x="93.0512%" y="1285" width="0.0240%" height="15" fill="rgb(230,171,4)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1295.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.02%)</title><rect x="93.0512%" y="1269" width="0.0240%" height="15" fill="rgb(235,6,45)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1279.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.02%)</title><rect x="93.0512%" y="1253" width="0.0240%" height="15" fill="rgb(220,80,28)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1263.50"></text></g><g><title>nom::multi::many1::_{{closure}} (2 samples, 0.02%)</title><rect x="93.0512%" y="1237" width="0.0240%" height="15" fill="rgb(242,171,9)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="93.0512%" y="1221" width="0.0240%" height="15" fill="rgb(214,135,29)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="93.0512%" y="1205" width="0.0240%" height="15" fill="rgb(221,229,16)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="93.0512%" y="1189" width="0.0240%" height="15" fill="rgb(253,59,46)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="93.0512%" y="1173" width="0.0240%" height="15" fill="rgb(250,147,20)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="93.0512%" y="1157" width="0.0240%" height="15" fill="rgb(236,64,48)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="93.0512%" y="1141" width="0.0240%" height="15" fill="rgb(240,37,42)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1151.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="93.0512%" y="1125" width="0.0240%" height="15" fill="rgb(220,41,50)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1135.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.0512%" y="1109" width="0.0240%" height="15" fill="rgb(216,51,14)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1119.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.0512%" y="1093" width="0.0240%" height="15" fill="rgb(215,83,10)" fg:x="7740" fg:w="2"/><text x="93.3012%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.06%)</title><rect x="93.0272%" y="1477" width="0.0601%" height="15" fill="rgb(206,144,17)" fg:x="7738" fg:w="5"/><text x="93.2772%" y="1487.50"></text></g><g><title>nom::sequence::pair::_{{closure}} (5 samples, 0.06%)</title><rect x="93.0272%" y="1461" width="0.0601%" height="15" fill="rgb(219,196,37)" fg:x="7738" fg:w="5"/><text x="93.2772%" y="1471.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5 samples, 0.06%)</title><rect x="93.0272%" y="1445" width="0.0601%" height="15" fill="rgb(226,135,26)" fg:x="7738" fg:w="5"/><text x="93.2772%" y="1455.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (4 samples, 0.05%)</title><rect x="93.0392%" y="1429" width="0.0481%" height="15" fill="rgb(237,195,40)" fg:x="7739" fg:w="4"/><text x="93.2892%" y="1439.50"></text></g><g><title>nom::sequence::preceded::_{{closure}} (4 samples, 0.05%)</title><rect x="93.0392%" y="1413" width="0.0481%" height="15" fill="rgb(228,182,42)" fg:x="7739" fg:w="4"/><text x="93.2892%" y="1423.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4 samples, 0.05%)</title><rect x="93.0392%" y="1397" width="0.0481%" height="15" fill="rgb(224,135,50)" fg:x="7739" fg:w="4"/><text x="93.2892%" y="1407.50"></text></g><g><title>nom::multi::many1::_{{closure}} (4 samples, 0.05%)</title><rect x="93.0392%" y="1381" width="0.0481%" height="15" fill="rgb(236,215,34)" fg:x="7739" fg:w="4"/><text x="93.2892%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="93.0753%" y="1365" width="0.0120%" height="15" fill="rgb(244,213,27)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="93.0753%" y="1349" width="0.0120%" height="15" fill="rgb(233,37,53)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="93.0753%" y="1333" width="0.0120%" height="15" fill="rgb(222,132,14)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="93.0753%" y="1317" width="0.0120%" height="15" fill="rgb(219,202,29)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="93.0753%" y="1301" width="0.0120%" height="15" fill="rgb(226,157,39)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="93.0753%" y="1285" width="0.0120%" height="15" fill="rgb(235,213,2)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1295.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="93.0753%" y="1269" width="0.0120%" height="15" fill="rgb(250,121,2)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1279.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.0753%" y="1253" width="0.0120%" height="15" fill="rgb(206,192,33)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1263.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.0753%" y="1237" width="0.0120%" height="15" fill="rgb(240,161,6)" fg:x="7742" fg:w="1"/><text x="93.3253%" y="1247.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (7 samples, 0.08%)</title><rect x="93.0151%" y="1509" width="0.0842%" height="15" fill="rgb(246,53,30)" fg:x="7737" fg:w="7"/><text x="93.2651%" y="1519.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (7 samples, 0.08%)</title><rect x="93.0151%" y="1493" width="0.0842%" height="15" fill="rgb(219,123,43)" fg:x="7737" fg:w="7"/><text x="93.2651%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="93.0873%" y="1477" width="0.0120%" height="15" fill="rgb(236,53,49)" fg:x="7743" fg:w="1"/><text x="93.3373%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.0873%" y="1461" width="0.0120%" height="15" fill="rgb(241,156,1)" fg:x="7743" fg:w="1"/><text x="93.3373%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="93.0873%" y="1445" width="0.0120%" height="15" fill="rgb(209,73,26)" fg:x="7743" fg:w="1"/><text x="93.3373%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="93.0873%" y="1429" width="0.0120%" height="15" fill="rgb(206,114,3)" fg:x="7743" fg:w="1"/><text x="93.3373%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;,core::option::Option&lt;alloc::vec::Vec&lt;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;)]&gt; (1 samples, 0.01%)</title><rect x="93.0873%" y="1413" width="0.0120%" height="15" fill="rgb(230,214,9)" fg:x="7743" fg:w="1"/><text x="93.3373%" y="1423.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="93.0873%" y="1397" width="0.0120%" height="15" fill="rgb(240,184,46)" fg:x="7743" fg:w="1"/><text x="93.3373%" y="1407.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.0873%" y="1381" width="0.0120%" height="15" fill="rgb(242,169,54)" fg:x="7743" fg:w="1"/><text x="93.3373%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="93.1113%" y="1397" width="0.0120%" height="15" fill="rgb(207,168,50)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="93.1113%" y="1381" width="0.0120%" height="15" fill="rgb(240,114,2)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="93.1113%" y="1365" width="0.0120%" height="15" fill="rgb(211,17,40)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="93.1113%" y="1349" width="0.0120%" height="15" fill="rgb(235,97,36)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="93.1113%" y="1333" width="0.0120%" height="15" fill="rgb(208,164,11)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="93.1113%" y="1317" width="0.0120%" height="15" fill="rgb(242,11,17)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="93.1113%" y="1301" width="0.0120%" height="15" fill="rgb(215,86,33)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1311.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="93.1113%" y="1285" width="0.0120%" height="15" fill="rgb(245,185,28)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.1113%" y="1269" width="0.0120%" height="15" fill="rgb(231,89,42)" fg:x="7745" fg:w="1"/><text x="93.3613%" y="1279.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.02%)</title><rect x="93.1233%" y="1381" width="0.0240%" height="15" fill="rgb(210,18,47)" fg:x="7746" fg:w="2"/><text x="93.3733%" y="1391.50"></text></g><g><title>smithereens::parser::monosaccharide (2 samples, 0.02%)</title><rect x="93.1233%" y="1365" width="0.0240%" height="15" fill="rgb(214,84,8)" fg:x="7746" fg:w="2"/><text x="93.3733%" y="1375.50"></text></g><g><title>nom::character::complete::satisfy::_{{closure}} (2 samples, 0.02%)</title><rect x="93.1233%" y="1349" width="0.0240%" height="15" fill="rgb(214,222,23)" fg:x="7746" fg:w="2"/><text x="93.3733%" y="1359.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.06%)</title><rect x="93.0993%" y="1429" width="0.0601%" height="15" fill="rgb(213,104,21)" fg:x="7744" fg:w="5"/><text x="93.3493%" y="1439.50"></text></g><g><title>nom::multi::many1::_{{closure}} (5 samples, 0.06%)</title><rect x="93.0993%" y="1413" width="0.0601%" height="15" fill="rgb(238,138,6)" fg:x="7744" fg:w="5"/><text x="93.3493%" y="1423.50"></text></g><g><title>nom::sequence::pair::_{{closure}} (3 samples, 0.04%)</title><rect x="93.1233%" y="1397" width="0.0361%" height="15" fill="rgb(205,167,50)" fg:x="7746" fg:w="3"/><text x="93.3733%" y="1407.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1474%" y="1381" width="0.0120%" height="15" fill="rgb(230,105,27)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1391.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="93.1474%" y="1365" width="0.0120%" height="15" fill="rgb(222,97,48)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1375.50"></text></g><g><title>smithereens::parser::modifications (1 samples, 0.01%)</title><rect x="93.1474%" y="1349" width="0.0120%" height="15" fill="rgb(222,197,14)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1359.50"></text></g><g><title>nom::combinator::map::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1474%" y="1333" width="0.0120%" height="15" fill="rgb(210,105,47)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1343.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1474%" y="1317" width="0.0120%" height="15" fill="rgb(238,158,19)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1327.50"></text></g><g><title>nom::multi::separated_list1::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1474%" y="1301" width="0.0120%" height="15" fill="rgb(226,176,23)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1311.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1474%" y="1285" width="0.0120%" height="15" fill="rgb(208,79,31)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1295.50"></text></g><g><title>&lt;(FnA,FnB) as nom::sequence::Tuple&lt;Input,(A,B),Error&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="93.1474%" y="1269" width="0.0120%" height="15" fill="rgb(221,154,21)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1279.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="93.1474%" y="1253" width="0.0120%" height="15" fill="rgb(213,61,41)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1263.50"></text></g><g><title>nom::combinator::map::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1474%" y="1237" width="0.0120%" height="15" fill="rgb(215,28,33)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1247.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="93.1474%" y="1221" width="0.0120%" height="15" fill="rgb(231,139,26)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1231.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.01%)</title><rect x="93.1474%" y="1205" width="0.0120%" height="15" fill="rgb(232,159,16)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.01%)</title><rect x="93.1474%" y="1189" width="0.0120%" height="15" fill="rgb(233,80,10)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1199.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.01%)</title><rect x="93.1474%" y="1173" width="0.0120%" height="15" fill="rgb(208,147,29)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="93.1474%" y="1157" width="0.0120%" height="15" fill="rgb(213,10,12)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="93.1474%" y="1141" width="0.0120%" height="15" fill="rgb(231,218,13)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="93.1474%" y="1125" width="0.0120%" height="15" fill="rgb(244,199,44)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="93.1474%" y="1109" width="0.0120%" height="15" fill="rgb(240,144,53)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="93.1474%" y="1093" width="0.0120%" height="15" fill="rgb(223,57,28)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1103.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="93.1474%" y="1077" width="0.0120%" height="15" fill="rgb(213,134,38)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="93.1474%" y="1061" width="0.0120%" height="15" fill="rgb(251,182,42)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.1474%" y="1045" width="0.0120%" height="15" fill="rgb(229,93,13)" fg:x="7748" fg:w="1"/><text x="93.3974%" y="1055.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.02%)</title><rect x="93.1594%" y="1365" width="0.0240%" height="15" fill="rgb(234,171,3)" fg:x="7749" fg:w="2"/><text x="93.4094%" y="1375.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (2 samples, 0.02%)</title><rect x="93.1594%" y="1349" width="0.0240%" height="15" fill="rgb(241,105,32)" fg:x="7749" fg:w="2"/><text x="93.4094%" y="1359.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="93.1714%" y="1333" width="0.0120%" height="15" fill="rgb(221,66,3)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1343.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1714%" y="1317" width="0.0120%" height="15" fill="rgb(248,155,29)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1327.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="93.1714%" y="1301" width="0.0120%" height="15" fill="rgb(231,31,5)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1311.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="93.1714%" y="1285" width="0.0120%" height="15" fill="rgb(213,188,31)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1295.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1714%" y="1269" width="0.0120%" height="15" fill="rgb(212,104,33)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1279.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="93.1714%" y="1253" width="0.0120%" height="15" fill="rgb(254,77,51)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1263.50"></text></g><g><title>nom::multi::many1::_{{closure}} (1 samples, 0.01%)</title><rect x="93.1714%" y="1237" width="0.0120%" height="15" fill="rgb(234,39,26)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="93.1714%" y="1221" width="0.0120%" height="15" fill="rgb(208,88,36)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="93.1714%" y="1205" width="0.0120%" height="15" fill="rgb(243,222,10)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="93.1714%" y="1189" width="0.0120%" height="15" fill="rgb(218,133,52)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="93.1714%" y="1173" width="0.0120%" height="15" fill="rgb(222,25,26)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="93.1714%" y="1157" width="0.0120%" height="15" fill="rgb(243,174,24)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="93.1714%" y="1141" width="0.0120%" height="15" fill="rgb(233,188,52)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1151.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="93.1714%" y="1125" width="0.0120%" height="15" fill="rgb(208,89,14)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.1714%" y="1109" width="0.0120%" height="15" fill="rgb(205,204,21)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1119.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.1714%" y="1093" width="0.0120%" height="15" fill="rgb(246,39,28)" fg:x="7750" fg:w="1"/><text x="93.4214%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="93.1835%" y="1365" width="0.0240%" height="15" fill="rgb(235,71,19)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="93.1835%" y="1349" width="0.0240%" height="15" fill="rgb(211,62,39)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="93.1835%" y="1333" width="0.0240%" height="15" fill="rgb(246,118,20)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="93.1835%" y="1317" width="0.0240%" height="15" fill="rgb(230,82,12)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1327.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="93.1835%" y="1301" width="0.0240%" height="15" fill="rgb(205,212,34)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1311.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="93.1835%" y="1285" width="0.0240%" height="15" fill="rgb(239,90,1)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1295.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="93.1835%" y="1269" width="0.0240%" height="15" fill="rgb(225,198,50)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1279.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.1835%" y="1253" width="0.0240%" height="15" fill="rgb(227,208,48)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1263.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.1835%" y="1237" width="0.0240%" height="15" fill="rgb(238,134,41)" fg:x="7751" fg:w="2"/><text x="93.4335%" y="1247.50"></text></g><g><title>nom::multi::separated_list1::_{{closure}} (10 samples, 0.12%)</title><rect x="93.0993%" y="1509" width="0.1202%" height="15" fill="rgb(241,58,39)" fg:x="7744" fg:w="10"/><text x="93.3493%" y="1519.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10 samples, 0.12%)</title><rect x="93.0993%" y="1493" width="0.1202%" height="15" fill="rgb(214,126,4)" fg:x="7744" fg:w="10"/><text x="93.3493%" y="1503.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10 samples, 0.12%)</title><rect x="93.0993%" y="1477" width="0.1202%" height="15" fill="rgb(235,149,4)" fg:x="7744" fg:w="10"/><text x="93.3493%" y="1487.50"></text></g><g><title>nom::sequence::pair::_{{closure}} (10 samples, 0.12%)</title><rect x="93.0993%" y="1461" width="0.1202%" height="15" fill="rgb(236,59,29)" fg:x="7744" fg:w="10"/><text x="93.3493%" y="1471.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10 samples, 0.12%)</title><rect x="93.0993%" y="1445" width="0.1202%" height="15" fill="rgb(246,11,33)" fg:x="7744" fg:w="10"/><text x="93.3493%" y="1455.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (5 samples, 0.06%)</title><rect x="93.1594%" y="1429" width="0.0601%" height="15" fill="rgb(232,180,35)" fg:x="7749" fg:w="5"/><text x="93.4094%" y="1439.50"></text></g><g><title>nom::sequence::preceded::_{{closure}} (5 samples, 0.06%)</title><rect x="93.1594%" y="1413" width="0.0601%" height="15" fill="rgb(220,35,37)" fg:x="7749" fg:w="5"/><text x="93.4094%" y="1423.50"></text></g><g><title>core::ops::function::FnMut::call_mut (5 samples, 0.06%)</title><rect x="93.1594%" y="1397" width="0.0601%" height="15" fill="rgb(238,107,48)" fg:x="7749" fg:w="5"/><text x="93.4094%" y="1407.50"></text></g><g><title>nom::multi::many1::_{{closure}} (5 samples, 0.06%)</title><rect x="93.1594%" y="1381" width="0.0601%" height="15" fill="rgb(205,65,21)" fg:x="7749" fg:w="5"/><text x="93.4094%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="93.2075%" y="1365" width="0.0120%" height="15" fill="rgb(246,138,48)" fg:x="7753" fg:w="1"/><text x="93.4575%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="93.2075%" y="1349" width="0.0120%" height="15" fill="rgb(209,220,47)" fg:x="7753" fg:w="1"/><text x="93.4575%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="93.2075%" y="1333" width="0.0120%" height="15" fill="rgb(222,162,49)" fg:x="7753" fg:w="1"/><text x="93.4575%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="93.2075%" y="1317" width="0.0120%" height="15" fill="rgb(243,123,11)" fg:x="7753" fg:w="1"/><text x="93.4575%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="93.2075%" y="1301" width="0.0120%" height="15" fill="rgb(221,229,41)" fg:x="7753" fg:w="1"/><text x="93.4575%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="93.2075%" y="1285" width="0.0120%" height="15" fill="rgb(216,68,4)" fg:x="7753" fg:w="1"/><text x="93.4575%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="93.2075%" y="1269" width="0.0120%" height="15" fill="rgb(207,88,35)" fg:x="7753" fg:w="1"/><text x="93.4575%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.11%)</title><rect x="93.2195%" y="1477" width="0.1082%" height="15" fill="rgb(252,2,5)" fg:x="7754" fg:w="9"/><text x="93.4695%" y="1487.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.11%)</title><rect x="93.2195%" y="1461" width="0.1082%" height="15" fill="rgb(209,173,7)" fg:x="7754" fg:w="9"/><text x="93.4695%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.11%)</title><rect x="93.2195%" y="1445" width="0.1082%" height="15" fill="rgb(210,198,52)" fg:x="7754" fg:w="9"/><text x="93.4695%" y="1455.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.11%)</title><rect x="93.2195%" y="1429" width="0.1082%" height="15" fill="rgb(228,152,32)" fg:x="7754" fg:w="9"/><text x="93.4695%" y="1439.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.11%)</title><rect x="93.2195%" y="1413" width="0.1082%" height="15" fill="rgb(249,98,29)" fg:x="7754" fg:w="9"/><text x="93.4695%" y="1423.50"></text></g><g><title>realloc (9 samples, 0.11%)</title><rect x="93.2195%" y="1397" width="0.1082%" height="15" fill="rgb(205,148,48)" fg:x="7754" fg:w="9"/><text x="93.4695%" y="1407.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="93.2315%" y="1381" width="0.0962%" height="15" fill="rgb(236,69,34)" fg:x="7755" fg:w="8"/><text x="93.4815%" y="1391.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="93.2315%" y="1365" width="0.0962%" height="15" fill="rgb(220,151,41)" fg:x="7755" fg:w="8"/><text x="93.4815%" y="1375.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="93.2676%" y="1349" width="0.0601%" height="15" fill="rgb(254,106,24)" fg:x="7758" fg:w="5"/><text x="93.5176%" y="1359.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.3157%" y="1333" width="0.0120%" height="15" fill="rgb(210,37,48)" fg:x="7762" fg:w="1"/><text x="93.5657%" y="1343.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::add_node (10 samples, 0.12%)</title><rect x="93.2195%" y="1509" width="0.1202%" height="15" fill="rgb(254,131,5)" fg:x="7754" fg:w="10"/><text x="93.4695%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.12%)</title><rect x="93.2195%" y="1493" width="0.1202%" height="15" fill="rgb(216,55,41)" fg:x="7754" fg:w="10"/><text x="93.4695%" y="1503.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="93.3277%" y="1477" width="0.0120%" height="15" fill="rgb(250,35,31)" fg:x="7763" fg:w="1"/><text x="93.5777%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="93.3397%" y="1413" width="0.0120%" height="15" fill="rgb(207,124,33)" fg:x="7764" fg:w="1"/><text x="93.5897%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="93.3397%" y="1397" width="0.0120%" height="15" fill="rgb(249,175,17)" fg:x="7764" fg:w="1"/><text x="93.5897%" y="1407.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="93.3397%" y="1381" width="0.0120%" height="15" fill="rgb(224,175,39)" fg:x="7764" fg:w="1"/><text x="93.5897%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;smithereens::Residue&gt;&gt; (2 samples, 0.02%)</title><rect x="93.3397%" y="1493" width="0.0240%" height="15" fill="rgb(208,67,49)" fg:x="7764" fg:w="2"/><text x="93.5897%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (2 samples, 0.02%)</title><rect x="93.3397%" y="1477" width="0.0240%" height="15" fill="rgb(222,188,41)" fg:x="7764" fg:w="2"/><text x="93.5897%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="93.3397%" y="1461" width="0.0240%" height="15" fill="rgb(243,213,30)" fg:x="7764" fg:w="2"/><text x="93.5897%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (2 samples, 0.02%)</title><rect x="93.3397%" y="1445" width="0.0240%" height="15" fill="rgb(253,100,45)" fg:x="7764" fg:w="2"/><text x="93.5897%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="93.3397%" y="1429" width="0.0240%" height="15" fill="rgb(226,24,44)" fg:x="7764" fg:w="2"/><text x="93.5897%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="93.3518%" y="1413" width="0.0120%" height="15" fill="rgb(215,41,24)" fg:x="7765" fg:w="1"/><text x="93.6018%" y="1423.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.01%)</title><rect x="93.3518%" y="1397" width="0.0120%" height="15" fill="rgb(254,53,33)" fg:x="7765" fg:w="1"/><text x="93.6018%" y="1407.50"></text></g><g><title>&lt;petgraph::graph_impl::EdgeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="93.3878%" y="1477" width="0.0120%" height="15" fill="rgb(242,103,10)" fg:x="7768" fg:w="1"/><text x="93.6378%" y="1487.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (1 samples, 0.01%)</title><rect x="93.3878%" y="1461" width="0.0120%" height="15" fill="rgb(246,29,21)" fg:x="7768" fg:w="1"/><text x="93.6378%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.01%)</title><rect x="93.3999%" y="1477" width="0.0120%" height="15" fill="rgb(251,154,1)" fg:x="7769" fg:w="1"/><text x="93.6499%" y="1487.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="93.3999%" y="1461" width="0.0120%" height="15" fill="rgb(254,212,26)" fg:x="7769" fg:w="1"/><text x="93.6499%" y="1471.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::remove_node (5 samples, 0.06%)</title><rect x="93.3638%" y="1493" width="0.0601%" height="15" fill="rgb(251,187,46)" fg:x="7766" fg:w="5"/><text x="93.6138%" y="1503.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next_edge (1 samples, 0.01%)</title><rect x="93.4119%" y="1477" width="0.0120%" height="15" fill="rgb(224,208,14)" fg:x="7770" fg:w="1"/><text x="93.6619%" y="1487.50"></text></g><g><title>petgraph::graph_impl::EdgesWalkerMut&lt;E,Ix&gt;::next (1 samples, 0.01%)</title><rect x="93.4119%" y="1461" width="0.0120%" height="15" fill="rgb(222,176,26)" fg:x="7770" fg:w="1"/><text x="93.6619%" y="1471.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (2 samples, 0.02%)</title><rect x="93.4359%" y="1429" width="0.0240%" height="15" fill="rgb(241,219,52)" fg:x="7772" fg:w="2"/><text x="93.6859%" y="1439.50"></text></g><g><title>&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="93.4359%" y="1413" width="0.0240%" height="15" fill="rgb(252,198,21)" fg:x="7772" fg:w="2"/><text x="93.6859%" y="1423.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (2 samples, 0.02%)</title><rect x="93.4359%" y="1397" width="0.0240%" height="15" fill="rgb(244,196,23)" fg:x="7772" fg:w="2"/><text x="93.6859%" y="1407.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::retain_nodes (11 samples, 0.13%)</title><rect x="93.3397%" y="1509" width="0.1322%" height="15" fill="rgb(239,121,44)" fg:x="7764" fg:w="11"/><text x="93.5897%" y="1519.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (4 samples, 0.05%)</title><rect x="93.4239%" y="1493" width="0.0481%" height="15" fill="rgb(249,203,23)" fg:x="7771" fg:w="4"/><text x="93.6739%" y="1503.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.05%)</title><rect x="93.4239%" y="1477" width="0.0481%" height="15" fill="rgb(238,219,10)" fg:x="7771" fg:w="4"/><text x="93.6739%" y="1487.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.05%)</title><rect x="93.4239%" y="1461" width="0.0481%" height="15" fill="rgb(241,35,46)" fg:x="7771" fg:w="4"/><text x="93.6739%" y="1471.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4 samples, 0.05%)</title><rect x="93.4239%" y="1445" width="0.0481%" height="15" fill="rgb(218,28,6)" fg:x="7771" fg:w="4"/><text x="93.6739%" y="1455.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="93.4600%" y="1429" width="0.0120%" height="15" fill="rgb(233,151,50)" fg:x="7774" fg:w="1"/><text x="93.7100%" y="1439.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="93.4720%" y="1477" width="0.0240%" height="15" fill="rgb(208,57,8)" fg:x="7775" fg:w="2"/><text x="93.7220%" y="1487.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="93.4720%" y="1461" width="0.0240%" height="15" fill="rgb(253,99,10)" fg:x="7775" fg:w="2"/><text x="93.7220%" y="1471.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="93.4720%" y="1445" width="0.0240%" height="15" fill="rgb(237,196,49)" fg:x="7775" fg:w="2"/><text x="93.7220%" y="1455.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="93.4720%" y="1429" width="0.0240%" height="15" fill="rgb(209,51,3)" fg:x="7775" fg:w="2"/><text x="93.7220%" y="1439.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="93.4720%" y="1413" width="0.0240%" height="15" fill="rgb(238,129,10)" fg:x="7775" fg:w="2"/><text x="93.7220%" y="1423.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.4840%" y="1397" width="0.0120%" height="15" fill="rgb(246,201,16)" fg:x="7776" fg:w="1"/><text x="93.7340%" y="1407.50"></text></g><g><title>phf::map::Map&lt;K,V&gt;::get (3 samples, 0.04%)</title><rect x="93.4720%" y="1509" width="0.0361%" height="15" fill="rgb(250,160,20)" fg:x="7775" fg:w="3"/><text x="93.7220%" y="1519.50"></text></g><g><title>phf::map::Map&lt;K,V&gt;::get_entry (3 samples, 0.04%)</title><rect x="93.4720%" y="1493" width="0.0361%" height="15" fill="rgb(251,107,25)" fg:x="7775" fg:w="3"/><text x="93.7220%" y="1503.50"></text></g><g><title>phf_shared::get_index (1 samples, 0.01%)</title><rect x="93.4960%" y="1477" width="0.0120%" height="15" fill="rgb(212,103,39)" fg:x="7777" fg:w="1"/><text x="93.7460%" y="1487.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="93.5081%" y="1429" width="0.0120%" height="15" fill="rgb(207,9,29)" fg:x="7778" fg:w="1"/><text x="93.7581%" y="1439.50"></text></g><g><title>phf::map::Map&lt;K,V&gt;::get_entry (2 samples, 0.02%)</title><rect x="93.5081%" y="1509" width="0.0240%" height="15" fill="rgb(227,84,3)" fg:x="7778" fg:w="2"/><text x="93.7581%" y="1519.50"></text></g><g><title>phf_shared::hash (2 samples, 0.02%)</title><rect x="93.5081%" y="1493" width="0.0240%" height="15" fill="rgb(242,194,7)" fg:x="7778" fg:w="2"/><text x="93.7581%" y="1503.50"></text></g><g><title>&lt;siphasher::sip128::SipHasher13 as siphasher::sip128::Hasher128&gt;::finish128 (2 samples, 0.02%)</title><rect x="93.5081%" y="1477" width="0.0240%" height="15" fill="rgb(230,40,4)" fg:x="7778" fg:w="2"/><text x="93.7581%" y="1487.50"></text></g><g><title>siphasher::sip128::Hasher&lt;S&gt;::finish128 (2 samples, 0.02%)</title><rect x="93.5081%" y="1461" width="0.0240%" height="15" fill="rgb(243,229,33)" fg:x="7778" fg:w="2"/><text x="93.7581%" y="1471.50"></text></g><g><title>&lt;siphasher::sip128::Sip13Rounds as siphasher::sip128::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="93.5081%" y="1445" width="0.0240%" height="15" fill="rgb(240,65,24)" fg:x="7778" fg:w="2"/><text x="93.7581%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="93.5201%" y="1429" width="0.0120%" height="15" fill="rgb(212,28,20)" fg:x="7779" fg:w="1"/><text x="93.7701%" y="1439.50"></text></g><g><title>polars_arrow::array::utf8::mutable::MutableUtf8Array&lt;O&gt;::extend_trusted_len_values (1 samples, 0.01%)</title><rect x="93.5321%" y="1509" width="0.0120%" height="15" fill="rgb(209,72,3)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1519.50"></text></g><g><title>polars_arrow::array::utf8::mutable::MutableUtf8Array&lt;O&gt;::extend_trusted_len_values_unchecked (1 samples, 0.01%)</title><rect x="93.5321%" y="1493" width="0.0120%" height="15" fill="rgb(238,170,36)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1503.50"></text></g><g><title>polars_arrow::array::utf8::mutable_values::MutableUtf8ValuesArray&lt;O&gt;::extend_trusted_len_unchecked (1 samples, 0.01%)</title><rect x="93.5321%" y="1477" width="0.0120%" height="15" fill="rgb(236,19,38)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1487.50"></text></g><g><title>polars_arrow::array::physical_binary::extend_from_trusted_len_values_iter (1 samples, 0.01%)</title><rect x="93.5321%" y="1461" width="0.0120%" height="15" fill="rgb(230,67,43)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1471.50"></text></g><g><title>polars_arrow::offset::Offsets&lt;O&gt;::try_extend_from_lengths (1 samples, 0.01%)</title><rect x="93.5321%" y="1445" width="0.0120%" height="15" fill="rgb(227,14,36)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="93.5321%" y="1429" width="0.0120%" height="15" fill="rgb(247,171,49)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="93.5321%" y="1413" width="0.0120%" height="15" fill="rgb(235,164,51)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="93.5321%" y="1397" width="0.0120%" height="15" fill="rgb(246,107,20)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5321%" y="1381" width="0.0120%" height="15" fill="rgb(226,88,18)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5321%" y="1365" width="0.0120%" height="15" fill="rgb(235,136,9)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5321%" y="1349" width="0.0120%" height="15" fill="rgb(209,3,34)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5321%" y="1333" width="0.0120%" height="15" fill="rgb(213,38,19)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5321%" y="1317" width="0.0120%" height="15" fill="rgb(254,24,24)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5321%" y="1301" width="0.0120%" height="15" fill="rgb(219,122,42)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1311.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="93.5321%" y="1285" width="0.0120%" height="15" fill="rgb(205,128,31)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1295.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="93.5321%" y="1269" width="0.0120%" height="15" fill="rgb(212,142,0)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1279.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="93.5321%" y="1253" width="0.0120%" height="15" fill="rgb(211,25,35)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1263.50"></text></g><g><title>polars_arrow::array::physical_binary::extend_from_trusted_len_values_iter::_{{closure}} (1 samples, 0.01%)</title><rect x="93.5321%" y="1237" width="0.0120%" height="15" fill="rgb(220,150,53)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="93.5321%" y="1221" width="0.0120%" height="15" fill="rgb(220,30,24)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="93.5321%" y="1205" width="0.0120%" height="15" fill="rgb(218,86,23)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="93.5321%" y="1189" width="0.0120%" height="15" fill="rgb(206,62,27)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="93.5321%" y="1173" width="0.0120%" height="15" fill="rgb(249,174,0)" fg:x="7780" fg:w="1"/><text x="93.7821%" y="1183.50"></text></g><g><title>polars_arrow::array::utf8::mutable::MutableUtf8Array&lt;O&gt;::with_capacities (2 samples, 0.02%)</title><rect x="93.5441%" y="1509" width="0.0240%" height="15" fill="rgb(246,67,27)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="93.5441%" y="1493" width="0.0240%" height="15" fill="rgb(250,195,30)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="93.5441%" y="1477" width="0.0240%" height="15" fill="rgb(251,171,50)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="93.5441%" y="1461" width="0.0240%" height="15" fill="rgb(236,196,10)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="93.5441%" y="1445" width="0.0240%" height="15" fill="rgb(249,228,52)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="93.5441%" y="1429" width="0.0240%" height="15" fill="rgb(219,60,51)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="93.5441%" y="1413" width="0.0240%" height="15" fill="rgb(240,198,24)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="93.5441%" y="1397" width="0.0240%" height="15" fill="rgb(240,192,40)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1407.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="93.5441%" y="1381" width="0.0240%" height="15" fill="rgb(219,118,5)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1391.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.5441%" y="1365" width="0.0240%" height="15" fill="rgb(205,202,34)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1375.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.5441%" y="1349" width="0.0240%" height="15" fill="rgb(234,153,26)" fg:x="7781" fg:w="2"/><text x="93.7941%" y="1359.50"></text></g><g><title>polars_core::chunked_array::ChunkedArray&lt;T&gt;::layout (1 samples, 0.01%)</title><rect x="93.5682%" y="1509" width="0.0120%" height="15" fill="rgb(229,26,29)" fg:x="7783" fg:w="1"/><text x="93.8182%" y="1519.50"></text></g><g><title>polars_core::chunked_array::ops::downcast::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::downcast_iter (1 samples, 0.01%)</title><rect x="93.5682%" y="1493" width="0.0120%" height="15" fill="rgb(237,115,21)" fg:x="7783" fg:w="1"/><text x="93.8182%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="93.5682%" y="1477" width="0.0120%" height="15" fill="rgb(252,144,15)" fg:x="7783" fg:w="1"/><text x="93.8182%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="93.5682%" y="1461" width="0.0120%" height="15" fill="rgb(232,26,13)" fg:x="7783" fg:w="1"/><text x="93.8182%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="93.5682%" y="1445" width="0.0120%" height="15" fill="rgb(206,44,19)" fg:x="7783" fg:w="1"/><text x="93.8182%" y="1455.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunks (2 samples, 0.02%)</title><rect x="93.5802%" y="1509" width="0.0240%" height="15" fill="rgb(249,159,2)" fg:x="7784" fg:w="2"/><text x="93.8302%" y="1519.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunks_and_dtype (1 samples, 0.01%)</title><rect x="93.5922%" y="1493" width="0.0120%" height="15" fill="rgb(231,5,32)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1503.50"></text></g><g><title>polars_core::chunked_array::ops::chunkops::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::compute_len (1 samples, 0.01%)</title><rect x="93.5922%" y="1477" width="0.0120%" height="15" fill="rgb(249,210,18)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="93.5922%" y="1461" width="0.0120%" height="15" fill="rgb(215,223,36)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1471.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="93.5922%" y="1445" width="0.0120%" height="15" fill="rgb(245,185,20)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5922%" y="1429" width="0.0120%" height="15" fill="rgb(206,224,11)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1439.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.5922%" y="1413" width="0.0120%" height="15" fill="rgb(248,73,42)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1423.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="93.5922%" y="1397" width="0.0120%" height="15" fill="rgb(219,149,31)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1407.50"></text></g><g><title>polars_core::chunked_array::ops::chunkops::_&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::compute_len::_{{closure}} (1 samples, 0.01%)</title><rect x="93.5922%" y="1381" width="0.0120%" height="15" fill="rgb(243,104,17)" fg:x="7785" fg:w="1"/><text x="93.8422%" y="1391.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.6042%" y="1493" width="0.0120%" height="15" fill="rgb(244,117,33)" fg:x="7786" fg:w="1"/><text x="93.8542%" y="1503.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="93.6163%" y="1493" width="0.0120%" height="15" fill="rgb(251,25,47)" fg:x="7787" fg:w="1"/><text x="93.8663%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="93.6163%" y="1477" width="0.0120%" height="15" fill="rgb(249,70,13)" fg:x="7787" fg:w="1"/><text x="93.8663%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="93.6163%" y="1461" width="0.0120%" height="15" fill="rgb(217,133,18)" fg:x="7787" fg:w="1"/><text x="93.8663%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="93.6163%" y="1445" width="0.0120%" height="15" fill="rgb(248,97,28)" fg:x="7787" fg:w="1"/><text x="93.8663%" y="1455.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="93.6163%" y="1429" width="0.0120%" height="15" fill="rgb(237,193,4)" fg:x="7787" fg:w="1"/><text x="93.8663%" y="1439.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.6163%" y="1413" width="0.0120%" height="15" fill="rgb(247,198,45)" fg:x="7787" fg:w="1"/><text x="93.8663%" y="1423.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="93.6283%" y="1493" width="0.0120%" height="15" fill="rgb(245,2,20)" fg:x="7788" fg:w="1"/><text x="93.8783%" y="1503.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="93.6283%" y="1477" width="0.0120%" height="15" fill="rgb(210,71,36)" fg:x="7788" fg:w="1"/><text x="93.8783%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="93.6283%" y="1461" width="0.0120%" height="15" fill="rgb(238,114,30)" fg:x="7788" fg:w="1"/><text x="93.8783%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="93.6283%" y="1445" width="0.0120%" height="15" fill="rgb(241,200,2)" fg:x="7788" fg:w="1"/><text x="93.8783%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="93.6283%" y="1429" width="0.0120%" height="15" fill="rgb(232,106,18)" fg:x="7788" fg:w="1"/><text x="93.8783%" y="1439.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="93.6283%" y="1413" width="0.0120%" height="15" fill="rgb(211,141,18)" fg:x="7788" fg:w="1"/><text x="93.8783%" y="1423.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="93.6523%" y="1461" width="0.0120%" height="15" fill="rgb(224,9,9)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="93.6523%" y="1445" width="0.0120%" height="15" fill="rgb(249,137,46)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1455.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="93.6523%" y="1429" width="0.0120%" height="15" fill="rgb(236,44,45)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="93.6523%" y="1413" width="0.0120%" height="15" fill="rgb(205,68,40)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="93.6523%" y="1397" width="0.0120%" height="15" fill="rgb(214,198,49)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="93.6523%" y="1381" width="0.0120%" height="15" fill="rgb(226,140,45)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1391.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="93.6523%" y="1365" width="0.0120%" height="15" fill="rgb(209,109,20)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1375.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="93.6523%" y="1349" width="0.0120%" height="15" fill="rgb(217,33,46)" fg:x="7790" fg:w="1"/><text x="93.9023%" y="1359.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::with_chunk (7 samples, 0.08%)</title><rect x="93.6042%" y="1509" width="0.0842%" height="15" fill="rgb(232,150,33)" fg:x="7786" fg:w="7"/><text x="93.8542%" y="1519.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunks (4 samples, 0.05%)</title><rect x="93.6403%" y="1493" width="0.0481%" height="15" fill="rgb(233,76,25)" fg:x="7789" fg:w="4"/><text x="93.8903%" y="1503.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from_chunks_and_dtype (4 samples, 0.05%)</title><rect x="93.6403%" y="1477" width="0.0481%" height="15" fill="rgb(254,219,23)" fg:x="7789" fg:w="4"/><text x="93.8903%" y="1487.50"></text></g><g><title>polars_core::datatypes::field::Field::new (2 samples, 0.02%)</title><rect x="93.6643%" y="1461" width="0.0240%" height="15" fill="rgb(233,108,4)" fg:x="7791" fg:w="2"/><text x="93.9143%" y="1471.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="93.6643%" y="1445" width="0.0240%" height="15" fill="rgb(229,98,6)" fg:x="7791" fg:w="2"/><text x="93.9143%" y="1455.50"></text></g><g><title>&lt;smartstring::SmartString&lt;Mode&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.02%)</title><rect x="93.6643%" y="1429" width="0.0240%" height="15" fill="rgb(217,40,27)" fg:x="7791" fg:w="2"/><text x="93.9143%" y="1439.50"></text></g><g><title>smartstring::SmartString&lt;Mode&gt;::from_inline (2 samples, 0.02%)</title><rect x="93.6643%" y="1413" width="0.0240%" height="15" fill="rgb(221,35,43)" fg:x="7791" fg:w="2"/><text x="93.9143%" y="1423.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="93.6884%" y="1461" width="0.0240%" height="15" fill="rgb(212,107,11)" fg:x="7793" fg:w="2"/><text x="93.9384%" y="1471.50"></text></g><g><title>polars_core::chunked_array::from::&lt;impl core::convert::From&lt;A&gt; for polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;::from (2 samples, 0.02%)</title><rect x="93.6884%" y="1445" width="0.0240%" height="15" fill="rgb(245,42,44)" fg:x="7793" fg:w="2"/><text x="93.9384%" y="1455.50"></text></g><g><title>polars_core::chunked_array::ops::sort::arg_sort_multiple::arg_sort_multiple_impl (3 samples, 0.04%)</title><rect x="93.6884%" y="1509" width="0.0361%" height="15" fill="rgb(209,31,12)" fg:x="7793" fg:w="3"/><text x="93.9384%" y="1519.50"></text></g><g><title>polars_arrow::legacy::utils::CustomIterTools::collect_trusted (3 samples, 0.04%)</title><rect x="93.6884%" y="1493" width="0.0361%" height="15" fill="rgb(210,228,54)" fg:x="7793" fg:w="3"/><text x="93.9384%" y="1503.50"></text></g><g><title>polars_core::chunked_array::trusted_len::&lt;impl polars_arrow::legacy::utils::FromTrustedLenIterator&lt;&lt;T as polars_core::datatypes::PolarsNumericType&gt;::Native&gt; for polars_core::utils::NoNull&lt;polars_core::chunked_array::ChunkedArray&lt;T&gt;&gt;&gt;::from_iter_trusted_length (3 samples, 0.04%)</title><rect x="93.6884%" y="1477" width="0.0361%" height="15" fill="rgb(241,19,33)" fg:x="7793" fg:w="3"/><text x="93.9384%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as polars_arrow::legacy::trusted_len::push_unchecked::TrustedLenPush&lt;T&gt;&gt;::from_trusted_len_iter_unchecked (1 samples, 0.01%)</title><rect x="93.7124%" y="1461" width="0.0120%" height="15" fill="rgb(229,51,27)" fg:x="7795" fg:w="1"/><text x="93.9624%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as polars_arrow::legacy::trusted_len::push_unchecked::TrustedLenPush&lt;T&gt;&gt;::extend_trusted_len_unchecked (1 samples, 0.01%)</title><rect x="93.7124%" y="1445" width="0.0120%" height="15" fill="rgb(214,167,49)" fg:x="7795" fg:w="1"/><text x="93.9624%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="93.7124%" y="1429" width="0.0120%" height="15" fill="rgb(248,140,47)" fg:x="7795" fg:w="1"/><text x="93.9624%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="93.7124%" y="1413" width="0.0120%" height="15" fill="rgb(228,6,51)" fg:x="7795" fg:w="1"/><text x="93.9624%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="93.7124%" y="1397" width="0.0120%" height="15" fill="rgb(242,44,53)" fg:x="7795" fg:w="1"/><text x="93.9624%" y="1407.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="93.7124%" y="1381" width="0.0120%" height="15" fill="rgb(249,90,50)" fg:x="7795" fg:w="1"/><text x="93.9624%" y="1391.50"></text></g><g><title>&lt;I as polars_core::utils::IntoVec&lt;smartstring::SmartString&lt;smartstring::config::LazyCompact&gt;&gt;&gt;::into_vec (1 samples, 0.01%)</title><rect x="93.7365%" y="1493" width="0.0120%" height="15" fill="rgb(222,84,19)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="93.7365%" y="1477" width="0.0120%" height="15" fill="rgb(214,140,12)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="93.7365%" y="1461" width="0.0120%" height="15" fill="rgb(210,20,43)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="93.7365%" y="1445" width="0.0120%" height="15" fill="rgb(243,1,40)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="93.7365%" y="1429" width="0.0120%" height="15" fill="rgb(224,102,26)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.01%)</title><rect x="93.7365%" y="1413" width="0.0120%" height="15" fill="rgb(221,179,1)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="93.7365%" y="1397" width="0.0120%" height="15" fill="rgb(216,209,47)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1407.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.7365%" y="1381" width="0.0120%" height="15" fill="rgb(251,135,9)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="93.7365%" y="1365" width="0.0120%" height="15" fill="rgb(242,9,36)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="93.7365%" y="1349" width="0.0120%" height="15" fill="rgb(249,60,37)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1359.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::_{{closure}} (1 samples, 0.01%)</title><rect x="93.7365%" y="1333" width="0.0120%" height="15" fill="rgb(230,66,45)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1343.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::_{{closure}} (1 samples, 0.01%)</title><rect x="93.7365%" y="1317" width="0.0120%" height="15" fill="rgb(216,1,47)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="93.7365%" y="1301" width="0.0120%" height="15" fill="rgb(235,8,23)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1311.50"></text></g><g><title>&lt;I as polars_core::utils::IntoVec&lt;smartstring::SmartString&lt;smartstring::config::LazyCompact&gt;&gt;&gt;::into_vec::_{{closure}} (1 samples, 0.01%)</title><rect x="93.7365%" y="1285" width="0.0120%" height="15" fill="rgb(225,136,11)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1295.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="93.7365%" y="1269" width="0.0120%" height="15" fill="rgb(228,63,44)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1279.50"></text></g><g><title>&lt;smartstring::SmartString&lt;Mode&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.01%)</title><rect x="93.7365%" y="1253" width="0.0120%" height="15" fill="rgb(240,43,52)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1263.50"></text></g><g><title>smartstring::SmartString&lt;Mode&gt;::from_inline (1 samples, 0.01%)</title><rect x="93.7365%" y="1237" width="0.0120%" height="15" fill="rgb(217,167,36)" fg:x="7797" fg:w="1"/><text x="93.9865%" y="1247.50"></text></g><g><title>polars_core::frame::DataFrame::select_series (3 samples, 0.04%)</title><rect x="93.7245%" y="1509" width="0.0361%" height="15" fill="rgb(250,19,6)" fg:x="7796" fg:w="3"/><text x="93.9745%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smartstring::SmartString&lt;smartstring::config::LazyCompact&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.7485%" y="1493" width="0.0120%" height="15" fill="rgb(236,60,51)" fg:x="7798" fg:w="1"/><text x="93.9985%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="93.7485%" y="1477" width="0.0120%" height="15" fill="rgb(222,217,20)" fg:x="7798" fg:w="1"/><text x="93.9985%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smartstring::SmartString&lt;smartstring::config::LazyCompact&gt;]&gt; (1 samples, 0.01%)</title><rect x="93.7485%" y="1461" width="0.0120%" height="15" fill="rgb(242,65,52)" fg:x="7798" fg:w="1"/><text x="93.9985%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;smartstring::SmartString&lt;smartstring::config::LazyCompact&gt;&gt; (1 samples, 0.01%)</title><rect x="93.7485%" y="1445" width="0.0120%" height="15" fill="rgb(217,5,41)" fg:x="7798" fg:w="1"/><text x="93.9985%" y="1455.50"></text></g><g><title>&lt;smartstring::SmartString&lt;Mode&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="93.7485%" y="1429" width="0.0120%" height="15" fill="rgb(223,208,53)" fg:x="7798" fg:w="1"/><text x="93.9985%" y="1439.50"></text></g><g><title>smartstring::SmartString&lt;Mode&gt;::cast_mut (1 samples, 0.01%)</title><rect x="93.7485%" y="1413" width="0.0120%" height="15" fill="rgb(221,104,30)" fg:x="7798" fg:w="1"/><text x="93.9985%" y="1423.50"></text></g><g><title>smartstring::SmartString&lt;Mode&gt;::discriminant (1 samples, 0.01%)</title><rect x="93.7485%" y="1397" width="0.0120%" height="15" fill="rgb(230,210,42)" fg:x="7798" fg:w="1"/><text x="93.9985%" y="1407.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="93.8687%" y="1413" width="0.0240%" height="15" fill="rgb(206,205,27)" fg:x="7808" fg:w="2"/><text x="94.1187%" y="1423.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.8687%" y="1397" width="0.0240%" height="15" fill="rgb(233,114,38)" fg:x="7808" fg:w="2"/><text x="94.1187%" y="1407.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="93.8687%" y="1381" width="0.0240%" height="15" fill="rgb(216,174,36)" fg:x="7808" fg:w="2"/><text x="94.1187%" y="1391.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install (15 samples, 0.18%)</title><rect x="93.7605%" y="1509" width="0.1803%" height="15" fill="rgb(211,30,9)" fg:x="7799" fg:w="15"/><text x="94.0105%" y="1519.50"></text></g><g><title>rayon_core::registry::Registry::in_worker (15 samples, 0.18%)</title><rect x="93.7605%" y="1493" width="0.1803%" height="15" fill="rgb(216,8,21)" fg:x="7799" fg:w="15"/><text x="94.0105%" y="1503.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold (15 samples, 0.18%)</title><rect x="93.7605%" y="1477" width="0.1803%" height="15" fill="rgb(237,209,39)" fg:x="7799" fg:w="15"/><text x="94.0105%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.18%)</title><rect x="93.7605%" y="1461" width="0.1803%" height="15" fill="rgb(235,111,47)" fg:x="7799" fg:w="15"/><text x="94.0105%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.18%)</title><rect x="93.7605%" y="1445" width="0.1803%" height="15" fill="rgb(216,139,9)" fg:x="7799" fg:w="15"/><text x="94.0105%" y="1455.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}} (15 samples, 0.18%)</title><rect x="93.7605%" y="1429" width="0.1803%" height="15" fill="rgb(248,185,4)" fg:x="7799" fg:w="15"/><text x="94.0105%" y="1439.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::into_result (4 samples, 0.05%)</title><rect x="93.8928%" y="1413" width="0.0481%" height="15" fill="rgb(239,185,25)" fg:x="7810" fg:w="4"/><text x="94.1428%" y="1423.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::into_return_value (4 samples, 0.05%)</title><rect x="93.8928%" y="1397" width="0.0481%" height="15" fill="rgb(233,207,8)" fg:x="7810" fg:w="4"/><text x="94.1428%" y="1407.50"></text></g><g><title>rust_decimal::decimal::Decimal::flags (1 samples, 0.01%)</title><rect x="93.9529%" y="1445" width="0.0120%" height="15" fill="rgb(249,220,24)" fg:x="7815" fg:w="1"/><text x="94.2029%" y="1455.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Add for rust_decimal::decimal::Decimal&gt;::add (3 samples, 0.04%)</title><rect x="93.9409%" y="1509" width="0.0361%" height="15" fill="rgb(221,50,14)" fg:x="7814" fg:w="3"/><text x="94.1909%" y="1519.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Add&lt;&amp;rust_decimal::decimal::Decimal&gt; for &amp;rust_decimal::decimal::Decimal&gt;::add (3 samples, 0.04%)</title><rect x="93.9409%" y="1493" width="0.0361%" height="15" fill="rgb(227,79,42)" fg:x="7814" fg:w="3"/><text x="94.1909%" y="1503.50"></text></g><g><title>rust_decimal::ops::add::add_impl (3 samples, 0.04%)</title><rect x="93.9409%" y="1477" width="0.0361%" height="15" fill="rgb(228,218,49)" fg:x="7814" fg:w="3"/><text x="94.1909%" y="1487.50"></text></g><g><title>rust_decimal::ops::add::add_sub_internal (3 samples, 0.04%)</title><rect x="93.9409%" y="1461" width="0.0361%" height="15" fill="rgb(249,18,15)" fg:x="7814" fg:w="3"/><text x="94.1909%" y="1471.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="93.9649%" y="1445" width="0.0120%" height="15" fill="rgb(212,84,27)" fg:x="7816" fg:w="1"/><text x="94.2149%" y="1455.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Mul for rust_decimal::decimal::Decimal&gt;::mul (2 samples, 0.02%)</title><rect x="93.9769%" y="1509" width="0.0240%" height="15" fill="rgb(207,83,24)" fg:x="7817" fg:w="2"/><text x="94.2269%" y="1519.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Mul&lt;&amp;rust_decimal::decimal::Decimal&gt; for &amp;rust_decimal::decimal::Decimal&gt;::mul (2 samples, 0.02%)</title><rect x="93.9769%" y="1493" width="0.0240%" height="15" fill="rgb(219,61,7)" fg:x="7817" fg:w="2"/><text x="94.2269%" y="1503.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Sub for rust_decimal::decimal::Decimal&gt;::sub (2 samples, 0.02%)</title><rect x="94.0010%" y="1509" width="0.0240%" height="15" fill="rgb(211,43,29)" fg:x="7819" fg:w="2"/><text x="94.2510%" y="1519.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Sub&lt;&amp;rust_decimal::decimal::Decimal&gt; for &amp;rust_decimal::decimal::Decimal&gt;::sub (2 samples, 0.02%)</title><rect x="94.0010%" y="1493" width="0.0240%" height="15" fill="rgb(243,15,23)" fg:x="7819" fg:w="2"/><text x="94.2510%" y="1503.50"></text></g><g><title>rust_decimal::ops::add::sub_impl (2 samples, 0.02%)</title><rect x="94.0010%" y="1477" width="0.0240%" height="15" fill="rgb(217,52,28)" fg:x="7819" fg:w="2"/><text x="94.2510%" y="1487.50"></text></g><g><title>rust_decimal::ops::add::add_sub_internal (2 samples, 0.02%)</title><rect x="94.0010%" y="1461" width="0.0240%" height="15" fill="rgb(210,35,6)" fg:x="7819" fg:w="2"/><text x="94.2510%" y="1471.50"></text></g><g><title>rust_decimal::decimal::Decimal::flags (1 samples, 0.01%)</title><rect x="94.0130%" y="1445" width="0.0120%" height="15" fill="rgb(237,187,28)" fg:x="7820" fg:w="1"/><text x="94.2630%" y="1455.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="94.0250%" y="1509" width="0.0120%" height="15" fill="rgb(231,136,24)" fg:x="7821" fg:w="1"/><text x="94.2750%" y="1519.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Add for rust_decimal::decimal::Decimal&gt;::add (1 samples, 0.01%)</title><rect x="94.1212%" y="1461" width="0.0120%" height="15" fill="rgb(205,176,52)" fg:x="7829" fg:w="1"/><text x="94.3712%" y="1471.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Add&lt;&amp;rust_decimal::decimal::Decimal&gt; for &amp;rust_decimal::decimal::Decimal&gt;::add (1 samples, 0.01%)</title><rect x="94.1212%" y="1445" width="0.0120%" height="15" fill="rgb(218,65,12)" fg:x="7829" fg:w="1"/><text x="94.3712%" y="1455.50"></text></g><g><title>rust_decimal::ops::add::add_sub_internal (1 samples, 0.01%)</title><rect x="94.1212%" y="1429" width="0.0120%" height="15" fill="rgb(234,101,21)" fg:x="7829" fg:w="1"/><text x="94.3712%" y="1439.50"></text></g><g><title>smithereens::Residue::monoisotopic_mass (9 samples, 0.11%)</title><rect x="94.0370%" y="1509" width="0.1082%" height="15" fill="rgb(206,13,20)" fg:x="7822" fg:w="9"/><text x="94.2870%" y="1519.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.11%)</title><rect x="94.0370%" y="1493" width="0.1082%" height="15" fill="rgb(236,89,44)" fg:x="7822" fg:w="9"/><text x="94.2870%" y="1503.50"></text></g><g><title>smithereens::Residue::monoisotopic_mass::_{{closure}} (5 samples, 0.06%)</title><rect x="94.0851%" y="1477" width="0.0601%" height="15" fill="rgb(225,52,17)" fg:x="7826" fg:w="5"/><text x="94.3351%" y="1487.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Sub for rust_decimal::decimal::Decimal&gt;::sub (1 samples, 0.01%)</title><rect x="94.1332%" y="1461" width="0.0120%" height="15" fill="rgb(214,27,25)" fg:x="7830" fg:w="1"/><text x="94.3832%" y="1471.50"></text></g><g><title>rust_decimal::arithmetic_impls::&lt;impl core::ops::arith::Sub&lt;&amp;rust_decimal::decimal::Decimal&gt; for &amp;rust_decimal::decimal::Decimal&gt;::sub (1 samples, 0.01%)</title><rect x="94.1332%" y="1445" width="0.0120%" height="15" fill="rgb(240,141,35)" fg:x="7830" fg:w="1"/><text x="94.3832%" y="1455.50"></text></g><g><title>rust_decimal::ops::add::add_sub_internal (1 samples, 0.01%)</title><rect x="94.1332%" y="1429" width="0.0120%" height="15" fill="rgb(216,126,3)" fg:x="7830" fg:w="1"/><text x="94.3832%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="94.1452%" y="1445" width="0.0120%" height="15" fill="rgb(249,196,23)" fg:x="7831" fg:w="1"/><text x="94.3952%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="94.1452%" y="1429" width="0.0120%" height="15" fill="rgb(215,185,43)" fg:x="7831" fg:w="1"/><text x="94.3952%" y="1439.50"></text></g><g><title>smithereens::Residue::new (2 samples, 0.02%)</title><rect x="94.1452%" y="1509" width="0.0240%" height="15" fill="rgb(208,194,36)" fg:x="7831" fg:w="2"/><text x="94.3952%" y="1519.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="94.1452%" y="1493" width="0.0240%" height="15" fill="rgb(245,182,12)" fg:x="7831" fg:w="2"/><text x="94.3952%" y="1503.50"></text></g><g><title>&lt;smithereens::Residue as core::convert::From&lt;&amp;(char,core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;::from (2 samples, 0.02%)</title><rect x="94.1452%" y="1477" width="0.0240%" height="15" fill="rgb(244,222,52)" fg:x="7831" fg:w="2"/><text x="94.3952%" y="1487.50"></text></g><g><title>&lt;smithereens::Residue as core::convert::From&lt;(&amp;char,&amp;core::option::Option&lt;alloc::vec::Vec&lt;smithereens::parser::Modification&gt;&gt;)&gt;&gt;::from (2 samples, 0.02%)</title><rect x="94.1452%" y="1461" width="0.0240%" height="15" fill="rgb(236,222,51)" fg:x="7831" fg:w="2"/><text x="94.3952%" y="1471.50"></text></g><g><title>phf::map::Map&lt;K,V&gt;::get (1 samples, 0.01%)</title><rect x="94.1572%" y="1445" width="0.0120%" height="15" fill="rgb(254,71,22)" fg:x="7832" fg:w="1"/><text x="94.4072%" y="1455.50"></text></g><g><title>phf::map::Map&lt;K,V&gt;::get_entry (1 samples, 0.01%)</title><rect x="94.1572%" y="1429" width="0.0120%" height="15" fill="rgb(250,104,15)" fg:x="7832" fg:w="1"/><text x="94.4072%" y="1439.50"></text></g><g><title>phf_shared::get_index (1 samples, 0.01%)</title><rect x="94.1572%" y="1413" width="0.0120%" height="15" fill="rgb(229,223,46)" fg:x="7832" fg:w="1"/><text x="94.4072%" y="1423.50"></text></g><g><title>phf_shared::displace (1 samples, 0.01%)</title><rect x="94.1572%" y="1397" width="0.0120%" height="15" fill="rgb(209,129,18)" fg:x="7832" fg:w="1"/><text x="94.4072%" y="1407.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u32&gt; as core::ops::arith::Add&gt;::add (1 samples, 0.01%)</title><rect x="94.1572%" y="1381" width="0.0120%" height="15" fill="rgb(224,160,1)" fg:x="7832" fg:w="1"/><text x="94.4072%" y="1391.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="94.1572%" y="1365" width="0.0120%" height="15" fill="rgb(237,112,21)" fg:x="7832" fg:w="1"/><text x="94.4072%" y="1375.50"></text></g><g><title>&lt;petgraph::graph_impl::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="94.1813%" y="1397" width="0.0120%" height="15" fill="rgb(215,198,53)" fg:x="7834" fg:w="1"/><text x="94.4313%" y="1407.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (1 samples, 0.01%)</title><rect x="94.1813%" y="1381" width="0.0120%" height="15" fill="rgb(218,227,35)" fg:x="7834" fg:w="1"/><text x="94.4313%" y="1391.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1 samples, 0.01%)</title><rect x="94.1813%" y="1365" width="0.0120%" height="15" fill="rgb(232,121,22)" fg:x="7834" fg:w="1"/><text x="94.4313%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.04%)</title><rect x="94.1693%" y="1493" width="0.0361%" height="15" fill="rgb(235,52,54)" fg:x="7833" fg:w="3"/><text x="94.4193%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="94.1693%" y="1477" width="0.0361%" height="15" fill="rgb(219,21,44)" fg:x="7833" fg:w="3"/><text x="94.4193%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="94.1693%" y="1461" width="0.0361%" height="15" fill="rgb(221,51,43)" fg:x="7833" fg:w="3"/><text x="94.4193%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="94.1813%" y="1445" width="0.0240%" height="15" fill="rgb(225,77,42)" fg:x="7834" fg:w="2"/><text x="94.4313%" y="1455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.02%)</title><rect x="94.1813%" y="1429" width="0.0240%" height="15" fill="rgb(214,117,53)" fg:x="7834" fg:w="2"/><text x="94.4313%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="94.1813%" y="1413" width="0.0240%" height="15" fill="rgb(218,227,27)" fg:x="7834" fg:w="2"/><text x="94.4313%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.01%)</title><rect x="94.1933%" y="1397" width="0.0120%" height="15" fill="rgb(223,214,36)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="94.1933%" y="1381" width="0.0120%" height="15" fill="rgb(235,21,7)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1391.50"></text></g><g><title>smithereens::expand_from::_{{closure}} (1 samples, 0.01%)</title><rect x="94.1933%" y="1365" width="0.0120%" height="15" fill="rgb(244,216,4)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1375.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.01%)</title><rect x="94.1933%" y="1349" width="0.0120%" height="15" fill="rgb(249,197,24)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1359.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.01%)</title><rect x="94.1933%" y="1333" width="0.0120%" height="15" fill="rgb(222,169,49)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="94.1933%" y="1317" width="0.0120%" height="15" fill="rgb(207,137,33)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1327.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (1 samples, 0.01%)</title><rect x="94.1933%" y="1301" width="0.0120%" height="15" fill="rgb(219,180,40)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1311.50"></text></g><g><title>&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="94.1933%" y="1285" width="0.0120%" height="15" fill="rgb(250,163,42)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1295.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (1 samples, 0.01%)</title><rect x="94.1933%" y="1269" width="0.0120%" height="15" fill="rgb(239,163,0)" fg:x="7835" fg:w="1"/><text x="94.4433%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="94.2053%" y="1493" width="0.0120%" height="15" fill="rgb(252,38,28)" fg:x="7836" fg:w="1"/><text x="94.4553%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="94.2174%" y="1445" width="0.0120%" height="15" fill="rgb(254,203,26)" fg:x="7837" fg:w="1"/><text x="94.4674%" y="1455.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="94.2174%" y="1429" width="0.0120%" height="15" fill="rgb(209,129,32)" fg:x="7837" fg:w="1"/><text x="94.4674%" y="1439.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="94.2174%" y="1413" width="0.0120%" height="15" fill="rgb(207,177,52)" fg:x="7837" fg:w="1"/><text x="94.4674%" y="1423.50"></text></g><g><title>smithereens::expand_from (6 samples, 0.07%)</title><rect x="94.1693%" y="1509" width="0.0721%" height="15" fill="rgb(230,209,36)" fg:x="7833" fg:w="6"/><text x="94.4193%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="94.2174%" y="1493" width="0.0240%" height="15" fill="rgb(238,131,0)" fg:x="7837" fg:w="2"/><text x="94.4674%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="94.2174%" y="1477" width="0.0240%" height="15" fill="rgb(218,61,31)" fg:x="7837" fg:w="2"/><text x="94.4674%" y="1487.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="94.2174%" y="1461" width="0.0240%" height="15" fill="rgb(232,6,53)" fg:x="7837" fg:w="2"/><text x="94.4674%" y="1471.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="94.2294%" y="1445" width="0.0120%" height="15" fill="rgb(254,100,32)" fg:x="7838" fg:w="1"/><text x="94.4794%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.04%)</title><rect x="94.2654%" y="1253" width="0.0361%" height="15" fill="rgb(229,194,49)" fg:x="7841" fg:w="3"/><text x="94.5154%" y="1263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="94.2895%" y="1237" width="0.0120%" height="15" fill="rgb(206,208,39)" fg:x="7843" fg:w="1"/><text x="94.5395%" y="1247.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="94.2414%" y="1365" width="0.0721%" height="15" fill="rgb(246,226,14)" fg:x="7839" fg:w="6"/><text x="94.4914%" y="1375.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="94.2414%" y="1349" width="0.0721%" height="15" fill="rgb(226,48,32)" fg:x="7839" fg:w="6"/><text x="94.4914%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (5 samples, 0.06%)</title><rect x="94.2534%" y="1333" width="0.0601%" height="15" fill="rgb(252,43,54)" fg:x="7840" fg:w="5"/><text x="94.5034%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_u32 (5 samples, 0.06%)</title><rect x="94.2534%" y="1317" width="0.0601%" height="15" fill="rgb(207,124,0)" fg:x="7840" fg:w="5"/><text x="94.5034%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="94.2534%" y="1301" width="0.0601%" height="15" fill="rgb(248,188,30)" fg:x="7840" fg:w="5"/><text x="94.5034%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="94.2534%" y="1285" width="0.0601%" height="15" fill="rgb(232,14,43)" fg:x="7840" fg:w="5"/><text x="94.5034%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.06%)</title><rect x="94.2534%" y="1269" width="0.0601%" height="15" fill="rgb(218,52,29)" fg:x="7840" fg:w="5"/><text x="94.5034%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="94.3015%" y="1253" width="0.0120%" height="15" fill="rgb(218,176,50)" fg:x="7844" fg:w="1"/><text x="94.5515%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="94.2414%" y="1429" width="0.0842%" height="15" fill="rgb(213,112,0)" fg:x="7839" fg:w="7"/><text x="94.4914%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.08%)</title><rect x="94.2414%" y="1413" width="0.0842%" height="15" fill="rgb(244,216,8)" fg:x="7839" fg:w="7"/><text x="94.4914%" y="1423.50"></text></g><g><title>core::hash::Hash::hash_slice (7 samples, 0.08%)</title><rect x="94.2414%" y="1397" width="0.0842%" height="15" fill="rgb(224,148,53)" fg:x="7839" fg:w="7"/><text x="94.4914%" y="1407.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (7 samples, 0.08%)</title><rect x="94.2414%" y="1381" width="0.0842%" height="15" fill="rgb(241,133,40)" fg:x="7839" fg:w="7"/><text x="94.4914%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="94.3135%" y="1365" width="0.0120%" height="15" fill="rgb(232,17,44)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1375.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="94.3135%" y="1349" width="0.0120%" height="15" fill="rgb(213,32,25)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1359.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="94.3135%" y="1333" width="0.0120%" height="15" fill="rgb(249,115,27)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.3135%" y="1317" width="0.0120%" height="15" fill="rgb(241,50,1)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.3135%" y="1301" width="0.0120%" height="15" fill="rgb(244,175,40)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1311.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="94.3135%" y="1285" width="0.0120%" height="15" fill="rgb(230,94,34)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1295.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="94.3135%" y="1269" width="0.0120%" height="15" fill="rgb(223,185,29)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1279.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="94.3135%" y="1253" width="0.0120%" height="15" fill="rgb(225,193,15)" fg:x="7845" fg:w="1"/><text x="94.5635%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4 samples, 0.05%)</title><rect x="94.3496%" y="1397" width="0.0481%" height="15" fill="rgb(252,121,38)" fg:x="7848" fg:w="4"/><text x="94.5996%" y="1407.50"></text></g><g><title>core::hash::Hasher::write_u32 (4 samples, 0.05%)</title><rect x="94.3496%" y="1381" width="0.0481%" height="15" fill="rgb(232,44,12)" fg:x="7848" fg:w="4"/><text x="94.5996%" y="1391.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="94.3496%" y="1365" width="0.0481%" height="15" fill="rgb(226,45,54)" fg:x="7848" fg:w="4"/><text x="94.5996%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="94.3496%" y="1349" width="0.0481%" height="15" fill="rgb(209,67,17)" fg:x="7848" fg:w="4"/><text x="94.5996%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="94.3496%" y="1333" width="0.0481%" height="15" fill="rgb(219,108,52)" fg:x="7848" fg:w="4"/><text x="94.5996%" y="1343.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="94.3857%" y="1317" width="0.0120%" height="15" fill="rgb(216,118,19)" fg:x="7851" fg:w="1"/><text x="94.6357%" y="1327.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="94.4097%" y="1381" width="0.0120%" height="15" fill="rgb(228,120,40)" fg:x="7853" fg:w="1"/><text x="94.6597%" y="1391.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (11 samples, 0.13%)</title><rect x="94.3256%" y="1413" width="0.1322%" height="15" fill="rgb(221,218,34)" fg:x="7846" fg:w="11"/><text x="94.5756%" y="1423.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (5 samples, 0.06%)</title><rect x="94.3977%" y="1397" width="0.0601%" height="15" fill="rgb(235,89,14)" fg:x="7852" fg:w="5"/><text x="94.6477%" y="1407.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (3 samples, 0.04%)</title><rect x="94.4217%" y="1381" width="0.0361%" height="15" fill="rgb(248,89,7)" fg:x="7854" fg:w="3"/><text x="94.6717%" y="1391.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="94.4578%" y="1333" width="0.0240%" height="15" fill="rgb(212,114,34)" fg:x="7857" fg:w="2"/><text x="94.7078%" y="1343.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (21 samples, 0.25%)</title><rect x="94.2414%" y="1445" width="0.2525%" height="15" fill="rgb(246,88,32)" fg:x="7839" fg:w="21"/><text x="94.4914%" y="1455.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (14 samples, 0.17%)</title><rect x="94.3256%" y="1429" width="0.1683%" height="15" fill="rgb(237,135,0)" fg:x="7846" fg:w="14"/><text x="94.5756%" y="1439.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="94.4578%" y="1413" width="0.0361%" height="15" fill="rgb(220,201,54)" fg:x="7857" fg:w="3"/><text x="94.7078%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="94.4578%" y="1397" width="0.0361%" height="15" fill="rgb(210,142,36)" fg:x="7857" fg:w="3"/><text x="94.7078%" y="1407.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.4578%" y="1381" width="0.0361%" height="15" fill="rgb(247,189,26)" fg:x="7857" fg:w="3"/><text x="94.7078%" y="1391.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.4578%" y="1365" width="0.0361%" height="15" fill="rgb(223,89,24)" fg:x="7857" fg:w="3"/><text x="94.7078%" y="1375.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.4578%" y="1349" width="0.0361%" height="15" fill="rgb(205,90,19)" fg:x="7857" fg:w="3"/><text x="94.7078%" y="1359.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="94.4818%" y="1333" width="0.0120%" height="15" fill="rgb(234,57,40)" fg:x="7859" fg:w="1"/><text x="94.7318%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="94.4939%" y="1445" width="0.0120%" height="15" fill="rgb(213,109,10)" fg:x="7860" fg:w="1"/><text x="94.7439%" y="1455.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="94.4939%" y="1429" width="0.0120%" height="15" fill="rgb(214,189,23)" fg:x="7860" fg:w="1"/><text x="94.7439%" y="1439.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="94.4939%" y="1413" width="0.0120%" height="15" fill="rgb(234,200,10)" fg:x="7860" fg:w="1"/><text x="94.7439%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::InsertionHole&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="94.4939%" y="1397" width="0.0120%" height="15" fill="rgb(221,148,16)" fg:x="7860" fg:w="1"/><text x="94.7439%" y="1407.50"></text></g><g><title>&lt;core::slice::sort::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.4939%" y="1381" width="0.0120%" height="15" fill="rgb(230,115,10)" fg:x="7860" fg:w="1"/><text x="94.7439%" y="1391.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="94.4939%" y="1365" width="0.0120%" height="15" fill="rgb(220,106,42)" fg:x="7860" fg:w="1"/><text x="94.7439%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="94.5059%" y="1445" width="0.0120%" height="15" fill="rgb(225,105,39)" fg:x="7861" fg:w="1"/><text x="94.7559%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="94.5059%" y="1429" width="0.0120%" height="15" fill="rgb(211,161,38)" fg:x="7861" fg:w="1"/><text x="94.7559%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="94.5059%" y="1413" width="0.0120%" height="15" fill="rgb(213,23,19)" fg:x="7861" fg:w="1"/><text x="94.7559%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="94.5059%" y="1397" width="0.0120%" height="15" fill="rgb(240,2,33)" fg:x="7861" fg:w="1"/><text x="94.7559%" y="1407.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="94.5059%" y="1381" width="0.0120%" height="15" fill="rgb(221,29,45)" fg:x="7861" fg:w="1"/><text x="94.7559%" y="1391.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.29%)</title><rect x="94.2414%" y="1477" width="0.2885%" height="15" fill="rgb(242,10,19)" fg:x="7839" fg:w="24"/><text x="94.4914%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.29%)</title><rect x="94.2414%" y="1461" width="0.2885%" height="15" fill="rgb(250,84,37)" fg:x="7839" fg:w="24"/><text x="94.4914%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="94.5179%" y="1445" width="0.0120%" height="15" fill="rgb(214,136,7)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="94.5179%" y="1429" width="0.0120%" height="15" fill="rgb(231,189,12)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="94.5179%" y="1413" width="0.0120%" height="15" fill="rgb(244,40,16)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="94.5179%" y="1397" width="0.0120%" height="15" fill="rgb(217,29,15)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.5179%" y="1381" width="0.0120%" height="15" fill="rgb(235,172,33)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="94.5179%" y="1365" width="0.0120%" height="15" fill="rgb(206,148,28)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="94.5179%" y="1349" width="0.0120%" height="15" fill="rgb(251,167,37)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1359.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="94.5179%" y="1333" width="0.0120%" height="15" fill="rgb(229,94,52)" fg:x="7862" fg:w="1"/><text x="94.7679%" y="1343.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="94.5420%" y="1333" width="0.0120%" height="15" fill="rgb(216,132,9)" fg:x="7864" fg:w="1"/><text x="94.7920%" y="1343.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="94.5540%" y="1221" width="0.0120%" height="15" fill="rgb(208,110,29)" fg:x="7865" fg:w="1"/><text x="94.8040%" y="1231.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="94.5540%" y="1205" width="0.0120%" height="15" fill="rgb(241,23,8)" fg:x="7865" fg:w="1"/><text x="94.8040%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.5540%" y="1189" width="0.0120%" height="15" fill="rgb(208,26,35)" fg:x="7865" fg:w="1"/><text x="94.8040%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.5540%" y="1173" width="0.0120%" height="15" fill="rgb(242,165,34)" fg:x="7865" fg:w="1"/><text x="94.8040%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="94.5540%" y="1157" width="0.0120%" height="15" fill="rgb(222,222,33)" fg:x="7865" fg:w="1"/><text x="94.8040%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="94.5540%" y="1141" width="0.0120%" height="15" fill="rgb(227,16,52)" fg:x="7865" fg:w="1"/><text x="94.8040%" y="1151.50"></text></g><g><title>rust_decimal::decimal::Decimal::is_zero (1 samples, 0.01%)</title><rect x="94.5660%" y="1205" width="0.0120%" height="15" fill="rgb(213,93,12)" fg:x="7866" fg:w="1"/><text x="94.8160%" y="1215.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="94.5540%" y="1237" width="0.0361%" height="15" fill="rgb(238,41,5)" fg:x="7865" fg:w="3"/><text x="94.8040%" y="1247.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (2 samples, 0.02%)</title><rect x="94.5660%" y="1221" width="0.0240%" height="15" fill="rgb(211,60,15)" fg:x="7866" fg:w="2"/><text x="94.8160%" y="1231.50"></text></g><g><title>rust_decimal::ops::array::div_by_u32 (1 samples, 0.01%)</title><rect x="94.5780%" y="1205" width="0.0120%" height="15" fill="rgb(209,11,34)" fg:x="7867" fg:w="1"/><text x="94.8280%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="94.5900%" y="1157" width="0.0240%" height="15" fill="rgb(254,155,53)" fg:x="7868" fg:w="2"/><text x="94.8400%" y="1167.50"></text></g><g><title>core::hash::Hash::hash_slice (6 samples, 0.07%)</title><rect x="94.5540%" y="1285" width="0.0721%" height="15" fill="rgb(236,174,8)" fg:x="7865" fg:w="6"/><text x="94.8040%" y="1295.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="94.5540%" y="1269" width="0.0721%" height="15" fill="rgb(229,31,27)" fg:x="7865" fg:w="6"/><text x="94.8040%" y="1279.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="94.5540%" y="1253" width="0.0721%" height="15" fill="rgb(242,226,26)" fg:x="7865" fg:w="6"/><text x="94.8040%" y="1263.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="94.5900%" y="1237" width="0.0361%" height="15" fill="rgb(234,32,40)" fg:x="7868" fg:w="3"/><text x="94.8400%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="94.5900%" y="1221" width="0.0361%" height="15" fill="rgb(249,226,47)" fg:x="7868" fg:w="3"/><text x="94.8400%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.5900%" y="1205" width="0.0361%" height="15" fill="rgb(212,6,26)" fg:x="7868" fg:w="3"/><text x="94.8400%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.5900%" y="1189" width="0.0361%" height="15" fill="rgb(249,202,29)" fg:x="7868" fg:w="3"/><text x="94.8400%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.5900%" y="1173" width="0.0361%" height="15" fill="rgb(226,106,4)" fg:x="7868" fg:w="3"/><text x="94.8400%" y="1183.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="94.6141%" y="1157" width="0.0120%" height="15" fill="rgb(251,2,27)" fg:x="7870" fg:w="1"/><text x="94.8641%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="94.6381%" y="1221" width="0.0120%" height="15" fill="rgb(236,208,0)" fg:x="7872" fg:w="1"/><text x="94.8881%" y="1231.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="94.6381%" y="1205" width="0.0120%" height="15" fill="rgb(211,66,17)" fg:x="7872" fg:w="1"/><text x="94.8881%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.12%)</title><rect x="94.5540%" y="1317" width="0.1202%" height="15" fill="rgb(216,129,9)" fg:x="7865" fg:w="10"/><text x="94.8040%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 0.12%)</title><rect x="94.5540%" y="1301" width="0.1202%" height="15" fill="rgb(215,130,23)" fg:x="7865" fg:w="10"/><text x="94.8040%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (4 samples, 0.05%)</title><rect x="94.6261%" y="1285" width="0.0481%" height="15" fill="rgb(253,157,11)" fg:x="7871" fg:w="4"/><text x="94.8761%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.05%)</title><rect x="94.6261%" y="1269" width="0.0481%" height="15" fill="rgb(224,25,14)" fg:x="7871" fg:w="4"/><text x="94.8761%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="94.6261%" y="1253" width="0.0481%" height="15" fill="rgb(238,16,7)" fg:x="7871" fg:w="4"/><text x="94.8761%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="94.6261%" y="1237" width="0.0481%" height="15" fill="rgb(228,74,11)" fg:x="7871" fg:w="4"/><text x="94.8761%" y="1247.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="94.6502%" y="1221" width="0.0240%" height="15" fill="rgb(239,221,27)" fg:x="7873" fg:w="2"/><text x="94.9002%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="94.7223%" y="1205" width="0.0240%" height="15" fill="rgb(229,166,18)" fg:x="7879" fg:w="2"/><text x="94.9723%" y="1215.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="94.7343%" y="1189" width="0.0120%" height="15" fill="rgb(254,94,46)" fg:x="7880" fg:w="1"/><text x="94.9843%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8 samples, 0.10%)</title><rect x="94.6742%" y="1285" width="0.0962%" height="15" fill="rgb(241,79,19)" fg:x="7875" fg:w="8"/><text x="94.9242%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_u32 (8 samples, 0.10%)</title><rect x="94.6742%" y="1269" width="0.0962%" height="15" fill="rgb(228,99,51)" fg:x="7875" fg:w="8"/><text x="94.9242%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="94.6742%" y="1253" width="0.0962%" height="15" fill="rgb(211,15,6)" fg:x="7875" fg:w="8"/><text x="94.9242%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="94.6742%" y="1237" width="0.0962%" height="15" fill="rgb(245,107,54)" fg:x="7875" fg:w="8"/><text x="94.9242%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.10%)</title><rect x="94.6742%" y="1221" width="0.0962%" height="15" fill="rgb(243,3,2)" fg:x="7875" fg:w="8"/><text x="94.9242%" y="1231.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="94.7463%" y="1205" width="0.0240%" height="15" fill="rgb(206,122,10)" fg:x="7881" fg:w="2"/><text x="94.9963%" y="1215.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="94.7584%" y="1189" width="0.0120%" height="15" fill="rgb(224,88,4)" fg:x="7882" fg:w="1"/><text x="95.0084%" y="1199.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="94.6742%" y="1301" width="0.1082%" height="15" fill="rgb(230,1,41)" fg:x="7875" fg:w="9"/><text x="94.9242%" y="1311.50"></text></g><g><title>rust_decimal::decimal::Decimal::normalize_assign (1 samples, 0.01%)</title><rect x="94.7704%" y="1285" width="0.0120%" height="15" fill="rgb(230,1,31)" fg:x="7883" fg:w="1"/><text x="95.0204%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="94.7824%" y="1221" width="0.0120%" height="15" fill="rgb(232,67,19)" fg:x="7884" fg:w="1"/><text x="95.0324%" y="1231.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="94.7944%" y="1221" width="0.0120%" height="15" fill="rgb(222,206,20)" fg:x="7885" fg:w="1"/><text x="95.0444%" y="1231.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="94.7944%" y="1205" width="0.0120%" height="15" fill="rgb(217,225,19)" fg:x="7885" fg:w="1"/><text x="95.0444%" y="1215.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.01%)</title><rect x="94.7944%" y="1189" width="0.0120%" height="15" fill="rgb(234,13,33)" fg:x="7885" fg:w="1"/><text x="95.0444%" y="1199.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (22 samples, 0.26%)</title><rect x="94.5540%" y="1333" width="0.2645%" height="15" fill="rgb(254,5,1)" fg:x="7865" fg:w="22"/><text x="94.8040%" y="1343.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (12 samples, 0.14%)</title><rect x="94.6742%" y="1317" width="0.1443%" height="15" fill="rgb(211,121,41)" fg:x="7875" fg:w="12"/><text x="94.9242%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="94.7824%" y="1301" width="0.0361%" height="15" fill="rgb(213,199,35)" fg:x="7884" fg:w="3"/><text x="95.0324%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="94.7824%" y="1285" width="0.0361%" height="15" fill="rgb(240,118,22)" fg:x="7884" fg:w="3"/><text x="95.0324%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.7824%" y="1269" width="0.0361%" height="15" fill="rgb(238,184,25)" fg:x="7884" fg:w="3"/><text x="95.0324%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.7824%" y="1253" width="0.0361%" height="15" fill="rgb(210,165,6)" fg:x="7884" fg:w="3"/><text x="95.0324%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="94.7824%" y="1237" width="0.0361%" height="15" fill="rgb(235,149,5)" fg:x="7884" fg:w="3"/><text x="95.0324%" y="1247.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="94.8064%" y="1221" width="0.0120%" height="15" fill="rgb(221,63,5)" fg:x="7886" fg:w="1"/><text x="95.0564%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="94.8185%" y="1333" width="0.0120%" height="15" fill="rgb(250,44,41)" fg:x="7887" fg:w="1"/><text x="95.0685%" y="1343.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="94.8185%" y="1317" width="0.0120%" height="15" fill="rgb(235,112,47)" fg:x="7887" fg:w="1"/><text x="95.0685%" y="1327.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 0.01%)</title><rect x="94.8185%" y="1301" width="0.0120%" height="15" fill="rgb(252,176,34)" fg:x="7887" fg:w="1"/><text x="95.0685%" y="1311.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.8305%" y="1269" width="0.0120%" height="15" fill="rgb(234,50,19)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1279.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.8305%" y="1253" width="0.0120%" height="15" fill="rgb(241,195,31)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.8305%" y="1237" width="0.0120%" height="15" fill="rgb(212,93,11)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="94.8305%" y="1221" width="0.0120%" height="15" fill="rgb(254,98,51)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="94.8305%" y="1205" width="0.0120%" height="15" fill="rgb(246,18,45)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="94.8305%" y="1189" width="0.0120%" height="15" fill="rgb(215,148,23)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1199.50"></text></g><g><title>&lt;smithereens::Modification as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.8305%" y="1173" width="0.0120%" height="15" fill="rgb(227,22,7)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1183.50"></text></g><g><title>&lt;smithereens::Moiety as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="94.8305%" y="1157" width="0.0120%" height="15" fill="rgb(207,210,37)" fg:x="7888" fg:w="1"/><text x="95.0805%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="94.8425%" y="1269" width="0.0120%" height="15" fill="rgb(247,147,42)" fg:x="7889" fg:w="1"/><text x="95.0925%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="94.8425%" y="1253" width="0.0120%" height="15" fill="rgb(226,213,14)" fg:x="7889" fg:w="1"/><text x="95.0925%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="94.8425%" y="1237" width="0.0120%" height="15" fill="rgb(223,18,10)" fg:x="7889" fg:w="1"/><text x="95.0925%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="94.8425%" y="1221" width="0.0120%" height="15" fill="rgb(253,34,22)" fg:x="7889" fg:w="1"/><text x="95.0925%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="94.8425%" y="1205" width="0.0120%" height="15" fill="rgb(222,90,31)" fg:x="7889" fg:w="1"/><text x="95.0925%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="94.8425%" y="1189" width="0.0120%" height="15" fill="rgb(220,182,30)" fg:x="7889" fg:w="1"/><text x="95.0925%" y="1199.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="94.8425%" y="1173" width="0.0120%" height="15" fill="rgb(229,170,12)" fg:x="7889" fg:w="1"/><text x="95.0925%" y="1183.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (29 samples, 0.35%)</title><rect x="94.5299%" y="1381" width="0.3486%" height="15" fill="rgb(210,101,21)" fg:x="7863" fg:w="29"/><text x="94.7799%" y="1391.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.35%)</title><rect x="94.5299%" y="1365" width="0.3486%" height="15" fill="rgb(237,177,31)" fg:x="7863" fg:w="29"/><text x="94.7799%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.35%)</title><rect x="94.5299%" y="1349" width="0.3486%" height="15" fill="rgb(215,91,34)" fg:x="7863" fg:w="29"/><text x="94.7799%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.05%)</title><rect x="94.8305%" y="1333" width="0.0481%" height="15" fill="rgb(229,206,16)" fg:x="7888" fg:w="4"/><text x="95.0805%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="94.8305%" y="1317" width="0.0481%" height="15" fill="rgb(235,207,10)" fg:x="7888" fg:w="4"/><text x="95.0805%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="94.8305%" y="1301" width="0.0481%" height="15" fill="rgb(247,18,10)" fg:x="7888" fg:w="4"/><text x="95.0805%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="94.8305%" y="1285" width="0.0481%" height="15" fill="rgb(232,4,6)" fg:x="7888" fg:w="4"/><text x="95.0805%" y="1295.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="94.8545%" y="1269" width="0.0240%" height="15" fill="rgb(247,93,45)" fg:x="7890" fg:w="2"/><text x="95.1045%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (30 samples, 0.36%)</title><rect x="94.5299%" y="1397" width="0.3607%" height="15" fill="rgb(240,181,18)" fg:x="7863" fg:w="30"/><text x="94.7799%" y="1407.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="94.8786%" y="1381" width="0.0120%" height="15" fill="rgb(208,224,0)" fg:x="7892" fg:w="1"/><text x="95.1286%" y="1391.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="94.8786%" y="1365" width="0.0120%" height="15" fill="rgb(224,207,54)" fg:x="7892" fg:w="1"/><text x="95.1286%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="94.8786%" y="1349" width="0.0120%" height="15" fill="rgb(217,152,29)" fg:x="7892" fg:w="1"/><text x="95.1286%" y="1359.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="94.8786%" y="1333" width="0.0120%" height="15" fill="rgb(243,78,27)" fg:x="7892" fg:w="1"/><text x="95.1286%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (1 samples, 0.01%)</title><rect x="94.8906%" y="1397" width="0.0120%" height="15" fill="rgb(228,111,9)" fg:x="7893" fg:w="1"/><text x="95.1406%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (1 samples, 0.01%)</title><rect x="94.8906%" y="1381" width="0.0120%" height="15" fill="rgb(230,213,21)" fg:x="7893" fg:w="1"/><text x="95.1406%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.01%)</title><rect x="94.8906%" y="1365" width="0.0120%" height="15" fill="rgb(248,50,36)" fg:x="7893" fg:w="1"/><text x="95.1406%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (37 samples, 0.44%)</title><rect x="94.5299%" y="1461" width="0.4448%" height="15" fill="rgb(226,19,31)" fg:x="7863" fg:w="37"/><text x="94.7799%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (37 samples, 0.44%)</title><rect x="94.5299%" y="1445" width="0.4448%" height="15" fill="rgb(205,132,21)" fg:x="7863" fg:w="37"/><text x="94.7799%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (37 samples, 0.44%)</title><rect x="94.5299%" y="1429" width="0.4448%" height="15" fill="rgb(207,42,19)" fg:x="7863" fg:w="37"/><text x="94.7799%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (37 samples, 0.44%)</title><rect x="94.5299%" y="1413" width="0.4448%" height="15" fill="rgb(229,69,35)" fg:x="7863" fg:w="37"/><text x="94.7799%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (6 samples, 0.07%)</title><rect x="94.9026%" y="1397" width="0.0721%" height="15" fill="rgb(226,96,11)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (6 samples, 0.07%)</title><rect x="94.9026%" y="1381" width="0.0721%" height="15" fill="rgb(236,133,54)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (6 samples, 0.07%)</title><rect x="94.9026%" y="1365" width="0.0721%" height="15" fill="rgb(247,166,21)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1375.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.07%)</title><rect x="94.9026%" y="1349" width="0.0721%" height="15" fill="rgb(220,132,12)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="94.9026%" y="1333" width="0.0721%" height="15" fill="rgb(233,27,30)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="94.9026%" y="1317" width="0.0721%" height="15" fill="rgb(246,161,27)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="94.9026%" y="1301" width="0.0721%" height="15" fill="rgb(240,56,3)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1311.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="94.9026%" y="1285" width="0.0721%" height="15" fill="rgb(242,190,9)" fg:x="7894" fg:w="6"/><text x="95.1526%" y="1295.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="94.9146%" y="1269" width="0.0601%" height="15" fill="rgb(234,3,52)" fg:x="7895" fg:w="5"/><text x="95.1646%" y="1279.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="94.9146%" y="1253" width="0.0601%" height="15" fill="rgb(220,221,19)" fg:x="7895" fg:w="5"/><text x="95.1646%" y="1263.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (63 samples, 0.76%)</title><rect x="94.2414%" y="1509" width="0.7574%" height="15" fill="rgb(247,178,30)" fg:x="7839" fg:w="63"/><text x="94.4914%" y="1519.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (63 samples, 0.76%)</title><rect x="94.2414%" y="1493" width="0.7574%" height="15" fill="rgb(234,212,27)" fg:x="7839" fg:w="63"/><text x="94.4914%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (39 samples, 0.47%)</title><rect x="94.5299%" y="1477" width="0.4689%" height="15" fill="rgb(226,199,38)" fg:x="7863" fg:w="39"/><text x="94.7799%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2 samples, 0.02%)</title><rect x="94.9748%" y="1461" width="0.0240%" height="15" fill="rgb(248,114,22)" fg:x="7900" fg:w="2"/><text x="95.2248%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.02%)</title><rect x="94.9748%" y="1445" width="0.0240%" height="15" fill="rgb(221,180,4)" fg:x="7900" fg:w="2"/><text x="95.2248%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="94.9748%" y="1429" width="0.0240%" height="15" fill="rgb(220,229,24)" fg:x="7900" fg:w="2"/><text x="95.2248%" y="1439.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1 samples, 0.01%)</title><rect x="94.9988%" y="1509" width="0.0120%" height="15" fill="rgb(226,184,27)" fg:x="7902" fg:w="1"/><text x="95.2488%" y="1519.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="94.9988%" y="1493" width="0.0120%" height="15" fill="rgb(232,99,15)" fg:x="7902" fg:w="1"/><text x="95.2488%" y="1503.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1 samples, 0.01%)</title><rect x="94.9988%" y="1477" width="0.0120%" height="15" fill="rgb(250,167,16)" fg:x="7902" fg:w="1"/><text x="95.2488%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="94.9988%" y="1461" width="0.0120%" height="15" fill="rgb(243,113,6)" fg:x="7902" fg:w="1"/><text x="95.2488%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="94.9988%" y="1445" width="0.0120%" height="15" fill="rgb(244,147,52)" fg:x="7902" fg:w="1"/><text x="95.2488%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1 samples, 0.01%)</title><rect x="94.9988%" y="1429" width="0.0120%" height="15" fill="rgb(235,59,50)" fg:x="7902" fg:w="1"/><text x="95.2488%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTableInner::data_end (1 samples, 0.01%)</title><rect x="94.9988%" y="1413" width="0.0120%" height="15" fill="rgb(250,188,6)" fg:x="7902" fg:w="1"/><text x="95.2488%" y="1423.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (1 samples, 0.01%)</title><rect x="95.0108%" y="1509" width="0.0120%" height="15" fill="rgb(236,173,11)" fg:x="7903" fg:w="1"/><text x="95.2608%" y="1519.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (1 samples, 0.01%)</title><rect x="95.0108%" y="1493" width="0.0120%" height="15" fill="rgb(233,64,3)" fg:x="7903" fg:w="1"/><text x="95.2608%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.0108%" y="1477" width="0.0120%" height="15" fill="rgb(207,92,7)" fg:x="7903" fg:w="1"/><text x="95.2608%" y="1487.50"></text></g><g><title>__close (1 samples, 0.01%)</title><rect x="95.0349%" y="1477" width="0.0120%" height="15" fill="rgb(221,30,19)" fg:x="7905" fg:w="1"/><text x="95.2849%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.0349%" y="1461" width="0.0120%" height="15" fill="rgb(245,22,49)" fg:x="7905" fg:w="1"/><text x="95.2849%" y="1471.50"></text></g><g><title>std::fs::File::create (3 samples, 0.04%)</title><rect x="95.0228%" y="1509" width="0.0361%" height="15" fill="rgb(218,39,20)" fg:x="7904" fg:w="3"/><text x="95.2728%" y="1519.50"></text></g><g><title>std::fs::OpenOptions::open (3 samples, 0.04%)</title><rect x="95.0228%" y="1493" width="0.0361%" height="15" fill="rgb(222,144,21)" fg:x="7904" fg:w="3"/><text x="95.2728%" y="1503.50"></text></g><g><title>open64 (1 samples, 0.01%)</title><rect x="95.0469%" y="1477" width="0.0120%" height="15" fill="rgb(222,78,51)" fg:x="7906" fg:w="1"/><text x="95.2969%" y="1487.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.01%)</title><rect x="95.0589%" y="1509" width="0.0120%" height="15" fill="rgb(248,213,53)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1519.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="95.0589%" y="1493" width="0.0120%" height="15" fill="rgb(245,28,34)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="95.0589%" y="1477" width="0.0120%" height="15" fill="rgb(229,186,26)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="95.0589%" y="1461" width="0.0120%" height="15" fill="rgb(224,0,41)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="95.0589%" y="1445" width="0.0120%" height="15" fill="rgb(223,136,51)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="95.0589%" y="1429" width="0.0120%" height="15" fill="rgb(234,50,9)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="95.0589%" y="1413" width="0.0120%" height="15" fill="rgb(242,164,20)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="95.0589%" y="1397" width="0.0120%" height="15" fill="rgb(230,169,22)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="95.0589%" y="1381" width="0.0120%" height="15" fill="rgb(228,82,26)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1391.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="95.0589%" y="1365" width="0.0120%" height="15" fill="rgb(244,220,31)" fg:x="7907" fg:w="1"/><text x="95.3089%" y="1375.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="95.0830%" y="1493" width="0.0120%" height="15" fill="rgb(214,35,25)" fg:x="7909" fg:w="1"/><text x="95.3330%" y="1503.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="95.0830%" y="1477" width="0.0120%" height="15" fill="rgb(245,162,54)" fg:x="7909" fg:w="1"/><text x="95.3330%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.0830%" y="1461" width="0.0120%" height="15" fill="rgb(210,43,24)" fg:x="7909" fg:w="1"/><text x="95.3330%" y="1471.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write (9 samples, 0.11%)</title><rect x="95.0709%" y="1509" width="0.1082%" height="15" fill="rgb(226,145,51)" fg:x="7908" fg:w="9"/><text x="95.3209%" y="1519.50"></text></g><g><title>write (7 samples, 0.08%)</title><rect x="95.0950%" y="1493" width="0.0842%" height="15" fill="rgb(237,52,53)" fg:x="7910" fg:w="7"/><text x="95.3450%" y="1503.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="95.1310%" y="1477" width="0.0481%" height="15" fill="rgb(216,226,7)" fg:x="7913" fg:w="4"/><text x="95.3810%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.1671%" y="1461" width="0.0120%" height="15" fill="rgb(206,223,18)" fg:x="7916" fg:w="1"/><text x="95.4171%" y="1471.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="95.1791%" y="1477" width="0.0120%" height="15" fill="rgb(221,1,10)" fg:x="7917" fg:w="1"/><text x="95.4291%" y="1487.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.02%)</title><rect x="95.1791%" y="1509" width="0.0240%" height="15" fill="rgb(221,151,42)" fg:x="7917" fg:w="2"/><text x="95.4291%" y="1519.50"></text></g><g><title>write (2 samples, 0.02%)</title><rect x="95.1791%" y="1493" width="0.0240%" height="15" fill="rgb(205,183,46)" fg:x="7917" fg:w="2"/><text x="95.4291%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.1912%" y="1477" width="0.0120%" height="15" fill="rgb(239,229,1)" fg:x="7918" fg:w="1"/><text x="95.4412%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.1912%" y="1461" width="0.0120%" height="15" fill="rgb(236,192,23)" fg:x="7918" fg:w="1"/><text x="95.4412%" y="1471.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="95.2032%" y="1509" width="0.0120%" height="15" fill="rgb(215,146,3)" fg:x="7919" fg:w="1"/><text x="95.4532%" y="1519.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="95.2032%" y="1493" width="0.0120%" height="15" fill="rgb(235,52,27)" fg:x="7919" fg:w="1"/><text x="95.4532%" y="1503.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.2152%" y="1461" width="0.0120%" height="15" fill="rgb(236,45,20)" fg:x="7920" fg:w="1"/><text x="95.4652%" y="1471.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.2392%" y="1381" width="0.0120%" height="15" fill="rgb(235,86,41)" fg:x="7922" fg:w="1"/><text x="95.4892%" y="1391.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="95.2392%" y="1365" width="0.0120%" height="15" fill="rgb(235,27,27)" fg:x="7922" fg:w="1"/><text x="95.4892%" y="1375.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="95.2392%" y="1349" width="0.0120%" height="15" fill="rgb(232,4,34)" fg:x="7922" fg:w="1"/><text x="95.4892%" y="1359.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="95.2392%" y="1333" width="0.0120%" height="15" fill="rgb(215,22,10)" fg:x="7922" fg:w="1"/><text x="95.4892%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="95.2513%" y="1349" width="0.0481%" height="15" fill="rgb(230,228,27)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="95.2513%" y="1333" width="0.0481%" height="15" fill="rgb(216,26,51)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="95.2513%" y="1317" width="0.0481%" height="15" fill="rgb(225,180,50)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="95.2513%" y="1301" width="0.0481%" height="15" fill="rgb(236,211,2)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="95.2513%" y="1285" width="0.0481%" height="15" fill="rgb(250,51,20)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="95.2513%" y="1269" width="0.0481%" height="15" fill="rgb(232,70,37)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="95.2513%" y="1253" width="0.0481%" height="15" fill="rgb(226,183,39)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="95.2513%" y="1237" width="0.0481%" height="15" fill="rgb(232,228,21)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="95.2513%" y="1221" width="0.0481%" height="15" fill="rgb(251,118,32)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="95.2513%" y="1205" width="0.0481%" height="15" fill="rgb(235,172,38)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1215.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="95.2513%" y="1189" width="0.0481%" height="15" fill="rgb(235,63,18)" fg:x="7923" fg:w="4"/><text x="95.5013%" y="1199.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="95.2753%" y="1173" width="0.0240%" height="15" fill="rgb(225,4,7)" fg:x="7925" fg:w="2"/><text x="95.5253%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3 samples, 0.04%)</title><rect x="95.2994%" y="1301" width="0.0361%" height="15" fill="rgb(231,61,1)" fg:x="7927" fg:w="3"/><text x="95.5494%" y="1311.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3 samples, 0.04%)</title><rect x="95.2994%" y="1285" width="0.0361%" height="15" fill="rgb(241,155,22)" fg:x="7927" fg:w="3"/><text x="95.5494%" y="1295.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="95.2994%" y="1269" width="0.0361%" height="15" fill="rgb(209,100,26)" fg:x="7927" fg:w="3"/><text x="95.5494%" y="1279.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="95.2994%" y="1253" width="0.0361%" height="15" fill="rgb(248,181,15)" fg:x="7927" fg:w="3"/><text x="95.5494%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="95.2994%" y="1349" width="0.0721%" height="15" fill="rgb(214,94,31)" fg:x="7927" fg:w="6"/><text x="95.5494%" y="1359.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="95.2994%" y="1333" width="0.0721%" height="15" fill="rgb(207,16,42)" fg:x="7927" fg:w="6"/><text x="95.5494%" y="1343.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="95.2994%" y="1317" width="0.0721%" height="15" fill="rgb(208,127,13)" fg:x="7927" fg:w="6"/><text x="95.5494%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="95.3354%" y="1301" width="0.0361%" height="15" fill="rgb(220,211,18)" fg:x="7930" fg:w="3"/><text x="95.5854%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3 samples, 0.04%)</title><rect x="95.3354%" y="1285" width="0.0361%" height="15" fill="rgb(221,55,38)" fg:x="7930" fg:w="3"/><text x="95.5854%" y="1295.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="95.3354%" y="1269" width="0.0361%" height="15" fill="rgb(252,219,45)" fg:x="7930" fg:w="3"/><text x="95.5854%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="95.3354%" y="1253" width="0.0361%" height="15" fill="rgb(248,53,35)" fg:x="7930" fg:w="3"/><text x="95.5854%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="95.3354%" y="1237" width="0.0361%" height="15" fill="rgb(210,87,2)" fg:x="7930" fg:w="3"/><text x="95.5854%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="95.3354%" y="1221" width="0.0361%" height="15" fill="rgb(239,133,9)" fg:x="7930" fg:w="3"/><text x="95.5854%" y="1231.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="95.3354%" y="1205" width="0.0361%" height="15" fill="rgb(214,114,5)" fg:x="7930" fg:w="3"/><text x="95.5854%" y="1215.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="95.3835%" y="1301" width="0.0481%" height="15" fill="rgb(206,124,24)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1311.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="95.3835%" y="1285" width="0.0481%" height="15" fill="rgb(212,57,33)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="95.3835%" y="1269" width="0.0481%" height="15" fill="rgb(246,21,20)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="95.3835%" y="1253" width="0.0481%" height="15" fill="rgb(253,210,39)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="95.3835%" y="1237" width="0.0481%" height="15" fill="rgb(209,187,24)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="95.3835%" y="1221" width="0.0481%" height="15" fill="rgb(246,136,17)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="95.3835%" y="1205" width="0.0481%" height="15" fill="rgb(211,0,30)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="95.3835%" y="1189" width="0.0481%" height="15" fill="rgb(216,199,7)" fg:x="7934" fg:w="4"/><text x="95.6335%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="95.3955%" y="1173" width="0.0361%" height="15" fill="rgb(207,210,19)" fg:x="7935" fg:w="3"/><text x="95.6455%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="95.3955%" y="1157" width="0.0361%" height="15" fill="rgb(237,187,39)" fg:x="7935" fg:w="3"/><text x="95.6455%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="95.3955%" y="1141" width="0.0361%" height="15" fill="rgb(243,194,42)" fg:x="7935" fg:w="3"/><text x="95.6455%" y="1151.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="95.3955%" y="1125" width="0.0361%" height="15" fill="rgb(225,194,19)" fg:x="7935" fg:w="3"/><text x="95.6455%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (18 samples, 0.22%)</title><rect x="95.2272%" y="1413" width="0.2164%" height="15" fill="rgb(224,192,14)" fg:x="7921" fg:w="18"/><text x="95.4772%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (18 samples, 0.22%)</title><rect x="95.2272%" y="1397" width="0.2164%" height="15" fill="rgb(252,21,18)" fg:x="7921" fg:w="18"/><text x="95.4772%" y="1407.50"></text></g><g><title>core::clone::Clone::clone (16 samples, 0.19%)</title><rect x="95.2513%" y="1381" width="0.1924%" height="15" fill="rgb(229,69,19)" fg:x="7923" fg:w="16"/><text x="95.5013%" y="1391.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (16 samples, 0.19%)</title><rect x="95.2513%" y="1365" width="0.1924%" height="15" fill="rgb(251,31,53)" fg:x="7923" fg:w="16"/><text x="95.5013%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="95.3715%" y="1349" width="0.0721%" height="15" fill="rgb(218,39,50)" fg:x="7933" fg:w="6"/><text x="95.6215%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="95.3715%" y="1333" width="0.0721%" height="15" fill="rgb(231,50,17)" fg:x="7933" fg:w="6"/><text x="95.6215%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="95.3715%" y="1317" width="0.0721%" height="15" fill="rgb(223,217,31)" fg:x="7933" fg:w="6"/><text x="95.6215%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="95.4316%" y="1301" width="0.0120%" height="15" fill="rgb(225,91,12)" fg:x="7938" fg:w="1"/><text x="95.6816%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="95.4316%" y="1285" width="0.0120%" height="15" fill="rgb(242,58,43)" fg:x="7938" fg:w="1"/><text x="95.6816%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="95.4316%" y="1269" width="0.0120%" height="15" fill="rgb(242,32,21)" fg:x="7938" fg:w="1"/><text x="95.6816%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="95.4316%" y="1253" width="0.0120%" height="15" fill="rgb(211,127,1)" fg:x="7938" fg:w="1"/><text x="95.6816%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="95.4316%" y="1237" width="0.0120%" height="15" fill="rgb(231,93,13)" fg:x="7938" fg:w="1"/><text x="95.6816%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="95.4316%" y="1221" width="0.0120%" height="15" fill="rgb(218,83,4)" fg:x="7938" fg:w="1"/><text x="95.6816%" y="1231.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="95.4316%" y="1205" width="0.0120%" height="15" fill="rgb(230,218,10)" fg:x="7938" fg:w="1"/><text x="95.6816%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (29 samples, 0.35%)</title><rect x="95.2272%" y="1461" width="0.3486%" height="15" fill="rgb(235,127,18)" fg:x="7921" fg:w="29"/><text x="95.4772%" y="1471.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.35%)</title><rect x="95.2272%" y="1445" width="0.3486%" height="15" fill="rgb(213,137,46)" fg:x="7921" fg:w="29"/><text x="95.4772%" y="1455.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.35%)</title><rect x="95.2272%" y="1429" width="0.3486%" height="15" fill="rgb(235,179,24)" fg:x="7921" fg:w="29"/><text x="95.4772%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (11 samples, 0.13%)</title><rect x="95.4436%" y="1413" width="0.1322%" height="15" fill="rgb(247,58,49)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (11 samples, 0.13%)</title><rect x="95.4436%" y="1397" width="0.1322%" height="15" fill="rgb(242,222,5)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1407.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.13%)</title><rect x="95.4436%" y="1381" width="0.1322%" height="15" fill="rgb(230,16,48)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.13%)</title><rect x="95.4436%" y="1365" width="0.1322%" height="15" fill="rgb(241,192,16)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.13%)</title><rect x="95.4436%" y="1349" width="0.1322%" height="15" fill="rgb(209,25,37)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.13%)</title><rect x="95.4436%" y="1333" width="0.1322%" height="15" fill="rgb(229,215,13)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1343.50"></text></g><g><title>malloc (11 samples, 0.13%)</title><rect x="95.4436%" y="1317" width="0.1322%" height="15" fill="rgb(213,199,8)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1327.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="95.4436%" y="1301" width="0.1322%" height="15" fill="rgb(226,151,19)" fg:x="7939" fg:w="11"/><text x="95.6936%" y="1311.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="95.4797%" y="1285" width="0.0962%" height="15" fill="rgb(254,183,12)" fg:x="7942" fg:w="8"/><text x="95.7297%" y="1295.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="95.5398%" y="1269" width="0.0361%" height="15" fill="rgb(245,8,3)" fg:x="7947" fg:w="3"/><text x="95.7898%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.5759%" y="1333" width="0.0120%" height="15" fill="rgb(229,159,35)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1343.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.5759%" y="1317" width="0.0120%" height="15" fill="rgb(209,145,1)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1327.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.5759%" y="1301" width="0.0120%" height="15" fill="rgb(228,183,16)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="95.5759%" y="1285" width="0.0120%" height="15" fill="rgb(222,68,0)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="95.5759%" y="1269" width="0.0120%" height="15" fill="rgb(209,130,50)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1279.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="95.5759%" y="1253" width="0.0120%" height="15" fill="rgb(228,176,44)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="95.5759%" y="1237" width="0.0120%" height="15" fill="rgb(221,164,2)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="95.5759%" y="1221" width="0.0120%" height="15" fill="rgb(249,199,49)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="95.5759%" y="1205" width="0.0120%" height="15" fill="rgb(228,205,53)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1215.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="95.5759%" y="1189" width="0.0120%" height="15" fill="rgb(235,77,20)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="95.5759%" y="1173" width="0.0120%" height="15" fill="rgb(227,147,34)" fg:x="7950" fg:w="1"/><text x="95.8259%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2 samples, 0.02%)</title><rect x="95.5759%" y="1397" width="0.0240%" height="15" fill="rgb(226,203,52)" fg:x="7950" fg:w="2"/><text x="95.8259%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2 samples, 0.02%)</title><rect x="95.5759%" y="1381" width="0.0240%" height="15" fill="rgb(226,186,23)" fg:x="7950" fg:w="2"/><text x="95.8259%" y="1391.50"></text></g><g><title>core::clone::Clone::clone (2 samples, 0.02%)</title><rect x="95.5759%" y="1365" width="0.0240%" height="15" fill="rgb(236,13,30)" fg:x="7950" fg:w="2"/><text x="95.8259%" y="1375.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="95.5759%" y="1349" width="0.0240%" height="15" fill="rgb(228,121,22)" fg:x="7950" fg:w="2"/><text x="95.8259%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="95.5879%" y="1333" width="0.0120%" height="15" fill="rgb(248,222,26)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="95.5879%" y="1317" width="0.0120%" height="15" fill="rgb(251,72,25)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="95.5879%" y="1301" width="0.0120%" height="15" fill="rgb(223,114,24)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="95.5879%" y="1285" width="0.0120%" height="15" fill="rgb(232,190,43)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="95.5879%" y="1269" width="0.0120%" height="15" fill="rgb(208,90,0)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="95.5879%" y="1253" width="0.0120%" height="15" fill="rgb(234,149,31)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="95.5879%" y="1237" width="0.0120%" height="15" fill="rgb(235,188,36)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="95.5879%" y="1221" width="0.0120%" height="15" fill="rgb(219,59,51)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="95.5879%" y="1205" width="0.0120%" height="15" fill="rgb(236,101,40)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1215.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="95.5879%" y="1189" width="0.0120%" height="15" fill="rgb(235,33,7)" fg:x="7951" fg:w="1"/><text x="95.8379%" y="1199.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.04%)</title><rect x="95.5759%" y="1461" width="0.0361%" height="15" fill="rgb(213,169,26)" fg:x="7950" fg:w="3"/><text x="95.8259%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="95.5759%" y="1445" width="0.0361%" height="15" fill="rgb(218,99,34)" fg:x="7950" fg:w="3"/><text x="95.8259%" y="1455.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="95.5759%" y="1429" width="0.0361%" height="15" fill="rgb(210,57,24)" fg:x="7950" fg:w="3"/><text x="95.8259%" y="1439.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="95.5759%" y="1413" width="0.0361%" height="15" fill="rgb(231,181,54)" fg:x="7950" fg:w="3"/><text x="95.8259%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="95.5999%" y="1397" width="0.0120%" height="15" fill="rgb(251,188,48)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.01%)</title><rect x="95.5999%" y="1381" width="0.0120%" height="15" fill="rgb(243,12,45)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1391.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="95.5999%" y="1365" width="0.0120%" height="15" fill="rgb(250,197,9)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="95.5999%" y="1349" width="0.0120%" height="15" fill="rgb(235,149,35)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="95.5999%" y="1333" width="0.0120%" height="15" fill="rgb(219,27,19)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="95.5999%" y="1317" width="0.0120%" height="15" fill="rgb(244,78,31)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1327.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="95.5999%" y="1301" width="0.0120%" height="15" fill="rgb(241,13,4)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1311.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="95.5999%" y="1285" width="0.0120%" height="15" fill="rgb(212,194,26)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="95.5999%" y="1269" width="0.0120%" height="15" fill="rgb(236,80,11)" fg:x="7952" fg:w="1"/><text x="95.8499%" y="1279.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="95.6119%" y="1285" width="0.0120%" height="15" fill="rgb(206,1,24)" fg:x="7953" fg:w="1"/><text x="95.8619%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="95.6119%" y="1269" width="0.0120%" height="15" fill="rgb(238,215,50)" fg:x="7953" fg:w="1"/><text x="95.8619%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="95.6119%" y="1253" width="0.0120%" height="15" fill="rgb(254,126,32)" fg:x="7953" fg:w="1"/><text x="95.8619%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.6119%" y="1237" width="0.0120%" height="15" fill="rgb(206,111,53)" fg:x="7953" fg:w="1"/><text x="95.8619%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.6119%" y="1221" width="0.0120%" height="15" fill="rgb(218,72,44)" fg:x="7953" fg:w="1"/><text x="95.8619%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.6119%" y="1205" width="0.0120%" height="15" fill="rgb(238,25,3)" fg:x="7953" fg:w="1"/><text x="95.8619%" y="1215.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="95.6239%" y="1205" width="0.0240%" height="15" fill="rgb(250,191,7)" fg:x="7954" fg:w="2"/><text x="95.8739%" y="1215.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="95.6119%" y="1301" width="0.0481%" height="15" fill="rgb(238,56,30)" fg:x="7953" fg:w="4"/><text x="95.8619%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="95.6239%" y="1285" width="0.0361%" height="15" fill="rgb(210,27,45)" fg:x="7954" fg:w="3"/><text x="95.8739%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.04%)</title><rect x="95.6239%" y="1269" width="0.0361%" height="15" fill="rgb(207,10,50)" fg:x="7954" fg:w="3"/><text x="95.8739%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="95.6239%" y="1253" width="0.0361%" height="15" fill="rgb(249,30,23)" fg:x="7954" fg:w="3"/><text x="95.8739%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="95.6239%" y="1237" width="0.0361%" height="15" fill="rgb(250,80,12)" fg:x="7954" fg:w="3"/><text x="95.8739%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.04%)</title><rect x="95.6239%" y="1221" width="0.0361%" height="15" fill="rgb(210,221,37)" fg:x="7954" fg:w="3"/><text x="95.8739%" y="1231.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="95.6480%" y="1205" width="0.0120%" height="15" fill="rgb(205,96,24)" fg:x="7956" fg:w="1"/><text x="95.8980%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="95.6119%" y="1365" width="0.0601%" height="15" fill="rgb(247,104,22)" fg:x="7953" fg:w="5"/><text x="95.8619%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.06%)</title><rect x="95.6119%" y="1349" width="0.0601%" height="15" fill="rgb(222,61,53)" fg:x="7953" fg:w="5"/><text x="95.8619%" y="1359.50"></text></g><g><title>core::hash::Hash::hash_slice (5 samples, 0.06%)</title><rect x="95.6119%" y="1333" width="0.0601%" height="15" fill="rgb(241,11,53)" fg:x="7953" fg:w="5"/><text x="95.8619%" y="1343.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="95.6119%" y="1317" width="0.0601%" height="15" fill="rgb(230,111,47)" fg:x="7953" fg:w="5"/><text x="95.8619%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="95.6600%" y="1301" width="0.0120%" height="15" fill="rgb(218,187,29)" fg:x="7957" fg:w="1"/><text x="95.9100%" y="1311.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="95.6600%" y="1285" width="0.0120%" height="15" fill="rgb(210,121,46)" fg:x="7957" fg:w="1"/><text x="95.9100%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="95.6600%" y="1269" width="0.0120%" height="15" fill="rgb(250,43,19)" fg:x="7957" fg:w="1"/><text x="95.9100%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.6600%" y="1253" width="0.0120%" height="15" fill="rgb(238,61,12)" fg:x="7957" fg:w="1"/><text x="95.9100%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.6600%" y="1237" width="0.0120%" height="15" fill="rgb(251,198,9)" fg:x="7957" fg:w="1"/><text x="95.9100%" y="1247.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="95.6600%" y="1221" width="0.0120%" height="15" fill="rgb(214,192,38)" fg:x="7957" fg:w="1"/><text x="95.9100%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="95.6600%" y="1205" width="0.0120%" height="15" fill="rgb(214,73,19)" fg:x="7957" fg:w="1"/><text x="95.9100%" y="1215.50"></text></g><g><title>core::cmp::min (2 samples, 0.02%)</title><rect x="95.7081%" y="1253" width="0.0240%" height="15" fill="rgb(249,222,49)" fg:x="7961" fg:w="2"/><text x="95.9581%" y="1263.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.02%)</title><rect x="95.7081%" y="1237" width="0.0240%" height="15" fill="rgb(231,181,54)" fg:x="7961" fg:w="2"/><text x="95.9581%" y="1247.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.02%)</title><rect x="95.7081%" y="1221" width="0.0240%" height="15" fill="rgb(240,1,13)" fg:x="7961" fg:w="2"/><text x="95.9581%" y="1231.50"></text></g><g><title>&lt;rust_decimal::decimal::Decimal as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="95.6720%" y="1349" width="0.0721%" height="15" fill="rgb(225,21,16)" fg:x="7958" fg:w="6"/><text x="95.9220%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (6 samples, 0.07%)</title><rect x="95.6720%" y="1333" width="0.0721%" height="15" fill="rgb(246,176,50)" fg:x="7958" fg:w="6"/><text x="95.9220%" y="1343.50"></text></g><g><title>core::hash::Hasher::write_u32 (6 samples, 0.07%)</title><rect x="95.6720%" y="1317" width="0.0721%" height="15" fill="rgb(208,96,50)" fg:x="7958" fg:w="6"/><text x="95.9220%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="95.6720%" y="1301" width="0.0721%" height="15" fill="rgb(240,219,19)" fg:x="7958" fg:w="6"/><text x="95.9220%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="95.6720%" y="1285" width="0.0721%" height="15" fill="rgb(234,73,5)" fg:x="7958" fg:w="6"/><text x="95.9220%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.07%)</title><rect x="95.6720%" y="1269" width="0.0721%" height="15" fill="rgb(225,52,53)" fg:x="7958" fg:w="6"/><text x="95.9220%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="95.7321%" y="1253" width="0.0120%" height="15" fill="rgb(250,12,14)" fg:x="7963" fg:w="1"/><text x="95.9821%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="95.7442%" y="1269" width="0.0120%" height="15" fill="rgb(242,185,54)" fg:x="7964" fg:w="1"/><text x="95.9942%" y="1279.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="95.7442%" y="1253" width="0.0120%" height="15" fill="rgb(211,206,31)" fg:x="7964" fg:w="1"/><text x="95.9942%" y="1263.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (13 samples, 0.16%)</title><rect x="95.6119%" y="1381" width="0.1563%" height="15" fill="rgb(252,10,33)" fg:x="7953" fg:w="13"/><text x="95.8619%" y="1391.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (8 samples, 0.10%)</title><rect x="95.6720%" y="1365" width="0.0962%" height="15" fill="rgb(216,26,7)" fg:x="7958" fg:w="8"/><text x="95.9220%" y="1375.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="95.7442%" y="1349" width="0.0240%" height="15" fill="rgb(228,112,40)" fg:x="7964" fg:w="2"/><text x="95.9942%" y="1359.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="95.7442%" y="1333" width="0.0240%" height="15" fill="rgb(212,21,16)" fg:x="7964" fg:w="2"/><text x="95.9942%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="95.7442%" y="1317" width="0.0240%" height="15" fill="rgb(249,3,29)" fg:x="7964" fg:w="2"/><text x="95.9942%" y="1327.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="95.7442%" y="1301" width="0.0240%" height="15" fill="rgb(221,42,51)" fg:x="7964" fg:w="2"/><text x="95.9942%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.02%)</title><rect x="95.7442%" y="1285" width="0.0240%" height="15" fill="rgb(225,90,21)" fg:x="7964" fg:w="2"/><text x="95.9942%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.01%)</title><rect x="95.7562%" y="1269" width="0.0120%" height="15" fill="rgb(242,131,5)" fg:x="7965" fg:w="1"/><text x="96.0062%" y="1279.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="95.7562%" y="1253" width="0.0120%" height="15" fill="rgb(220,187,28)" fg:x="7965" fg:w="1"/><text x="96.0062%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="95.7682%" y="1381" width="0.0120%" height="15" fill="rgb(210,75,48)" fg:x="7966" fg:w="1"/><text x="96.0182%" y="1391.50"></text></g><g><title>alloc::slice::stable_sort (1 samples, 0.01%)</title><rect x="95.7682%" y="1365" width="0.0120%" height="15" fill="rgb(211,91,40)" fg:x="7966" fg:w="1"/><text x="96.0182%" y="1375.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.18%)</title><rect x="95.6119%" y="1413" width="0.1803%" height="15" fill="rgb(205,43,18)" fg:x="7953" fg:w="15"/><text x="95.8619%" y="1423.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.18%)</title><rect x="95.6119%" y="1397" width="0.1803%" height="15" fill="rgb(207,123,11)" fg:x="7953" fg:w="15"/><text x="95.8619%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="95.7802%" y="1381" width="0.0120%" height="15" fill="rgb(235,89,39)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="95.7802%" y="1365" width="0.0120%" height="15" fill="rgb(245,217,27)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="95.7802%" y="1349" width="0.0120%" height="15" fill="rgb(216,55,17)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="95.7802%" y="1333" width="0.0120%" height="15" fill="rgb(252,116,44)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1343.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.7802%" y="1317" width="0.0120%" height="15" fill="rgb(229,153,4)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1327.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.7802%" y="1301" width="0.0120%" height="15" fill="rgb(222,24,35)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.7802%" y="1285" width="0.0120%" height="15" fill="rgb(214,26,20)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="95.7802%" y="1269" width="0.0120%" height="15" fill="rgb(215,14,45)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="95.7802%" y="1253" width="0.0120%" height="15" fill="rgb(217,212,50)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="95.7802%" y="1237" width="0.0120%" height="15" fill="rgb(230,172,52)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="95.7802%" y="1221" width="0.0120%" height="15" fill="rgb(210,48,36)" fg:x="7967" fg:w="1"/><text x="96.0302%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.20%)</title><rect x="95.6119%" y="1461" width="0.2044%" height="15" fill="rgb(216,213,32)" fg:x="7953" fg:w="17"/><text x="95.8619%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.20%)</title><rect x="95.6119%" y="1445" width="0.2044%" height="15" fill="rgb(237,202,41)" fg:x="7953" fg:w="17"/><text x="95.8619%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.20%)</title><rect x="95.6119%" y="1429" width="0.2044%" height="15" fill="rgb(209,14,29)" fg:x="7953" fg:w="17"/><text x="95.8619%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="95.7923%" y="1413" width="0.0240%" height="15" fill="rgb(219,29,3)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="95.7923%" y="1397" width="0.0240%" height="15" fill="rgb(229,13,49)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.02%)</title><rect x="95.7923%" y="1381" width="0.0240%" height="15" fill="rgb(210,206,2)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2 samples, 0.02%)</title><rect x="95.7923%" y="1365" width="0.0240%" height="15" fill="rgb(216,154,46)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1375.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2 samples, 0.02%)</title><rect x="95.7923%" y="1349" width="0.0240%" height="15" fill="rgb(211,170,52)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1359.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.02%)</title><rect x="95.7923%" y="1333" width="0.0240%" height="15" fill="rgb(233,109,47)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1343.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="95.7923%" y="1317" width="0.0240%" height="15" fill="rgb(208,212,30)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1327.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.02%)</title><rect x="95.7923%" y="1301" width="0.0240%" height="15" fill="rgb(215,190,19)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1311.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="95.7923%" y="1285" width="0.0240%" height="15" fill="rgb(207,164,53)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1295.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="95.7923%" y="1269" width="0.0240%" height="15" fill="rgb(213,87,49)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="95.7923%" y="1253" width="0.0240%" height="15" fill="rgb(241,216,24)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="95.7923%" y="1237" width="0.0240%" height="15" fill="rgb(241,123,45)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (2 samples, 0.02%)</title><rect x="95.7923%" y="1221" width="0.0240%" height="15" fill="rgb(220,36,15)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1231.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (2 samples, 0.02%)</title><rect x="95.7923%" y="1205" width="0.0240%" height="15" fill="rgb(215,202,9)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="95.7923%" y="1189" width="0.0240%" height="15" fill="rgb(252,71,26)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1199.50"></text></g><g><title>&lt;smithereens::Residue as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="95.7923%" y="1173" width="0.0240%" height="15" fill="rgb(243,195,19)" fg:x="7968" fg:w="2"/><text x="96.0423%" y="1183.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="1157" width="0.0120%" height="15" fill="rgb(207,167,27)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1167.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="1141" width="0.0120%" height="15" fill="rgb(250,146,54)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1151.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="95.8043%" y="1125" width="0.0120%" height="15" fill="rgb(245,79,9)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="95.8043%" y="1109" width="0.0120%" height="15" fill="rgb(234,197,22)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="95.8043%" y="1093" width="0.0120%" height="15" fill="rgb(221,52,48)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1 samples, 0.01%)</title><rect x="95.8043%" y="1077" width="0.0120%" height="15" fill="rgb(235,80,0)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::_{{closure}} (1 samples, 0.01%)</title><rect x="95.8043%" y="1061" width="0.0120%" height="15" fill="rgb(221,117,53)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="1045" width="0.0120%" height="15" fill="rgb(239,48,47)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1055.50"></text></g><g><title>&lt;smithereens::Modification as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="1029" width="0.0120%" height="15" fill="rgb(227,191,52)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1039.50"></text></g><g><title>&lt;smithereens::Moiety as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="1013" width="0.0120%" height="15" fill="rgb(241,118,1)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="997" width="0.0120%" height="15" fill="rgb(240,85,3)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="1007.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="981" width="0.0120%" height="15" fill="rgb(237,68,37)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="965" width="0.0120%" height="15" fill="rgb(212,9,20)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="95.8043%" y="949" width="0.0120%" height="15" fill="rgb(218,84,17)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="95.8043%" y="933" width="0.0120%" height="15" fill="rgb(235,147,20)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="95.8043%" y="917" width="0.0120%" height="15" fill="rgb(208,224,1)" fg:x="7969" fg:w="1"/><text x="96.0543%" y="927.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="95.8163%" y="1365" width="0.0120%" height="15" fill="rgb(232,97,50)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1375.50"></text></g><g><title>&lt;smithereens::Modification as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="95.8163%" y="1349" width="0.0120%" height="15" fill="rgb(238,15,45)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1359.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="95.8163%" y="1333" width="0.0120%" height="15" fill="rgb(231,46,18)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1343.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="95.8163%" y="1317" width="0.0120%" height="15" fill="rgb(254,169,10)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1327.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="95.8163%" y="1301" width="0.0120%" height="15" fill="rgb(243,169,30)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.8163%" y="1285" width="0.0120%" height="15" fill="rgb(236,90,49)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.8163%" y="1269" width="0.0120%" height="15" fill="rgb(218,80,15)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.8163%" y="1253" width="0.0120%" height="15" fill="rgb(222,115,37)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1263.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="95.8163%" y="1237" width="0.0120%" height="15" fill="rgb(227,0,6)" fg:x="7970" fg:w="1"/><text x="96.0663%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="95.8163%" y="1397" width="0.0240%" height="15" fill="rgb(217,189,13)" fg:x="7970" fg:w="2"/><text x="96.0663%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="95.8163%" y="1381" width="0.0240%" height="15" fill="rgb(220,74,19)" fg:x="7970" fg:w="2"/><text x="96.0663%" y="1391.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (1 samples, 0.01%)</title><rect x="95.8283%" y="1365" width="0.0120%" height="15" fill="rgb(224,81,18)" fg:x="7971" fg:w="1"/><text x="96.0783%" y="1375.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="95.8283%" y="1349" width="0.0120%" height="15" fill="rgb(245,178,48)" fg:x="7971" fg:w="1"/><text x="96.0783%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.8283%" y="1333" width="0.0120%" height="15" fill="rgb(207,78,24)" fg:x="7971" fg:w="1"/><text x="96.0783%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="95.8283%" y="1317" width="0.0120%" height="15" fill="rgb(223,222,30)" fg:x="7971" fg:w="1"/><text x="96.0783%" y="1327.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="95.8283%" y="1301" width="0.0120%" height="15" fill="rgb(234,101,12)" fg:x="7971" fg:w="1"/><text x="96.0783%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,379 samples, 40.62%)</title><rect x="55.2296%" y="1573" width="40.6227%" height="15" fill="rgb(209,80,46)" fg:x="4594" fg:w="3379"/><text x="55.4796%" y="1583.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,379 samples, 40.62%)</title><rect x="55.2296%" y="1557" width="40.6227%" height="15" fill="rgb(228,79,14)" fg:x="4594" fg:w="3379"/><text x="55.4796%" y="1567.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>core::option::Option&lt;T&gt;::map (3,377 samples, 40.60%)</title><rect x="55.2537%" y="1541" width="40.5987%" height="15" fill="rgb(220,219,34)" fg:x="4596" fg:w="3377"/><text x="55.5037%" y="1551.50">core::option::Option&lt;T&gt;::map</text></g><g><title>smithereens::main::_{{closure}} (3,377 samples, 40.60%)</title><rect x="55.2537%" y="1525" width="40.5987%" height="15" fill="rgb(207,80,21)" fg:x="4596" fg:w="3377"/><text x="55.5037%" y="1535.50">smithereens::main::_{{closure}}</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (53 samples, 0.64%)</title><rect x="95.2152%" y="1509" width="0.6372%" height="15" fill="rgb(210,154,44)" fg:x="7920" fg:w="53"/><text x="95.4652%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (53 samples, 0.64%)</title><rect x="95.2152%" y="1493" width="0.6372%" height="15" fill="rgb(246,44,39)" fg:x="7920" fg:w="53"/><text x="95.4652%" y="1503.50"></text></g><g><title>smithereens::fragment::_{{closure}} (53 samples, 0.64%)</title><rect x="95.2152%" y="1477" width="0.6372%" height="15" fill="rgb(252,175,13)" fg:x="7920" fg:w="53"/><text x="95.4652%" y="1487.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.04%)</title><rect x="95.8163%" y="1461" width="0.0361%" height="15" fill="rgb(211,50,39)" fg:x="7970" fg:w="3"/><text x="96.0663%" y="1471.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="95.8163%" y="1445" width="0.0361%" height="15" fill="rgb(231,204,27)" fg:x="7970" fg:w="3"/><text x="96.0663%" y="1455.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.04%)</title><rect x="95.8163%" y="1429" width="0.0361%" height="15" fill="rgb(253,26,34)" fg:x="7970" fg:w="3"/><text x="96.0663%" y="1439.50"></text></g><g><title>&lt;smithereens::Residue as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="95.8163%" y="1413" width="0.0361%" height="15" fill="rgb(207,139,38)" fg:x="7970" fg:w="3"/><text x="96.0663%" y="1423.50"></text></g><g><title>&lt;smithereens::Moiety as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="95.8403%" y="1397" width="0.0120%" height="15" fill="rgb(248,54,27)" fg:x="7972" fg:w="1"/><text x="96.0903%" y="1407.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="95.8403%" y="1381" width="0.0120%" height="15" fill="rgb(234,25,33)" fg:x="7972" fg:w="1"/><text x="96.0903%" y="1391.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="95.8403%" y="1365" width="0.0120%" height="15" fill="rgb(249,107,47)" fg:x="7972" fg:w="1"/><text x="96.0903%" y="1375.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.8403%" y="1349" width="0.0120%" height="15" fill="rgb(230,190,31)" fg:x="7972" fg:w="1"/><text x="96.0903%" y="1359.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.8403%" y="1333" width="0.0120%" height="15" fill="rgb(238,173,45)" fg:x="7972" fg:w="1"/><text x="96.0903%" y="1343.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.01%)</title><rect x="95.8403%" y="1317" width="0.0120%" height="15" fill="rgb(222,16,50)" fg:x="7972" fg:w="1"/><text x="96.0903%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="95.9125%" y="1349" width="0.0120%" height="15" fill="rgb(251,204,47)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1359.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="95.9125%" y="1333" width="0.0120%" height="15" fill="rgb(225,12,3)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="95.9125%" y="1317" width="0.0120%" height="15" fill="rgb(214,208,22)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="95.9125%" y="1301" width="0.0120%" height="15" fill="rgb(240,57,32)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="95.9125%" y="1285" width="0.0120%" height="15" fill="rgb(243,113,48)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1 samples, 0.01%)</title><rect x="95.9125%" y="1269" width="0.0120%" height="15" fill="rgb(225,135,30)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 0.01%)</title><rect x="95.9125%" y="1253" width="0.0120%" height="15" fill="rgb(222,3,53)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.01%)</title><rect x="95.9125%" y="1237" width="0.0120%" height="15" fill="rgb(243,142,2)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="95.9125%" y="1221" width="0.0120%" height="15" fill="rgb(233,67,14)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1231.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1 samples, 0.01%)</title><rect x="95.9125%" y="1205" width="0.0120%" height="15" fill="rgb(245,125,36)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1215.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.01%)</title><rect x="95.9125%" y="1189" width="0.0120%" height="15" fill="rgb(225,199,6)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1199.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="95.9125%" y="1173" width="0.0120%" height="15" fill="rgb(244,71,6)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Residue&gt;&gt; (1 samples, 0.01%)</title><rect x="95.9125%" y="1157" width="0.0120%" height="15" fill="rgb(225,62,9)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="95.9125%" y="1141" width="0.0120%" height="15" fill="rgb(246,139,53)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[smithereens::Residue]&gt; (1 samples, 0.01%)</title><rect x="95.9125%" y="1125" width="0.0120%" height="15" fill="rgb(243,161,46)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (1 samples, 0.01%)</title><rect x="95.9125%" y="1109" width="0.0120%" height="15" fill="rgb(236,153,7)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="95.9125%" y="1093" width="0.0120%" height="15" fill="rgb(248,42,35)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (1 samples, 0.01%)</title><rect x="95.9125%" y="1077" width="0.0120%" height="15" fill="rgb(250,17,31)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="95.9125%" y="1061" width="0.0120%" height="15" fill="rgb(248,138,14)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="95.9125%" y="1045" width="0.0120%" height="15" fill="rgb(228,161,3)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="95.9125%" y="1029" width="0.0120%" height="15" fill="rgb(248,116,17)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1039.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="95.9125%" y="1013" width="0.0120%" height="15" fill="rgb(207,78,24)" fg:x="7978" fg:w="1"/><text x="96.1625%" y="1023.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.9245%" y="997" width="0.0120%" height="15" fill="rgb(234,99,48)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="95.9245%" y="981" width="0.0120%" height="15" fill="rgb(242,22,26)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="95.9245%" y="965" width="0.0120%" height="15" fill="rgb(227,78,32)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="95.9245%" y="949" width="0.0120%" height="15" fill="rgb(226,189,43)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="959.50"></text></g><g><title>&lt;petgraph::graph_impl::Node&lt;E,Ix&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.9245%" y="933" width="0.0120%" height="15" fill="rgb(227,218,35)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="943.50"></text></g><g><title>&lt;smithereens::Residue as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.9245%" y="917" width="0.0120%" height="15" fill="rgb(206,111,40)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="95.9245%" y="901" width="0.0120%" height="15" fill="rgb(208,217,22)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="95.9245%" y="885" width="0.0120%" height="15" fill="rgb(248,20,20)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="95.9245%" y="869" width="0.0120%" height="15" fill="rgb(239,155,16)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="95.9245%" y="853" width="0.0120%" height="15" fill="rgb(238,171,46)" fg:x="7979" fg:w="1"/><text x="96.1745%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="95.9125%" y="1541" width="0.0361%" height="15" fill="rgb(248,11,36)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="95.9125%" y="1525" width="0.0361%" height="15" fill="rgb(220,148,37)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="95.9125%" y="1509" width="0.0361%" height="15" fill="rgb(218,144,42)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="95.9125%" y="1493" width="0.0361%" height="15" fill="rgb(245,20,20)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="95.9125%" y="1477" width="0.0361%" height="15" fill="rgb(240,111,48)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="95.9125%" y="1461" width="0.0361%" height="15" fill="rgb(237,225,32)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="95.9125%" y="1445" width="0.0361%" height="15" fill="rgb(228,161,46)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.04%)</title><rect x="95.9125%" y="1429" width="0.0361%" height="15" fill="rgb(235,196,21)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="95.9125%" y="1413" width="0.0361%" height="15" fill="rgb(250,133,21)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="95.9125%" y="1397" width="0.0361%" height="15" fill="rgb(236,94,32)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.04%)</title><rect x="95.9125%" y="1381" width="0.0361%" height="15" fill="rgb(219,176,25)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1391.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (3 samples, 0.04%)</title><rect x="95.9125%" y="1365" width="0.0361%" height="15" fill="rgb(211,17,43)" fg:x="7978" fg:w="3"/><text x="96.1625%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="95.9245%" y="1349" width="0.0240%" height="15" fill="rgb(220,75,23)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="95.9245%" y="1333" width="0.0240%" height="15" fill="rgb(215,122,32)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="95.9245%" y="1317" width="0.0240%" height="15" fill="rgb(218,57,38)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1301" width="0.0240%" height="15" fill="rgb(233,208,46)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1285" width="0.0240%" height="15" fill="rgb(221,35,50)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1269" width="0.0240%" height="15" fill="rgb(229,213,29)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1253" width="0.0240%" height="15" fill="rgb(229,110,40)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="95.9245%" y="1237" width="0.0240%" height="15" fill="rgb(247,206,19)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="95.9245%" y="1221" width="0.0240%" height="15" fill="rgb(216,229,45)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1231.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="95.9245%" y="1205" width="0.0240%" height="15" fill="rgb(205,184,31)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="95.9245%" y="1189" width="0.0240%" height="15" fill="rgb(213,91,10)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="95.9245%" y="1173" width="0.0240%" height="15" fill="rgb(250,49,8)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="95.9245%" y="1157" width="0.0240%" height="15" fill="rgb(207,26,8)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="95.9245%" y="1141" width="0.0240%" height="15" fill="rgb(224,2,13)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="95.9245%" y="1125" width="0.0240%" height="15" fill="rgb(219,108,27)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1109" width="0.0240%" height="15" fill="rgb(240,89,32)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1093" width="0.0240%" height="15" fill="rgb(248,205,3)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1077" width="0.0240%" height="15" fill="rgb(236,197,47)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="95.9245%" y="1061" width="0.0240%" height="15" fill="rgb(244,185,52)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="95.9245%" y="1045" width="0.0240%" height="15" fill="rgb(210,206,23)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="95.9245%" y="1029" width="0.0240%" height="15" fill="rgb(251,177,30)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1039.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (2 samples, 0.02%)</title><rect x="95.9245%" y="1013" width="0.0240%" height="15" fill="rgb(243,27,45)" fg:x="7979" fg:w="2"/><text x="96.1745%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="95.9365%" y="997" width="0.0120%" height="15" fill="rgb(248,141,51)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="95.9365%" y="981" width="0.0120%" height="15" fill="rgb(235,102,15)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="95.9365%" y="965" width="0.0120%" height="15" fill="rgb(214,164,53)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="95.9365%" y="949" width="0.0120%" height="15" fill="rgb(228,18,51)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="95.9365%" y="933" width="0.0120%" height="15" fill="rgb(205,211,11)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="917" width="0.0120%" height="15" fill="rgb(208,63,6)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="901" width="0.0120%" height="15" fill="rgb(245,76,14)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="885" width="0.0120%" height="15" fill="rgb(234,176,34)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="869" width="0.0120%" height="15" fill="rgb(243,156,42)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="95.9365%" y="853" width="0.0120%" height="15" fill="rgb(237,182,10)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="95.9365%" y="837" width="0.0120%" height="15" fill="rgb(244,117,0)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="847.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="95.9365%" y="821" width="0.0120%" height="15" fill="rgb(239,91,50)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="95.9365%" y="805" width="0.0120%" height="15" fill="rgb(206,38,9)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="95.9365%" y="789" width="0.0120%" height="15" fill="rgb(205,25,10)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="95.9365%" y="773" width="0.0120%" height="15" fill="rgb(206,224,7)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="95.9365%" y="757" width="0.0120%" height="15" fill="rgb(227,157,10)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="95.9365%" y="741" width="0.0120%" height="15" fill="rgb(214,157,37)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="725" width="0.0120%" height="15" fill="rgb(209,180,35)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="709" width="0.0120%" height="15" fill="rgb(216,174,49)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="693" width="0.0120%" height="15" fill="rgb(205,96,20)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9365%" y="677" width="0.0120%" height="15" fill="rgb(214,220,39)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="95.9365%" y="661" width="0.0120%" height="15" fill="rgb(245,126,30)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="95.9365%" y="645" width="0.0120%" height="15" fill="rgb(215,88,33)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="655.50"></text></g><g><title>smithereens::memoized_original_fragment::_{{closure}} (1 samples, 0.01%)</title><rect x="95.9365%" y="629" width="0.0120%" height="15" fill="rgb(210,1,49)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="639.50"></text></g><g><title>&lt;smithereens::Fragment as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="95.9365%" y="613" width="0.0120%" height="15" fill="rgb(207,133,3)" fg:x="7980" fg:w="1"/><text x="96.1865%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,388 samples, 40.73%)</title><rect x="55.2296%" y="1637" width="40.7309%" height="15" fill="rgb(231,47,43)" fg:x="4594" fg:w="3388"/><text x="55.4796%" y="1647.50">core::ops::function::FnOnce::call_once</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,388 samples, 40.73%)</title><rect x="55.2296%" y="1621" width="40.7309%" height="15" fill="rgb(245,64,1)" fg:x="4594" fg:w="3388"/><text x="55.4796%" y="1631.50">core::iter::traits::iterator::Iterator::collect</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,388 samples, 40.73%)</title><rect x="55.2296%" y="1605" width="40.7309%" height="15" fill="rgb(253,145,20)" fg:x="4594" fg:w="3388"/><text x="55.4796%" y="1615.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,388 samples, 40.73%)</title><rect x="55.2296%" y="1589" width="40.7309%" height="15" fill="rgb(211,39,18)" fg:x="4594" fg:w="3388"/><text x="55.4796%" y="1599.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromI..</text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.11%)</title><rect x="95.8524%" y="1573" width="0.1082%" height="15" fill="rgb(223,225,18)" fg:x="7973" fg:w="9"/><text x="96.1024%" y="1583.50"></text></g><g><title>smithereens::main::_{{closure}} (9 samples, 0.11%)</title><rect x="95.8524%" y="1557" width="0.1082%" height="15" fill="rgb(210,202,44)" fg:x="7973" fg:w="9"/><text x="96.1024%" y="1567.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1 samples, 0.01%)</title><rect x="95.9485%" y="1541" width="0.0120%" height="15" fill="rgb(231,138,36)" fg:x="7981" fg:w="1"/><text x="96.1985%" y="1551.50"></text></g><g><title>write (1 samples, 0.01%)</title><rect x="95.9485%" y="1525" width="0.0120%" height="15" fill="rgb(237,115,25)" fg:x="7981" fg:w="1"/><text x="96.1985%" y="1535.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="95.9485%" y="1509" width="0.0120%" height="15" fill="rgb(215,53,48)" fg:x="7981" fg:w="1"/><text x="96.1985%" y="1519.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9606%" y="1349" width="0.0120%" height="15" fill="rgb(243,193,24)" fg:x="7982" fg:w="1"/><text x="96.2106%" y="1359.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.01%)</title><rect x="95.9606%" y="1333" width="0.0120%" height="15" fill="rgb(210,106,28)" fg:x="7982" fg:w="1"/><text x="96.2106%" y="1343.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.01%)</title><rect x="95.9606%" y="1317" width="0.0120%" height="15" fill="rgb(249,192,0)" fg:x="7982" fg:w="1"/><text x="96.2106%" y="1327.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="95.9606%" y="1301" width="0.0120%" height="15" fill="rgb(224,96,21)" fg:x="7982" fg:w="1"/><text x="96.2106%" y="1311.50"></text></g><g><title>cfree (69 samples, 0.83%)</title><rect x="95.9726%" y="1317" width="0.8295%" height="15" fill="rgb(243,160,19)" fg:x="7983" fg:w="69"/><text x="96.2226%" y="1327.50"></text></g><g><title>[libc.so.6] (69 samples, 0.83%)</title><rect x="95.9726%" y="1301" width="0.8295%" height="15" fill="rgb(219,205,50)" fg:x="7983" fg:w="69"/><text x="96.2226%" y="1311.50"></text></g><g><title>[libc.so.6] (69 samples, 0.83%)</title><rect x="95.9726%" y="1285" width="0.8295%" height="15" fill="rgb(218,175,44)" fg:x="7983" fg:w="69"/><text x="96.2226%" y="1295.50"></text></g><g><title>[libc.so.6] (69 samples, 0.83%)</title><rect x="95.9726%" y="1269" width="0.8295%" height="15" fill="rgb(251,84,47)" fg:x="7983" fg:w="69"/><text x="96.2226%" y="1279.50"></text></g><g><title>[libc.so.6] (28 samples, 0.34%)</title><rect x="96.4655%" y="1253" width="0.3366%" height="15" fill="rgb(241,14,16)" fg:x="8024" fg:w="28"/><text x="96.7155%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="96.8021%" y="1253" width="0.0721%" height="15" fill="rgb(207,142,28)" fg:x="8052" fg:w="6"/><text x="97.0521%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (5 samples, 0.06%)</title><rect x="96.8141%" y="1237" width="0.0601%" height="15" fill="rgb(208,116,22)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (5 samples, 0.06%)</title><rect x="96.8141%" y="1221" width="0.0601%" height="15" fill="rgb(210,0,43)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (5 samples, 0.06%)</title><rect x="96.8141%" y="1205" width="0.0601%" height="15" fill="rgb(246,33,21)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (5 samples, 0.06%)</title><rect x="96.8141%" y="1189" width="0.0601%" height="15" fill="rgb(208,158,54)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (5 samples, 0.06%)</title><rect x="96.8141%" y="1173" width="0.0601%" height="15" fill="rgb(218,99,29)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="96.8141%" y="1157" width="0.0601%" height="15" fill="rgb(226,29,7)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.06%)</title><rect x="96.8141%" y="1141" width="0.0601%" height="15" fill="rgb(206,178,46)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.06%)</title><rect x="96.8141%" y="1125" width="0.0601%" height="15" fill="rgb(205,169,32)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1135.50"></text></g><g><title>cfree (5 samples, 0.06%)</title><rect x="96.8141%" y="1109" width="0.0601%" height="15" fill="rgb(217,4,13)" fg:x="8053" fg:w="5"/><text x="97.0641%" y="1119.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="96.8262%" y="1093" width="0.0481%" height="15" fill="rgb(210,140,37)" fg:x="8054" fg:w="4"/><text x="97.0762%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="96.8622%" y="1077" width="0.0120%" height="15" fill="rgb(229,80,10)" fg:x="8057" fg:w="1"/><text x="97.1122%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="96.8622%" y="1061" width="0.0120%" height="15" fill="rgb(212,175,34)" fg:x="8057" fg:w="1"/><text x="97.1122%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (9 samples, 0.11%)</title><rect x="96.8021%" y="1285" width="0.1082%" height="15" fill="rgb(216,207,24)" fg:x="8052" fg:w="9"/><text x="97.0521%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (9 samples, 0.11%)</title><rect x="96.8021%" y="1269" width="0.1082%" height="15" fill="rgb(234,163,3)" fg:x="8052" fg:w="9"/><text x="97.0521%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="96.8742%" y="1253" width="0.0361%" height="15" fill="rgb(248,101,16)" fg:x="8058" fg:w="3"/><text x="97.1242%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="96.8742%" y="1237" width="0.0361%" height="15" fill="rgb(209,152,54)" fg:x="8058" fg:w="3"/><text x="97.1242%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.04%)</title><rect x="96.8742%" y="1221" width="0.0361%" height="15" fill="rgb(229,124,51)" fg:x="8058" fg:w="3"/><text x="97.1242%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.04%)</title><rect x="96.8742%" y="1205" width="0.0361%" height="15" fill="rgb(219,83,18)" fg:x="8058" fg:w="3"/><text x="97.1242%" y="1215.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="96.8742%" y="1189" width="0.0361%" height="15" fill="rgb(206,29,38)" fg:x="8058" fg:w="3"/><text x="97.1242%" y="1199.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="96.8742%" y="1173" width="0.0361%" height="15" fill="rgb(245,123,23)" fg:x="8058" fg:w="3"/><text x="97.1242%" y="1183.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="96.8863%" y="1157" width="0.0240%" height="15" fill="rgb(238,50,33)" fg:x="8059" fg:w="2"/><text x="97.1363%" y="1167.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="96.8983%" y="1141" width="0.0120%" height="15" fill="rgb(234,165,23)" fg:x="8060" fg:w="1"/><text x="97.1483%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;(smithereens::Fragment,std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;)&gt; (10 samples, 0.12%)</title><rect x="96.8021%" y="1317" width="0.1202%" height="15" fill="rgb(211,82,31)" fg:x="8052" fg:w="10"/><text x="97.0521%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (10 samples, 0.12%)</title><rect x="96.8021%" y="1301" width="0.1202%" height="15" fill="rgb(224,166,46)" fg:x="8052" fg:w="10"/><text x="97.0521%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (1 samples, 0.01%)</title><rect x="96.9103%" y="1285" width="0.0120%" height="15" fill="rgb(211,13,8)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="96.9103%" y="1269" width="0.0120%" height="15" fill="rgb(212,7,42)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="96.9103%" y="1253" width="0.0120%" height="15" fill="rgb(249,102,19)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (1 samples, 0.01%)</title><rect x="96.9103%" y="1237" width="0.0120%" height="15" fill="rgb(225,41,13)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="96.9103%" y="1221" width="0.0120%" height="15" fill="rgb(220,65,27)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.01%)</title><rect x="96.9103%" y="1205" width="0.0120%" height="15" fill="rgb(206,4,41)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.01%)</title><rect x="96.9103%" y="1189" width="0.0120%" height="15" fill="rgb(219,60,39)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="96.9103%" y="1173" width="0.0120%" height="15" fill="rgb(226,4,38)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="96.9103%" y="1157" width="0.0120%" height="15" fill="rgb(250,52,3)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1167.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="96.9103%" y="1141" width="0.0120%" height="15" fill="rgb(234,93,0)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="96.9103%" y="1125" width="0.0120%" height="15" fill="rgb(251,47,47)" fg:x="8061" fg:w="1"/><text x="97.1603%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="96.9344%" y="1285" width="0.0240%" height="15" fill="rgb(205,166,47)" fg:x="8063" fg:w="2"/><text x="97.1844%" y="1295.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.02%)</title><rect x="96.9344%" y="1269" width="0.0240%" height="15" fill="rgb(231,148,8)" fg:x="8063" fg:w="2"/><text x="97.1844%" y="1279.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2 samples, 0.02%)</title><rect x="96.9344%" y="1253" width="0.0240%" height="15" fill="rgb(244,185,19)" fg:x="8063" fg:w="2"/><text x="97.1844%" y="1263.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="96.9344%" y="1237" width="0.0240%" height="15" fill="rgb(224,201,45)" fg:x="8063" fg:w="2"/><text x="97.1844%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="96.9344%" y="1221" width="0.0240%" height="15" fill="rgb(240,77,39)" fg:x="8063" fg:w="2"/><text x="97.1844%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.30%)</title><rect x="96.9704%" y="1157" width="0.3006%" height="15" fill="rgb(248,211,29)" fg:x="8066" fg:w="25"/><text x="97.2204%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.30%)</title><rect x="96.9704%" y="1141" width="0.3006%" height="15" fill="rgb(232,214,46)" fg:x="8066" fg:w="25"/><text x="97.2204%" y="1151.50"></text></g><g><title>cfree (25 samples, 0.30%)</title><rect x="96.9704%" y="1125" width="0.3006%" height="15" fill="rgb(213,99,54)" fg:x="8066" fg:w="25"/><text x="97.2204%" y="1135.50"></text></g><g><title>[libc.so.6] (16 samples, 0.19%)</title><rect x="97.0786%" y="1109" width="0.1924%" height="15" fill="rgb(240,19,46)" fg:x="8075" fg:w="16"/><text x="97.3286%" y="1119.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="97.2109%" y="1093" width="0.0601%" height="15" fill="rgb(243,89,10)" fg:x="8086" fg:w="5"/><text x="97.4609%" y="1103.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="97.2349%" y="1077" width="0.0361%" height="15" fill="rgb(249,28,32)" fg:x="8088" fg:w="3"/><text x="97.4849%" y="1087.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="97.2469%" y="1061" width="0.0240%" height="15" fill="rgb(253,30,9)" fg:x="8089" fg:w="2"/><text x="97.4969%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (28 samples, 0.34%)</title><rect x="96.9584%" y="1205" width="0.3366%" height="15" fill="rgb(217,2,26)" fg:x="8065" fg:w="28"/><text x="97.2084%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Edge&lt;()&gt;&gt;&gt; (28 samples, 0.34%)</title><rect x="96.9584%" y="1189" width="0.3366%" height="15" fill="rgb(220,28,10)" fg:x="8065" fg:w="28"/><text x="97.2084%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.34%)</title><rect x="96.9584%" y="1173" width="0.3366%" height="15" fill="rgb(228,167,49)" fg:x="8065" fg:w="28"/><text x="97.2084%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="97.2710%" y="1157" width="0.0240%" height="15" fill="rgb(238,212,3)" fg:x="8091" fg:w="2"/><text x="97.5210%" y="1167.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.02%)</title><rect x="97.2710%" y="1141" width="0.0240%" height="15" fill="rgb(229,134,44)" fg:x="8091" fg:w="2"/><text x="97.5210%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.06%)</title><rect x="97.2950%" y="1173" width="0.0601%" height="15" fill="rgb(208,71,4)" fg:x="8093" fg:w="5"/><text x="97.5450%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.06%)</title><rect x="97.2950%" y="1157" width="0.0601%" height="15" fill="rgb(221,205,45)" fg:x="8093" fg:w="5"/><text x="97.5450%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (71 samples, 0.85%)</title><rect x="97.4273%" y="1077" width="0.8536%" height="15" fill="rgb(215,132,38)" fg:x="8104" fg:w="71"/><text x="97.6773%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (71 samples, 0.85%)</title><rect x="97.4273%" y="1061" width="0.8536%" height="15" fill="rgb(227,158,6)" fg:x="8104" fg:w="71"/><text x="97.6773%" y="1071.50"></text></g><g><title>cfree (69 samples, 0.83%)</title><rect x="97.4513%" y="1045" width="0.8295%" height="15" fill="rgb(250,10,38)" fg:x="8106" fg:w="69"/><text x="97.7013%" y="1055.50"></text></g><g><title>[libc.so.6] (47 samples, 0.57%)</title><rect x="97.7158%" y="1029" width="0.5650%" height="15" fill="rgb(225,171,40)" fg:x="8128" fg:w="47"/><text x="97.9658%" y="1039.50"></text></g><g><title>[libc.so.6] (10 samples, 0.12%)</title><rect x="98.1606%" y="1013" width="0.1202%" height="15" fill="rgb(238,17,43)" fg:x="8165" fg:w="10"/><text x="98.4106%" y="1023.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="98.1847%" y="997" width="0.0962%" height="15" fill="rgb(208,145,4)" fg:x="8167" fg:w="8"/><text x="98.4347%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="98.2688%" y="981" width="0.0120%" height="15" fill="rgb(232,82,7)" fg:x="8174" fg:w="1"/><text x="98.5188%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 1.32%)</title><rect x="97.2950%" y="1189" width="1.3224%" height="15" fill="rgb(205,166,38)" fg:x="8093" fg:w="110"/><text x="97.5450%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[petgraph::graph_impl::Node&lt;smithereens::Residue&gt;]&gt; (105 samples, 1.26%)</title><rect x="97.3551%" y="1173" width="1.2623%" height="15" fill="rgb(240,228,4)" fg:x="8098" fg:w="105"/><text x="97.6051%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt; (99 samples, 1.19%)</title><rect x="97.4273%" y="1157" width="1.1902%" height="15" fill="rgb(233,121,40)" fg:x="8104" fg:w="99"/><text x="97.6773%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Residue&gt; (99 samples, 1.19%)</title><rect x="97.4273%" y="1141" width="1.1902%" height="15" fill="rgb(243,84,30)" fg:x="8104" fg:w="99"/><text x="97.6773%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;smithereens::Modification&gt;&gt; (99 samples, 1.19%)</title><rect x="97.4273%" y="1125" width="1.1902%" height="15" fill="rgb(235,81,48)" fg:x="8104" fg:w="99"/><text x="97.6773%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;smithereens::Modification&gt;&gt; (99 samples, 1.19%)</title><rect x="97.4273%" y="1109" width="1.1902%" height="15" fill="rgb(218,137,0)" fg:x="8104" fg:w="99"/><text x="97.6773%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 1.19%)</title><rect x="97.4273%" y="1093" width="1.1902%" height="15" fill="rgb(223,151,48)" fg:x="8104" fg:w="99"/><text x="97.6773%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (28 samples, 0.34%)</title><rect x="98.2808%" y="1077" width="0.3366%" height="15" fill="rgb(247,30,19)" fg:x="8175" fg:w="28"/><text x="98.5308%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (74 samples, 0.89%)</title><rect x="98.6655%" y="1157" width="0.8896%" height="15" fill="rgb(205,129,29)" fg:x="8207" fg:w="74"/><text x="98.9155%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (74 samples, 0.89%)</title><rect x="98.6655%" y="1141" width="0.8896%" height="15" fill="rgb(222,29,2)" fg:x="8207" fg:w="74"/><text x="98.9155%" y="1151.50"></text></g><g><title>cfree (74 samples, 0.89%)</title><rect x="98.6655%" y="1125" width="0.8896%" height="15" fill="rgb(232,145,33)" fg:x="8207" fg:w="74"/><text x="98.9155%" y="1135.50"></text></g><g><title>[libc.so.6] (67 samples, 0.81%)</title><rect x="98.7497%" y="1109" width="0.8055%" height="15" fill="rgb(217,30,31)" fg:x="8214" fg:w="67"/><text x="98.9997%" y="1119.50"></text></g><g><title>[libc.so.6] (42 samples, 0.50%)</title><rect x="99.0503%" y="1093" width="0.5049%" height="15" fill="rgb(243,22,52)" fg:x="8239" fg:w="42"/><text x="99.3003%" y="1103.50"></text></g><g><title>[libc.so.6] (29 samples, 0.35%)</title><rect x="99.2065%" y="1077" width="0.3486%" height="15" fill="rgb(254,228,14)" fg:x="8252" fg:w="29"/><text x="99.4565%" y="1087.50"></text></g><g><title>[libc.so.6] (14 samples, 0.17%)</title><rect x="99.3869%" y="1061" width="0.1683%" height="15" fill="rgb(231,45,50)" fg:x="8267" fg:w="14"/><text x="99.6369%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;petgraph::graph_impl::Graph&lt;smithereens::Residue,()&gt;&gt; (217 samples, 2.61%)</title><rect x="96.9584%" y="1221" width="2.6088%" height="15" fill="rgb(248,125,3)" fg:x="8065" fg:w="217"/><text x="97.2084%" y="1231.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (189 samples, 2.27%)</title><rect x="97.2950%" y="1205" width="2.2722%" height="15" fill="rgb(213,76,9)" fg:x="8093" fg:w="189"/><text x="97.5450%" y="1215.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::Node&lt;smithereens::Residue&gt;&gt;&gt; (79 samples, 0.95%)</title><rect x="98.6175%" y="1189" width="0.9497%" height="15" fill="rgb(238,108,21)" fg:x="8203" fg:w="79"/><text x="98.8675%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.95%)</title><rect x="98.6175%" y="1173" width="0.9497%" height="15" fill="rgb(229,214,19)" fg:x="8203" fg:w="79"/><text x="98.8675%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="99.5552%" y="1157" width="0.0120%" height="15" fill="rgb(252,201,5)" fg:x="8281" fg:w="1"/><text x="99.8052%" y="1167.50"></text></g><g><title>__libc_start_main (3,722 samples, 44.75%)</title><rect x="55.2296%" y="1669" width="44.7463%" height="15" fill="rgb(233,165,49)" fg:x="4594" fg:w="3722"/><text x="55.4796%" y="1679.50">__libc_start_main</text></g><g><title>[libc.so.6] (3,722 samples, 44.75%)</title><rect x="55.2296%" y="1653" width="44.7463%" height="15" fill="rgb(208,165,19)" fg:x="4594" fg:w="3722"/><text x="55.4796%" y="1663.50">[libc.so.6]</text></g><g><title>exit (334 samples, 4.02%)</title><rect x="95.9606%" y="1637" width="4.0154%" height="15" fill="rgb(216,220,31)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1647.50">exit</text></g><g><title>[libc.so.6] (334 samples, 4.02%)</title><rect x="95.9606%" y="1621" width="4.0154%" height="15" fill="rgb(214,8,31)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1631.50">[lib..</text></g><g><title>__call_tls_dtors (334 samples, 4.02%)</title><rect x="95.9606%" y="1605" width="4.0154%" height="15" fill="rgb(220,32,32)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1615.50">__ca..</text></g><g><title>std::panic::catch_unwind (334 samples, 4.02%)</title><rect x="95.9606%" y="1589" width="4.0154%" height="15" fill="rgb(237,172,34)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1599.50">std:..</text></g><g><title>std::panicking::try (334 samples, 4.02%)</title><rect x="95.9606%" y="1573" width="4.0154%" height="15" fill="rgb(240,209,5)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1583.50">std:..</text></g><g><title>std::panicking::try::do_call (334 samples, 4.02%)</title><rect x="95.9606%" y="1557" width="4.0154%" height="15" fill="rgb(221,219,1)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1567.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (334 samples, 4.02%)</title><rect x="95.9606%" y="1541" width="4.0154%" height="15" fill="rgb(237,90,36)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1551.50">&lt;cor..</text></g><g><title>core::ops::function::FnOnce::call_once (334 samples, 4.02%)</title><rect x="95.9606%" y="1525" width="4.0154%" height="15" fill="rgb(245,14,51)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1535.50">core..</text></g><g><title>std::sys::common::thread_local::fast_local::destroy_value::_{{closure}} (334 samples, 4.02%)</title><rect x="95.9606%" y="1509" width="4.0154%" height="15" fill="rgb(211,71,49)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1519.50">std:..</text></g><g><title>core::mem::drop (334 samples, 4.02%)</title><rect x="95.9606%" y="1493" width="4.0154%" height="15" fill="rgb(230,223,9)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1503.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::cell::RefCell&lt;std::collections::hash::map::HashMap&lt;smithereens::Fragment,std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;&gt;&gt;&gt;&gt; (334 samples, 4.02%)</title><rect x="95.9606%" y="1477" width="4.0154%" height="15" fill="rgb(212,33,31)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1487.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;std::collections::hash::map::HashMap&lt;smithereens::Fragment,std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;&gt;&gt;&gt; (334 samples, 4.02%)</title><rect x="95.9606%" y="1461" width="4.0154%" height="15" fill="rgb(218,141,5)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1471.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;smithereens::Fragment,std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;&gt;&gt;&gt; (334 samples, 4.02%)</title><rect x="95.9606%" y="1445" width="4.0154%" height="15" fill="rgb(239,194,8)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1455.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;smithereens::Fragment,std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;&gt;&gt; (334 samples, 4.02%)</title><rect x="95.9606%" y="1429" width="4.0154%" height="15" fill="rgb(225,119,29)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1439.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;smithereens::Fragment,std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;,std::collections::hash::map::RandomState&gt;&gt; (334 samples, 4.02%)</title><rect x="95.9606%" y="1413" width="4.0154%" height="15" fill="rgb(233,32,3)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1423.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(smithereens::Fragment,std::collections::hash::set::HashSet&lt;smithereens::Fragment&gt;)&gt;&gt; (334 samples, 4.02%)</title><rect x="95.9606%" y="1397" width="4.0154%" height="15" fill="rgb(248,126,40)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1407.50">core..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (334 samples, 4.02%)</title><rect x="95.9606%" y="1381" width="4.0154%" height="15" fill="rgb(213,102,53)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1391.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (334 samples, 4.02%)</title><rect x="95.9606%" y="1365" width="4.0154%" height="15" fill="rgb(212,69,15)" fg:x="7982" fg:w="334"/><text x="96.2106%" y="1375.50">hash..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (333 samples, 4.00%)</title><rect x="95.9726%" y="1349" width="4.0034%" height="15" fill="rgb(253,39,34)" fg:x="7983" fg:w="333"/><text x="96.2226%" y="1359.50">hash..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (333 samples, 4.00%)</title><rect x="95.9726%" y="1333" width="4.0034%" height="15" fill="rgb(205,189,54)" fg:x="7983" fg:w="333"/><text x="96.2226%" y="1343.50">core..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (254 samples, 3.05%)</title><rect x="96.9223%" y="1317" width="3.0536%" height="15" fill="rgb(234,229,45)" fg:x="8062" fg:w="254"/><text x="97.1723%" y="1327.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (254 samples, 3.05%)</title><rect x="96.9223%" y="1301" width="3.0536%" height="15" fill="rgb(243,79,48)" fg:x="8062" fg:w="254"/><text x="97.1723%" y="1311.50">has..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (251 samples, 3.02%)</title><rect x="96.9584%" y="1285" width="3.0176%" height="15" fill="rgb(206,71,50)" fg:x="8065" fg:w="251"/><text x="97.2084%" y="1295.50">has..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (251 samples, 3.02%)</title><rect x="96.9584%" y="1269" width="3.0176%" height="15" fill="rgb(209,32,17)" fg:x="8065" fg:w="251"/><text x="97.2084%" y="1279.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;(smithereens::Fragment,())&gt; (251 samples, 3.02%)</title><rect x="96.9584%" y="1253" width="3.0176%" height="15" fill="rgb(219,229,6)" fg:x="8065" fg:w="251"/><text x="97.2084%" y="1263.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;smithereens::Fragment&gt; (251 samples, 3.02%)</title><rect x="96.9584%" y="1237" width="3.0176%" height="15" fill="rgb(226,25,27)" fg:x="8065" fg:w="251"/><text x="97.2084%" y="1247.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;(usize,smithereens::TerminalIon)&gt;&gt; (34 samples, 0.41%)</title><rect x="99.5672%" y="1221" width="0.4088%" height="15" fill="rgb(218,185,23)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;(usize,smithereens::TerminalIon),std::collections::hash::map::RandomState&gt;&gt; (34 samples, 0.41%)</title><rect x="99.5672%" y="1205" width="0.4088%" height="15" fill="rgb(242,123,5)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,smithereens::TerminalIon),(),std::collections::hash::map::RandomState&gt;&gt; (34 samples, 0.41%)</title><rect x="99.5672%" y="1189" width="0.4088%" height="15" fill="rgb(215,53,19)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,smithereens::TerminalIon),())&gt;&gt; (34 samples, 0.41%)</title><rect x="99.5672%" y="1173" width="0.4088%" height="15" fill="rgb(233,20,30)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (34 samples, 0.41%)</title><rect x="99.5672%" y="1157" width="0.4088%" height="15" fill="rgb(209,67,20)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (34 samples, 0.41%)</title><rect x="99.5672%" y="1141" width="0.4088%" height="15" fill="rgb(227,181,50)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.41%)</title><rect x="99.5672%" y="1125" width="0.4088%" height="15" fill="rgb(252,75,38)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.41%)</title><rect x="99.5672%" y="1109" width="0.4088%" height="15" fill="rgb(235,9,33)" fg:x="8282" fg:w="34"/><text x="99.8172%" y="1119.50"></text></g><g><title>cfree (33 samples, 0.40%)</title><rect x="99.5792%" y="1093" width="0.3967%" height="15" fill="rgb(208,87,30)" fg:x="8283" fg:w="33"/><text x="99.8292%" y="1103.50"></text></g><g><title>[libc.so.6] (27 samples, 0.32%)</title><rect x="99.6514%" y="1077" width="0.3246%" height="15" fill="rgb(215,199,39)" fg:x="8289" fg:w="27"/><text x="99.9014%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="99.9760%" y="1669" width="0.0120%" height="15" fill="rgb(246,208,12)" fg:x="8316" fg:w="1"/><text x="100.2260%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 0.01%)</title><rect x="99.9760%" y="1653" width="0.0120%" height="15" fill="rgb(206,195,10)" fg:x="8316" fg:w="1"/><text x="100.2260%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 0.01%)</title><rect x="99.9760%" y="1637" width="0.0120%" height="15" fill="rgb(244,1,30)" fg:x="8316" fg:w="1"/><text x="100.2260%" y="1647.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="99.9760%" y="1621" width="0.0120%" height="15" fill="rgb(230,83,5)" fg:x="8316" fg:w="1"/><text x="100.2260%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9760%" y="1605" width="0.0120%" height="15" fill="rgb(239,62,17)" fg:x="8316" fg:w="1"/><text x="100.2260%" y="1615.50"></text></g><g><title>all (8,318 samples, 100%)</title><rect x="0.0000%" y="1701" width="100.0000%" height="15" fill="rgb(252,193,41)" fg:x="0" fg:w="8318"/><text x="0.2500%" y="1711.50"></text></g><g><title>smithereens (8,318 samples, 100.00%)</title><rect x="0.0000%" y="1685" width="100.0000%" height="15" fill="rgb(216,142,19)" fg:x="0" fg:w="8318"/><text x="0.2500%" y="1695.50">smithereens</text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="99.9880%" y="1669" width="0.0120%" height="15" fill="rgb(240,81,38)" fg:x="8317" fg:w="1"/><text x="100.2380%" y="1679.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9880%" y="1653" width="0.0120%" height="15" fill="rgb(240,109,40)" fg:x="8317" fg:w="1"/><text x="100.2380%" y="1663.50"></text></g></svg></svg>